using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace KRAWAL
{
    class Program
    {   
        static StringBuilder sb;
        static StreamWriter sw77, sw16, sw33, sw30, sw31, sw32;
        static StreamReader sr10, sr11, sr12, sr13, sr14, sr15, sr30;


        static bool QOFFEN, QACPSI, QUPOCO, QKOND, QGABD, QZEIC, QTLES, QTROM, QDISC, QENGL, QSI, QTECHN, QAMI, QTEXT, QANZDU,
            QSTE, QSTA;

        static string NAME, KURZ, UEBER1, UEBER2, UEBER3, TITEL, TEXT, NRPROJ, USERID, PDATUM, PATHNAME, TDATUM, TZEIT, NUMMER, CORE, file30, AB, NINDEX;

        static double GMING1, SUQL,  ZETAV, DPBEZ, QVERBR, xorgbhel, yorgbhel, scalebhel, rotbhel, A1, A2, A3, A4, A5, A6, A7, PKESS, DREFAK, EPSMAX, WTSOLL, DTKOTL, PKOMIN,
			GSTOZU, GSTOAB, QSTOZU, GMAXG1, KDRTU, KDRKR, LIBEDI, KUSA, JUSA, NUSA, FUSA, PUSA, ACW1, ACW2, ACW3, ACW4, ACW5, ACW6, ACW7, TKUEL,
			ABKRIT, PST905, PST906, PST907, PST908, DPND, LOESCH, LOEST, KKONDP,KKENTG, TX0, TX13, TX14, TX15, TX16, TX17, TX18, PDWR,
            JHEIZ, LHEIZ, PHZ1, PHZ2, NHEIZ, LITER,MITER, TNREKU, IKUEHL, JKUEHL, MKUEHL, AKUEHL, PFDKL, TFDKL, NABHI, PABHI1, STFZ,
            PABHI2, F, PDRUCK, NVW, ICPUTM, XDX, XDXT, XT, XH, X, Z, XK1, XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS, EPS11, MHEIZ,
            KF, YWELLE, YK1, PKLEMM, PGENN, ETAGLR, ETAMV, ETAGV, COSPHI, PH2, MAKEUP, SCR, POL, VOLTG,
            FLUTND, ENDSCH, DREHZ, PKLEMA, KREUZ, X35, Y35, X36, Y36, PELEKT, IGETRB, NDTEIL, IDINA4, XDINA4,
            KABHI, NGASTA, NGAST, NRGAS, PGAS, TABGAS, HU, GLUFT, GABGAS, KDRPL, KTEXT, HEAT1, HEAT2, HEAT3, HEAT4, HEAT5,  HEAT6, HEAT7, HEAT8, 
            PFDPL, TFDPL, FSI, FENGL, FTECHN, FEXDX, FEXDXT, FSXDX, FSXDXT, KKONDR, TKWEIN, GKWEIN, XDAMPF,
            TKWAUS, XKESS, YKESS, XDUE2, YDUE2, XDUE1, YDUE1, XSPT, YSPT, KREGEL, GKOLB, GKOLB1, KOMP1, IPASC, KHEIZ, IWESEL, IPLOT, IDEFW,
            NLESEN, KZ2, KVAR, MVAR,  NKUEHL, DPHD, LNKNR,DELTKO, FRADIO, GVERWL, TVERWL,WKMIN, HKMUSS,WHO, ETAP,ETAM,WHOBY,ETAPBY,ETAMBY,TBENU,
            CKELER, RC2, RC3, RC4, PC27,PC5,PC6, PC7, PC8, PC9, KC1, WC20, WC21, WC22, KC21, KC23, KC24, KC25, KC50, XYZXYZ, PENTG0, PIN60, SUGL, PULEIS, 
            KFELER, WAUFW, SUMGZU, TEND0, SUMGAB,  GZUW, TEND, SUMQZU, A8, A9, A10, Z1, Z2, Z3, Z4, DMJEKW, PEND0, SUMQAB, Z5, Z6, Z7, Z8, Z9 ,EPSMIN,
            Z10, TX1, PEMIN, PEND, DETA, TX2, TX3, TX4, TX5, TX6, TX7, TX8, PEMAX, TENTG0, SPERRD, TX9, TX10, PROZ, TENTG, SPERRQ, XUPM,
            JJANF, LAUFEN, DPENTG, IST10, IST11, IST12, IST13, NVWHD, IENDVW, NOPTKO, NTYPKO, AK1, AK2, AK3, GSTOBU, PKSP, HIKSP, SDELTI, 
            AK4, AK5, AK6, AK7, AK8, AK9, AK10, AK11, AK12, AK13, AK14, AK15, AK16, AK17, AK18, AK19, AK20, AK21, AK22, AK36, AK37, AK38, AK39, AK40, 
            AK151,AK191,AKS, ETA01, ETA02, ACRKS, ACR1, ACR2, ACR3, ACR4, ACR5, ACR6, ACR7, ACR8, ACR9, ACR10,ACR11,ACR12, AC1, AC2, AC3, AC4, AC5, AC6,
            AC7, AC8, AC9, AC10, AC11, AC12, AC13, AC14, AC15, AC16, AC17, AC18, AC19, AC20, AC21, AC22, AC23, AC24, AC25, AC26, AC27 ,VBEZ, THERMN,
            AC28, AC29, AC30, AC31, TC1, TC2, TC3, TC4, TC5, TC6, TC7, TC8, TC9, TC10, TC11, TC12, TC13, TC14, TC15, TC16, TC17, TC18,
            TC19, TC20, TC21, TC22, TC23, TC24, TC25, TC26, TC27, TC28, TC29, TC30, TC31, TC32, TC33, TC34, TC35, TC36, TC37, TC38, TC39, TC40 ,
            TC41, TC42, TC43, TC44, TC45, TC46, TC47, TC48, TC49, TC50, TC51, TC52, TC53, TC54, TC55, TC56, TC57, TC58, TC59, TC60, TC61, TC62 ,
            TC63, TC64, TC65, TC66, TC67, TC68, TC69, TC70, TC71, TC72, TC73, TC74, TC75, TC76, TC77, TC78, TC79, TC80, TC81, TC82, TC83, TC84 ,
            TC85, TC86, TC87, TC88, TC89, TC90, TC91, TC92, TC93, TC94, TC95, TC96, TC97, TC98, TC99, TC100, NRENTW, STFDI1, STFDIZ, DELTLA, DELTLE,
            KT14E, XX, YY, XZU0, YZU0, KESS, XCURRENT, YCURRENT, XORG, YORG, SCALEX, SCALEY, XMAX, YMAX, XMIN, YMIN;

        static int IZMAXA, IZMINA, IZMAXT, IZMINT, IP1, IP2, IP3, ISCHWR, IHEIZ, IZWKUE, IREKU, IABHI, ITKW, IMKW, NVOR, STZHD1, ANZAST, IN, IUM,
            STWRT1, ANZDGR, STWRT2, ANZDTT, ANZTRB, NTAKEN, CDAT57, KT1, KT2, KT3, KT4, KT5, KT6, KT7, KT8, KT9, KT10, KT11, KT12, KT13, KT14, KT15, I, II, 
            JJREL,ITRB,IWVB, J,NVWAND, JJ, ISTIFT, K, KK, KR, K1, K2, K3, IZ1, IZ2, IZ3, IZ4, IZ5, IZ6, IZ7, IZ8, IZ9, IZ10, IX1, IX2, IX3, IX4, IX5, IX6, IX7,
            IX8, IX9, IX10, IOUT, IND, INDEX, INDSTB, IFALL, IWEI1, IANF, IEND, NVORW, IZAEL, IHENDE, INENDE, IVAR, JVAR, LKUEHL, NDRUCK, KNITRA, NADUES,
            LPMAX, NRMAX, IWR, JANF, KV, KENTG, FLUT, IDRUCK, KOMP2, KSTB, ISTB, NDECM, IELEKT, NN04, NKABLF, NN4, ISAMM, IDAMPF, KEINST, KANZ, IKESS, NENTG,
            NT, NDECTE, NANZEN, NDECN, KGEB, ILINECO, ITEXTCO, ICHOICE, ldr;


        static bool[] QABC = new bool[27], QGAE = new bool[5], QANZPA = new bool[6], QNDWAS = new bool[6], QPLOT = new bool[8];
		
		static string[] BESCHR = new string[161], ABCD = new string[27], ABC = new string[9], ABDUWA = new string[6];


        static int[] NSPZU = new int[11], ITASK = new int[21], DDAT59 = new int[2108], CDAT59 = new int[302], IENDST = new int[5], ISTOBU = new int[16], ILTG = new int[161],
             INDDT = new int[61], ISYMB = new int[5], IZWX = new int[11], ITTEND = new int[8], ISTFGR = new int[16], LLTG = new int[41], NTTETB = new int[5],
             STZMDT = new int[5], STZNDT = new int[5], NTT = new int[5], IZWZ = new int[11], IRSTF = new int[8], NUESTF = new int[7], NSTFZ = new int[16], 
             NRTRB = new int[47], LIGHT = new int[11], LABT = new int[11], NSPAB = new int[11], LZUT = new int[11], NRMVAE = new int[5], IFLUT = new int[8],
             NN1 = new int[61], NN2 = new int[61], N2 = new int[61], LVAR = new int[5], ITURB = new int[6], NKPARA = new int[5], NTYP = new int[61], IPL = new int[161],
             N1 = new int[61], NTYP0 = new int[61], KREIHE = new int[61], KRUECK = new int[61], NITRE = new int[5], KATZE1 = new int[61], LTGWT1 = new int[12],
             LTGWT2 = new int[12], LTGWT3 = new int[12], LTGWT4 = new int[12], LTYP = new int[61], NVENT = new int[8], IM = new int[5], NRABC = new int[161],
             NUEMIN = new int[6], NUEMAX = new int[6], IKT5 = new int[76], IKT11 = new int[76], IKT12 = new int[76], KART = new int[6], LPAR = new int[8],
             IENTN = new int[6], LPLOT = new int[8], NTRB = new int[8], MOD = new int[8], JZUE = new int[8], IFELD = new int[21], LLPLOT = new int[8], ISTANZ = new int[8];
        
		static double[] GKONDA = new double[5], GKONDT = new double[5], TKONDA = new double[5], TKONDT = new double[5], PKONDA = new double[5], PKONDT = new double[5],
            DTKONA = new double[5], DTKONT = new double[5], TKONAA = new double[5], TKONAT = new double[5], DKONDA = new double[5], DKONDT = new double[5], GZUKOA = new double[5],
            GZUKOT = new double[5], QZUKOA = new double[5], QZUKOT = new double[5], PDEPKT = new double[4], TTHPKT = new double[5], ETAGET = new double[5], KTFAC = new double[5],
            IKONDR = new double[5], GMINTT = new double[5], ETAWB = new double[16], ETABA = new double[8], WABB = new double[8], CAXT = new double[5], 
            NZTROM = new double[16], FETAE = new double[8], FBEWE = new double[8],  PVAR = new double[5], HVAR = new double[5], GONDT = new double[5],
            DPHEIZ = new double[5], HFAKTE = new double[16], GSTOB = new double[3], QSTOB = new double[3],  
            APT = new double[76], IGENND = new double[5], PWA = new double[61], PWT = new double[61], DTKT = new double[61], KPW = new double[61], DPUEB = new double[8], 
            PSOLL = new double[5], DPDROS = new double[5], PABFR = new double[5], DELTAI = new double[11], PPUMPA = new double[11], ETAPPA = new double[11], DELTTI = new double[11],
            PPUMPT = new double[11], ETAPPT = new double[11], GFDRET = new double[5], PHZ1M = new double[5], PHZ2M = new double[5], FAKTKF = new double[5],
            NSSV = new double[8], NDSSV = new double[8], NEINST = new double[8],NDEINST = new double[8], NABST = new double[8], NDABST = new double[8], 
            NSTUTZ = new double[91], DSTUTZ = new double[91], IPUMP = new double[61], TKUEHL = new double[11], KOND = new double[5], FVERSCH = new double[5], RZAHL = new double[5], 
            CKOND = new double[5], PELGEH = new double[8], MREGEL = new double[8], FETAR = new double[8], DTTKOR = new double[41], PENULL = new double[41], 
            PANULL = new double[41],TANULL = new double[41],PDNULL = new double[41], DTNULL = new double[41], TKNULL = new double[41], PSTOB = new double[16], ESTOB = new double[16], 
            XE = new double[21], YE = new double[21], NN = new double[26], NANZ = new double[21],
            NANZDU = new double[3], NK2 = new double[16], JKT2 = new double[16], XTURB = new double[8],
            XXTURB = new double[8], YTURB = new double[8], YYTURB = new double[8], IVERD = new double[3], IKLAB = new double[3], IZUF = new double[3], IBRK = new double[3], IGTURB = new double[3],
            IKLZU = new double[5], PVERD = new double[3], PZUF = new double[3], PGTURB = new double[3], PVVERD = new double[3], TVVERD = new double[3], TNVERD = new double[3],
            TNZUF = new double[3], TNBRK = new double[3], TVTURB = new double[3],TNTURB = new double[3], GKLAB = new double[3], GKLZU = new double[5], GBRK = new double[3], 
            GNTURB = new double[3], NANZVW = new double[21], UEEP = new double[4],
            ELEP = new double[4], PELEP = new double[4], NA = new double[31],  
            MENTN = new double[5], DDAT52 = new double[17109], DDAT53 = new double[136], DDAT54 = new double[451], 
            DDAT55 = new double[1291], DDAT56 = new double[1666],  DDAT60 = new double[451], DDAT61 = new double[466], DDAT62 = new double[76], DDAT63 = new double[1501], 
            KARV = new double[11401], FKOND = new double[5], ETWKA = new double[5], EWKZKA = new double[5], DPANZ = new double[76], 
            GESCHW = new double[76],  GURSTF = new double[7], STZHD2 = new double[5], LSZ = new double[5], ANIND = new double[11], ZNINDD = new double[11], 
            TXNINDD = new double[11], IZWZD = new double[11], IZWXD = new double[11], KTAUFBD = new double[16], LS = new double[76], ETAUOP = new double[76],
            STFDI = new double[76], VOLUME = new double[76],  BRTLE = new double[76], PSI = new double[76], BRTLA = new double[76], ETAI = new double[76], 
            PUNORM = new double[76], PHI = new double[76], PUMAX = new double[76], PSTFMX = new double[76], T1T  = new double[76], TSTFMX = new double[76], T2T = new double[76], 
            OEFFNG = new double[76], DI = new double[76], ETAIOP = new double[76], XG = new double[76], YG = new double[76], XE1T   = new double[76], YE1T   = new double[76],
            XE2T   = new double[76], YE2T   = new double[76], XPT    = new double[76], YPT    = new double[76], XH0    = new double[76], YH0    = new double[76], XC2GES = new double[76],
            YC2GES = new double[76], XDFAKT = new double[76], YDFAKT = new double[76], ETAUST = new double[3],BEPS  = new double[3], CVENT  = new double[6], DELTAP = new double[6], 
            GVENT  = new double[6], VENDUR = new double[6],BEAUFG = new double[6], UPM = new double[3], DMAST  = new double[6], SPAST  = new double[6], FASTB  = new double[6], 
            ZZAST  = new double[6], PNAST = new double[6], TALMIN = new double[6], TALMAX = new double[6], TABANZ = new double[6], TASAX  = new double[6], TAOEFF = new double[6],
            TAZLE  = new double[6], TAZLA  = new double[6], NTAPRF = new double[6], TASAXE  = new double[6], HS1MIN = new double[6], HS1MAX = new double[6],
            HSZMIN = new double[6], HSZMAX = new double[6], TAKF1  = new double[6], TAKFZ  = new double[6], TAFDP = new double[6], 
            KRANZZ = new double[8], KRZEIN = new double[8],  LTGABT = new double[7], MUKASO = new double[76], KT = new double[226], GFDE   = new double[5],
            GABDE  = new double[5], TLSTGE = new double[5], VMECHE = new double[5], ETAGE  = new double[5], GMFIXE = new double[5], GMD1A  = new double[5], GMD2A  = new double[5],
            DVERBR = new double[5], ARBTA  = new double[5], PNE    = new double[8], PKOND  = new double[5], PKOP   = new double[5], ETAKOP = new double[5], PN4    = new double[5],
            P0E    = new double[8], T0E    = new double[8], ETWK   = new double[5], EWKZUK = new double[5], DREQUE = new double[5], NRMFIE = new double[5],
            ELTG = new double[161],  TNPROZ = new double[6], EWKEFF = new double[5], EVROR  = new double[5], ELROR  = new double[5], EDAROR = new double[5],
            EDSROR = new double[5], EKULF  = new double[5], ESPZRZ = new double[5], EBKNDM = new double[5], ETHOR  = new double[5], ETVER  = new double[5], EKOKE  = new double[5],
            EHVOR  = new double[5], ZFLUTE = new double[5], ZKONDE = new double[5], FWERST = new double[5], FTEMP  = new double[5], CDAT60 = new double[28],CDAT62 = new double[16],
            CDAT61 = new double[32], CDAT63 = new double[101], PLTG   = new double[161], TNMAX = new double[5], TNMIN = new double[5], GLTG   = new double[161],
            TNNORM = new double[5], VMXLTG = new double[161], PZUT   = new double[11], ZWISP  = new double[11], EZUT   = new double[11], GZUT   = new double[11],
            PABT   = new double[11], EABT   = new double[11], GABT   = new double[11], PENTN0 = new double[47], PFABRE = new double[5], PFABR  = new double[5], GFABR  = new double[5],
            NFABRE  = new double[5], ZNIND = new double[11], TXNIND = new double[11], KTAUFB = new double[16],
            CDAT52 = new double[2445], CDAT53 = new double[10], CDAT54 = new double[31], CDAT56 = new double[112], CDAT55 = new double[130], PW = new double[61], 
            SSTEU  = new double[61], DTS   = new double[61], QBZWM  = new double[61], TWAUS  = new double[61], OMEGA0 = new double[41], EWAUS  = new double[61], GKNULL = new double[41],
            GWAS   = new double[61], TSNULL = new double[41], DTK    = new double[61], OMEGAR = new double[41], EKONDW = new double[61], GWNULL = new double[41], DEKOND = new double[61],
            GDNULL = new double[41], VERLE  = new double[61], TDNULL = new double[41], VERLP  = new double[61], TENULL = new double[41], DPLTG = new double[41], DPLTGA = new double[41], 
            DELTG = new double[41], DPSCHL = new double[5], CDAT58 = new double[102],KAUSLF = new double[61], 
            MAFGWE = new double[5],KATZE2 = new double[61],NWASKE = new double[5], GPMIN = new double[5],
            IKOP   = new double[5], DELTPA = new double[61], H0REGA = new double[6], WD0A = new double[6], WW0A = new double[6], 
            Q0A = new double[6], HOA = new double[6], ETANUA = new double[6];
		
		static string[,] TURBM = new string[5,5];

        static double[,] ETAPKT = new double[5,5], TNPKT = new double[6,5], GMERK = new double[6,4], G = new double[76,2], E1T    = new double[76,2],
			E2T = new double[76,2], PT = new double[76,2], H0     = new double[76,2], C2GES  = new double[76,2], DFAKT  = new double[76,2],
			PSIGMT = new double[16,7];

        static int[,] LTGAB = new int[7, 16], NBLTG = new int[61, 9], LTGSAM = new int[13,36];
        
        


        /************   COMMON FILE DATA: "KRAWAL80.COMMON" **************/

     // EQUIVALENCE  (ANIND (1),A1),                                              
     //1             (ZNIND (1),Z1),                                              
     //2             (TXNIND(1),TX1)                                              
                                                                           
     // EQUIVALENCE (IZWZ(1),IZ1),(IZWX(1),IX1)                                   
     // EQUIVALENCE (KT1,KTAUFB(1))                                               
     // EQUIVALENCE (XG    (1),G     (1,1)),(YG    (1),G     (1,2)),              
     //1            (XE1T  (1),E1T   (1,1)),(YE1T  (1),E1T   (1,2)),              
     //2            (XE2T  (1),E2T   (1,1)),(YE2T  (1),E2T   (1,2)),              
     //3            (XPT   (1),PT    (1,1)),(YPT   (1),PT    (1,2)),              
     //4            (XH0   (1),H0    (1,1)),(YH0   (1),H0    (1,2)),              
     //5            (XC2GES(1),C2GES (1,1)),(YC2GES(1),C2GES (1,2)),              
     //6            (XDFAKT(1),DFAKT (1,1)),(YDFAKT(1),DFAKT(1,2))                
                                                                               
     // EQUIVALENCE (LS    (1),CDAT52(   1)), (STFDI (1),CDAT52(  76)),           
     //1            (BRTLE (1),CDAT52( 151)), (BRTLA (1),CDAT52( 226)),           
     //2            (PUNORM(1),CDAT52( 301)), (PUMAX (1),CDAT52( 376)),           
     //3            (PSTFMX(1),CDAT52( 451)), (TSTFMX(1),CDAT52( 526)),           
     //4            (OEFFNG(1),CDAT52( 601)), (ETAIOP(1),CDAT52( 676)),           
     //5            (ETAUOP(1),CDAT52( 751)), (VOLUME(1),CDAT52( 826)),           
     //6            (PSI   (1),CDAT52( 901)), (ETAI  (1),CDAT52( 976)),           
     //7            (PHI   (1),CDAT52(1051))                                      
     // EQUIVALENCE (XG    (1),CDAT52(1126)), (YG    (1),CDAT52(1201)),           
     //1            (XE1T  (1),CDAT52(1276)), (YE1T  (1),CDAT52(1351)),           
     //2            (XE2T  (1),CDAT52(1426)), (YE2T  (1),CDAT52(1501)),           
     //3            (XPT   (1),CDAT52(1576)), (YPT   (1),CDAT52(1651)),           
     //4            (XH0   (1),CDAT52(1726)), (YH0   (1),CDAT52(1801)),           
     //5            (XC2GES(1),CDAT52(1876)), (YC2GES(1),CDAT52(1951)),           
     //6            (EPSMAX   ,CDAT52(2026)), (EPS11    ,CDAT52(2027)),           
     //7            (GMAXG1   ,CDAT52(2028)), (GMING1   ,CDAT52(2029)),           
     //8            (EPSMIN   ,CDAT52(2030)), (EPSEND   ,CDAT52(2031)),           
     //9            (DNGG     ,CDAT52(2032))                                      
     // EQUIVALENCE (ETAUST(1),CDAT52(2033)), (BEPS  (1),CDAT52(2035)),           
     //1            (P0T      ,CDAT52(2037)), (T0T      ,CDAT52(2038)),           
     //2            (PNT      ,CDAT52(2039)), (WT0      ,CDAT52(2040)),           
     //3            (VBEZ     ,CDAT52(2041)), (DPBEZ    ,CDAT52(2042)),           
     //4            (ZETAV    ,CDAT52(2043)), (CVENT (1),CDAT52(2044)),           
     //5            (DELTAP(1),CDAT52(2049)), (GVENT (1),CDAT52(2054)),           
     //6            (VENDUR(1),CDAT52(2059)), (BEAUFG(1),CDAT52(2064)),           
     //7            (EPSMXE   ,CDAT52(2069)),                                     
     //8            (XDFAKT(1),CDAT52(2070)), (YDFAKT(1),CDAT52(2145))            
     // EQUIVALENCE (DI    (1),CDAT52(2220)), (T1T   (1),CDAT52(2295)),           
     //1            (T2T   (1),CDAT52(2370))                                      
                                                                     
     // EQUIVALENCE (XUPM     ,UPM   (   1)), (YUPM     ,UPM   (   2)),           
     //1            (XUPM     ,CDAT53(   1)), (YUPM     ,CDAT53(   2)),           
     //2            (AV       ,CDAT53(   3)), (FLUT     ,CDAT53(   4)),           
     //3            (ZZIST    ,CDAT53(   5)), (DMIST    ,CDAT53(   6)),           
     //4            (DELTLE   ,CDAT53(   7)), (DELTLA   ,CDAT53(   8)),           
     //5            (STFZ     ,CDAT53(   9))                                      
                                                        
     // EQUIVALENCE (DMAST (1),CDAT54(   1)), (SPAST (1),CDAT54(   7)),           
     //1            (FASTB (1),CDAT54(  13)), (ZZAST (1),CDAT54(  19)),           
     //2            (PNAST (1),CDAT54(  25))                                      
                                           
     // EQUIVALENCE (TALMIN(1),CDAT56(   1)), (TALMAX(1),CDAT56(   7)),           
     //1            (TABANZ(1),CDAT56(  13)), (TASAX (1),CDAT56(  19)),           
     //2            (TAOEFF(1),CDAT56(  25)), (TAZLE (1),CDAT56(  31)),           
     //3            (TAZLA (1),CDAT56(  37)), (TASAXE(1),CDAT56(  43)),           
     //4            (STFDI1   ,CDAT56(  49)), (STFDIZ   ,CDAT56(  50)),           
     //5            (HS1MAX(1),CDAT56(  51)), (HSZMAX(1),CDAT56(  57)),           
     //6            (HS1MIN(1),CDAT56(  63)), (HSZMIN(1),CDAT56(  69)),           
     //7            (STFZAL   ,CDAT56(  75)), (NTAPRF(1),CDAT56(  76)),           
     //8            (NTAKEN   ,CDAT56(  12)), (TAKF1 (1),CDAT56(  82)),           
     //9            (TAKFZ (1),CDAT56(  88)), (TAFDP (1),CDAT56(  94))            
     // EQUIVALENCE (NUEMIN(1),CDAT56( 100)), (NUEMAX(1),CDAT56( 106))            
     // EQUIVALENCE (KRANZZ(1),CDAT57(   1)), (KRZEIN(1),CDAT57(   8)),           
     //1            (IRSTF (1),CDAT57(  15)), (LTGABT(1),CDAT57(  22)),           
     //2            (STZHD1(1),CDAT57(  28)), (STZHD2(1),CDAT57(  32)),           
     //3            (STZMDT(1),CDAT57(  36)), (STZNDT(1),CDAT57(  40)),           
     //4            (NSTFZ (1),CDAT57(  44)), (ISTFGR(1),CDAT57(  59)),           
     //5            (ISTOBU(1),CDAT57(  74)), (LTGAB(1,1),CDAT57( 89)),           
     //6            (ITTEND(1),CDAT57( 179)), (NTTETB(1),CDAT57( 186))            
                                                                       
     // EQUIVALENCE  (MUKASO(1),CDAT59(226)), (KT    (1),CDAT59(1)),             
     //1             (NADUES   ,CDAT59(301))                                      
                                                                          
     // EQUIVALENCE (GFDE  (1),CDAT55(   1)), (GABDE (1),CDAT55(   5)),           
     //1            (TLSTGE(1),CDAT55(   9)), (VMECHE(1),CDAT55(  13)),           
     //2            (ETAGE (1),CDAT55(  17)), (GMFIXE(1),CDAT55(  21)),           
     //3            (GMD1A (1),CDAT55(  25)), (GMD2A (1),CDAT55(  29)),           
     //4            (DVERBR(1),CDAT55(  33)), (ARBTA (1),CDAT55(  37)),           
     //5            (PKOP  (1),CDAT55(  41)), (ETAKOP(1),CDAT55(  45)),           
     //6            (PN4   (1),CDAT55(  49)), (ETWK  (1),CDAT55(  53)),           
     //7            (EWKZUK(1),CDAT55(  57)), (DREQUE(1),CDAT55(  61)),           
     //8            (P0E   (1),CDAT55(  65)), (T0E   (1),CDAT55(  72)),           
     //9            (QVERBR   ,CDAT55(  79)), (THERMN   ,CDAT55(  80))            
     // EQUIVALENCE (NVENT (1),CDAT55(  81)), (NRMFIE(1),CDAT55(  88)),           
     //1            (NRMVAE(1),CDAT55(  92)), (NITRE (1),CDAT55(  96)),           
     //2            (TNPROZ(1),CDAT55( 110)), (TEILBW   ,CDAT55( 111)),           
     //3            (TPQUER   ,CDAT55( 112)), (EEQUER   ,CDAT55( 113)),           
     //4            (EAQUER   ,CDAT55( 114)), (PNE   (1),CDAT55( 115)),           
     //5            (PKOND (1),CDAT55( 122)), (PKSP     ,CDAT55( 127)),           
     //6            (ETAKSP   ,CDAT55( 128)), (HIKSP    ,CDAT55( 129))            
                                                                          
     // EQUIVALENCE (EWKEFF(1),CDAT58(   1)), (EVROR (1),CDAT58(   5)),           
     //1            (ELROR (1),CDAT58(   9)), (EDAROR(1),CDAT58(  13)),           
     //2            (EDSROR(1),CDAT58(  17)), (EKULF (1),CDAT58(  21)),           
     //3            (ESPZRZ(1),CDAT58(  25)), (EBKNDM(1),CDAT58(  29)),           
     //4            (ETHOR (1),CDAT58(  33)), (ETVER (1),CDAT58(  37)),           
     //5            (EKOKE (1),CDAT58(  41)), (EHVOR (1),CDAT58(  45)),           
     //6            (ZFLUTE(1),CDAT58(  49)), (ZKONDE(1),CDAT58(  53)),           
     //7            (FWERST(1),CDAT58(  57)), (FTEMP (1),CDAT58(  61))            
     // EQUIVALENCE (RORWE    ,CDAT58(  65)), (DELTKO   ,CDAT58(  66)),           
     //1            (FRADIO   ,CDAT58(  67)), (TBENU    ,CDAT58(  68)),           
     //2            (HKMUSS   ,CDAT58(  69)), (CKELER   ,CDAT58(  70)),           
     //3            (WHO      ,CDAT58(  71)), (KC21     ,CDAT58(  72)),           
     //4            (ETAP     ,CDAT58(  73)), (KC1      ,CDAT58(  74)),           
     //5            (ETAM     ,CDAT58(  75)), (KC50     ,CDAT58(  76)),           
     //6            (WHOBY    ,CDAT58(  77)), (KC23     ,CDAT58(  78)),           
     //7            (ETAPBY   ,CDAT58(  79)), (KC24     ,CDAT58(  80)),           
     //8            (ETAMBY   ,CDAT58(  81)), (KC25     ,CDAT58(  82)),           
     //9            (RC2      ,CDAT58(  83)), (RC3      ,CDAT58(  84))            
     // EQUIVALENCE (RC4      ,CDAT58(  85)), (PC27     ,CDAT58(  86)),           
     //1            (PC5      ,CDAT58(  87)), (PC6      ,CDAT58(  88)),           
     //2            (PC7      ,CDAT58(  89)), (PC8      ,CDAT58(  90)),           
     //3            (PC9      ,CDAT58(  91)), (WC20     ,CDAT58(  92)),           
     //4            (WC21     ,CDAT58(  93)), (WC22     ,CDAT58(  94)),           
     //5            (WKEFF    ,CDAT58(  95)), (FLAECE   ,CDAT58(  96)),           
     //6            (HWK      ,CDAT58(  97)), (HKOND    ,CDAT58(  98)),           
     //7            (WKMIN    ,CDAT58(  99)), (GVERWL   ,CDAT58( 100)),           
     //8                                      (TVERWL   ,CDAT58( 101))            
     // EQUIVALENCE (AK1      ,CDAT60(   1))                                      
        
     // EQUIVALENCE (ETA01    ,CDAT62(   1))                                      
     // EQUIVALENCE (AC1      ,CDAT61(   1))                                      
     // EQUIVALENCE (TC1       ,CDAT63(   1))  
                                                                            
           
            
            
            
            
            
            

























            
        static void Main(string[] args)
        {
            string prefix = "     ";
            //PROGRAM UWA001
            openfile(ref prefix);
            KRDUMP();   //16
            UWA005 ("CHAIN", 0);
            PKREXIT();
            
            //close(unit=10)
            //close(unit=11)
            //close(unit=15)
            //close(unit=16)
            //close(unit=30,status='delete')
            //close(unit=33,status='delete')
        }
        
        
        static void UWA002(int L1, int LN)
        {
            int LX = 0, LSAM = 0, IX = 0, IX1 = 0, IL = 0;
            //INCLUDE 'KRAWAL80.COMMON'
            if(L1 != 99)
                goto label77;
            LSAM = 0;
            return;
            
        label77:
            if (L1 == 0)
                return;

            IX = 0;
            for(LX = L1; LX <= LN; LX++)    //DO 1 LX=L1,LN
            {
                IX1 = Convert.ToInt32(Math.Abs(IZWZ[LX]));
                
                if (IX1 <= 15 && KT7 == 1)
                    continue;
                
                IX = IX + IX1;
            }   //1 CONTINUE

            if (IX == 0)
                return;
            
            if (KT5 != 0)
                goto label2;
            
            if (LSAM == 35)
                goto label9;
            
            LSAM=LSAM+1;
            KT5=LSAM;
            
        label2:
            for(LX = L1; LX <= LN; LX++)    //DO 6 LX=L1,LN
            {
                IX1 = Convert.ToInt32(Math.Abs(IZWZ[LX]));
                
                if (LX > 6 && LX < 10)
                    IZWZ[LX] = -IX1;
                
                if (IX1 == 0)
                    continue;
                
                if (IX1 > 15)
                    goto label4;
                
                if (KT7 == 1)
                    goto label11;
                
                KT2 = IX1 + ANZAST;
                
                if (KT3 == 0)
                    KT3=KT2;
                
                ILTG[KT2] = LSAM;
                IX2 = 0;
                
                UWA008("PACK", ISTOBU[KT2], ref IX2, ref KT10, ref KT6, ref I);
                goto label5;
                
            label4:
                for(IL = 1; IL <= 12; IL++)     //DO 3 IL=1,12
                {
                    if (LTGSAM[IL,KT5] != 0)
                        goto label7;
                    
                    LTGSAM[IL,KT5] = IZWZ[LX];
                    
                    if (IX1 >= 70 && IX1 <= 92)
                        goto label15;
                    
                    IX2 = 1;
                    
                    if (IZWZ[LX] < 0)
                        IX2 = 0;
                    
                    UWA008("PACK", ILTG[IX1], ref IX2,ref KT10,ref KT6,ref I);
                    goto label5;
                    
                label15:
                    PLTG[IX1] = XPT[I];
                    goto label5;
                    
                label7:
                    if (IL == 12)
                        goto label10;
                }   //3 CONTINUE
                
            label5:
                IZWZ[LX] = 0;
                IX=IX-IX1;
                
            label11:
                if (IX == 0)
                    return;
            }   //6 CONTINUE
            
            if (IX == 0) 
                return;
            
        label10:
            KFELER=4;
            
        label8:
            FORERR();
            
        label9:
            KFELER=5;
            goto label8;
        }   //END
        
        
        static double UWA003(string s, double T)
        {
            double uwa003 = 0;
            if(s == "TABS")     goto TABS;
            if(s == "TCELS")    goto TCELS;

        TABS:
            //ENTRY UWA003("TABS", T);
            uwa003 = T*0.01;
            
            if (T > 0.0)
                uwa003 = T+273.15;
            
            //if (T > 0.0)
            //    TABS   = T+273.15;

            return uwa003;
            
        TCELS:
            //ENTRY UWA003("TCELS", T);
            uwa003 = T*100.0;
          
            if (T > 0.0)
                uwa003 = T-273.15;
          
            //if (T > 0.0)
            //    TCELS  = T-273.15;
          
            return uwa003;
        }     //END
        
        
        static void UWA005(string s, int LINKNR)
        {
            double[] LINKSP = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            string RIES = " ", A1 = "";
            string TZZZ = "ZZZ ", PROGST = " 1 2", KART1 = "1", KART2 = "2", KART0 = "0", KART3 = "3", CORE = "  ";
            int LINK = 0;
            if(s == "CHAIN")    goto CHAIN;
            if(s == "FEHLER")   goto FEHLER;

        CHAIN:
            //ENTRY CHAIN(ref int LINKNR);
            
            KURZ = " ";
            IPLOT  = 0;
            NKUEHL = 0;
            
        label100:
            //READ(15,110,END=10000) 
            CORE = sr15.ReadLine();
            //110 FORMAT(20A4)
            //DECODE(4,120,CORE) A1
            //120 FORMAT(A4)
            A1 = CORE.Substring(0, 4);
            KVAR = 0;
            MVAR = 0;
            
            if (A1 == TZZZ)
                goto label100;
            
            if (A1 != PROGST)
                goto label9000;
            
            sw16.WriteLine("1 {0}", CORE);
            sw33.WriteLine("           {0} ", CORE);
            //130 FORMAT(1H1,20A4)
            Console.WriteLine(" {0} ", CORE);
            
            UWA043(0);
           
            NRENTW = 0.0;
            DTKOTL = 0.0;
            PKOMIN = 0.0;
            ISTIFT = 0;
            IP1    = 0;
            IP2    = 0;
            IP3    = 0;
            KTEXT  = 0;
            NRPROJ = " ";
            NUMMER = " ";
            NAME   = "0";
            
            for(J = 1; J <= 160; J++)   //DO 132 J = 1,160
            {
                IPL[J]   = 0;
                BESCHR[J]= " ";
            }   //132 CONTINUE

            UEBER1 = " ";
            UEBER2 = " ";
            UEBER3 = " ";
            
            for(int J = 1; J <= 4; J++)     //DO 135 J = 1,4
                for(int L = 1; L <= 4; L++)     //DO 135 L = 1,4
                    TURBM[L,J] = " ";   //135 CONTINUE
            
            //DECODE(80,140,CORE) 
            LINKSP[1] = Convert.ToInt32(CORE.Substring(0,2));
            LINKSP[2] = Convert.ToInt32(CORE.Substring(2,2));
            LINKSP[3] = Convert.ToInt32(CORE.Substring(4,2));
            LINKSP[4] = Convert.ToInt32(CORE.Substring(6,2));
            LINKSP[5] = Convert.ToInt32(CORE.Substring(8,2));
            LINKSP[6] = Convert.ToInt32(CORE.Substring(10,2));
            LINKSP[7] = Convert.ToInt32(CORE.Substring(12,2));
            LINKSP[8] = Convert.ToInt32(CORE.Substring(14,2));
            LINKSP[9] = Convert.ToInt32(CORE.Substring(16,2));
            LINKSP[10] = Convert.ToInt32(CORE.Substring(18,2));
            LINKSP[11] = Convert.ToInt32(CORE.Substring(20,2));
            LINKSP[12] = Convert.ToInt32(CORE.Substring(22,2));
            LINKSP[13] = Convert.ToInt32(CORE.Substring(24,2));
            LINKSP[14] = Convert.ToInt32(CORE.Substring(26,2));
            LINKSP[15] = Convert.ToInt32(CORE.Substring(28,2));
            KDRKR = Convert.ToInt32(CORE.Substring(30,3));
            KDRTU = Convert.ToInt32(CORE.Substring(33,3));
            LIBEDI = Convert.ToInt32(CORE.Substring(68,1));
            NABHI = Convert.ToInt32(CORE.Substring(69,1));
            LIGHT[1] = Convert.ToInt32(CORE.Substring(70,1));
            LIGHT[2] = Convert.ToInt32(CORE.Substring(71,1));
            LIGHT[3] = Convert.ToInt32(CORE.Substring(72,1));
            LIGHT[4] = Convert.ToInt32(CORE.Substring(73,1));
            LIGHT[5] = Convert.ToInt32(CORE.Substring(74,1));
            LIGHT[6] = Convert.ToInt32(CORE.Substring(75,1));
            LIGHT[7] = Convert.ToInt32(CORE.Substring(76,1));
            LIGHT[8] = Convert.ToInt32(CORE.Substring(77,1));
            LIGHT[9] = Convert.ToInt32(CORE.Substring(78,1));
            LIGHT[10] = Convert.ToInt32(CORE.Substring(79,1));
            //140 FORMAT(15I2,2I3,32X,12I1)

            //DECODE(60,150,CORE) KVAR
            KVAR = Convert.ToInt32(CORE.Substring(59,1));
            //150 FORMAT(59X,I1)
            
            MVAR   = 0;
             
            if (KVAR > 0)
                MVAR = 1;

            IVAR = 1;
            JVAR = 1;
            KZ2    = 0;
            NLESEN = 0;
            
            if (LIGHT[9] == 0)
                LIGHT[9] = 7;

            for(J = 1; J <= 160; J++)   //DO 160 J=1,160
                NRABC[J] = 0;
            
            for(J = 1; J <= 25; J++)    //DO 170 J=1,25
                NN[J] = 0;      //170 CONTINUE

            for(J = 1; J <= 26; J++)    //DO 180 J=1,26
                QABC[J] = false;    //180 CONTINUE
            
            QABC[17] = true;
            PEMAX = 1.0;
            LINKNR = 0;
            LNKNR = LINKSP[3];

        label200:
            LINKNR = LINKNR + 1;
            
            if (LINKNR > 15)
                goto label10000;

            LINK = Convert.ToInt32(LINKSP[LINKNR]);
            
            if (LINK == 0)
                goto label100;
            
            if (LINK < 0 || LINK > 6)
                goto label9100;
            
            //goto label(1000,2000,3000,4000,5000,3000),LINK
            if(LINK == 1)    goto label1000;
            if(LINK == 2)    goto label2000;
            if(LINK == 3)    goto label3000;
            if(LINK == 4)    goto label4000;
            if(LINK == 5)    goto label5000;
            if(LINK == 6)    goto label3000;

        label1000:
            sw16.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));
            Console.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));
            
            UWA007();
            XYZXYZ = 0.0;
            goto label200;

        label2000:
            if (LINKSP[LINKNR+1] == 3)
                goto label2010;

            if (LINKSP[LINKNR+1] == 6)
                goto label2010;

            STWRT2 = 1;
            
        label2010:
            //1010 FORMAT(1H ,'PROGRAMMTEIL',I3,' ANGESPRUNGEN')
            sw16.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));
            Console.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));
            
            UWA034();
            goto label200;
            
        label3000:
            sw16.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));
            Console.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));
            
            UWA036();
            XYZXYZ = 99.0;
            goto label200;

        label4000:
            sw16.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));
            Console.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));
            
            UWA035();
            if (LINKSP[LINKNR+1] == 5 && IFALL > 1)
                goto label5000;

            if (IFALL > 1)
                goto label4000;
            goto label200;

        label5000:
            if (LINKSP[LINKNR-1] == 4)
                goto label200;

            if (IPLOT  ==  1)
                goto label5050;
            RIES = "KRAWAL";
            
            if (KURZ.Substring(0, 3)  ==  "BKG")
                RIES = "KRIEG";
            if (KURZ.Substring(0, 3)  ==  "BUN")
                RIES = "URBAN";
            if (KURZ.Substring(0, 3)  ==  "CET")
                RIES = "EGGERT";
            if (KURZ.Substring(0, 3)  ==  "CRS")
                RIES = "RIES";
            if (KURZ.Substring(0, 3)  ==  "DBN")
                RIES = "BERGMANN";
            if (KURZ.Substring(0, 3)  ==  "FBR")
                RIES = "BRINKER";
            if (KURZ.Substring(0, 3)  ==  "FGA")
                RIES = "GAZA";
            if (KURZ.Substring(0, 3)  ==  "GDL")
                RIES = "DUENGEL";
            if (KURZ.Substring(0, 3)  ==  "GRX")
                RIES = "RIX";
            if (KURZ.Substring(0, 3)  ==  "HET")
                RIES = "ENGLERT";
            if (KURZ.Substring(0, 3)  ==  "HKR")
                RIES = "KELLER";
            if (KURZ.Substring(0, 3)  ==  "HOS")
                RIES = "OBELS";
            if (KURZ.Substring(0, 3)  ==  "HWR")
                RIES = "WILLER";
            if (KURZ.Substring(0, 3)  ==  "JES")
                RIES = "ENDRIES";
            if (KURZ.Substring(0, 3)  ==  "LRR")
                RIES = "ROEMER";
            if (KURZ.Substring(0, 3)  ==  "PVK")
                RIES = "VITASEK";
            if (KURZ.Substring(0, 3)  ==  "WMR")
                RIES = "MOELLER";
            if (KURZ.Substring(0, 3)  ==  "WBR")
                RIES = "BEUCHER";
            
        label5050:
            if (ITASK[7]  ==  22)
                goto label5100;
            if (ISTIFT.ToString()  ==  KART0)
                LDPLOT ('A');
            if (ISTIFT.ToString()  ==  KART0)
                Console.Write(" ### PLOTTBILD AUF AUTOMATIKPLOTTER ###");   //WRITE (*,5110)
            if (ISTIFT.ToString()  ==  KART1)
                LDPLOT('B');
            if (ISTIFT.ToString()  ==  KART1)
                Console.Write(" ### PLOTTBILD AUF BANDPLOTTER (TRANSPARENT) ###");    //WRITE (*,5120)
            if (ISTIFT.ToString()  ==  KART2)
                LDPLOT('E');
            if (ISTIFT.ToString()  ==  KART2)
                Console.WriteLine(" ### PLOTTBILD AUF KONDENSATORPLOTTER ###");
            if (ISTIFT.ToString()  ==  KART3)
                LDPLOT('K');
            if (ISTIFT.ToString()  ==  KART3)
                Console.WriteLine(" ### PLOTTBILD AUF KYOCERA            ###");
            
            //5110 FORMAT (1H ,"### PLOTTBILD AUF AUTOMATIKPLOTTER ###")            
            //5120 FORMAT (1H ,"### PLOTTBILD AUF BANDPLOTTER (TRANSPARENT) ###")   
            //5130 FORMAT (1H ,"### PLOTTBILD AUF KONDENSATORPLOTTER ###")          
            //5135 FORMAT (1H ,"### PLOTTBILD AUF KYOCERA            ###")           
            //5140 FORMAT (1H ,A1)
            goto label5200;
            
        label5100:
            LDPLOT('T');
            Console.WriteLine(" T");

        label5200:
            DINFRM(3,3,0,1.0);
            INIT(RIES ,"P146",2,1);
            MODE(2,1.0);
            IPLOT = 1;
            LINK = 5;
            sw16.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));    //sw16.WriteLine("",1010) LINK                      
            
            if (ITASK[7]  !=  22)
                Console.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));    //WRITE(*,1010) LINK

            UWA101();
            LINK = 10;
            sw16.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));    //sw16.WriteLine("",1010) LINK                      
            
            if (ITASK[7]  !=  22)
                Console.WriteLine(" PROGRAMMTEIL{0} ANGESPRUNGEN", LINK.ToString().PadLeft(3));    //WRITE(*,1010) LINK

            UWA120();
            CLOSE(2);
            
            if (IFALL > 1)
                LINK = 4;
            if (IFALL > 1)
                goto label4000;
            goto label200;

        label9000:
            sw16.WriteLine("0PROGRAMMSTEUERKARTE IST NICHT DIE 1. DATENKARTE");
            //9010 FORMAT(1H0,"PROGRAMMSTEUERKARTE IST NICHT DIE 1. DATENKARTE")
            goto label9200;

        label9100:
            sw16.WriteLine("0UNZULAESSIGE VORGABE IN DER PROGRAMMSTEUERKARTE . PROG UWA005 RAMMAUFRUF NR.{0} = {1}", LINKNR.ToString().PadLeft(3),LINK.ToString().PadLeft(3));
            //9110 FORMAT(1H0,"UNZULAESSIGE VORGABE IN DER PROGRAMMSTEUERKARTE . PROG UWA0051RAMMAUFRUF NR.",I3," = ",I3);
            goto label9200;

        FEHLER:
            //ENTRY FEHLER;

        label9200:
            try {
                //READ(15,110,END=10000) CORE
                CORE = sr15.ReadLine();
            }
            catch {
                goto label10000;
            }
            //DECODE(4,120,CORE) A1
            
            if (A1 == TZZZ) 
                goto label100;
            
            goto label9200;
            
        label10000:;
            //close(unit=15)
            //close(unit=16)
            //close(unit=11)
            //close(unit=12)
            //close(unit=30,status="delete")
            //close(unit=33,status="delete")
            //STOP "KRAWALENDE"
        }
        
        
        static void UWA006(string s, double IDATEI, double IASSNR)
        {
            int IL = 0, IL1 = 0;
            double NUMBER = 0, IALFA = 0, IOMEGA = 0;
            if(s == "WDISC")    goto WDISC;
            if(s == "LDISC")    goto LDISC;
            if(s == "RDISC")    goto RDISC;
            
        WDISC:
            //ENTRY UWA006("WDISC", IDATEI,IASSNR);
            //INCLUDE "KRAWAL80.COMMON"
            QDISC = false;
            goto label1;
            
        LDISC:
            //ENTRY LDISC;
            //MVC(DDAT52[1],0.0,4,DDAT52[1],17107*4)     
            //MVC(DDAT53[1],0.0,4,DDAT53[1],134*4)
            //MVC(DDAT54[1],0.0,4,DDAT54[1],449*4)
            //MVC(DDAT55[1],0.0,4,DDAT55[1],1289*4)      
            //MVC(DDAT56[1],0.0,4,DDAT56[1],1664*4)      
            //MVC(DDAT59[1],0.0,4,DDAT59[1],2106*4)      
        label3:
            return;
            
        RDISC:
            //ENTRY UWA006("RDISC", IDATEI,IASSNR);
            QDISC = true;
            
        label1:
            NUMBER = IDATEI - 49;
            
            if (IASSNR < 1)
                goto label4;
            
            if (NUMBER < 1 || NUMBER > 14)
                goto label4;
            
            IL1 = 1;
            //goto label(500,500,520,530,540,550,560,500,500,590,600,610,500,630)NUMBER
            if(NUMBER == 1)     goto label500;
            if(NUMBER == 2)     goto label500;
            if(NUMBER == 3)     goto label520;
            if(NUMBER == 4)     goto label530;
            if(NUMBER == 5)     goto label540;
            if(NUMBER == 6)     goto label550;
            if(NUMBER == 7)     goto label560;
            if(NUMBER == 8)     goto label500;
            if(NUMBER == 9)     goto label500;
            if(NUMBER == 10)     goto label590;
            if(NUMBER == 11)     goto label600;
            if(NUMBER == 12)     goto label610;
            if(NUMBER == 13)     goto label500;
            if(NUMBER == 14)     goto label630;
            
        label4:
            sw16.WriteLine("0*****DATEI{0} BLOCK{1} NICHT VORHANDEN*****", IDATEI.ToString().PadLeft(3), IASSNR.ToString().PadLeft(3));
            //2 FORMAT (1H0,10H*****DATEI,I3,6H BLOCK,I3,21H NICHT VORHANDEN*****)A 200386
            KFELER = 7;
            FORERR();
            
        label500:
            goto label3;
            
        label520:
            if (IASSNR > 7)
                goto label4;
            
            IALFA = (int)(IASSNR-1)*2444+1;
            IOMEGA = (int)IASSNR * 2444;
            
            if (QDISC)
                goto label522;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 521 IL=IALFA,IOMEGA
            {
                DDAT52[IL] = CDAT52[IL1];
                IL1 = IL1 + 1;
            }   //521 CONTINUE
            goto label3;
            
        label522:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 523 IL=IALFA,IOMEGA
            {
                CDAT52[IL1]=DDAT52[IL];
                IL1 = IL1 + 1;
            }   //523 CONTINUE
            goto label3;
            
        label530:
            if (IASSNR > 15)
                goto label4;
            
            IALFA=(IASSNR-1)*9+1;
            IOMEGA=IASSNR*9;
            
            if (QDISC)
                goto label532;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 531 IL=IALFA,IOMEGA
            {
                DDAT53[IL]=CDAT53[IL1];
                IL1=IL1+1;
            }   //531 CONTINUE
            goto label3;
            
        label532:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 533 IL=IALFA,IOMEGA
            {
                CDAT53[IL1] = DDAT53[IL];
                IL1=IL1+1;
            }   //533 CONTINUE
            goto label3;
            
        label540:
            if (IASSNR > 15)
                goto label4;
            
            IALFA = (IASSNR-1)*30+1;
            IOMEGA = IASSNR*30;
            
            if (QDISC)
                goto label542;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 541 IL=IALFA,IOMEGA
            {
                DDAT54[IL] = CDAT54[IL1];
                IL1 = IL1 + 1;
            }   //541 CONTINUE
            goto label3;
            
        label542:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 543 IL=IALFA,IOMEGA
            {
                CDAT54[IL1] = DDAT54[IL];
                IL1 = IL1 + 1;
            }   //543 CONTINUE
            goto label3;
            
        label550:
            if (IASSNR > 10)
                goto label4;
            
            IALFA=(IASSNR-1)*129+1;
            IOMEGA=IASSNR*129;
            
            if (QDISC)
                goto label552;
            
            for(IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 551 IL=IALFA,IOMEGA
            {
                DDAT55[IL] = CDAT55[IL1];
                IL1 = IL1 + 1;
            }   //551 CONTINUE
            goto label3;
            
        label552:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 553 IL=IALFA,IOMEGA
            {
                CDAT55[IL1] = DDAT55[IL];
                IL1 = IL1 + 1;
            }   //553 CONTINUE
            goto label3;
            
        label560:
            if (IASSNR > 15)
                goto label4;
            
            IALFA=(IASSNR-1)*111+1;
            IOMEGA = IASSNR * 111;
            
            if (QDISC)
                goto label562;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 561 IL=IALFA,IOMEGA
            {
                DDAT56[IL] = CDAT56[IL1];
                IL1 = IL1 + 1;
            }   //561 CONTINUE
            goto label3;
            
        label562:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 563 IL=IALFA,IOMEGA
            {
                CDAT56[IL1] = DDAT56[IL];
                IL1 = IL1 + 1;
            }   //563 CONTINUE
            goto label3;
            
        label590:
            if (IASSNR > 7)
                goto label4;
            IALFA = (IASSNR-1)*301+1;
            IOMEGA = IASSNR * 301;
            
            if (QDISC)
                goto label592;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 591 IL=IALFA,IOMEGA
            {
                DDAT59[IL]=CDAT59[IL1];
                IL1=IL1+1;
            }   //591 CONTINUE
            goto label3;
            
        label592:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 593 IL=IALFA,IOMEGA
            {
                CDAT59[IL1]=DDAT59[IL];
                IL1=IL1+1;
            }   //593 CONTINUE
            goto label3;
            
        label600:
            if (IASSNR > 15)
                goto label4;
            
            IALFA=(IASSNR-1)*30+1;
            IOMEGA = IASSNR * 30;
            
            if (QDISC)
                goto label602;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 601 IL=IALFA,IOMEGA
            {
                DDAT60[IL]=CDAT60[IL1];
                IL1=IL1+1;
            }   //601 CONTINUE
            goto label3;
            
        label602:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 603 IL=IALFA,IOMEGA
            {
                CDAT60[IL1]=DDAT60[IL];
                IL1=IL1+1;
            }   //603 CONTINUE
            goto label3;
            
        label610:
            if (IASSNR > 15)
                goto label4;
            
            IALFA=(IASSNR-1)*31+1;
            IOMEGA=IASSNR*31;
            
            if (QDISC)
                goto label612;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 611 IL=IALFA,IOMEGA
            {
                DDAT61[IL]=CDAT61[IL1];
                IL1=IL1+1;
            }   //611 CONTINUE
            goto label3;
            
        label612:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 613 IL=IALFA,IOMEGA
            {
                CDAT61[IL1]=DDAT61[IL];
                IL1 = IL1 + 1;
            }   //613 CONTINUE
            goto label3;
            
        label620:
            if (IASSNR > 5) 
                goto label4;
            
            IALFA=(IASSNR-1)*15+1;
            IOMEGA= IASSNR*15;
            
            if (QDISC)
                goto label622;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 621 IL=IALFA,IOMEGA
            {
                DDAT62[IL]=CDAT62[IL1];
                IL1=IL1+1;
            }   //621 CONTINUE
            goto label3;
            
        label622:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 623 IL=IALFA,IOMEGA
            {
                CDAT62[IL1]=DDAT62[IL];
                IL1=IL1+1;
            }   //623 CONTINUE
            goto label3;
            
        label630:
            if (IASSNR > 15)
                goto label4;
            IALFA=(IASSNR-1)*100+1;
            IOMEGA=IASSNR*100;
            
            if (QDISC)
                goto label632;

            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 631 IL=IALFA,IOMEGA
            {
                DDAT63[IL]=CDAT63[IL1];
                IL1=IL1+1;
            }   //631 CONTINUE
            goto label3;
            
        label632:
            for (IL = (int)IALFA; IL <= IOMEGA; IL++)     //DO 633 IL=IALFA,IOMEGA
            {
                CDAT63[IL1] = DDAT63[IL];
                IL1 = IL1 + 1;
            }   //633 CONTINUE
            goto label3;
        }   //END                                      

        
        static void UWA007()
        {
            //ENTRY LINK1;
            int KT5END = 0, NASTZW = 0, M1 = 0, M1D = 0, M1V = 0, M2 = 0, M2D = 0, M2V = 0, INDDTX = 0;
            double FZUSCH = 0.0;
            bool QNORMN = false;
            double[,] VENDME = new double[6,5], BDUESE = new double[6,5], NV = new double[5,5];
            double[] A = new double[5], AA = new double[5], AAA = new double[4], III = new double[4], POEIN = new double[5], TOEIN = new double[5],
                PNEIN = new double[5], GMAXGE = new double[5], GMINGE = new double[5], ZETAVE = new double[5], EPSMXE = new double[5], 
                DPBEZE = new double[5], PUEBEL = new double[5], FLUTEN = new double[5], 
                NDIART = new double[7], DITEIL = new double[7];
            double XUPMZW = 0, FLUTR = 0, EPSEND = 0, EPS11 = 0, FLUT = 0;
            int[] NUEBEL = new int[5];
            int ITRO, NT3CD = 0, IWEI2 = 0, LMAX = 0, IZZ = 0, JJREL = 0, J1 = 0, NSTFZW = 0;
            
            char KARTA = 'A', KARTH = 'H', KARTK = 'K', KARTL = 'L', KARTN = 'N', KARTP = 'P', KARTS = 'S', KARTT = 'T', KARTX = 'X',
                KARTZ = 'Z', KART0 = '0', KARTR = 'R', KARTD = 'D', KARTE = 'E', KARTW = 'W', KARTG = 'G', KARTB = 'B', KARTM = 'M',
                KBLNC = ' ', KARTU = 'U';

            double PENTG = 0, PKOND1 = 0, THERMN = 0, ZWFLUT = 0, FLUTZW = 0, AZW1 = 0, AZW2 = 0, AZW3 = 0, AZW4 = 0, AZW5 = 0, AZW6 = 0, AZW7 = 0, AZW8 = 0, AZW9 = 0, AZW10 = 0, AZW11 = 0, AZW12 = 0, AZW13 = 0, AZW14 = 0, 
                AZW15 = 0, AZW16 = 0, AZW17 = 0;
            string[] TEXTKO = {" ", "ZN28","ZN20","NI10","NI30","TAHL","NI  ","TAN ","NIMO" };
            char IZIFF0 = '0', IZIFF1 = '1', IZIFF2 = '2', IZIFF3 = '3', IZIFF4 = '4', IZIFF9 = '9';
            double A11 = 0, A12 = 0, DELTLE = 0, DELTLA = 0, A13 = 0, XUMP=0;
            int IX11 = 0;
            char KSTUFE = ' ';
            int I = 0, J = 0, L = 0, M = 0, N = 0, K3 = 0, I1 = 0, K7VOR = 0;
            UWA092(IZ1, "HOLND");
            TWA091();
            //UWA006(string s, ref int IDATEI, ref int IASSNR)
            UWA006("LDISC", XX, YY);
            
            DETA = 1.0;
            WTSOLL = 0.0;
            
            for(L = 1; L <= 7; L++)     //DO 13  L=1, 7
            {
                NSSV[L]    = 0;
                NDSSV[L]   = 0;
                NEINST[L]  = 0;
                NDEINST[L] = 0;
                NABST[L]   = 0;
                NDABST[L]  = 0;
                FETAE[L] = 1.0;
            }
            
            for(int jpkr = 1; jpkr <= 4; jpkr++)    //do 10 jpkr = 1,4
                for(K = 1; K <= 4; K++)     //DO 10 K = 1,4
                    ETAPKT[K,jpkr] = 0.0;
            
            for(K = 1; K <= 4; K++)     //DO 12 K=1,4
            {
                GMINTT[K] = 0.100;
                FLUTEN[K] = 0.0;
                for(L = 1; L <= 4; L++)     //DO 9 L=1,4
                    NV[K,L] = 0;
            }   //12 CONTINUE
            
            K = 1;
            double NFLUT = 0;
            STWRT1 = 0;
            STWRT2 = 0;
            int IREGEL = 0;
            int JJEND = 0;
            ANZTRB = 0;
            ANZAST = 0;
            
            UWA002(99,0);
            int JEND = 0;
            KT9 = 1;
            KT7 = 7;
            KT2  = 0;
            KT3  = 0;
            KT4  = 0;
            KT8  = 0;
            KT11 = 0;
            KT12 = 0;
            KT13 = 0;
            KT14 = 0;
            KT15 = 0;
            QTROM = false;                                   
            int JJVOR = 0;            
            double GP = 0.980665;
            double GI = 4.1868;
            double GM = 3.6;
            double GW = 3.6 / 4.1868;
            double GF = 60.0;
            
            if (LIGHT[8] == 0)
                goto label100;
            
            GP = 1.0;
            GI = 1.0;
            GM = 1.0;
            GW = 1.0;
            GF = 1.0;

        label100:
            UWA086(ref K1, ref K2);

            if (K1 == KARTX)
                goto label105;
            if (K1 == KARTZ)
                goto label105;
            if (K2 == 0)
                goto label103;
            KFELER=1;
            
        label101:
            sw16.WriteLine(" ++++KARTENFEHLER{0}, NEUSTART+++++", KFELER.ToString().PadLeft(3));
            //102 FORMAT (18H ++++KARTENFEHLER,I3,15H, NEUSTART+++++)
            FORERR();
            return;
            
        label105:
            UWA006("WDISC", 50,1);
            UWA006("WDISC", 58,1);
            UWA006("WDISC", 51,1);
            UWA006("WDISC", 55,1);
            
            if (LIGHT[1] == 1)
                UWA012();
            return;
            
        label103:
            if (K1 != KARTU)
                goto label21;
            
            //DECODE(3,22,CORE) K2,K3;
            //22 FORMAT (1X,I1,A1)
            K2 = Convert.ToInt32(CORE.Substring(1,1));
            K3 = Convert.ToInt32(CORE.Substring(2,1));
            
            if (K2 == 2)
                UWA043(3);
            
            if (K2 == 3)
                UWA043(4);
            goto label100;
            
        label21:
            //DECODE(3, 108,CORE) K2,K3
            //108 FORMAT (1X,2I1)
            K2 = Convert.ToInt32(CORE.Substring(1,1));
            K3 = Convert.ToInt32(CORE.Substring(2,1));

            if (K1 == KARTT)
                goto label1700;
            if (K1 == KARTH)
                goto label1100;
            if (K1 == KARTN)
                goto label1100;
            if (K1 == KARTL)
                goto label1300;
            if (K1 == KARTK)
                goto label1200;
            if (K1 == KARTA)
                goto label1000;
            if (K1 == KARTW)
                goto label1400;
            if (K1 == KARTP)
                goto label1500;
            if (K1 == KARTM)
                goto label1600;
            if (K1 == KARTG)
                goto label1620;
            KFELER=2;
            goto label101;
            
        label1700:
            //goto label(1701,1721,1731,1732,1761,1762,1781,1782),K2
            if(K2 == 1)     goto label1701;
            if(K2 == 2)     goto label1721;
            if(K2 == 3)     goto label1731;
            if(K2 == 4)     goto label1732;
            if(K2 == 5)     goto label1761;
            if(K2 == 6)     goto label1762;
            if(K2 == 7)     goto label1781;
            if(K2 == 8)     goto label1782;

        label1701:
            //goto label(1702,1703,1913), K3
            if(K3 == 1)     goto label1702;
            if(K3 == 2)     goto label1703;
            if(K3 == 3)     goto label1913;

        label1702:
            //DECODE(79, 1710,CORE)
            XPT[1] = Convert.ToDouble(CORE.Substring(3,6));
            A1 = Convert.ToDouble(CORE.Substring(9,6));
            XE1T[1] = Convert.ToDouble(CORE.Substring(15,7));
            LS[1] = Convert.ToDouble(CORE.Substring(22,6));
            DI[1] = Convert.ToDouble(CORE.Substring(28,6));
            THERMN = Convert.ToDouble(CORE.Substring(34,9));
            TTHPKT[1] = Convert.ToDouble(CORE.Substring(43,6));
            TTHPKT[2] = Convert.ToDouble(CORE.Substring(49,6));
            TTHPKT[3] = Convert.ToDouble(CORE.Substring(55,6));
            PDEPKT[1] = Convert.ToDouble(CORE.Substring(61,6));
            PDEPKT[2] = Convert.ToDouble(CORE.Substring(67,6));
            PDEPKT[3] = Convert.ToDouble(CORE.Substring(73,6));
            //1710 FORMAT (3X,2F6.0,F7.0,2F6.0,F9.0,6F6.0)

            XPT[1] = XPT[1]/GP;
            XE1T[1] = XE1T[1]/GI;
            DI[1] = DI[1]/GI;
            
            for(L = 1; L <= 3; L++)     //DO 1728 L = 1,3
            {
                TTHPKT[L] = TTHPKT[L] * THERMN;
                PDEPKT[L] = PDEPKT[L]/GP;
                
                if (PDEPKT[L] > 0.0)
                    PDEPKT[L] = UW0011(PDEPKT[L],1);
            }   //1728 CONTINUE
            
            T1T[1] = UWA003("TABS", A1);
            goto label100;

        label1703:
            ANZTRB = ANZTRB + 1;
            NT3CD = 0;
            NASTZW= ANZAST;
            I = 1;
            KT10 = ANZTRB;
            KT6 = JJEND + 1;
            JJ = KT6;
            ANZDTT = JJ;
            JJANF = KT6;

            if (ANZTRB == 1)
                goto label11;
            
            UWA006("RDISC", 52, KT6);
            UWA006("RDISC", 59, KT6);

        label11:
            J = JEND;
            JANF = J + 1;
            //DECODE(80, 1716,CORE)
            POEIN[1] = Convert.ToDouble(CORE.Substring(3,6));
            TOEIN[1] = Convert.ToDouble(CORE.Substring(9,6));
            PNEIN[1] = Convert.ToDouble(CORE.Substring(15,6));
            POEIN[2] = Convert.ToDouble(CORE.Substring(21,6));
            TOEIN[2] = Convert.ToDouble(CORE.Substring(27,6));
            PNEIN[2] = Convert.ToDouble(CORE.Substring(33,6));
            POEIN[3] = Convert.ToDouble(CORE.Substring(39,6));
            TOEIN[3] = Convert.ToDouble(CORE.Substring(45,6));
            PNEIN[3] = Convert.ToDouble(CORE.Substring(51,6));
            POEIN[4] = Convert.ToDouble(CORE.Substring(57,6));
            TOEIN[4] = Convert.ToDouble(CORE.Substring(63,6));
            PNEIN[4] = Convert.ToDouble(CORE.Substring(69,6));
            int NUE = Convert.ToInt32(CORE.Substring(76,1));
            //1716 FORMAT (3X,12F6.0,4X ,I1)
            ZWFLUT = 0.0;
            
            
            for(L = 1; L <= 4; L++)     //DO 1704 L=1,4
            {
                POEIN[L] = POEIN[L]/GP;
                PNEIN[L] = PNEIN[L]/GP;
                GMAXGE[L] = 0.0;
                GMINGE[L] = 0.0;
                ZETAVE[L] = 0.0;
                EPSMXE[L] = 0.0;
                NTT[L] = 0;
                DPBEZE[L] = 0.0;
                PUEBEL[L] = 0.0;
                NUEBEL[L] = 0;
                
                for(int IX5 = 1; IX5 <= 5; IX5++)   //DO 10703 IX5 = 1,5
                {
                    VENDME[IX5,L] = 0.0;
                    BDUESE[IX5,L] = 0.0;
                }   //10703 CONTINUE
                
                if (PNEIN[L] == 0.0)
                    goto label1705;
                LMAX=L;
                TOEIN[L]=UWA003("TABS", TOEIN[L]);
                JJEND=JJEND+1;
                P0E[JJEND] = POEIN[L];
                T0E[JJEND] = TOEIN[L];
                PNE[JJEND] = PNEIN[L];
            }       //1704 CONTINUE

        label1705:
            if (NUE == 0)
                NUE=1;
            
            if (NUE == KT10)
                goto label1706;
            KFELER = 4;
            goto label101;

        label1706:
            if(IFALL == 0)
                IFALL=1;
            JJREL=1;

            if (KT6 != 1)
                goto label100;

            LS[1] = -0.01*LS[1]+1.0;
            
            if (XPT[1] > 0.0 && P0E[1] > 0.0)
                LS[1] = (P0E[1]-XPT[1])/XPT[1] + 1.0;    //1LS[1] = (P0E[1]-XPT[1])/XPT[1] + 1.
            
            if (XPT[1] > 0.0 && P0E[1] == 0.0)
                P0E[1]=XPT[1]*LS[1];        //1P0E[1]=XPT[1]*LS[1]
            
            if (XPT[1] == 0.0)
                XPT[1]=P0E[1]/LS[1];
            
            if (T1T[1]+XE1T[1] == 0.0)
                goto label1707;
            
            if (T1T[1] != 0.0)
                XE1T[1]=VISUM(XPT[1],T1T[1],11);
            
            if (T1T[1] == 0.0)
                T1T[1]=VISUM(XPT[1],XE1T[1],13);
            
            if (DI[1] != 0.0 || T0E[1] == 0.0)
                goto label1708;
            
            DI[1] = VISUM(P0E[1],T0E[1],11)*(-1.0)+XE1T[1];
            goto label1709;

        label1707:
            XE1T[1]=VISUM (P0E[1],T0E[1],11)+DI[1];
            T1T[1]=VISUM (XPT[1],XE1T[1],13);
            goto label1709;

        label1708:
            T0E[1]=VISUM (P0E[1],XE1T[1]-DI[1],13);

        label1709:
            T2T[1]=T1T[1];
            XE2T[1]=XE1T[1];
            XE1T[I+1] = XE2T[I];
            T1T[I+1]=T2T[I];
            IWEI2=2;
            KT5=0;
            KT1 = 0;
            goto label1712;

        label1913:
            IZ2 = 1;

            if (KT10 > 1)
                IZ2 = NTTETB[KT10-1] + 1;
            IZ3 = IZ2 + LMAX - 1;
            
            //DECODE(75, 1910,CORE)
            A1 = Convert.ToDouble(CORE.Substring(3,7));
            IX1 = Convert.ToInt32(CORE.Substring(10,2));
            A10 = Convert.ToDouble(CORE.Substring(12,5));
            A[1] = Convert.ToDouble(CORE.Substring(17,5));
            AA[1] = Convert.ToDouble(CORE.Substring(22,5));
            A[2] = Convert.ToDouble(CORE.Substring(27,5));
            AA[2] = Convert.ToDouble(CORE.Substring(32,5));
            A[3] = Convert.ToDouble(CORE.Substring(37,5));
            AA[3] = Convert.ToDouble(CORE.Substring(42,5));
            A[4] = Convert.ToDouble(CORE.Substring(47,5));
            AA[4] = Convert.ToDouble(CORE.Substring(52,5));
            III[1] = Convert.ToInt32(CORE.Substring(57,1));
            AAA[1] = Convert.ToDouble(CORE.Substring(58,5));
            III[2] = Convert.ToInt32(CORE.Substring(63,1));
            AAA[2] = Convert.ToDouble(CORE.Substring(64,5));
            III[3] = Convert.ToInt32(CORE.Substring(69,1));
            AAA[3] = Convert.ToDouble(CORE.Substring(70,5));
            //1910 FORMAT (3X,F7.0,I2,9F5.4,3(I1,F5.4))
            
            int IJ = 0;
            
            for(L = IZ2; L <= IZ3; L++)     //DO 15 L=IZ2,IZ3
            {
                IJ = IJ + 1;
                if (IJ < 4)
                    FETAR[L] = AAA[IJ];
                
                if (IJ < 4)
                    MREGEL[L] = III[IJ];
                
                FETAE[L] = A[IJ];
                FBEWE[L] = AA[IJ];
            }

            if (KT10 != 1)
                goto label1914;
            WTSOLL = A1 * GW;
            
            if (LIGHT[8] == 0)
                WTSOLL = WTSOLL/3.6;
            
            IDEFW = IX1;
            DETA = A10;
            
            if (DETA <= 0.0)
                DETA = 1.0;
            
        label1914:
            for(L = IZ2; L <= IZ3; L++)     //DO 1915 L=IZ2,IZ3
                if (FETAE[L] == 0.0)
                    FETAE[L] = 1.0;     //1915 CONTINUE

            goto label100;

        label1721:
            //goto label(1722,1723,1725,1725,1725,1725), K3
            if(K3 == 1)     goto label1722;
            if(K3 == 2)     goto label1723;
            if(K3 == 3)     goto label1725;
            if(K3 == 4)     goto label1725;
            if(K3 == 5)     goto label1725;
            if(K3 == 6)     goto label1725;

        label1722:
            //DECODE(80, 1730,CORE)
            GFDE[KT10] = Convert.ToDouble(CORE.Substring(3,9));
            GABDE[KT10] = Convert.ToDouble(CORE.Substring(12,9));
            TNMAX[KT10] = Convert.ToDouble(CORE.Substring(21,6));
            TNNORM[KT10] = Convert.ToDouble(CORE.Substring(27,9));
            TNMIN[KT10] = Convert.ToDouble(CORE.Substring(36,6));
            VMECHE[KT10] = Convert.ToDouble(CORE.Substring(42,6));
            ETAPKT[1,KT10] = Convert.ToDouble(CORE.Substring(48,4));
            ETAPKT[2,KT10] = Convert.ToDouble(CORE.Substring(52,4));
            ETAPKT[3,KT10] = Convert.ToDouble(CORE.Substring(56,4));
            ETAPKT[4,KT10] = Convert.ToDouble(CORE.Substring(60,4));
            GMFIXE[KT10] = Convert.ToDouble(CORE.Substring(64,9));
            NRMFIE[KT10] = Convert.ToInt32(CORE.Substring(73,3));
            NRMVAE[KT10] = Convert.ToInt32(CORE.Substring(76,3));
            NITRE [KT10] = Convert.ToInt32(CORE.Substring(79,1));
            //1730 FORMAT (3X,2F9.0,F6.0,F9.0,2F6.0,4F4.4,F9.0,2I3,I1)
            
            if ((KT10 == 1 || KT10 > 1 && NITRE[KT10] != 8 && NITRE[KT10] != 9) && VMECHE[KT10] == 0.0)
            {
                sw16.WriteLine("0***********************************************");
                sw16.WriteLine(" ***********************************************");
                sw16.WriteLine(" *** VORGABE DER MECHANISCHEN VERLUSTE FEHLT ***");
                sw16.WriteLine(" ***********************************************");
                sw16.WriteLine(" ***********************************************");
                //1720 FORMAT(1H0,47(1H*)/1X,47(1H*)/1X,"*** VORGABE DER MECHANISCHEN VER 
                //1LUSTE FEHLT ***"/1X,47(1H*)/1X,47(1H*)/)
            }
            
            LVAR[KT10] = NRMVAE[KT10];
            GFDE[KT10] = GFDE[KT10]*GM;
            GABDE[KT10] = GABDE[KT10]*GM;
            
            if(GMFIXE[KT10] > 1.0)
                GMFIXE[KT10]= GMFIXE[KT10]*GM;
            
            ETAGE[KT10] = ETAPKT[1,KT10];
            
            if (ETAGE[KT10] <= 0.0 || ETAGE[KT10] > 1.0)
                ETAGE[KT10] = 1.0;
            
            for(K3 = 1; K3 <= 4; K3++)  //DO 1727 K3 = 1,4
                if(ETAPKT[K3,KT10] != 0.0)
                    TNPKT[K3,KT10]=TNMAX[KT10]*(0.25*(5.0-K3));     //1727 CONTINUE
            
            TLSTGE[KT10]=TNNORM[KT10];
            
            for(K3 = 1; K3 <= 3; K3++)      //DO 1726 K3=1, 3
            {
                NTT[K3] = 0;
                ZETAVE[K3] = 0.0;
                DPBEZE[K3] = 0.0;
                
                for(L = 1; L <= 5; L++)     //DO 1726 L=1, 5
                {
                    BDUESE[L,K3] = 0.0;
                    VENDME[L,K3] = 0.0;
                }   //1726 CONTINUE
            }
            goto label100;

        label1723:
            //DECODE(80, 1735,CORE)
            GMAXGE[1] = Convert.ToDouble(CORE.Substring(3,3));
            GMINGE[1] = Convert.ToDouble(CORE.Substring(6,3));
            GMAXGE[2] = Convert.ToDouble(CORE.Substring(9,3));
            GMINGE[2] = Convert.ToDouble(CORE.Substring(12,3));
            GMAXGE[3] = Convert.ToDouble(CORE.Substring(15,3));
            GMINGE[3] = Convert.ToDouble(CORE.Substring(18,3));
            PUEBEL[1] = Convert.ToDouble(CORE.Substring(21,4));
            PUEBEL[2] = Convert.ToDouble(CORE.Substring(25,4));
            PUEBEL[3] = Convert.ToDouble(CORE.Substring(29,4));
            PUEBEL[4] = Convert.ToDouble(CORE.Substring(33,4));
            IZ1 = Convert.ToInt32(CORE.Substring(37,1));
            IZ2 = Convert.ToInt32(CORE.Substring(38,1));
            IZ3 = Convert.ToInt32(CORE.Substring(57,1));
            IZ4 = Convert.ToInt32(CORE.Substring(58,1));
            Z5 = Convert.ToInt32(CORE.Substring(68,1));
            Z6 = Convert.ToInt32(CORE.Substring(69,1));
            XUPMZW = Convert.ToDouble(CORE.Substring(70,2));
            FLUTZW = Convert.ToDouble(CORE.Substring(72,1));
            STZNDT[KT10] = Convert.ToInt32(CORE.Substring(73,4));
            NSTFZW = Convert.ToInt32(CORE.Substring(77,2));
            //1735 FORMAT (3X,6F3.2,4F4.0,2A1,18X,2A1,9X,2A1,F2.0,F1.0,I4,I2)

            if (NSTFZW > 0)
                NSTFZW = NSTFZW + 1;
            
            if(KT10 == 1)
                NFLUT = FLUTZW;
            
            GMAXGE[4]=GMAXGE[3];
            GMINGE[4]=GMINGE[3];
            
            for(L = 1; L <= 4; L++)     //DO 1724 L=1,4
            {
                NUEBEL[L] = 0;
                if (PUEBEL[L] >= 0.0)
                    continue;
                
                NUEBEL[L] = Convert.ToInt32(Math.Abs(PUEBEL[L]));
                PUEBEL[L]=0.0;
            }   //1724 CONTINUE
            goto label100;

        label1725:
            L=K3-2;
            //DECODE(80, 1746,CORE)
            DPBEZE[L] = Convert.ToDouble(CORE.Substring(3,5));
            A1 = Convert.ToDouble(CORE.Substring(8,1));
            A2 = Convert.ToDouble(CORE.Substring(9,4));
            A3 = Convert.ToDouble(CORE.Substring(13,4));
            VENDME[1,L] = Convert.ToDouble(CORE.Substring(17,4));
            VENDME[2,L] = Convert.ToDouble(CORE.Substring(21,4));
            VENDME[3,L] = Convert.ToDouble(CORE.Substring(25,4));
            VENDME[4,L] = Convert.ToDouble(CORE.Substring(29,4));
            VENDME[5,L] = Convert.ToDouble(CORE.Substring(33,4));
            ZETAVE[L] = Convert.ToDouble(CORE.Substring(37,4));
            NTT[L] = Convert.ToInt32(CORE.Substring(41,1));
            BDUESE[1,L] = Convert.ToDouble(CORE.Substring(42,3));
            BDUESE[2,L] = Convert.ToDouble(CORE.Substring(45,3));
            BDUESE[3,L] = Convert.ToDouble(CORE.Substring(48,3));
            BDUESE[4,L] = Convert.ToDouble(CORE.Substring(51,3));
            BDUESE[5,L] = Convert.ToDouble(CORE.Substring(54,3));
            A4 = Convert.ToDouble(CORE.Substring(57,1));
            A5 = Convert.ToDouble(CORE.Substring(58,4));
            A6 = Convert.ToDouble(CORE.Substring(62,4));
            M1 = Convert.ToInt32(CORE.Substring(66,1));
            M1D = Convert.ToInt32(CORE.Substring(67,4));
            M1V = Convert.ToInt32(CORE.Substring(71,2));
            M2 = Convert.ToInt32(CORE.Substring(73,1));
            M2D = Convert.ToInt32(CORE.Substring(74,4));
            M2V = Convert.ToInt32(CORE.Substring(78,2));
            //1746 FORMAT (3X,F5.0,F1.0,F4.0,F4.2,5F4.0,F4.2,I1,5F3.3,F1.0,F4.0,F4.2,2(A1,I4,I2))

            if (STZNDT[KT10] == 0)
                goto label190;
            
            if (L == 1)
                goto label190;
            
            if (A5 != -999.0)
                goto label190;
            
            if (P0E[L] != PNE[L-1])
            {
                sw16.WriteLine("0***********************************************************************");
                sw16.WriteLine(" *** WENN DER NIEDERDRUCKTEIL AUF EINER WELLE MIT DEM DAVORLIEGENDEN ***");
                sw16.WriteLine(" *** BERECHNUNGSABSCHNITT LIEGT, (D-EINSTROEMUNG = -999) IST KEIN    ***");
                sw16.WriteLine(" *** DRUCKVERLUST IN DER T12-KARTE MOEGLICH.                         ***");
                sw16.WriteLine(" ***********************************************************************");
            }

            
            if (P0E[L] != PNE[L-1])
                P0E[L] = PNE[L-1];
            
            //185 FORMAT (1H0,71("*"),/1X,"*** WENN DER NIEDERDRUCKTEIL AUF",
            //& " EINER WELLE MIT DEM DAVORLIEGENDEN ***",/1X,
            //& "*** BERECHNUNGSABSCHNITT LIEGT, (D-EINSTROEMUNG = -999)"
            //& ," IST KEIN ***",/1X,"*** DRUCKVERLUST IN DER",
            //& " T12-KARTE MOEGLICH.",25X,"***",/1X,71("*")/)

            NVENT[L+JEND] = -999;
            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            
            for(N = 1; N <= 5; N++)     //DO 180 N=1,5
            {
                VENDME[N,L] = 0.0;
                BDUESE[N,L] = 0.0;
            }   //180 CONTINUE
            ZETAVE[L] = 0.0;
            NTT [L] = 0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            goto label100;

        label190:
            NV[L,1] = (int)A1;
            NV[L,2] = (int)A2;
            NV[L,3] = (int)A4;
            NV[L,4] = (int)A5;
            EPSMXE[L] = 0.0;
            A10 = 0.0;
            IX6 = NTT[L];
            
            if (IX6 == 0)
                IX6 = 4;
            
            if (IX6 > 5)
                IX6 = 5;
            
            for(N = 1; N <= IX6; N++)       //DO 200 N=1,IX6
                A10 = A10 + Math.Pow(VENDME[N,L], 2);   //200 CONTINUE

            if (NTT[L] == 0)
                goto label206;

            for(N = IX6; N <= 5; N++)       //DO 201 N = IX6,5
                if (BDUESE[N,L] > 0.0)
                    EPSMXE[L] = BDUESE[N,L];    //201 CONTINUE

        label206:
            if (A10 == 0.0)
                goto label210;

            if (A1 != 0.0 && A2 > 0.0)
                ZETAVE[L] = ZETAVE[L] + A3*Math.Pow((A10/(A1*A2*A2)),2);
            
            if (A4 != 0.0 && A5 > 0.0)
                ZETAVE[L] = ZETAVE[L] + A6*Math.Pow((A10/(A4*A5*A5)), 2);

            goto label100;

        label210:
            if (A1 == 0.0)
                goto label220;

            if (A2 <= 0.0) 
                goto label220;

            IZ1 = (int)(A1);
            
            if (IZ1 <= 4 || NTT[L] == 5)
                goto label215;
            
            A8 = IZ1;
            A2 = A2*Math.Sqrt(A8/4.0);
            A1 = 4.0;
            IZ1 = 4;

        label215:
            for(N = 1; N <= IZ1; N++)   //DO 216 N=1,IZ1
                VENDME[N,L] = A2;
            
            ZETAVE[L] = A3;
            
            if (A4 != 0.0 && A5 > 0.0)
                ZETAVE[L] = ZETAVE[L] + A6*Math.Pow(((A1*A2*A2)/(A4*A5*A5)),2);
            
            goto label100;

        label220:
            if (A4 == 0.0)
                goto label100;
            
            if (A5 == 0.0)
                goto label100;

            IZ1 = (int)(A4);
            
            if (IZ1 <= 4 || NTT[L] == 5)
                goto label225;
            
            A8 = IZ1;
            A5 = A5*Math.Sqrt(A8/4.0);
            IZ1 = 4;
            
        label225:
            for(N = 1; N <= IZ1; N++)   //DO 226 N=1,IZ1
                VENDME[N,L] = A5;
            
            ZETAVE[L] = A6;
            goto label100;

        label1732:
            K3=K3+10;
            
        label1731:
            if (K3 == NT3CD)
                goto label1733;
            
            KFELER=3;
            goto label101;
            
        label1733:
            J=J+1;
            KT9 = J;
            UWA006("RDISC", 56,J);
            UWA006("RDISC", 53,J);
            KT10 = ANZTRB;
            JEND = J;
            NT3CD=NT3CD+1;
            
            //DECODE(78, 1749,CORE)
            IZWZ[1] = Convert.ToInt32(CORE.Substring(3,3));
            IZWZ[2] = Convert.ToInt32(CORE.Substring(6,3));
            A1 = Convert.ToDouble(CORE.Substring(9,2));
            NSTFZ[J] = Convert.ToInt32(CORE.Substring(11,2));
            A2 = Convert.ToDouble(CORE.Substring(13,4));
            A3 = Convert.ToDouble(CORE.Substring(17,4));
            EPSEND = Convert.ToDouble(CORE.Substring(21,4));
            LSZ[KT10] = Convert.ToDouble(CORE.Substring(25,4));
            FLUT = Convert.ToDouble(CORE.Substring(29,2));
            A5 = Convert.ToDouble(CORE.Substring(31,6));
            A6 = Convert.ToDouble(CORE.Substring(37,2));
            A7 = Convert.ToDouble(CORE.Substring(39,2));
            IZWZ[3] = Convert.ToInt32(CORE.Substring(41,3));
            IZWZ[4] = Convert.ToInt32(CORE.Substring(44,3));
            IZWZ[5] = Convert.ToInt32(CORE.Substring(47,3));
            IZWZ[6] = Convert.ToInt32(CORE.Substring(50,3));
            IZWZ[7] = Convert.ToInt32(CORE.Substring(53,2));
            IZWZ[8] = Convert.ToInt32(CORE.Substring(55,2));
            IZWZ[9] = Convert.ToInt32(CORE.Substring(57,2));
            IZWZ[10] = Convert.ToInt32(CORE.Substring(59,2));
            A11 = Convert.ToDouble(CORE.Substring(61,1));
            A12 = Convert.ToDouble(CORE.Substring(62, 1));
            DELTLE = Convert.ToDouble(CORE.Substring(63, 3));
            DELTLA = Convert.ToDouble(CORE.Substring(66, 3));
            A13 = Convert.ToDouble(CORE.Substring(69, 3));
            IX11 = Convert.ToInt32(CORE.Substring(72,1));
            XUPM = Convert.ToDouble(CORE.Substring(73, 4));
            KSTUFE = Convert.ToChar(CORE.Substring(77,1));
            //1749 FORMAT (3X,2I3,F2.1,I2,2F4.0,F4.4,F4.0,F2.0,F6.0,2F2.2,4I3,4I2,2F1.0,2F3.2,F3.1,I1,F4.0,A1)

            if (KSTUFE == KARTR && IZMINT < 6)
                IZMINT = 6;
            
            if (KSTUFE == KARTD && NVENT[KT6] == -999)
            {
                sw16.WriteLine("0***********************************************************************");
                sw16.WriteLine(" *** WENN EIN DROSSELELEMENT VOR DEM BERECHNUNGSABSCHNITT ANGEGEBEN  ***");
                sw16.WriteLine(" *** WIRD IST DIE STEUERUNG NIEDERDRUCKTEIL AUF EINER  WELLE MIT DEM ***");
                sw16.WriteLine(" *** DAVORLIEGENDEN BERECHNUNGSABSCNITT   (D-EINSTROEMUNG = -999)    ***");
                sw16.WriteLine(" *** NICHT MOEGLICH.                                                 ***");
            }
            
            if (KSTUFE == KARTD && NVENT[KT6] == -999)
                NVENT[J] = 0;
            
            //1770 FORMAT (1H0,71("*"),/1X,"*** WENN EIN DROSSELELEMENT VOR ",
            //& "DEM BERECHNUNGSABSCHNITT ANGEGEBEN ***",/1X,
            //& "*** WIRD IST DIE STEUERUNG NIEDERDRUCKTEIL AUF EINER "
            //& ," WELLE MIT DEM ***",/1X,"*** DAVORLIEGENDEN BERE",
            //& "CHNUNGSABSCNITT (D-EINSTROEMUNG = -999) ***",
            //& /1X,"*** NICHT MOEGLICH.",49X,"***",/1X,71("*")/)
            
            if (XUPM < 0.0)
                XUPM = -XUPM*100.0;
            FLUTR = FLUT;
            
            if(ZWFLUT == 0.0)
                ZWFLUT = FLUT;
            IWEI2=1;
            IWEI1=1;
            
            if (FLUT < 1.0)
                FLUT = 1.0;
            
            QNORMN = false;
            IND = (int)(A5 - 899.9);

            if (A5 <= 0.0)
                goto label2005;
            
            if (IND <= 0)
                A5 = A5 /GP;
            
        label2005:
            if (XUPM < 200.0)
                XUPM = XUPM*60.0;
            
            if((IND == LMAX || IND == 0) && STZNDT[KT10] != 0)
                goto label2001;
            
            goto label2002;
            
        label2001:
            if (XUPM == 0.0)
                XUPM = XUPMZW*100.0;
            NVOR = (int)NSTFZ[J];
            
            if (NSTFZW > 0)
                goto label2003;
            
            UWA092(NSTFZW, "HOLND1");
            
        label2003: 
            NSTFZ[J] = NSTFZW;
            
            if (FLUTZW < 1.0)
                FLUTZW = 2.0;
            
            FLUT = FLUTZW;
            A2 = 1500.0;
            A3 = 1750.0;
            QNORMN = true;
            
        label2002:
            if (I > 3)
                IWEI1 =2;
            
        label1713:
            KT1 = 0;
            KT2 = 0;
            KT3 = 0;
            KT4 = 0;
            KT5 = 0;
            KT8 = 0;
            KT11 = 0;
            KT14 = 0;
            KT15 = 0;
            
        label1714:
            //goto label(1734,1738,1740,1743,1748),IWEI1
            if(IWEI1 == 1)      goto label1734;
            if(IWEI1 == 2)      goto label1738;
            if(IWEI1 == 3)      goto label1740;
            if(IWEI1 == 4)      goto label1743;
            if(IWEI1 == 5)      goto label1748;
            
        label1711:
            UWA002(I1, IN);
            
        label1712:
            UWA010(I,2);
            
            if (KT1 < 2)
                goto label1715;
            
            if (IWEI2 == 1)
                goto label1715;
            
            int IRET = I;
            int IZ = JJREL;
            
            if (IZ > 3)
                IZ = 3;
            
            GMAXG1 = GMAXGE[IZ];
            
            if (GMAXG1 == 0.0)
                GMAXG1 = 1.0;
            
            if (KT10 == 1 && IZ == 1)
                PEMAX = GMAXG1;
            
            GMING1 = GMINGE[IZ];
            
            if (GMING1 == 0.0) 
                GMING1 = .34;
            
            if (IZ > 1)
                IZ = IZ +1;
            
            if (IZ > 4)
                goto label1750;
            
        label1753:
            if (NUEBEL[IZ] <= 0)
                goto label1750;
            
            for(IZZ = 93; IZZ <= 98; IZZ++)      //DO 1751 IZZ = 93,98
                if(ILTG[IZZ] == 0)
                    goto label1752;     //1751 CONTINUE
            
            goto label1750;
            
        label1752:
            IZWZ[1] =-IZZ;
            KT7 = UWA011(1,7);
            I = 1;
            
            if (KT7 == 7)
                I = 2;
            
            UWA010(I,1);
            UWA002(1,1);
            UWA010(I,2);
            IZWZ[1] = IZZ;
            I = 2;
            
            if (KT6 == 1)
                I = 3;
            
            KT7 = UWA011(I+1,7);
            
            if (KT7 == 3 || KT7 == 5) 
                I = I + 1;
            
            I = I + NUEBEL[IZ];
            
            UWA010 (I ,1);
            UWA002 (1, 1);
            UWA010 (I ,2);
            
            if (IZ > 1)
                goto label1750;
            
            IZ = IZ +1;
            goto label1753;
            
        label1750:
            I = IRET;
            UWA010(I,1);
            
            if (JJREL > 4)
                goto label1756;
            
            for(IZ2 = 1; IZ2 <= 5; IZ2++)       //DO 1754 IZ2 = 1,5
            {
                VENDUR[IZ2] = VENDME[IZ2,JJREL];
                BEAUFG[IZ2] = BDUESE[IZ2,JJREL];
            }   //1754 CONTINUE
            
            int NADUES = NTT[JJREL];
            double ZETAV = ZETAVE[JJREL];
            double VBEZ = 0.0;
            double DPBEZ = DPBEZE[JJREL]/100.0;
            
            if(EPSMXE[JJREL] != 0.0)
                EPSMAX = EPSMXE[JJREL];
            
            NSSV[KT6] = NV[JJREL,1];
            NDSSV[KT6] = NV[JJREL,2];
            NEINST[KT6] = NV[JJREL,3];
            NDEINST[KT6] = NV[JJREL,4];
            
        label1756:
            if (QNORMN)
                UWA092(1,"HOLND1");
            
            NVOR = 0;
            
            UWA006("WDISC", 52,KT6);
            UWA006("WDISC", 59,KT6);
            ITTEND[KT6] = I;
            
            if (KT1 == 3)
                NTTETB[KT10] = KT6;
            ANZDGR = J;
            
            if (LIGHT[1] == 1) 
                UWA012();
            
            if (KT1 != 3)
                KT6 = KT6 + 1;
            
            JJ = KT6;
            ANZDTT = JJ;
            JJREL = JJREL + 1;
            I = 0;
            
            if(KT6 > 7)
                goto label1715;
            
            UWA006("RDISC", 52,KT6);
            UWA006("RDISC", 59,KT6);
            
        label1715:
            KT5= 0;
            K7VOR = KT7;
            I=I+1;
            //goto label(1713, 100),
            if(IWEI2 == 1)      goto label1713;
            if(IWEI2 == 2)      goto label100;

        label1734:
            KT7=1;
            double P0T = POEIN[JJREL];
            double T0T = TOEIN[JJREL];
            double PNT = PNEIN[JJREL];
            double WT0 = T0T;

            if (T0T == 0.0)
                T0T=T1T[I];
            
            if (P0T == 0.0)
                P0T = P0E[JJREL];
            
            XPT[I]=P0T;
            T2T[I]=T0T;
            
            if(P0T != 0.0 && T0T != 0.0)
                XE2T[I]=VISUM( P0T,  T0T,11);
            
            if (KT10 == 1 || JJREL > 1)
                goto label1737;

            I1 = IZWZ[1];
            
            if (I1 != 0)
                NRMVAE[KT10] = I1;
            
            if (I1 != 0)
                LVAR[KT10] = I1;
            
            I1 = Convert.ToInt32(NRMVAE[KT10]);
            GLTG[I1] = GFDE[KT10];
            GLTG[I1+100] = GABDE[KT10];
            
            if (I1 > 0)
                goto label1736;
            KFELER=6;
            goto label101;

        label1736:
            IZWZ[1] = 0;
            
        label1737:
            I1 = 1;
            IN = 2;
            
            if (KSTUFE == KARTG)
                I1 = 0;

            IWEI1 = 2;
            goto label1711;

        label1738:
            if (A1 == 0.0 && K7VOR != 1)
                goto label1739;
            KT7=2;
            DI[I] = -0.01*A1 + 1.0;
            XPT[I]=XPT[I-1]*DI[I];
            XE2T[I]=XE2T[I-1];
            
            if (XE2T[I] > 0.0)
                T2T[I]=VISUM(XPT[I],XE2T[I],13);
            I1=1;
            IN=2;
            
            if (KSTUFE == KARTG)
                I1 = 0;

            IWEI1=4;
            
            if (KSTUFE == KARTR || KSTUFE == KARTD)
                IWEI1=3;
            
            goto label1711;
            
        label1739:
            IWEI1=4;
            goto label1714;

        label1740:
            KRZEIN[KT6]=NSTFZ[J];
            KT9=J;
            KT7=3;
            
            if (KSTUFE == KARTD)
                goto label1741;
            
            STFDI[I]=A2;
            PSTFMX[I] = FLUTR;
            XPT[I]=A5;
            
            if (A5 < 0)
                goto label1;
            if (A5 == 0)
                goto label2;
            if (A5 > 0)
                goto label3;
            
        label1:
            XPT[I] = - XPT[I-1] * A5;
            YPT[I] = A5;
            
        label3:
            KT11 = 1;
            goto label4;
            
        label2:
            XPT[I]=XPT[I-1]/(GMAXGE[KT6]+0.05);
            
        label4:
            if (A5 > 800.0)
                XPT[I] = UWA013(A5);
            
            if (T2T[I-1] == 0.0)
                T2T[I-1] = UW0011(XPT[I-1], 1) + 50.0;
            
            double ENTROP = VISUM(XPT[I-1], T2T[I-1], 12);
            T2T[I] = VISUM(XPT[I], ENTROP, 14);
            XE2T[I] = VISUM(XPT[I], T2T[I], 11);
            XH0[I]=XE2T[I-1]-XE2T[I];
            ETAI[I]=0.8;
            
            if (KRZEIN[KT6] == 2)
                ETAI[I]=0.65;
            
            XE2T[I]= -XH0[I]*ETAI[I]+XE2T[I-1];
            T2T[I] = VISUM(XPT[I], XE2T[I], 13);
            IANF=I;
            EPSMAX=A6;
            EPS11=A7;
            OEFFNG[I] = EPSEND;
            BRTLE[I] = LSZ[KT10];
            
        label1742:
            J=J-1;
            I1 = 0;
            IREGEL = IREGEL + 1;
            UWA008("PACK", IRSTF[IREGEL], ref I1, ref KT10, ref KT6, ref I);
            JEND = J;
            I1=3;
            IN=10;
            IWEI2=2;
            NT3CD=NT3CD-1;
            goto label1711;

        label1741:
            KT7=5;
            XE2T[I]=XE2T[I-1];
            XPT[I]=A5;
            
            if (A5 <= 0)
                goto label5;
            if (A5 == 0)
                goto label6;
            if (A5 > 0)
                goto label7;
            
        label5:
            XPT[I] = - XPT[I-1] * A5;
            YPT[I] = A5;
            
        label7:
            KT11 = 1;
            goto label8;
            
        label6:
            XPT[I] = XPT[I-1];
            
        label8:
            if (XE2T[I] != 0.0 && XPT[I] != 0.0)
                T2T[I] = VISUM(XPT[I],XE2T[I],13);
            
            goto label1742;
            
        label1743:
            ISTFGR[J]=100*KT6+I;
            STFZ = (NSTFZ[J]);
            
            if (A3 == 0.0)
                A3=A2;

            A8 = STFZ - 1.0;
            I1 = I;
            IN = I + Convert.ToInt32(NSTFZ[J]) - 1;
            KT7 = 4;
            KT9 = J;
            KT14 = 1;
            KT15 = 1;
            
            if (IX11 > 0)
                KT15 = IX11;
            
            KT4 = 1;
            UWA002(1,2);
            
            A9 = KT6;
            
            if (A9 > 4.0)
                A9 = 4.0;
            
            A10 = 0.07*A2*A9;
            A9 = 0.12*A3*A9;
            
            if (LSZ[KT10] == 0.0)
                goto label1745;
            
            A9 = LSZ[KT10];
            A10 = 0.58 * A9;
            
            if (A9 > 500.0)
                A10 = 0.1 * A9;
            
            if (A8 <= 0.0)
                A10 = A9;
            
        label1745:
            if (A8 > 0.0)
                A4 = (A3-A2)/A8;
            
            if (A8 > 0.0)
                A9 = (A9-A10)/A8;
            
            TAZLE[1] = 3.0;
            
            if (A11 > 0.0)
                TAZLE[1] = A11;
            
            TAZLA[1] = 3.0;
            
            if (A12 > 0.0)
                TAZLA[1] = A12;
            TASAX[1] = 7.0;
            
            if (A13 > 0.0)
                TASAX[1] = A13;
            
            double STFDI1 = A2;
            double STFDIZ = A3;
            
            if (KSTUFE != KARTG)
                goto label1790;
            
            TASAX[1] = TASAX[1]*10.0;
            STZMDT[KT10] = 99;
            
        label1790:
            A3 = 0.0;
            
            for(I = I1; I <= IN; I++)   //DO 1744 I = I1,IN
            {
                STFDI[I] = A3*A4 + A2;
                LS[I] = A3*A9 + A10;
                A3 = A3 + 1.0;
                BRTLE[I] = 10.0 + 0.2*LS[I];
                BRTLA[I] = BRTLE[I];
                OEFFNG[I] = EPSEND;
                
                if (EPSEND == 0.0)
                    OEFFNG[I] = 0.37;
                
                UWA010(I,2);
                KT2 = 0;
                KT3 = 0;
                KT5 = 0;
            }   //1744 CONTINUE

            IWEI2 = 2;
            IZ1 = KT9;
            UWA006("WDISC", 53,IZ1);
            UWA006("WDISC", 56,IZ1);
            
            I = IN;
            XPT[I] = A5;
            KT11 = 0;
            KT1 = 1;
            
            if (A5 == 0.0)
                goto label1747;
            KT11 = 1;
            
            if (A5 < 800.0)
                goto label1747;
            
            if (A5 > 899.0 && A5 < 904.5)
                KT1 = 2;
            
            if (A5 > 800.0)
                XPT[I] = UWA013(A5);
            
            IND = (int)(A5-899.9);
            
            if(IND != 0)
                XPT[I] = PNEIN[IND];
            
            if (IND == LMAX || IND == 0)
                KT1 = 3;
            
        label1747:
            I1 = 3;
            IN = 10;
            
            if (KT1 < 3)
                goto label1711;
            
            IWEI2 = 1;
            IWEI1 = 5;
            goto label1711;

        label1748:
            KT7 = 6;
            KT1 = 3;
            XPT[I] = XPT[I-1];
            PKOND[KT10] = XPT[I];
            FLUTEN[KT10] = FLUT;
            PKOND1 = PKOND[1];
            IWEI2 = 2;
            goto label1712;

        label1762:
            K3 = K3 + 10;

        label1761:
            //DECODE(4, 1815,CORE) 
            IZ1 = Convert.ToInt32(CORE.Substring(3,1));
            
            if (IZ1 > 1)
                goto label1801;

            J = (int)JANF + K3;
            IZ1 = ISTFGR[J];
            JJ = IZ1/100;
            I = IZ1 - JJ*100;
            
            if (JJVOR == JJ)
                goto label1800;
            
            JJVOR = JJ;
            IZ1 = JJ;
            UWA006("RDISC",52,IZ1);
            UWA006("RDISC",59,IZ1);
            
        label1800:
            IZ1 = J;
            UWA006("RDISC",53,IZ1);
            UWA006("RDISC", 56,IZ1);
            
            
        label1801:
            IZ2 = KT5END + 1;
            L = IZ2;

            //DECODE(80, 1815,CORE)
            IZ1 = Convert.ToInt32(CORE.Substring(3,1));
            TALMIN[L] = Convert.ToDouble(CORE.Substring(4,4));
            TALMAX[L] = Convert.ToDouble(CORE.Substring(8,4));
            TABANZ[L] = Convert.ToDouble(CORE.Substring(12,3));
            IZ4 = Convert.ToInt32(CORE.Substring(15,1));
            TASAXE[L] = Convert.ToDouble(CORE.Substring(16,3));
            NTAPRF[L] = Convert.ToInt32(CORE.Substring(19,1));
            TAOEFF[L] = Convert.ToDouble(CORE.Substring(20,3));
            NDIART[L] = Convert.ToDouble(CORE.Substring(23,1));
            TAZLE[L] = Convert.ToDouble(CORE.Substring(24,3));
            TAZLA[L] = Convert.ToDouble(CORE.Substring(27,3));
            TAKF1[L] = Convert.ToDouble(CORE.Substring(36,3));
            TAKFZ[L] = Convert.ToDouble(CORE.Substring(39,3));
            A5 = Convert.ToDouble(CORE.Substring(42,1));
            A6 = Convert.ToDouble(CORE.Substring(43,4));
            A7 = Convert.ToDouble(CORE.Substring(47,4));
            A1 = Convert.ToDouble(CORE.Substring(51,4));
            A2 = Convert.ToDouble(CORE.Substring(55,4));
            A3 = Convert.ToDouble(CORE.Substring(59,4));
            A4 = Convert.ToDouble(CORE.Substring(63,4));
            //1815 FORMAT (3X,I1,2F4.0,F3.0,I1,F3.1,I1,F3.3,A1,2F3.2,6X,2F3.2,F1.0,F4.0,F4.2,4F4.0)

            if (NDIART[L] != KBLNC)
                goto label165;

            goto label195;
            
        label165:
            if (NDIART[L] != KARTL)
                goto label170;

            if (TAZLE[L] == 1.0)
                goto label166;
            
            if (TAZLE[L] == 0.0)
                goto label167;
            A8 = TAZLE[L]/DELTLE;
            A8 = 0.4055 + (0.808-0.009*A8) * Math.Log(A8/5.0);
            TAZLE[L] = Math.Exp(A8);
            
        label167:
            TAZLE[L] = -TAZLE[L] - 100.0;
            
        label166:
            if (TAZLA[L] == 1.0)
                goto label195;
            
            if (TAZLA[L] == 0.0)
                goto label168;
            
            A8 = TAZLA[L]/DELTLA;
            A8 = 0.4055 + (0.808-0.009*A8) * Math.Log(A8/5.0);
            TAZLA[L] = Math.Exp(A8);
            
        label168:
            TAZLA[L] = -TAZLA[L] - 100.0;
            goto label195;
            
        label170:
            if (NDIART[L] != KARTS)
                goto label175;

            if (TAZLE[L] == 1.0)
                goto label171;

            if (TAZLE[L] != 0.0)
                goto label169;
            
            TAZLE[L] = 5.50;
            
            if (DELTLE < 1.20)
                TAZLE[L] = 4.50;

            if (DELTLE < 1.00)
                TAZLE[L] = 3.50;
            
        label169:
            A8 = TAZLE[L]/DELTLE;
            A8 = 0.8755 + 0.3945*Math.Pow((Math.Abs(Math.Log(A8/3.8))),1.8267);
            TAZLE[L] = Math.Exp(A8);
            TAZLE[L] = -TAZLE[L] - 200.0;
            
        label171:
            if (TAZLA[L] == 1.0)
                goto label195;
            
            if (TAZLA[L] != 0.0)
                goto label172;
            
            TAZLA[L] = 5.50;
            
            if (DELTLA < 1.20) 
                TAZLA[L] = 4.50;
            
            if (DELTLA < 1.00)
                TAZLA[L] = 3.50;
            
            if (DELTLA < 0.61)
                TAZLA[L] = 2.30;
            
        label172:
            A8 = TAZLA[L]/DELTLA;
            A8 = 0.8755 + 0.3945*Math.Pow((Math.Abs(Math.Log(A8/3.8))),1.8267);
            TAZLA[L] = Math.Exp(A8);
            TAZLA[L] = -TAZLA[L] - 200.0;
            goto label195;
            
        label175:
            if (NDIART[L] != KARTD)
            {   //goto label1840;
                //label1840:
                sw16.WriteLine("0*** FALSCHE DICHTUNGSART ***");
                Console.WriteLine("0*** FALSCHE DICHTUNGSART ***");
                KFELER = 12;
                goto label101;
            }

            if (TAZLE[L] == 1.0)
                goto label176;
            
            if (TAZLE[L] == 0.0)
                TAZLE[L] = 6.5;
            A8 = TAZLE[L]/DELTLE;
            A8 = 1.1632 + 0.1317*Math.Pow((Math.Abs(Math.Log(A8/4.2))),2.0);
            TAZLE[L] = Math.Exp(A8);
            TAZLE[L] = -TAZLE[L] - 300.0;
            
        label176:
            if (TAZLA[L] == 1.0)
                goto label195;
            
            if (TAZLA[L] == 0.0)
                TAZLA[L] = 6.5;
            
            A8 = TAZLA[L]/DELTLA;
            A8 = 1.1632 + 0.1317*Math.Pow((Math.Abs(Math.Log(A8/4.2))),2.0);
            TAZLA[L] = Math.Exp(A8);
            TAZLA[L] = -TAZLA[L] - 300.0;
            
        label195:
            TAFDP[L] = 0.0;
            
            if (A5 == 0.0 || A6 == 0.0)
                goto label160;
            
            if (TALMIN[L] == 0.0)
                goto label1811;
            
            TAFDP[L] = Math.Sqrt(A7)/(Math.Pow((A6/1000.0),2)*0.7854*A5);
            I1 = (J-1)*6 + L;
            NSTUTZ[I1] = A5;
            DSTUTZ[I1] = A6;

            if (L == 1)
                HS1MIN[6] = A7;
            
            if (L == 2)
                HS1MAX[6] = A7;
            
            if (L == 3)
                HSZMIN[6] = A7;
            
            if (L == 4)
                HSZMAX[6] = A7;
            
            if (L == 5)
                TAKF1 [6] = A7;
            
            if (L == 6)
                TAKFZ [6] = A7;
            
        label160:
            if (IZ4 == 0)
                goto label150;
            
            if (L == 1)
                FZUSCH = FZUSCH + 1000.0;
            
            if (L == 2)
                FZUSCH = FZUSCH + 200.0;
            
            if (L == 3)
                FZUSCH = FZUSCH + 30.0;
            
            if (L == 4)
                FZUSCH = FZUSCH + 4.0;
            
        label150:
            if (TALMAX[L] == 0.0)
                TALMAX[L] = FZUSCH;
            KT5END = IZ2;
            HS1MIN[IZ2] = A1;
            HS1MAX[IZ2] = A2;
            HSZMIN[IZ2] = A3;
            HSZMAX[IZ2] = A4;
            
            if (IZ1 > 0 && IZ1 < 9)
                goto label100;

        label1811:
            STFZ = NSTFZ[J];
            NTAKEN = (int)(TALMAX[KT5END]);
            
            for(IZ2 = 1; IZ2 <= KT5END; IZ2++)      //DO 1802 IZ2 = 1,KT5END
            {
                TASAX[IZ2] = TASAXE[IZ2];
                
                if (IZ2 == KT5END)
                    goto label1803;
                
                IZWX[IZ2] = (int)(0.5+ STFZ / TALMIN[KT5END] * (TALMIN[IZ2] + TALMAX[IZ2])/2.0);
                continue;
                
            label1803:
                IZWX[IZ2] = (int)NSTFZ[J];
                goto label1804;
            }   //1802 CONTINUE

        label1804:
            A8 = STFZ - 1.0;
            A10 = HS1MAX[1];
            A9 = HSZMAX[KT5END];
            
            if (A8 > 0.0)
                A9 = (A9-A10)/A8;

            I1 = I;
            IN = I + (int)NSTFZ[J] - 1;
            KT14 = 1;
            A3 = 0.0;
            IZ2 = 1;
            
            for(I = I1; I <= IN; I++)   //DO 1805 I = I1,IN
            {
                UWA010(I,1);
                LS[I] = A3*A9 + A10;
                A3 = A3 + 1.0;
                KT4 = 1;
                ITRO = I1 + IZWX[IZ2]-1;

                if (ITRO < (I+1))
                    KT4 = 2;

                if (ITRO >= I)
                    goto label1806;
                
                IZ2 = IZ2 + 1;
                KT4 = 1;
                
            label1806:
                KT14 = IZ2;
                KT15 = (int)NTAPRF[IZ2];
                OEFFNG[I] = TAOEFF[IZ2];
                BRTLE[I] = 10.0 + 0.2 *LS[I];
                BRTLA[I] = BRTLE[I];
                UWA010(I,2);
            }   //1805 CONTINUE

            IZ1 = J;
            UWA006("WDISC", 53, IZ1);
            UWA006("WDISC", 56, IZ1);

            if(LIGHT[1] == 1)
                UWA012();

            UWA006("WDISC", 52,JJ);
            UWA006("WDISC", 59,JJ);
            goto label100;

        label1782:
            K3 = K3 +10;
            
        label1781:
            //DECODE(4, 1820, CORE) 
            IZ1 = Convert.ToInt32(CORE.Substring(3,1));
            
            IZ2 = 4;
            IZ3 =6;
            
            if (IZ1 > 1)
                goto label1807;
            
            IZ2 = 1;
            IZ3 = 3;
            ANZAST= K3 +NASTZW;

            UWA006("RDISC", 54,ANZAST);
        
        label1807:
            //DECODE(79, 1820,CORE)
            IZ1 = Convert.ToInt32(CORE.Substring(3,1));
            int a = 4;
            for( L = IZ2; L <= IZ3; L++)
            {
                NDIART[L] = Convert.ToDouble(CORE.Substring(a,1));
                DMAST[L] = Convert.ToDouble(CORE.Substring(a+1,4));
                SPAST[L] = Convert.ToDouble(CORE.Substring(a+5,3));
                ZZAST[L] = Convert.ToDouble(CORE.Substring(a+8,4));
                DITEIL[L] = Convert.ToDouble(CORE.Substring(a+12,3));
                PNAST[L] = Convert.ToDouble(CORE.Substring(a+15,5));
                LTGAB[L,ANZAST] = Convert.ToInt32(CORE.Substring(a+20,2));
                a = a + 22;
                //,L= IZ2,IZ3)
            }   //1820 FORMAT (3X,I1,3(A1,F4.0,F3.2,F4.1,F3.2,F5.0,I2))

            for(L = IZ2; L <= IZ3; L++) //DO 71 L=IZ2,IZ3
            {
                A1 = PNAST[L] - 900.0;
                
                if (A1 >= 0.0) 
                    continue;
                
                PNAST[L] = PNAST[L] /GP;
            }       //71 CONTINUE
            
            if (K3 == 1 && M1D != 0) 
                goto label50;

            if (K3 == 2 && M2D != 0)
                goto label60;
            
        label70:
            if(IZ1 == 1) 
                goto label100;
            IZ2 = 1;

            int LSAM = ILTG[ANZAST];
            
            for(L = 1; L <= 12; L++)    //DO 1809 L= 1,12
            {
                if (LTGSAM[L,LSAM] != 0) 
                    continue;
                
                IZ4 = (int)LTGAB[IZ2,ANZAST];
                
                if (IZ4 == 0) 
                    goto label1810;
                
                ILTG[IZ4] = ISTOBU[ANZAST];
                LTGSAM[L,LSAM] = -IZ4;
                IZ2 = IZ2 +1;
            }   //1809 CONTINUE
            
        label1810:
            IZ2 = IZ2 -1;
            
            for(L = 1; L <= IZ2; L++)   //DO 1808 L= 1,IZ2
            {
                if (NDIART[L] != KBLNC) 
                    goto label1817;

                goto label1850;

            label1817:
                if (NDIART[L] != KARTL) 
                    goto label1816;

                if (DITEIL[L] != 0.0) 
                    goto label1822;
                
                DITEIL[L] = 3.75;
                
                A8 = (ZZAST[L] - 2.0*2.5 - 2.0)/(2.0*3.75) + 1.0;
                IZ4 = (int)(A8);
                ZZAST[L] = 2.0 * IZ4 * 3.75;
                
            label1822:
                A8 = DITEIL[L]/SPAST[L];
                A8 = 0.4055 + (0.808-0.009*A8) * Math.Log(A8/5.0);
                A8 = Math.Exp(A8);
                A9 = ZZAST[L];
                ZZAST[L] = ZZAST[L] + 1000.0;
                
            label1821:
                FASTB[L] = 11.20E-06 * A8 * DMAST[L] * SPAST[L] * Math.Sqrt(SPAST[L]/A9 );
                FASTB[L] = -FASTB[L];
                continue;
                
            label1816:
                if (NDIART[L] != KARTS) 
                    goto label1830;
                
                if (DITEIL[L] != 0.0) 
                    goto label1826;
                DITEIL[L] = 3.30;
                A8 = (ZZAST[L] - 2.0*4.75 - 2.6 - 0.6)/(2.0*2.6) + 1.0;
                IZ4 = (int)(A8);
                ZZAST[L] = 2.0 * IZ4 * 2.6;
                
            label1826:
                A8 = DITEIL[L]/SPAST[L];
                A8 = 0.8755 + 0.3945*Math.Pow((Math.Abs(Math.Log(A8/3.8))),1.8267);
                A8 = Math.Exp(A8);
                A9 = ZZAST[L];
                ZZAST[L] = ZZAST[L] + 2000.0;
                goto label1821;
                
            label1830:
                if (NDIART[L] != KARTD) 
                    goto label1840;

                if (DITEIL[L] != 0.0) 
                    goto label1831;

                DITEIL[L] = 4.00;
                A8 = (ZZAST[L] - 2.0*2.5 - 2.0)/4.00 + 1.0;
                IZ8 = (int)A8;
                ZZAST[L] = IZ4 * 4.00;
                
            label1831:
                A8 = DITEIL[L]/SPAST[L];
                A8 = 1.1632 + 0.1317*Math.Pow((Math.Abs(Math.Log(A8/4.2))),2.0);
                A8 = Math.Exp(A8);
                A9 = ZZAST[L];
                ZZAST[L] = ZZAST[L] + 3000.0;
                goto label1821;

            label1840:
                sw16.WriteLine("0*** FALSCHE DICHTUNGSART ***");
                Console.WriteLine("0*** FALSCHE DICHTUNGSART ***");
                KFELER =12;
                goto label101;
            
            label1850:
                FASTB[L] = 6.720E-06 * DMAST[L]*SPAST[L]/Math.Pow(ZZAST[L],0.46);
            }   //1808 CONTINUE
            ILTG[ANZAST] = 0;

            UWA006("WDISC", 54,ANZAST);
            goto label100;

        label50:
            A1 = ZWFLUT;
            UWA085(ref ZWFLUT, ref M1, ref M1D, ref M1V);
            
            for(L = 1; L <= 3; L++)     //DO 51 L=1,3
                SPAST[L] = ZWFLUT;
            DMAST[1] = M1;
            DMAST[2] = M1D;
            DMAST[3] = M1V;
            ZWFLUT = A1;
            goto label70;

        label60:
            M1 = M2;
            M1D = M2D;
            M1V = M2V;
            goto label50;

        label1000:
            if (QTROM)
                goto label1001;
            UWA006("WDISC", 55,1);
            
            if (LIGHT[1] == 1) 
                UWA012();
            LIGHT[10] = 1;
            UWA006("RDISC", 50,1);
            UWA006("RDISC", 58,1);
            UWA006("RDISC", 51,1);
            QTROM = true;
            LLTG[7] = (int)NFLUT;
            
            for(L = 1; L <= 11; L++)    //DO 1002 L=1,11
            {
                LTGWT1[L] = 0;
                LTGWT2[L] = 0;
                LTGWT3[L] = 0;
                LTGWT4[L] = 0;
            }   //1002 CONTINUE
            
            INDDTX = 0;
            I = 0;
            J = 0;
            
        label1001:
            //goto label(1010,1020,1030,1040),
            if(K3 == 1)     goto label1010;
            if(K3 == 2)     goto label1020;
            if(K3 == 3)     goto label1030;
            if(K3 == 4)     goto label1040;

        label1010:
            //DECODE(40, 1015,CORE)
            NVORW = Convert.ToInt32(CORE.Substring(3,2));
            NVWHD = Convert.ToInt32(CORE.Substring(5,1));
            NVWAND = Convert.ToInt32(CORE.Substring(6,1));
            PEND0 = Convert.ToDouble(CORE.Substring(7,6));
            DPENTG = Convert.ToDouble(CORE.Substring(13,4));
            TENTG0 = Convert.ToDouble(CORE.Substring(17,5));
            PEMIN = Convert.ToDouble(CORE.Substring(22,5));
            KENTG = Convert.ToInt32(CORE.Substring(27,1));
            PROZ = Convert.ToDouble(CORE.Substring(28,4));
            DPHD = Convert.ToDouble(CORE.Substring(32,4));
            DPND = Convert.ToDouble(CORE.Substring(36,4));
            //1015 FORMAT (3X,I2,2I1,F6.0,F4.0,2F5.0,I1,3F4.0)

            PEND0 = PEND0/GP;
            DPENTG = DPENTG/GP;
            PEMIN = PEMIN/GP;
            DPHD = DPHD/GP;
            DPND = DPND/GP;
            PENTG = 0.0;
            NVOR = NVORW;
            ITURB[5] = (int)NVWHD;
            TENTG = TENTG0 + 273.15;

            if (TENTG0 == 0.0)
                goto label1011;
            
            if (TENTG0 < 50.0)
                TENTG = UW0011(TENTG0/GP,1);
            
            TENTG0=TENTG;
            PENTG0=UW0011(TENTG0,2);
            PENTG=PENTG0;

            if (KENTG == 1 && PEMIN == 0.0)
                PEMIN=1.0;
            
            if (PROZ == 0.0)
                PROZ=1.0;
            
            if (KENTG != 2) 
                goto label1011;

            PENTG=PENTG/PROZ;
            
            if (PEMIN == 0.0)
                PEMIN = PENTG0;
            
        label1011:
            if (DPHD == 0.0)
                DPHD = 1.0;
            
            if (DPND == 0.0)
                DPND = 0.5;
            
            if (PEND0 == 0.0 && NVORW == 0)
                goto label100;
            
            if (PEND0 < 1.0 && NVORW > 0)
                TEND0=(NVORW)*25.0+312.15;
            
            if (PEND0 >= 1.0)
                TEND0=UW0011(PEND0,1);
            IZ1 = 0;
            IZ2 = 1;
            IZ3 = 0;
            IZ4 = 0;
            
            if (PEND0 < 1.0)
                PEND0 = UW0011(TEND0,2);
            
            if (NVORW <= 0) 
                goto label106;
            
            PENTN0[(int)NVORW] = PEND0;
            PLTG[(int)NVORW] = PEND0;

            UWA008("PACK", NRTRB[(int)NVORW], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
            
        label106:
            if (NVWHD <= 0) 
                goto label107;
            
            L = (int)(NVORW - NVWHD);
            PENTN0[L] = PENTG;
            PLTG [L] = PENTG;
            UWA008("PACK", NRTRB[L], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
            
        label107:
            if (NVOR <= NVWAND) 
                goto label100;
            
            if (NVWAND <= 0) 
                goto label100;
            L = NVWAND + 1;
            IZ3 = NTTETB[1] - 1;
            
            if (IZ3 <= 0) 
                goto label100;
            
            IZ4 = ITTEND[IZ3];
            UWA008("PACK", NRTRB[L], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
            PENTN0[L] = PNE[IZ3];
            goto label100;

        label1020:
            //DECODE(80, 1025,CORE)
            A1 = Convert.ToDouble(CORE.Substring(3,6));
            A2 = Convert.ToDouble(CORE.Substring(9,6));
            A3 = Convert.ToDouble(CORE.Substring(15,6));
            A4 = Convert.ToDouble(CORE.Substring(21,6));
            LLTG[1] = Convert.ToInt32(CORE.Substring(28,2));
            LLTG[2] = Convert.ToInt32(CORE.Substring(30,2));
            LLTG[3] = Convert.ToInt32(CORE.Substring(32,2));
            LLTG[4] = Convert.ToInt32(CORE.Substring(34,2));
            LLTG[5] = Convert.ToInt32(CORE.Substring(36,2));
            LLTG[6] = Convert.ToInt32(CORE.Substring(38,2));
            LLTG[7] = Convert.ToInt32(CORE.Substring(40,2));
            LLTG[8] = Convert.ToInt32(CORE.Substring(42,2));
            LLTG[9] = Convert.ToInt32(CORE.Substring(44,2));
            LLTG[10] = Convert.ToInt32(CORE.Substring(46,2));
            LLTG[11] = Convert.ToInt32(CORE.Substring(48,2));
            LLTG[12] = Convert.ToInt32(CORE.Substring(50,2));
            LLTG[13] = Convert.ToInt32(CORE.Substring(52,2));
            LLTG[14] = Convert.ToInt32(CORE.Substring(54,2));
            LLTG[15] = Convert.ToInt32(CORE.Substring(56,2));
            LLTG[16] = Convert.ToInt32(CORE.Substring(58,2));
            LLTG[17] = Convert.ToInt32(CORE.Substring(60,2));
            QTLES = Convert.ToBoolean(CORE.Substring(79,1));
            //1025 FORMAT (3X,4F6.0,1X,17I2,17X,A1)
            
            STWRT1 = LLTG[17];
            STWRT2 = LLTG[16];
            ISCHWR = 0;
            
            if (LLTG[14] == 4)
                ISCHWR = 1;
            
            if (ISCHWR == 1)
                LLTG[14] = 3;
            
            STZHD2[1] = LLTG[10];
            
            if (LLTG[7] == 0) 
                LLTG[7] = (int)NFLUT;
            L = 0;
            
            if (A4 != 0.0)
                L = L + 1;
            
            if (A4 != 0.0) GPMIN[L] = A4;
            if (A3 != 0.0) L = L + 1;
            if (A3 != 0.0) GPMIN[L] = A3;
            if (A2 != 0.0) L = L + 1;
            if (A2 != 0.0) GPMIN[L] = A2;
            if (A1 != 0.0) L = L + 1;
            if (A1 != 0.0) GPMIN[L] = A1;
            
            for(L = 1; L <= 4; L++)     //DO 1021 L=1,4
                if (GPMIN[L] > 1.0)
                    GPMIN[L] = GPMIN[L]*GM;     //1021 CONTINUE
            
            LLTG[33]=LLTG[1];
            goto label100;

        label1030:
            //DECODE(80,1031,CORE) 
            LTGWT1[1] = Convert.ToInt32(CORE.Substring(3,4));
            LTGWT2[1] = Convert.ToInt32(CORE.Substring(7,3));
            LTGWT1[2] = Convert.ToInt32(CORE.Substring(10,4));
            LTGWT2[2] = Convert.ToInt32(CORE.Substring(14,3));
            LTGWT1[3] = Convert.ToInt32(CORE.Substring(17,4));
            LTGWT2[3] = Convert.ToInt32(CORE.Substring(21,3));
            LTGWT1[4] = Convert.ToInt32(CORE.Substring(24,4));
            LTGWT2[4] = Convert.ToInt32(CORE.Substring(28,3));
            LTGWT1[5] = Convert.ToInt32(CORE.Substring(31,4));
            LTGWT2[5] = Convert.ToInt32(CORE.Substring(35,3));
            LTGWT1[6] = Convert.ToInt32(CORE.Substring(38,4));
            LTGWT2[6] = Convert.ToInt32(CORE.Substring(42,3));
            LTGWT1[7] = Convert.ToInt32(CORE.Substring(45,4));
            LTGWT2[7] = Convert.ToInt32(CORE.Substring(49,3));
            LTGWT1[8] = Convert.ToInt32(CORE.Substring(52,4));
            LTGWT2[8] = Convert.ToInt32(CORE.Substring(56,3));
            LTGWT1[9] = Convert.ToInt32(CORE.Substring(59,4));
            LTGWT2[9] = Convert.ToInt32(CORE.Substring(63,3));
            LTGWT1[10] = Convert.ToInt32(CORE.Substring(66,4));
            LTGWT2[10] = Convert.ToInt32(CORE.Substring(70,3));
            LTGWT1[11] = Convert.ToInt32(CORE.Substring(73,4));
            LTGWT2[11] = Convert.ToInt32(CORE.Substring(77,3));
            //1031 FORMAT(3X,11(I4,I3))
            goto label100;

        label1040:
            //DECODE(80,1031,CORE) (LTGWT3[L],LTGWT4[L],L=1,11)
            LTGWT3[1] = Convert.ToInt32(CORE.Substring(3,4));
            LTGWT4[1] = Convert.ToInt32(CORE.Substring(7,3));
            LTGWT3[2] = Convert.ToInt32(CORE.Substring(10,4));
            LTGWT4[2] = Convert.ToInt32(CORE.Substring(14,3));
            LTGWT3[3] = Convert.ToInt32(CORE.Substring(17,4));
            LTGWT4[3] = Convert.ToInt32(CORE.Substring(21,3));
            LTGWT3[4] = Convert.ToInt32(CORE.Substring(24,4));
            LTGWT4[4] = Convert.ToInt32(CORE.Substring(28,3));
            LTGWT3[5] = Convert.ToInt32(CORE.Substring(31,4));
            LTGWT4[5] = Convert.ToInt32(CORE.Substring(35,3));
            LTGWT3[6] = Convert.ToInt32(CORE.Substring(38,4));
            LTGWT4[6] = Convert.ToInt32(CORE.Substring(42,3));
            LTGWT3[7] = Convert.ToInt32(CORE.Substring(45,4));
            LTGWT4[7] = Convert.ToInt32(CORE.Substring(49,3));
            LTGWT3[8] = Convert.ToInt32(CORE.Substring(52,4));
            LTGWT4[8] = Convert.ToInt32(CORE.Substring(56,3));
            LTGWT3[9] = Convert.ToInt32(CORE.Substring(59,4));
            LTGWT4[9] = Convert.ToInt32(CORE.Substring(63,3));
            LTGWT3[10] = Convert.ToInt32(CORE.Substring(66,4));
            LTGWT4[10] = Convert.ToInt32(CORE.Substring(70,3));
            LTGWT3[11] = Convert.ToInt32(CORE.Substring(73,4));
            LTGWT4[11] = Convert.ToInt32(CORE.Substring(77,3));
            goto label100;

        label1300:
            //DECODE(79, 1310,CORE)
            LABT[1] = Convert.ToInt32(CORE.Substring(3,3));
            IZWZ[1] = Convert.ToInt32(CORE.Substring(6,1));
            IZWX[1] = Convert.ToInt32(CORE.Substring(7,2));
            GABT[1] = Convert.ToDouble(CORE.Substring(9,7));
            PABT[1] = Convert.ToDouble(CORE.Substring(16,6));
            QGAE[1] = Convert.ToBoolean(CORE.Substring(22,1));
            EABT[1] = Convert.ToDouble(CORE.Substring(23,5));
            LABT[2] = Convert.ToInt32(CORE.Substring(28,3));
            IZWZ[2] = Convert.ToInt32(CORE.Substring(31,1));
            IZWX[2] = Convert.ToInt32(CORE.Substring(32,2));
            GABT[2] = Convert.ToDouble(CORE.Substring(34,7));
            PABT[2] = Convert.ToDouble(CORE.Substring(41,6));
            QGAE[2] = Convert.ToBoolean(CORE.Substring(47,1));
            EABT[2] = Convert.ToDouble(CORE.Substring(48,5));
            LABT[3] = Convert.ToInt32(CORE.Substring(53,3));
            IZWZ[3] = Convert.ToInt32(CORE.Substring(56,1));
            IZWX[3] = Convert.ToInt32(CORE.Substring(57,2));
            GABT[3] = Convert.ToDouble(CORE.Substring(59,7));
            PABT[3] = Convert.ToDouble(CORE.Substring(66,6));
            QGAE[3] = Convert.ToBoolean(CORE.Substring(72,1));
            EABT[3] = Convert.ToDouble(CORE.Substring(73,5));
            ITRB = Convert.ToInt32(CORE.Substring(78,1));
            //1310 FORMAT (3X,3(I3,I1,I2,F7.0,F6.0,A1,F5.0),I1)
            
            for(L = 1; L <= 3; L++)     //DO 1302 L=1,3
            {
                if (LABT[L] == 0) 
                    goto label1302;
                if (LABT[L] > 69 && LABT[L] < 93) 
                    goto label1305;

                GABT[L] = GABT[L]*GM;
                PABT[L] = PABT[L]/GP;
                
                if (!QGAE[L])
                    goto label1301;
                
                EABT[L] = UWA003("TABS", EABT[L]);
                
                if (PABT[L] > 0 && EABT[L] != 0.0)
                    EABT[L] = VISUM(PABT[L],EABT[L],01);

            label1301:
                K1 = (int)Math.Abs(LABT[L]);
                
                if(!QGAE[L])
                    EABT[L] = EABT[L]/GI;
                
                if (ITRB == 0) 
                    goto label1303;
                
                KFELER = 5;
                
                if (K1 < 1 || K1 > 160) 
                    goto label101;
                
                if (K1 > 46) 
                    goto label1303;

                PENTN0[K1] = PABT[L];
                K2 = 1;
                
                if (LABT[L] < 0) 
                    K2 = 0;

                UWA008("PACK", NRTRB[K1], ref K2, ref ITRB, ref IZWZ[L], ref IZWX[L]);
                
            label1303:
                if (K1 > 160) 
                    goto label1304;
                GLTG[K1] = GABT[L];
                PLTG[K1] = PABT[L];
                ELTG[K1] = EABT[L];
                goto label1302;
                
            label1304:
                if (K1 < 201 || K1 > 204) 
                    goto label101;
                K1 = K1 - 200;
                GMINTT[K1] = GABT[L];
                goto label1302;
                
            label1305:
                for(IZ1 = 1; IZ1 <= 15; IZ1++)      //DO 1307 IZ1 = 1,15
                {
                    for(IZ2 = 1; IZ2 <= 6; IZ2++)   //DO 1306 IZ2 = 1,6
                    {
                        if (LABT[L] != LTGAB[IZ2,IZ1])
                            continue;
                        
                        UWA006("RDISC", 54, IZ1);
                        PNAST[IZ2] = PABT[L];
                        
                        if (PABT[L] < 900.0)
                            PNAST[IZ2] = PABT[L]/GP;
                        
                        UWA006("WDISC", 54,IZ1);
                        goto label1302;
                    }   //1306 CONTINUE
                }   //1307 CONTINUE
            label1302:  ;
            }

            goto label100;

        label1100:
            IZ1 = 10*K2 + K3;
            if (IZ1 > 89) 
                goto label104;
            I = I + 1;
            KFELER = 7;
            
            if (IZ1 != I)
                goto label101;
            
            //DECODE(80, 1110,CORE);
            J1 = Convert.ToInt32(CORE.Substring(0,1));
            KK = Convert.ToInt32(CORE.Substring(1,2));
            NTYP[I] = Convert.ToInt32(CORE.Substring(3,2));
            N1[I] = Convert.ToInt32(CORE.Substring(5,3));
            N2[I] = Convert.ToInt32(CORE.Substring(8,3));
            NBLTG[I,1] = Convert.ToInt32(CORE.Substring(11,3));
            NBLTG[I,2] = Convert.ToInt32(CORE.Substring(14,3));
            NBLTG[I,3] = Convert.ToInt32(CORE.Substring(17,3));
            NBLTG[I,4] = Convert.ToInt32(CORE.Substring(20,3));
            NBLTG[I,5] = Convert.ToInt32(CORE.Substring(23,3));
            NBLTG[I,6] = Convert.ToInt32(CORE.Substring(26,3));
            NBLTG[I,7] = Convert.ToInt32(CORE.Substring(29,3));
            NBLTG[I,8] = Convert.ToInt32(CORE.Substring(32,3));
            PWA[I] = Convert.ToInt32(CORE.Substring(35,8));
            DTS[I] = Convert.ToInt32(CORE.Substring(43,6));
            DTK[I] = Convert.ToInt32(CORE.Substring(49,6));
            NN1[I] = Convert.ToInt32(CORE.Substring(55,3));
            NN2[I] = Convert.ToInt32(CORE.Substring(58,3));
            KREIHE[I] = Convert.ToInt32(CORE.Substring(61,2));
            QBZWM[I] = Convert.ToInt32(CORE.Substring(63,8));
            KATZE1[I] = Convert.ToInt32(CORE.Substring(71,1));
            VERLP[I] = Convert.ToInt32(CORE.Substring(72,3));
            KATZE2[I] = Convert.ToInt32(CORE.Substring(75,1));
            VERLE[I] = Convert.ToInt32(CORE.Substring(76,3));
            KRUECK[I] = Convert.ToInt32(CORE.Substring(79,1));
            //1110 FORMAT (A1,2I2,10I3,F8.0,2F6.0,2I3,I2,F8.0,2(I1,F3.0),I1)
            N = (int)NTYP[I];
            LTYP[I] = N;
            NTYP0[I] = N;
            
            if (I < 31)
                NA[I] = N1[I];
            
            if (N == 22 && J1 == KARTH) 
                LLTG[18] = 1;

            if (PWA[I] > 0.0)
                PWA[I] = PWA[I]/GP;
            
            if (N == 3 && PWA[I] < 0.0)
                PWA[I] = PWA[I]/GP;
            
            PW[I] = PWA[I];

            if (N == 3 && DTS[I] > 100.0 || N == 4 || N == 6 || N == 7 || N == 9 || N == 11 && DTS[I] > 100.0 || N == 13 || N == 15.0 && DTS[I] > 100.0 || N == 22) 
                DTS[I] = DTS[I]/GI;

            if (N == 1 && DTK[I] != 0.0) DTK[I] = DTK[I]/GP;
            if (N == 3 && DTK[I] < 0.0) DTK[I] = DTK[I]/GI;
            if (N == 15 && DTK[I] < 0.0) DTK[I] = DTK[I]/GI;
            if (N == 2 || N == 21) DTKT[I]= DTK[I];

            if (N != 6 && N != 22 && VERLP[I] > 100.0)
                VERLP[I] = VERLP[I]/10.0;

            if (N == 13 && (KATZE1[I] == 1 || KATZE1[I] == 3))
                VERLP[I] = VERLP[I]/GP;

            if (N != 22 && VERLE[I] > 100.0)
                VERLE[I] = VERLE[I]/10.0;
            
            if (N == 6) 
                VERLE[I] = VERLE[I]*GM;
            
            if (N == 22)
                VERLE[I] = VERLE[I]/100.0;
            
            if ((N == 1 || N == 2 || N == 3 || N == 5 || N == 7 || N == 10 || N == 11 || N == 15 || N == 19 || N == 21) && KATZE2[I] == 1)
                VERLE[I] = VERLE[I]/GI;
            
            if ((N == 1 || N == 2 || N == 3 || N == 5 || N == 7 || N == 10 || N == 11 || N == 15 || N == 19 || N == 21) && KATZE2[I] == 2)
                VERLE[I] = 1.0-VERLE[I]/100.0;
            
            if (N == 7 && KATZE2[I] >= 3)
                VERLE[I] = VERLE[I]/GI;

            if (N == 3 && DTS[I] <= 100.0)
                SSTEU[I] = DTS[I];
            if (N == 15 && DTS[I] <= 100.0)
                SSTEU[I] = DTS[I];
            if (N == 7 || N == 8 || N == 18)
                SSTEU[I] = PW[I];
            if (N == 11)
                SSTEU[I] = DTS[I];
            if (N == 19 || N == 23)
                SSTEU[I] = PW[I];

            if (N == 0)
                QBZWM[I] = QBZWM[I]/GP;
            
            if (N == 1 && QBZWM[I] >= 0.0)
                QBZWM[I] = QBZWM[I]*GM;
            
            if (N == 6 || N == 7 || N == 8 || N == 11 || N == 16 || N == 18)
                QBZWM[I] = QBZWM[I]*GM;
            if (N == 9 || N == 10)
                QBZWM[I] = QBZWM[I]*1000.0*GW;
            if (N == 22 && KRUECK[I] == 0)
                QBZWM[I] = QBZWM[I]*1000.0*GW;
            if (N == 22 && KRUECK[I] == 1)
                QBZWM[I] = QBZWM[I]*GM;

            if (N == 1 || N == 10)
                EKONDW[I] = PW[I];
            if (N == 3 || N == 15)
                EKONDW[I] = DTS[I];

            if (N == 5) 
                DEKOND[I] = DTK[I]/GI;
            if (N == 11 && DTS[I] <= 100.0)
                DEKOND[I] = DTS[I];
            if (N == 19 || N == 23)
                DEKOND[I] = DTS[I];

            if (N == 1 && KRUECK[I] > 1)
                IPUMP[I] = 1;
            if (N == 1 && KRUECK[I] == 2)
                KRUECK[I] = 0;
            if (N == 1 && KRUECK[I] == 3)
                KRUECK[I] = 1;
            if ((N == 2 || N == 21) && KRUECK[I] > 1 && KRUECK[I] < 6)
                IPUMP[I] = 1;
            if ((N == 2 || N == 21) && KRUECK[I] > 1 && KRUECK[I] < 4)
                KRUECK[I] = KRUECK[I] - 2;
            if ((N == 2 || N == 21) && KRUECK[I] > 3 && KRUECK[I] < 6)
                INDDT[I] = 0;
            if ((N == 2 || N == 21) && KRUECK[I] > 3 && KRUECK[I] < 6)
                KRUECK[I] = KRUECK[I] - 4;
            if (N == 3 || N == 15)
                IPUMP[I] = 1;
            if (N == 3 && NBLTG[I,1] != 0)
                IPUMP[I] = NBLTG[I,1];
            if (N == 3 && NBLTG[I,1] != 0) 
                NBLTG[I,1] = 0;
            if (N == 15 && NBLTG[I,1] != 0)
                IPUMP[I] = NBLTG[I,1];
            if (N == 15 && NBLTG[I,1] != 0)
                NBLTG[I,1] = 0;

            if (N == 7 && NBLTG[I,1] != 0)
                IDRUCK = NBLTG[I,1];
            if (N == 7 && NBLTG[I,1] != 0)
                NDRUCK = I;
            if (N == 7 && NBLTG[I,1] != 0) 
                NBLTG[I,1]= 0;

            if (N != 2 && N != 5 && N != 11 && N != 12 && N != 19 && N != 21)
                goto label1101;
            J = J + 1;
            INDDT[I] = J;
            INDDTX = J;

        label1101:
            if (J1 == KARTN) 
                goto label1102;
            
            if (N == 1)
                KREIHE[I] = N1[I];
            
            goto label1104;
            
        label1102:
            if (KREIHE[I] == 0) 
                goto label1103;
            KREIHE[I] = IHENDE + KREIHE[I];
            goto label1105;
            
        label1103:
            KREIHE[I] = I;
            goto label1105;
            
        label1104:
            IHENDE = I;
            
        label1105:
            INENDE = I;

            if (N != 3 && N != 15) 
                goto label100;

            JJ = (int)N2[I];
            
            if (JJ == 0) 
                goto label100;
            
            if (PLTG[JJ] == 0.0)
                PLTG[JJ] = PKOND1;
            ELTG[JJ] = DTS[I];
            goto label100;
            
        label104:
            if (LIGHT[1] == 1) 
                UWA012();
            
            goto label100;
            
        label1200:
            IZ2 = K2;
            IZ1 = K3;
            //GOTO(7001,7002,7003,7004),
            if(IZ2 == 1)    goto label7001;
            if(IZ2 == 2)    goto label7002;
            if(IZ2 == 3)    goto label7003;
            if(IZ2 == 4)    goto label7004;
            
        label7001:
            //DECODE(80, 7005,CORE)
            ETWK [IZ1] = Convert.ToDouble(CORE.Substring(3,5));
            EWKEFF[IZ1] = Convert.ToDouble(CORE.Substring(8,7));
            EWKZUK[IZ1] = Convert.ToDouble(CORE.Substring(15,5));
            EVROR [IZ1] = Convert.ToDouble(CORE.Substring(20,4));
            ELROR [IZ1] = Convert.ToDouble(CORE.Substring(24,5));
            EDAROR[IZ1] = Convert.ToDouble(CORE.Substring(29,5));
            EDSROR[IZ1] = Convert.ToDouble(CORE.Substring(34,4));
            EKULF [IZ1] = Convert.ToDouble(CORE.Substring(38,7));
            ESPZRZ[IZ1] = Convert.ToDouble(CORE.Substring(45,5));
            EBKNDM[IZ1] = Convert.ToDouble(CORE.Substring(50,5));
            ETHOR [IZ1] = Convert.ToDouble(CORE.Substring(55,4));
            ETVER [IZ1] = Convert.ToDouble(CORE.Substring(59,4));
            EKOKE [IZ1] = Convert.ToDouble(CORE.Substring(63,5));
            EHVOR [IZ1] = Convert.ToDouble(CORE.Substring(68,5));
            ZKONDE[IZ1] = Convert.ToDouble(CORE.Substring(73,1));
            ZFLUTE[IZ1] = Convert.ToDouble(CORE.Substring(74,1));
            MAFGWE[IZ1] = Convert.ToInt32(CORE.Substring(75,1));
            NWASKE[IZ1] = Convert.ToInt32(CORE.Substring(76,1));
            KTFAC[IZ1] = Convert.ToInt32(CORE.Substring(77,1));
            IKONDR[IZ1] = Convert.ToInt32(CORE.Substring(78,1));
            NKPARA[IZ1] = Convert.ToInt32(CORE.Substring(79,1));
            //7005 FORMAT (3X,F5.0,F7.0,F5.0,F4.0,2F5.0,F4.0,F7.0,F5.0,F5.0,2F4.0,F5.0,F5.0,2F1.0,5I1)

            EWKEFF[IZ1] = EWKEFF[IZ1]*GM;
            if (EDAROR[IZ1] == 0.0)
                EDAROR[IZ1]= 23.0;
            if (EDSROR[IZ1] == 0.0)
                EDSROR[IZ1]= 1.0;
            if (ETHOR [IZ1] == 0.0)
                ETHOR[IZ1] = 10.0;
            if (ETVER [IZ1] == 0.0)
                ETVER[IZ1] = 10.0;
            if (ZKONDE[IZ1] == 0.0)
                ZKONDE[IZ1]= FLUTEN[IZ1]/2.0;
            if (ZKONDE[IZ1] < 1.0)
                ZKONDE[IZ1] = 1.0;
            if (ZFLUTE[IZ1] == 0.0)
                ZFLUTE[IZ1]= 2.0;
            FWERST[1] = 0.0;
            FWERST[2] = 0.0;
            FWERST[3] = 0.0;
            FWERST[4] = 0.0;
            DELTKO = 0.0;
            FRADIO = 0.0;
            GVERWL = 0.0;
            TVERWL = 0.0;
            NOPTKO = 00;
            goto label7029;

        label7002:
            //DECODE(49, 7006,CORE)
            string RORWE = CORE.Substring(5,4);
            FWERST[1] = Convert.ToDouble(CORE.Substring(9,5));
            FWERST[2] = Convert.ToDouble(CORE.Substring(14,5));
            FWERST[3] = Convert.ToDouble(CORE.Substring(19,5));
            FWERST[4] = Convert.ToDouble(CORE.Substring(24,5));
            DELTKO = Convert.ToDouble(CORE.Substring(29,4));
            FRADIO = Convert.ToDouble(CORE.Substring(33,4));
            GVERWL = Convert.ToDouble(CORE.Substring(37,7));
            TVERWL = Convert.ToDouble(CORE.Substring(44,4));
            NOPTKO = Convert.ToInt32(CORE.Substring(48,1));
            //7006 FORMAT (5X,A4,4F5.0,F4.0,F4.0,F7.0,F4.0,I1)

            GVERWL = GVERWL*GM;
            
            for(IZ4 = 1; IZ4 <= 8; IZ4++)   //DO 7009 IZ4 = 1,8
            {
                NTYPKO = IZ4;
                
                if(RORWE == TEXTKO[IZ4]) 
                    goto label7010;
            }   //7009 CONTINUE
            
        label7029:
            NTYPKO = 1;
            
        label7010:
            TX1 = EDSROR[IZ1];
            //goto label(7011,7012,7013,7014,7015,7018,7017,7018),
            if(NTYPKO == 1)     goto label7011;
            if(NTYPKO == 2)     goto label7012;
            if(NTYPKO == 3)     goto label7013;
            if(NTYPKO == 4)     goto label7014;
            if(NTYPKO == 5)     goto label7015;
            if(NTYPKO == 6)     goto label7018;
            if(NTYPKO == 7)     goto label7017;
            if(NTYPKO == 8)     goto label7018;
            
        label7011:
            TX2 = (0.52405801E-02*TX1-0.10448516E-00)*TX1+0.11092823E+01;
            goto label7019;
        label7012: 
            TX2 = (0.73033927E-02*TX1-0.10947819E-00)*TX1+0.10933908E+01;
            goto label7019;
        label7013:
            TX2 = (0.10483114E-01*TX1-0.14919585E-00)*TX1+0.10773117E+01;
            goto label7019;
        label7014:
            TX2 = (0.14190510E-01*TX1-0.15758482E-00)*TX1+0.10709710E+01;
            goto label7019;
        label7015:
            TX2 = ((-0.99587429E-02*TX1+0.65336644E-01)*TX1-0.25386297E+00)*TX1+0.10510995E+01;
            goto label7019;
        label7017:
            TX2 = (0.80357143E-01*TX1 -0.35021429E-00)*TX1+0.10194286E+01;
            goto label7019;
        label7018: 
            TX2 = ((-0.11264363E-01*TX1+0.83644792E-01)*TX1-0.32607898E+00)*TX1+0.98468797E+00;

        label7019:
            for(IZ3 = 1; IZ3 <= 4; IZ3++)   // DO 7054 IZ3 = 1,4
                if (FWERST[IZ3] == 0.0)
                    FWERST[IZ3] = TX2;      //7054 CONTINUE
            
            if (DELTKO == 0.0)
                DELTKO = 2.5;
            
            if (FRADIO == 0.0)
                FRADIO = 1.0;
            
            if (TVERWL == 0.0)
                TVERWL = 3.0;
            
            goto label100;
            
        label7003:
            //DECODE(48, 7007,CORE)
            WKMIN = Convert.ToDouble(CORE.Substring(3,7));
            HKMUSS = Convert.ToDouble(CORE.Substring(10, 5));
            WHO = Convert.ToDouble(CORE.Substring(15, 4));
            ETAP = Convert.ToDouble(CORE.Substring(19, 4));
            ETAM = Convert.ToDouble(CORE.Substring(23, 4));
            WHOBY = Convert.ToDouble(CORE.Substring(27, 4));
            ETAPBY = Convert.ToDouble(CORE.Substring(31, 4));
            ETAMBY = Convert.ToDouble(CORE.Substring(35, 4));
            TBENU = Convert.ToDouble(CORE.Substring(39, 5));
            CKELER = Convert.ToDouble(CORE.Substring(44, 4));
            //7007 FORMAT (3X,F7.0,F5.2,6F4.1,F5.2,F4.0)
            
            if (HKMUSS == 0.0)  HKMUSS = 0.5;
            if (WHO == 0.0)     WHO = 10.0;
            if (ETAP == 0.0)    ETAP = 83.0;
            if (ETAM == 0.0)    ETAM = 96.0;
            if (ETAPBY == 0.0)  ETAPBY = 82.0;
            if (ETAMBY == 0.0)  ETAMBY = 92.0;
            if (WHOBY == 0.0)   WHOBY = 10.0;
            if (TBENU == 0.0)   TBENU = 1.35;
            if (CKELER == 0.0)  CKELER = 60.0;
            goto label100;
            
        label7004:
            //goto label(7021,7022,7023,7024),
            if(IZ1 == 1)    goto label7021;
            if(IZ1 == 2)    goto label7022;
            if(IZ1 == 3)    goto label7023;
            if(IZ1 == 4)    goto label7024;
            
        label7021:
            //DECODE(63, 7008,CORE)
            KC21 = Convert.ToDouble(CORE.Substring(3,10));
            KC1  = Convert.ToDouble(CORE.Substring(13,10));
            KC50 = Convert.ToDouble(CORE.Substring(23,10));
            KC23 = Convert.ToDouble(CORE.Substring(33,10));
            KC24 = Convert.ToDouble(CORE.Substring(43,10));
            KC25 = Convert.ToDouble(CORE.Substring(53,10));
            //7008 FORMAT (3X,6E10.4)
            
            if (KC21 == 0.0) 
                KC21 = 0.2560E+02;
            
            if (KC1 == 0.0)
                KC1 = 0.1401E+00;

            if (KC23 == 0.0)
                KC23 = 0.2540E+02;
            
            if (KC24 == 0.0)
                KC24 = 0.7070E+00;
            goto label100;
            
        label7022:
            //DECODE(33, 7008,CORE)
            RC2 = Convert.ToDouble(CORE.Substring(3, 10));
            RC3 = Convert.ToDouble(CORE.Substring(13, 10));
            RC4 = Convert.ToDouble(CORE.Substring(23, 10));

            if (RC2 == 0.0) RC2 = 0.3000E+03;
            if (RC3 == 0.0) RC3 = 0.1011E+00;
            if (RC4 == 0.0) RC4 =-0.2222E-06;
            goto label100;
            
        label7023:
            //DECODE(63, 7008,CORE)
            PC27 = Convert.ToDouble(CORE.Substring(3,10));
            PC5 = Convert.ToDouble(CORE.Substring(13,10));
            PC6 = Convert.ToDouble(CORE.Substring(23,10));
            PC7 = Convert.ToDouble(CORE.Substring(33,10));
            PC8 = Convert.ToDouble(CORE.Substring(43,10));
            PC9 = Convert.ToDouble(CORE.Substring(53,10));

            if (PC7 == 0.0) PC7 = 0.5000E+02;
            if (PC8 == 0.0) PC8 = 0.3519E+03;
            if (PC9 == 0.0) PC9 =-0.2135E+02;
            goto label100;
            
        label7024:
            //DECODE(33, 7008,CORE)
            WC20 = Convert.ToDouble(CORE.Substring(3,10));
            WC21 = Convert.ToDouble(CORE.Substring(13,10));
            WC22 = Convert.ToDouble(CORE.Substring(23,10));

            if (WC20 == 0.0) WC20 = 0.20E+03;
            if (WC21 == 0.0) WC21 = 0.74E-01;
            if (WC22 == 0.0) WC22 =-0.20E-06;
            goto label100;

        label1400:
            //DECODE(79,1410,CORE)
            I = Convert.ToInt32(CORE.Substring(1,2));
            IZ1 = Convert.ToInt32(CORE.Substring(3,2));
            A1 = Convert.ToDouble(CORE.Substring(5,6));
            A2 = Convert.ToDouble(CORE.Substring(11,6));
            A4 = Convert.ToDouble(CORE.Substring(17,8));
            A5 = Convert.ToDouble(CORE.Substring(25,6));
            A6 = Convert.ToDouble(CORE.Substring(31,7));
            A7 = Convert.ToDouble(CORE.Substring(38,8));
            A8 = Convert.ToDouble(CORE.Substring(46,7));
            A9 = Convert.ToDouble(CORE.Substring(53,8));
            Z1 = Convert.ToDouble(CORE.Substring(61,5));
            Z2 = Convert.ToDouble(CORE.Substring(66,5));
            KATZE1[I] = Convert.ToInt32(CORE.Substring(71,1));
            VERLP[I] = Convert.ToDouble(CORE.Substring(72,3));
            KATZE2[I] = Convert.ToInt32(CORE.Substring(75,1));
            VERLE[I] = Convert.ToDouble(CORE.Substring(76,3));
            //1410 FORMAT (1X,2I2,2F6.0,F8.0,F6.0,2(F7.0,F8.0),2F5.0,2(I1,F3.0))
            A1 = A1/GP;
            A2 = UWA003("TABS", A2);
            A4 = A4*GM;
            A5 = A5/GP;
            A6 = A6/GI;
            A7 = A7*GM;
            A8 = A8/GI;
            A9 = A9*GM;
            
            if (VERLP[I] > 100.0) VERLP[I] = VERLP[I]/10.0;
            if (VERLE[I] > 100.0) VERLE[I] = VERLE[I]/10.0;
            if (KATZE2[I] == 1) VERLE[I] = VERLE[I]/GI;
            if (KATZE2[I] == 2) VERLE[I] = 1.0-VERLE[I]/100.0;
            KFELER = 9;
            if (NTYP[I] == 20) goto label1401;
            if (NTYP[I] != IZ1) goto label101;
            if (IZ1 == 2 || IZ1 == 5 || IZ1 == 11 || IZ1 == 12 || IZ1 == 19.0 || IZ1 == 21) 
                goto label1402;
            goto label101;
            
        label1401:
            INDDTX = INDDTX + 1;
            INDDT[I] = INDDTX;
            
        label1402:
            II = (int)N1[I];
            
            if (IZ1 == 12)
                II = (int)NBLTG[I,1];
            
            if (II == 0) 
                sw16.WriteLine("0***ZUDAMPFLEITUNG IM ELEMENT{0}FEHLT***", I.ToString().PadLeft(3));
            //1403 FORMAT(1H0,"***ZUDAMPFLEITUNG IM ELEMENT",I3,"FEHLT***")
            
            if (II == 0)
            {
                Console.WriteLine("FALSCHE EINGABE FUER W-KARTEN");
                Console.ReadKey();
                Environment.Exit(0);
            }
            
            JJ = (int)N2[I];
            
            if (JJ == 0 && (IZ1 == 5 || IZ1 == 12)) 
                sw16.WriteLine("0***KEINE ANGEHENDE LEITUNG IM ELEMENT{0}***", I.ToString().PadLeft(3));
            
            if (JJ == 0 && (IZ1 == 5 || IZ1 == 12))
            {
                Console.WriteLine("W-KARTEN FALSCH");
                Console.ReadKey();
                Environment.Exit(0);
            }
            
            K3 = (int)NTYP[I];
            NTYP[I] = IZ1;
            LTYP[I] = IZ1;
            AZW1 = EWAUS[I];
            AZW2 = EWAUS[I-1];
            AZW3 = TWAUS[I];
            AZW4 = TWAUS[I-1];
            AZW5 = GWAS[I-1];
            AZW6 = ELTG[II];
            AZW7 = PLTG[II];
            AZW8 = GLTG[II];
            
            if (JJ == 0)
                goto label1405;
            
            AZW9 = ELTG[JJ];
            AZW10 = PLTG[JJ];
            AZW11 = GLTG[JJ];
            
        label1405:
            AZW12 = DTK[I];
            AZW13 = DTS[I];
            AZW14 = DEKOND[I];
            AZW15 = PW[I-1];
            PW[I-1] = A1;
            EWAUS[I-1] = VISUM(A1,A2,01);
            TWAUS[I-1] = A2;
            GWAS[I-1] = A4;
            PLTG[II] = A5;
            ELTG[II] = A6;
            GLTG[II] = A7;
            DTS[I] = Z1;
            DTK[I] = Z2;
            DEKOND[I] = DTS[I];
            
            if (PW[I] == 0.0) 
                PW[I] = A1;
            
            if (I <= IHENDE)
                goto label1406;
            
            IZ8 = (int)NN1[I];
            IZ9 = (int)NN2[I];
            AZW16 = PLTG[IZ8];
            AZW17 = PLTG[IZ9];
            PLTG[IZ8] = A1;
            
            if (PW[I] > 0.0)
                A1 = PW[I];
            
            if (PW[I] < 0.0) 
                A1 = A1*(1.0+PW[I]/100.0);
            
            PLTG[IZ9] = A1;
            GLTG[IZ8] = A4;
            ELTG[IZ8] = EWAUS[I-1];
            
        label1406:
            if (IZ1 != 12) 
                UWA046(0);
            
            if (JJ > 0)
                PLTG[JJ] = A3;
            
            if (IZ1 == 12)
                PLTG[JJ] = PLTG[II];
            
            if (IZ1 == 5 || IZ1 == 12)
                goto label1407;
            
            Z3 = VISUM(A3,TWAUS[I],21);
            Z4 = GLTG[II] + A9;
            TWAUS[I] = TWAUS[I] - DTS[I];
            A10 = A2 + DTK[I];
            
            if (DTK[I] != 0.0)
                Z3 = VISUM(A3,A10,01);
            EWAUS[I] = VISUM(A1,TWAUS[I],01);
            GWAS[I-1] = (A6*A7+A8*A9-Z4*Z3)/(EWAUS[I]-EWAUS[I-1]);
            
            if (JJ == 0) 
                goto label1408;
            
            GLTG[JJ] = Z4;
            ELTG[JJ] = Z3;
            goto label1408;
            
        label1407:
            A10 = A2 + DTS[I];
            GLTG[JJ] = GLTG[II] + A9;
            ELTG[JJ] = VISUM(PLTG[JJ],A10,01);
            EWAUS[I] = (A6*A7+A8*A9-GLTG[JJ]*ELTG[JJ])/GWAS[I-1] + EWAUS[I-1];
            TWAUS[I] = VISUM(A1,EWAUS[I],03);
            
        label1408:
            INDDT[I] = -INDDT[I];
            K = 3;
            KK = II;
            UWA033();
            II = KK;
            K = 1;
            NTYP[I] = K3;
            EWAUS[I] = AZW1;
            EWAUS[I-1] = AZW2;
            TWAUS[I] = AZW3;
            TWAUS[I-1] = AZW4;
            GWAS[I-1] = AZW5;
            ELTG[II] = AZW6;
            PLTG[II] = AZW7;
            GLTG[II] = AZW8;
            
            if (JJ == 0)
                goto label1409;
            
            ELTG[JJ] = AZW9;
            PLTG[JJ] = AZW10;
            GLTG[JJ] = AZW11;
            
        label1409:
            DTK[I] = AZW12;
            DTS[I] = AZW13;
            DEKOND[I] = AZW14;
            PW[I-1] = AZW15;
            
            if (I <= IHENDE)
                goto label100;
            
            PLTG[IZ8] = AZW16;
            PLTG[IZ9] = AZW17;
            goto label100;

        label1500:
            //goto label(1510,1520,1530,1540),
            if(K2 == 1)     goto label1510;
            if(K2 == 2)     goto label1520;
            if(K2 == 3)     goto label1530;
            if(K2 == 4)     goto label1540;
            
        label1510:
            //DECODE(80,1511,CORE)
            IP1 = Convert.ToInt32(CORE.Substring(3,2));
            UEBER1 = CORE.Substring(5,18);
            NRPROJ = CORE.Substring(23,15);
            NAME = CORE.Substring(39,4);
            IX1 = Convert.ToInt32(CORE.Substring(43,1));
            KDRPL = Convert.ToInt32(CORE.Substring(44,3));
            IPASC = Convert.ToInt32(CORE.Substring(47,1));
            KTEXT = Convert.ToInt32(CORE.Substring(48,1));
            KOMP1 = Convert.ToInt32(CORE.Substring(49,1));
            KOMP2 = Convert.ToInt32(CORE.Substring(50,1));
            IWESEL = Convert.ToInt32(CORE.Substring(51,1));
            KHEIZ = Convert.ToInt32(CORE.Substring(52,1));
            LHEIZ = Convert.ToInt32(CORE.Substring(53,1));
            MOD[1] = Convert.ToInt32(CORE.Substring(54,1));
            MOD[2] = Convert.ToInt32(CORE.Substring(55,1));
            MOD[3] = Convert.ToInt32(CORE.Substring(56,1));
            KKONDR = Convert.ToInt32(CORE.Substring(57,1));
            ITKW = Convert.ToInt32(CORE.Substring(58,1));
            IMKW = Convert.ToInt32(CORE.Substring(59,1));
            IWVB = Convert.ToInt32(CORE.Substring(60,1));
            IDAMPF = Convert.ToInt32(CORE.Substring(63,3));
            IX2 = Convert.ToInt32(CORE.Substring(66,1));
            IX3 = Convert.ToInt32(CORE.Substring(67,1));
            IX4 = Convert.ToInt32(CORE.Substring(68,1));
            MENTN[2] = Convert.ToInt32(CORE.Substring(69,1));
            MENTN[3] = Convert.ToInt32(CORE.Substring(70,1));
            MENTN[4] = Convert.ToInt32(CORE.Substring(71,1));
            IGETRB = Convert.ToInt32(CORE.Substring(72,1));
            ISTIFT = Convert.ToInt32(CORE.Substring(78,1));
            KREUZ = Convert.ToInt32(CORE.Substring(79,1));
            //1511 FORMAT(3X,I2, A ,A ,A4,I1,I3,14I1,I3,3A1,4I1,5X,A1,I1)
            
            NDECM = 3;
            
            if (ISTIFT == KBLNC) 
                ISTIFT = KART0;
            
            if (IX2 == IZIFF0) 
                NDECM = -1;
            if (IX2 == IZIFF1) NDECM = 1;
            if (IX2 == IZIFF2) NDECM = 2;
            NDECTE = 1;
            if (IX3 == IZIFF0) NDECTE = -1;
            if (IX3 == IZIFF2) NDECTE = 2;
            if (IX4 == IZIFF0) NDECN = -1;
            if (IX4 == IZIFF1) NDECN = 1;
            if (IX4 == IZIFF2) NDECN = 2;
            if (IX4 == IZIFF3) NDECN = 3;
            if (IX4 == IZIFF4) NDECN = 4;
            QOFFEN = false;
            QACPSI = false;
            QUPOCO = false;
            if (IX1 == 3) QUPOCO = true;
            if (IX1 == 1) QOFFEN = true;
            if (IX1 == 2) QACPSI = true;
            if (IP1 > 0) goto label100;
            IP1 = ISLEN(UEBER1);
            goto label100;
            
        label1520:
            //goto label(1521,1525),
            if(K3 == 1)     goto label1521;
            if(K3 == 2)     goto label1525;
            
        label1521:
            //DECODE(66,1522,CORE) 
            IP2 = Convert.ToInt32(CORE.Substring(3,2));
            UEBER2 = CORE.Substring(5,25);
            NUMMER = CORE.Substring(30,25);
            NINDEX = CORE.Substring(55,2);
            IX1 = Convert.ToInt32(CORE.Substring(57,1));
            PELEKT = Convert.ToDouble(CORE.Substring(58,8));
            //1522 FORMAT(3X,I2, A ,A ,A2,A1,F8.0)

            IELEKT = 3;
            if (IX1 == IZIFF0) IELEKT = -1;
            if (IX1 == IZIFF1) IELEKT = 1;
            if (IX1 == IZIFF2) IELEKT = 2;
            if (IX1 == IZIFF9) IELEKT = 9;
            if (IP2 > 0) goto label100;
            IP2 = ISLEN(UEBER2);
            goto label100;
            
        label1525:
            //DECODE(45,1526,CORE) 
            IP3 = Convert.ToInt32(CORE.Substring(3,2));
            UEBER3 = CORE.Substring(5,40);
            //1526 FORMAT(3X,I2, A )
            
            if (IP3 > 0) goto label100;
            IP3 = ISLEN(UEBER3);
            goto label100;
            
        label1530:
            //DECODE(52,1531,CORE) 
            IX1 = Convert.ToInt32(CORE.Substring(3,3));
            IX2 = Convert.ToInt32(CORE.Substring(26,3));
            IX3 = Convert.ToInt32(CORE.Substring(49,3));
            //1531 FORMAT(3X,I3,20X,I3,20X,I3)
            
            if (IX3 == 0 && IX2 == 0) 
                goto label1535;
            
            if (IX3 == 0) 
                goto label1533;
            
            //DECODE(72,1532,CORE) 
            string[] aa;
            CORE = CORE.Replace("  ", " |").Replace("| ","").Replace("|","");
            aa = CORE.Split(' ');
            IPL[IX1] = Convert.ToInt32(aa[0]);
            BESCHR[IX1] = aa[1];
            IPL[IX2] = Convert.ToInt32(aa[2]);
            BESCHR[IX2] = aa[3];
            IPL[IX3] = Convert.ToInt32(aa[4]);
            BESCHR[IX3] = aa[5];
            //1532 FORMAT(3X,3(I3, A ))
            goto label100;
            
        label1533:
            CORE = CORE.Replace("  ", " |").Replace("| ","").Replace("|","");
            string[] bb = CORE.Split(' ');
            //DECODE(49,1534,CORE)
            IPL[IX1] = Convert.ToInt32(bb[0]);
            BESCHR[IX1] = bb[1];
            IPL[IX2] = Convert.ToInt32(bb[2]);
            BESCHR[IX2] = bb[3];
            //1534 FORMAT(3X,2(I3, A ))
            goto label100;

        label1535:
            //DECODE(26,1536,CORE) 
            IPL[IX1] = Convert.ToInt32(CORE.Substring(3,3));
            BESCHR[IX1] = CORE.Substring(6);
            //1536 FORMAT(3X,I3, A )
            goto label100;

        label1540:
            //DECODE(46,1541,CORE) 
            PGENN = Convert.ToDouble(CORE.Substring(3,8));
            VOLTG = Convert.ToDouble(CORE.Substring(11,5));
            COSPHI = Convert.ToDouble(CORE.Substring(16,5));
            ETAGLR = Convert.ToDouble(CORE.Substring(21,5));
            PH2 = Convert.ToDouble(CORE.Substring(26,5));
            SCR = Convert.ToDouble(CORE.Substring(31,5));
            MAKEUP = Convert.ToDouble(CORE.Substring(36,5));
            ENDSCH = Convert.ToDouble(CORE.Substring(41,5));
            //1541 FORMAT(3X,F8.0,7F5.0)
            goto label100;

        label1600:
            //DECODE(75,1601,CORE) 
            MKUEHL = Convert.ToInt32(CORE.Substring(3,1));
            JKUEHL = Convert.ToInt32(CORE.Substring(4,1));
            TKUEHL[1] = Convert.ToDouble(CORE.Substring(5,7));
            TKUEHL[2] = Convert.ToDouble(CORE.Substring(12,7));
            TKUEHL[3] = Convert.ToDouble(CORE.Substring(19,7));
            TKUEHL[4] = Convert.ToDouble(CORE.Substring(26,7));
            TKUEHL[5] = Convert.ToDouble(CORE.Substring(33,7));
            TKUEHL[6] = Convert.ToDouble(CORE.Substring(40,7));
            TKUEHL[7] = Convert.ToDouble(CORE.Substring(47,7));
            TKUEHL[8] = Convert.ToDouble(CORE.Substring(54,7));
            TKUEHL[9] = Convert.ToDouble(CORE.Substring(61,7));
            TKUEHL[10] = Convert.ToDouble(CORE.Substring(68,7));
            //1601 FORMAT(3X,2I1,10F7.0)
            IKUEHL = 1;
            
            for(L = 1; L <= 10; L++)    //DO 1602 L = 1,10
                if (MKUEHL == 0 || MKUEHL == 3) 
                    TKUEHL[L] = TKUEHL[L]/GP;       //1602 CONTINUE
            
            goto label100;

        label1620:
            //goto label(1630,1640,1650,1660,1670),
            if(K2 == 1)     goto label1630;
            if(K2 == 2)     goto label1640;
            if(K2 == 3)     goto label1650;
            if(K2 == 4)     goto label1660;
            if(K2 == 5)     goto label1670;

        label1630:
            //DECODE(24,1631,CORE) 
            IVERD[1] = Convert.ToInt32(CORE.Substring(3,1));
            IKLAB[1] = Convert.ToInt32(CORE.Substring(4,1));
            IZWKUE = Convert.ToInt32(CORE.Substring(5,1));
            IVERD[2] = Convert.ToInt32(CORE.Substring(6,1));
            IKLAB[2] = Convert.ToInt32(CORE.Substring(7,1));
            IREKU = Convert.ToInt32(CORE.Substring(8,1));
            IZUF[1] = Convert.ToInt32(CORE.Substring(9,1));
            IBRK[1] = Convert.ToInt32(CORE.Substring(10,1));
            IKLZU[1] = Convert.ToInt32(CORE.Substring(11,1));
            IGTURB[1] = Convert.ToInt32(CORE.Substring(12,1));
            IKLZU[3] = Convert.ToInt32(CORE.Substring(13,1));
            IZUF[2] = Convert.ToInt32(CORE.Substring(14,1));
            IBRK[2] = Convert.ToInt32(CORE.Substring(15,1));
            IKLZU[2] = Convert.ToInt32(CORE.Substring(16,1));
            IGTURB[2] = Convert.ToInt32(CORE.Substring(17,1));
            IKLZU[4] = Convert.ToInt32(CORE.Substring(18,1));
            IABHI = Convert.ToInt32(CORE.Substring(19,1));
            KABHI = Convert.ToInt32(CORE.Substring(20,1));
            NGASTA = Convert.ToInt32(CORE.Substring(21,1));
            NGAST = Convert.ToInt32(CORE.Substring(22,1));
            NRGAS = Convert.ToInt32(CORE.Substring(23,1));
            //1631 FORMAT(3X,21I1)
            goto label100;

        label1640:
            //DECODE(80,1641,CORE) 
            PVVERD[1] = Convert.ToDouble(CORE.Substring(3,7));
            TVVERD[1] = Convert.ToDouble(CORE.Substring(10,7));
            GLUFT = Convert.ToDouble(CORE.Substring(17,7));
            TNVERD[1] = Convert.ToDouble(CORE.Substring(24,7));
            PVERD[1] = Convert.ToDouble(CORE.Substring(31,7));
            GKLAB[1] = Convert.ToDouble(CORE.Substring(38,7));
            PVVERD[2] = Convert.ToDouble(CORE.Substring(45,7));
            TVVERD[2] = Convert.ToDouble(CORE.Substring(52,7));
            TNVERD[2] = Convert.ToDouble(CORE.Substring(59,7));
            PVERD[2] = Convert.ToDouble(CORE.Substring(66,7));
            GKLAB[2] = Convert.ToDouble(CORE.Substring(73,7));
            //1641 FORMAT(3X,11F7.0)
            goto label100;

        label1650:
            //DECODE(80,1641,CORE) 
            TNZUF[1] = Convert.ToDouble(CORE.Substring(3,7));
            PZUF[1] = Convert.ToDouble(CORE.Substring(10,7));
            TNBRK[1] = Convert.ToDouble(CORE.Substring(17,7));
            GBRK[1] = Convert.ToDouble(CORE.Substring(24,7));
            GKLZU[1] = Convert.ToDouble(CORE.Substring(31,7));
            TVTURB[1] = Convert.ToDouble(CORE.Substring(38,7));
            TNTURB[1] = Convert.ToDouble(CORE.Substring(45,7));
            GNTURB[1] = Convert.ToDouble(CORE.Substring(52,7));
            GKLZU[3] = Convert.ToDouble(CORE.Substring(59,7));
            PGTURB[1] = Convert.ToDouble(CORE.Substring(66,7));
            TNREKU = Convert.ToDouble(CORE.Substring(73,7));
            goto label100;

        label1660:
            //DECODE(73,1641,CORE) 
            TNZUF[2] = Convert.ToDouble(CORE.Substring(3,7));
            PZUF[2] = Convert.ToDouble(CORE.Substring(10,7));
            TNBRK[2] = Convert.ToDouble(CORE.Substring(17,7));
            GBRK[2] = Convert.ToDouble(CORE.Substring(24,7));
            GKLZU[2] = Convert.ToDouble(CORE.Substring(31,7));
            TVTURB[2] = Convert.ToDouble(CORE.Substring(38,7));
            TNTURB[2] = Convert.ToDouble(CORE.Substring(45,7));
            GNTURB[2] = Convert.ToDouble(CORE.Substring(52,7));
            GKLZU[2] = Convert.ToDouble(CORE.Substring(59,7));
            PGTURB[2] = Convert.ToDouble(CORE.Substring(66,7));
            goto label100;

        label1670:
            //DECODE(31,1641,CORE) 
            PGAS = Convert.ToDouble(CORE.Substring(3,7));
            TABGAS = Convert.ToDouble(CORE.Substring(10,7));
            GABGAS = Convert.ToDouble(CORE.Substring(17,7));
            HU = Convert.ToDouble(CORE.Substring(24,7));
            goto label100;
        }   //END
        
        
        static void UWA008(string s,  int N,ref int I1,ref int I2,ref int I3,ref int I4)
        {
            int KON, NN;
            int[] I = new int[5];
            if(s == "PACK")     goto PACK;
            if(s == "UNPACK")     goto UNPACK;

        PACK:
            //ENTRY        UWA008("PACK", N,I1,I2,I3,I4)                
                                          
            N = ((I1 * 10 + I2) * 10 + I3) * 100 + I4;
            return;

        UNPACK:
            //ENTRY UWA008("UNPACK", N,I1,I2,I3,I4)
            J = 5;
            KON = 100;
            NN = Math.Abs(N);
            
        label2:
            J = J-1;
            if (J < 4) KON = 10;
            NVOR = NN;
            NN = NN/KON;
            I[J] = NVOR - NN*KON;
            
            if (J > 2)
                goto label2;
            I[1] = NN;
            I1 = I[1];
            I2 = I[2];
            I3 = I[3];
            I4 = I[4];
            return;
        }   //END

        
        static void UWA010 (int I, int K)
        {
            //ENTRY TURBKW(I,K]
            int I1, I2, I3, I4, I5, I6, I7, I8, I52;
            double[] KTAUFB = new double[16], MUKASO = new double[76], KT = new double[226];

            //EQUIVALENCE (KT1,KTAUFB[1])
            //EQUIVALENCE (MUKASO[1],CDAT59(226)), (KT [1],CDAT59[1]) ,(NADUES ,CDAT59(301))
            
            if (K == 2)
                goto label1;

            for(I1 = 1; I1 <= 3; I1++)      //DO 20 I1 = 1,3
            {
                I5 = I1 * 5 - 5;
                I4 = I * 3 - 3 + I1;
                I6 = (int)KT[I4];
                I3 = 100000000;
                
                for(I2 = 1; I2 <= 5; I2++)      //DO 30 I2 = 1,5
                {
                    I7 = I6/I3;
                    I6 = I6 - I7 * I3;
                    I3 = I3/100;
                    I52=I2+I5;
                    KTAUFB[I52]=I7;
                }   //30 CONTINUE
            }   //20 CONTINUE
            return;

        label1:
            for(I1 = 1; I1 <= 3; I1++)      //DO 2 I1 = 1,3
            {
                I5 = I1 * 5 - 5;
                I4 = I * 3 - 3 + I1;
                KT[I4] = 0;
                
                for(I2 = 1; I2 <= 5; I2++)      //DO 3 I2 = 1,5
                {
                    I8 =I5 + I2;
                    KT[I4] = KT[I4]*100 + KTAUFB[I8];
                }   //3 CONTINUE
            }   //2 CONTINUE
            return;
        }   //END
        
                
        static int UWA011(int I, int J)
        {
            //ENTRY KWTURB(I,J)
            //INTEGER CDAT59          
            //DIMENSION KTAUFB(15)        
            //DIMENSION MUKASO(75),  KT(225)                               
            //COMMON /COKE/ KT1,KT2,KT3,KT4,KT5,KT6,KT7,KT8,KT9,KT10,KT11, 
            //1     KT12, KT13, KT14, KT15                              
            //COMMON /DAT59/ CDAT59(301)  
            //EQUIVALENCE (KT1,KTAUFB[1]) 
            //EQUIVALENCE  (MUKASO[1],CDAT59(226)), (KT[1],CDAT59[1]) ,(NADUES,CDAT59(301))                         
            int I3, I4, I5, NER, NERG, uwa011;
            
            I3 = (J-1)/5  + 1;
            I4 = I*3  - 3  + I3;
            NER = (int)KT[I4];
            I5 = I3*5 - J;
            NERG = (int)(NER /Math.Pow(100,I5));
            uwa011=  NERG - NERG/100*100;                               
            uwa011 =  NERG - NERG/100*100;                                
            return uwa011;                      
        }   //END                         

                
        static void UWA012()
        {
            //ENTRY PRTCOR     
            double[] LNR = new double[6], PL = new double[6], IL = new double[6], EL = new double[3], GL = new double[3],
                DP = new double[3], DE = new double[3];
            //INCLUDE "KRAWAL80.COMMON"
            //115 FORMAT (1H0,//,26X,23HK E N N G R O E S S E N)  
            //180 FORMAT (1H ,38X,17HEXPANSIONSVERLAUF//2X,6HNR KT,11X,3HP-T,5X,4HT1
            //2-T,3X,4HT2-T,3X,4HE1-T,3X,4HE2-T,4X,10HD-I  L-ABT,30X,5HL-ZUT/)   
            int IRET, JRET, KRET, JJRET, NRET;
            IRET = I;
            JRET = J;
            KRET = K;
            JJRET = JJ;
            NRET = LIGHT[9];
            LIGHT[9] = 0;
            UWA043(2);
            
            sw16.WriteLine("0");
            sw16.WriteLine("                       K E N N G R O E S S E N      ");
            sw16.WriteLine("0");
            sw16.WriteLine("  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13} ", I.ToString().PadLeft(5),II.ToString().PadLeft(5),J.ToString().PadLeft(5),
                JJ.ToString().PadLeft(5),K.ToString().PadLeft(5),KK.ToString().PadLeft(5),NVOR.ToString().PadLeft(5),ANZTRB.ToString().PadLeft(5),
                ANZDTT.ToString().PadLeft(5),ANZDGR.ToString().PadLeft(5),ANZAST.ToString().PadLeft(5),KFELER.ToString().PadLeft(5),IFALL.ToString().PadLeft(5),
                ISYMB.ToString().PadLeft(5));
            //100 FORMAT( 1H0,/,2X,18I5)
            sw16.WriteLine("0");
            //105 FORMAT(  1H0)
            sw16.WriteLine("0");
            sw16.WriteLine("  {0}", ITTEND.ToString().PadLeft(5));         
            sw16.WriteLine("0");
            sw16.WriteLine("  {0}", NTTETB.ToString().PadLeft(5));
            sw16.WriteLine("0");
            sw16.WriteLine("  {0}", IRSTF.ToString().PadLeft(5));        
            sw16.WriteLine("0");
            sw16.WriteLine("  {0}", ISTFGR.ToString().PadLeft(5));        
            sw16.WriteLine("0");
            sw16.WriteLine("  {0}", ISTOBU.ToString().PadLeft(5));
            sw16.WriteLine("0");
            sw16.WriteLine("  {0}{1}{2}{3}{4}{5} ", IANF.ToString().PadLeft(5),IEND.ToString().PadLeft(5),JANF.ToString().PadLeft(5),
                JJANF.ToString().PadLeft(5),IWEI1.ToString().PadLeft(5),LIGHT.ToString().PadLeft(5));
            
            sw16.WriteLine("0\n");
            sw16.WriteLine("    A1-A10   {0}{1}{2}{3}{4}{5}{6}{7} ", A1.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13),
                A3.ToString("0.00000E+0").PadLeft(13),A4.ToString("0.00000E+0").PadLeft(13),A5.ToString("0.00000E+0").PadLeft(13),A6.ToString("0.00000E+0").PadLeft(13),
                A7.ToString("0.00000E+0").PadLeft(13),A8.ToString("0.00000E+0").PadLeft(13));
            sw16.WriteLine("             {0}{1} ", A9.ToString("0.00000E+0").PadLeft(13), A10.ToString("0.00000E+0").PadLeft(13));
            sw16.WriteLine("    Z1-Z10   {0}{1}{2}{3}{4}{5}{6}{7}", Z1.ToString("0.00000E+0").PadLeft(13),Z2.ToString("0.00000E+0").PadLeft(13),
                Z3.ToString("0.00000E+0").PadLeft(13),Z4.ToString("0.00000E+0").PadLeft(13),Z5.ToString("0.00000E+0").PadLeft(13),Z6.ToString("0.00000E+0").PadLeft(13),
                Z7.ToString("0.00000E+0").PadLeft(13),Z8.ToString("0.00000E+0").PadLeft(13));
            sw16.WriteLine("             {0}{1} ", Z9.ToString("0.00000E+0").PadLeft(13),Z10.ToString("0.00000E+0").PadLeft(13));
            //110 FORMAT (1H0,//,4X,6HA1-A10,3X,8E13.5/13X,2E13.5//4X,6HZ1-Z10,3X,8E13.5/13X,2E13.5)                                  
            UWA043(2);
            IZ4 = 0;
            IZ2 = 0;

            if (LIGHT[9] == 0)
            {
                //goto label11;
                sw16.WriteLine("0{0}  GFD      {1}{2}{3}{4}    GABD     {5}{6}{7}{8} ", IZ1.ToString().PadLeft(3), GFDE[1].ToString("0.00000E+0").PadLeft(13), GFDE[2].ToString("0.00000E+0").PadLeft(13), GFDE[3].ToString("0.00000E+0").PadLeft(13), GFDE[4].ToString("0.00000E+0").PadLeft(13),
                    GABDE[1].ToString("0.00000E+0").PadLeft(13), GABDE[2].ToString("0.00000E+0").PadLeft(13), GABDE[3].ToString("0.00000E+0").PadLeft(13), GABDE[4].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("      TLSTG    {0}{1}{2}{3}    VMECH    {4}{5}{6}{7} ", TLSTGE[1].ToString("0.00000E+0").PadLeft(13), TLSTGE[2].ToString("0.00000E+0").PadLeft(13), TLSTGE[3].ToString("0.00000E+0").PadLeft(13), TLSTGE[4].ToString("0.00000E+0").PadLeft(13),
                    VMECHE[1].ToString("0.00000E+0").PadLeft(13), VMECHE[2].ToString("0.00000E+0").PadLeft(13), VMECHE[3].ToString("0.00000E+0").PadLeft(13), VMECHE[4].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("      ETAG     {0}{1}{2}{3}    GMFIX    {4}{5}{6}{7} ", ETAGE[1].ToString("0.00000E+0").PadLeft(13), ETAGE[2].ToString("0.00000E+0").PadLeft(13), ETAGE[3].ToString("0.00000E+0").PadLeft(13), ETAGE[4].ToString("0.00000E+0").PadLeft(13),
                    GMFIXE[1].ToString("0.00000E+0").PadLeft(13), GMFIXE[2].ToString("0.00000E+0").PadLeft(13), GMFIXE[3].ToString("0.00000E+0").PadLeft(13), GMFIXE[4].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("      ETWK     {0}{1}{2}{3}    EWKZUK   {4}{5}{6}{7} ", ETWK[1].ToString("0.00000E+0").PadLeft(13), ETWK[2].ToString("0.00000E+0").PadLeft(13), ETWK[3].ToString("0.00000E+0").PadLeft(13), ETWK[4].ToString("0.00000E+0").PadLeft(13),
                    EWKZUK[1].ToString("0.00000E+0").PadLeft(13), EWKZUK[2].ToString("0.00000E+0").PadLeft(13), EWKZUK[3].ToString("0.00000E+0").PadLeft(13), EWKZUK[4].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("      DREQUE   {0}{1}{2}{3}    PN4      {4}{5}{6}{7} ", DREQUE[1].ToString("0.00000E+0").PadLeft(13), DREQUE[2].ToString("0.00000E+0").PadLeft(13), DREQUE[3].ToString("0.00000E+0").PadLeft(13), DREQUE[4].ToString("0.00000E+0").PadLeft(13),
                    PN4[1].ToString("0.00000E+0").PadLeft(13), PN4[2].ToString("0.00000E+0").PadLeft(13), PN4[3].ToString("0.00000E+0").PadLeft(13), PN4[4].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("0     P0       {0}{1}{2}{3}{4}{5}{6} ", P0E[1].ToString("0.00000E+0").PadLeft(13), P0E[2].ToString("0.00000E+0").PadLeft(13), P0E[3].ToString("0.00000E+0").PadLeft(13),
                    P0E[4].ToString("0.00000E+0").PadLeft(13), P0E[5].ToString("0.00000E+0").PadLeft(13), P0E[6].ToString("0.00000E+0").PadLeft(13), P0E[7].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("      T0       {0}{1}{2}{3}{4}{5}{6} ", T0E[1].ToString("0.00000E+0").PadLeft(13), T0E[2].ToString("0.00000E+0").PadLeft(13), T0E[3].ToString("0.00000E+0").PadLeft(13),
                    T0E[4].ToString("0.00000E+0").PadLeft(13), T0E[5].ToString("0.00000E+0").PadLeft(13), T0E[6].ToString("0.00000E+0").PadLeft(13), T0E[7].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("      PN       {0}{1}{2}{3}{4}{5}{6} ", PNE[1].ToString("0.00000E+0").PadLeft(13), PNE[2].ToString("0.00000E+0").PadLeft(13), PNE[3].ToString("0.00000E+0").PadLeft(13),
                    PNE[4].ToString("0.00000E+0").PadLeft(13), PNE[5].ToString("0.00000E+0").PadLeft(13), PNE[6].ToString("0.00000E+0").PadLeft(13), PNE[7].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("      TNPROZ   {0}{1}{2}{3}{4}\n", TNPROZ[1].ToString("0.00000E+0").PadLeft(13), TNPROZ[2].ToString("0.00000E+0").PadLeft(13), TNPROZ[3].ToString("0.00000E+0").PadLeft(13),
                    TNPROZ[4].ToString("0.00000E+0").PadLeft(13), TNPROZ[5].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("NVENT    {0}{1}{2}{3}{4}{5}{6}    NRMFI    {7}{8}{9}{10}    NRMVA    {11}{12}{13}{14}    NITR     {15}{16}{17}{18} ",
                    NVENT[1].ToString().PadLeft(4), NVENT[2].ToString().PadLeft(4), NVENT[3].ToString().PadLeft(4), NVENT[4].ToString().PadLeft(4), NVENT[5].ToString().PadLeft(4),
                    NVENT[6].ToString().PadLeft(4), NVENT[7].ToString().PadLeft(4), NRMFIE[1].ToString().PadLeft(4), NRMFIE[2].ToString().PadLeft(4), NRMFIE[3].ToString().PadLeft(4),
                    NRMFIE[4].ToString().PadLeft(4), NRMVAE[1].ToString().PadLeft(4), NRMVAE[2].ToString().PadLeft(4), NRMVAE[3].ToString().PadLeft(4), NRMVAE[4].ToString().PadLeft(4),
                    NITRE[1].ToString().PadLeft(4), NITRE[2].ToString().PadLeft(4), NITRE[3].ToString().PadLeft(4), NITRE[4].ToString().PadLeft(4));
            }
            
            for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 200 IZ1=1,10
            {
            label12:
                IZ2 = IZ1;
                UWA006("RDISC", 55,IZ2);
                
            label11:
                sw16.WriteLine("0{0}  GFD      {1}{2}{3}{4}    GABD     {5}{6}{7}{8} ", IZ1.ToString().PadLeft(3), GFDE[1].ToString("0.00000E+0").PadLeft(13),GFDE[2].ToString("0.00000E+0").PadLeft(13),GFDE[3].ToString("0.00000E+0").PadLeft(13),GFDE[4].ToString("0.00000E+0").PadLeft(13),
                    GABDE[1].ToString("0.00000E+0").PadLeft(13),GABDE[2].ToString("0.00000E+0").PadLeft(13),GABDE[3].ToString("0.00000E+0").PadLeft(13),GABDE[4].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("      TLSTG    {0}{1}{2}{3}    VMECH    {4}{5}{6}{7} ", TLSTGE[1].ToString("0.00000E+0").PadLeft(13),TLSTGE[2].ToString("0.00000E+0").PadLeft(13),TLSTGE[3].ToString("0.00000E+0").PadLeft(13),TLSTGE[4].ToString("0.00000E+0").PadLeft(13),
                    VMECHE[1].ToString("0.00000E+0").PadLeft(13),VMECHE[2].ToString("0.00000E+0").PadLeft(13),VMECHE[3].ToString("0.00000E+0").PadLeft(13),VMECHE[4].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("      ETAG     {0}{1}{2}{3}    GMFIX    {4}{5}{6}{7} ", ETAGE[1].ToString("0.00000E+0").PadLeft(13),ETAGE[2].ToString("0.00000E+0").PadLeft(13),ETAGE[3].ToString("0.00000E+0").PadLeft(13),ETAGE[4].ToString("0.00000E+0").PadLeft(13),
                    GMFIXE[1].ToString("0.00000E+0").PadLeft(13),GMFIXE[2].ToString("0.00000E+0").PadLeft(13),GMFIXE[3].ToString("0.00000E+0").PadLeft(13),GMFIXE[4].ToString("0.00000E+0").PadLeft(13));
                
                sw16.WriteLine("      ETWK     {0}{1}{2}{3}    EWKZUK   {4}{5}{6}{7} ", ETWK[1].ToString("0.00000E+0").PadLeft(13),ETWK[2].ToString("0.00000E+0").PadLeft(13),ETWK[3].ToString("0.00000E+0").PadLeft(13),ETWK[4].ToString("0.00000E+0").PadLeft(13),
                    EWKZUK[1].ToString("0.00000E+0").PadLeft(13),EWKZUK[2].ToString("0.00000E+0").PadLeft(13),EWKZUK[3].ToString("0.00000E+0").PadLeft(13),EWKZUK[4].ToString("0.00000E+0").PadLeft(13));
                
                sw16.WriteLine("      DREQUE   {0}{1}{2}{3}    PN4      {4}{5}{6}{7} ", DREQUE[1].ToString("0.00000E+0").PadLeft(13),DREQUE[2].ToString("0.00000E+0").PadLeft(13),DREQUE[3].ToString("0.00000E+0").PadLeft(13),DREQUE[4].ToString("0.00000E+0").PadLeft(13),
                    PN4[1].ToString("0.00000E+0").PadLeft(13),PN4[2].ToString("0.00000E+0").PadLeft(13),PN4[3].ToString("0.00000E+0").PadLeft(13),PN4[4].ToString("0.00000E+0").PadLeft(13));
                
                //120 FORMAT (1H0,I3,2X,3HGFD,6X,4E13.5,4X,4HGABD,5X,4E13.5/6X,5HTLSTG, 
                //    2  4X,4E13.5,4X,5HVMECH,4X,4E13.5/6X,4HETAG,5X,4E13.5,4X,5HGMFIX,4X
                //    3,4E13.5/6X,4HETWK,5X,4E13.5,4X,6HEWKZUK,3X,4E13.5/6X,6HDREQUE,3X,4
                //    4E13.5,4X,3HPN4,6X,4E13.5)  
                
                sw16.WriteLine("0     P0       {0}{1}{2}{3}{4}{5}{6} ", P0E[1].ToString("0.00000E+0").PadLeft(13),P0E[2].ToString("0.00000E+0").PadLeft(13),P0E[3].ToString("0.00000E+0").PadLeft(13),
                    P0E[4].ToString("0.00000E+0").PadLeft(13),P0E[5].ToString("0.00000E+0").PadLeft(13),P0E[6].ToString("0.00000E+0").PadLeft(13),P0E[7].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("      T0       {0}{1}{2}{3}{4}{5}{6} ", T0E[1].ToString("0.00000E+0").PadLeft(13),T0E[2].ToString("0.00000E+0").PadLeft(13),T0E[3].ToString("0.00000E+0").PadLeft(13),
                    T0E[4].ToString("0.00000E+0").PadLeft(13),T0E[5].ToString("0.00000E+0").PadLeft(13),T0E[6].ToString("0.00000E+0").PadLeft(13),T0E[7].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("      PN       {0}{1}{2}{3}{4}{5}{6} ", PNE[1].ToString("0.00000E+0").PadLeft(13),PNE[2].ToString("0.00000E+0").PadLeft(13), PNE[3].ToString("0.00000E+0").PadLeft(13), 
                    PNE[4].ToString("0.00000E+0").PadLeft(13), PNE[5].ToString("0.00000E+0").PadLeft(13), PNE[6].ToString("0.00000E+0").PadLeft(13), PNE[7].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("      TNPROZ   {0}{1}{2}{3}{4}\n", TNPROZ[1].ToString("0.00000E+0").PadLeft(13), TNPROZ[2].ToString("0.00000E+0").PadLeft(13), TNPROZ[3].ToString("0.00000E+0").PadLeft(13), 
                    TNPROZ[4].ToString("0.00000E+0").PadLeft(13), TNPROZ[5].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("NVENT    {0}{1}{2}{3}{4}{5}{6}    NRMFI    {7}{8}{9}{10}    NRMVA    {11}{12}{13}{14}    NITR     {15}{16}{17}{18} ",
                    NVENT[1].ToString().PadLeft(4),NVENT[2].ToString().PadLeft(4),NVENT[3].ToString().PadLeft(4),NVENT[4].ToString().PadLeft(4),NVENT[5].ToString().PadLeft(4),
                    NVENT[6].ToString().PadLeft(4),NVENT[7].ToString().PadLeft(4),NRMFIE[1].ToString().PadLeft(4),NRMFIE[2].ToString().PadLeft(4),NRMFIE[3].ToString().PadLeft(4),
                    NRMFIE[4].ToString().PadLeft(4), NRMVAE[1].ToString().PadLeft(4),NRMVAE[2].ToString().PadLeft(4),NRMVAE[3].ToString().PadLeft(4),NRMVAE[4].ToString().PadLeft(4),
                    NITRE[1].ToString().PadLeft(4),NITRE[2].ToString().PadLeft(4),NITRE[3].ToString().PadLeft(4),NITRE[4].ToString().PadLeft(4));
                //125 FORMAT(1H0,5X,2HP0,7X,7E13.5/6X,2HT0,7X,7E13.5/6X,2HPN,7X,7E13.5/6
                //    6X,6HTNPROZ,3X,5E13.5//6X,5HNVENT,4X,7I4,4X,5HNRMFI,4X,4I4,4X,5HNRM
                //    3VA,4X,4I4,4X,4HNITR,5X,4I4/)                        
                
                IZ4=IZ4+1;
        
                if (LIGHT[9] == 0)
                    goto label10;
                
                if (IZ2 == 0)
                    goto label12;
                
                if(IZ4 != 4)
                    continue;
                UWA043(2);   
                IZ4=0;
            }       //200 CONTINUE         

        label10:
            if (LIGHT[10] == 1)
                goto label50;

            IEND = ITTEND[JJ];
            UWA043(2);

            sw16.WriteLine(" \n");
            sw16.WriteLine("  PA           E1A          GA           E2A          H0A         C2GESA       DFAKTA       PSTFMX       ETAIOP       VOLUME ");
            sw16.WriteLine("  PT           E1T          GT           E2T          H0T          C2GEST       DFAKTT       TSTFMX       ETAUOP       ETAI  ");
            
            sw16.WriteLine("0 T1T          T2T          DI           LS           STFDI        BRTLE        BRTLA        OEFFNG       PSI          PHI");
            
            for(I = 1; I <= IEND; I++)      //DO 51 I=1,IEND
            {
                if(I > 75)
                    goto label50;
                UWA010(I,1);
                UWA044(I,1);

                sw16.WriteLine(" \n");
                    sw16.WriteLine("  ELEM {0}      LABT{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}        KT    {11}  {12}  {13}    {14}  {15}  {16} {17}    {18}  {19}  {20} {21}    {22}  {23}  {24} {25} ",
                        I.ToString().PadLeft(2),LABT[1].ToString().PadLeft(4),LABT[2].ToString().PadLeft(4),LABT[3].ToString().PadLeft(4),LABT[4].ToString().PadLeft(4),LABT[5].ToString().PadLeft(4),
                        LABT[6].ToString().PadLeft(4),LABT[7].ToString().PadLeft(4),LABT[8].ToString().PadLeft(4),LABT[9].ToString().PadLeft(4),LABT[10].ToString().PadLeft(4),KT1.ToString().PadLeft(1),
                        KT2.ToString().PadLeft(2),KT3.ToString().PadLeft(2),KT4.ToString().PadLeft(1),KT5.ToString().PadLeft(2),KT6.ToString().PadLeft(1),KT7.ToString().PadLeft(2),KT8.ToString().PadLeft(1),
                        KT9.ToString().PadLeft(2),KT10.ToString().PadLeft(1),KT11.ToString().PadLeft(2),KT12.ToString().PadLeft(1),KT13.ToString().PadLeft(2),KT14.ToString().PadLeft(1),KT15.ToString().PadLeft(2));
                    
                sw16.WriteLine("               LZUT{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n",LZUT[1].ToString().PadLeft(4),LZUT[2].ToString().PadLeft(4),LZUT[3].ToString().PadLeft(4),LZUT[4].ToString().PadLeft(4),
                    LZUT[5].ToString().PadLeft(4),LZUT[6].ToString().PadLeft(4),LZUT[7].ToString().PadLeft(4),LZUT[8].ToString().PadLeft(4),LZUT[9].ToString().PadLeft(4),LZUT[10].ToString().PadLeft(4));
                //1X,10E13.5/1X,10E
                //13.5//1X,10E13.5)
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",XPT[I].ToString("0.00000E+0").PadLeft(13),XE1T[I].ToString("0.00000E+0").PadLeft(13),XG[I].ToString("0.00000E+0").PadLeft(13),XE2T[I].ToString("0.00000E+0").PadLeft(13),XH0[I].ToString("0.00000E+0").PadLeft(13),XC2GES[I].ToString("0.00000E+0").PadLeft(13),
                    XDFAKT[I].ToString("0.00000E+0").PadLeft(13),PSTFMX[I].ToString("0.00000E+0").PadLeft(13),ETAIOP[I].ToString("0.00000E+0").PadLeft(13),VOLUME[I].ToString("0.00000E+0").PadLeft(13));
                    
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", YPT[I].ToString("0.00000E+0").PadLeft(13),YE1T[I].ToString("0.00000E+0").PadLeft(13), YG[I].ToString("0.00000E+0").PadLeft(13),YE2T[I].ToString("0.00000E+0").PadLeft(13),YH0[I].ToString("0.00000E+0").PadLeft(13),
                    YC2GES[I].ToString("0.00000E+0").PadLeft(13),YDFAKT[I].ToString("0.00000E+0").PadLeft(13),TSTFMX[I].ToString("0.00000E+0").PadLeft(13),ETAUOP[I].ToString("0.00000E+0").PadLeft(13),ETAI [I].ToString("0.00000E+0").PadLeft(13));
                    
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", T1T[I].ToString("0.00000E+0").PadLeft(13),T2T[I].ToString("0.00000E+0").PadLeft(13),DI[I].ToString("0.00000E+0").PadLeft(13),LS[I].ToString("0.00000E+0").PadLeft(13),STFDI[I].ToString("0.00000E+0").PadLeft(13),
                    BRTLE[I].ToString("0.00000E+0").PadLeft(13),BRTLA[I].ToString("0.00000E+0").PadLeft(13),OEFFNG[I].ToString("0.00000E+0").PadLeft(13),PSI[I].ToString("0.00000E+0").PadLeft(13),PHI[I].ToString("0.00000E+0").PadLeft(13));

                //sw16.WriteLine("",140)I,(LABT[IZ3],IZ3=1,10),KT1,KT2,KT3,KT4,KT5,KT6,KT7,KT
                //1 8,KT9,KT10,KT11,KT12,KT13,KT14,KT15,(LZUT[IZ3],IZ3 =1
                //2 ,10),XPT[I],XE1T[I],XG[I],XE2T[I],XH0[I],XC2GES[I],
                //3 XDFAKT[I],PSTFMX[I],ETAIOP[I],VOLUME[I],YPT[I],
                //4 YE1T[I], YG[I],YE2T[I],YH0[I],YC2GES[I],YDFAKT[I],
                //5 TSTFMX[I],ETAUOP[I],ETAI [I],T1T[I],T2T[I],DI[I],LS[I],
                //6 STFDI[I],BRTLE[I],BRTLA[I],OEFFNG[I],PSI[I],PHI[I]
                //140 FORMAT (1H ,//,2X,5HELEM ,I2,6X,4HLABT,10I4,8X,2HKT,4X,I1,2(2X,
                //2I2),3(4X,I1,2X,I2,2X,I1,1X,I2),/15X,4HLZUT,10I4//1X,10E13.5/1X,10E
                //313.5//1X,10E13.5)
            }   //51 CONTINUE
            goto label50;
            
        label55:
            for(JJ = 1; JJ <= ANZDTT; JJ++)     //DO 1 JJ=1,ANZDTT
            {
                IZ1=JJ;
                UWA006("RDISC", 52,IZ1);
                UWA006("RDISC",59,IZ1);
                IEND=ITTEND[JJ];
                UWA043(2);
                
                //sw16.WriteLine("", 130)
                //sw16.WriteLine("", 135)
                
                for(I = 1; I <= IEND; I++)      //DO 1 I=1,IEND
                {
                    if(I > 75)
                        goto label56;
                    UWA010(I,1);
                    UWA044(I,1);
                    sw16.WriteLine(" \n");
                    sw16.WriteLine("  ELEM {0}      LABT{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}        KT    {11}  {12}  {13}    {14}  {15}  {16} {17}    {18}  {19}  {20} {21}    {22}  {23}  {24} {25} ",
                        I.ToString().PadLeft(2),LABT[1].ToString().PadLeft(4),LABT[2].ToString().PadLeft(4),LABT[3].ToString().PadLeft(4),LABT[4].ToString().PadLeft(4),LABT[5].ToString().PadLeft(4),
                        LABT[6].ToString().PadLeft(4),LABT[7].ToString().PadLeft(4),LABT[8].ToString().PadLeft(4),LABT[9].ToString().PadLeft(4),LABT[10].ToString().PadLeft(4),KT1.ToString().PadLeft(1),
                        KT2.ToString().PadLeft(2),KT3.ToString().PadLeft(2),KT4.ToString().PadLeft(1),KT5.ToString().PadLeft(2),KT6.ToString().PadLeft(1),KT7.ToString().PadLeft(2),KT8.ToString().PadLeft(1),
                        KT9.ToString().PadLeft(2),KT10.ToString().PadLeft(1),KT11.ToString().PadLeft(2),KT12.ToString().PadLeft(1),KT13.ToString().PadLeft(2),KT14.ToString().PadLeft(1),KT15.ToString().PadLeft(2));
                    
                    sw16.WriteLine("               LZUT{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n",LZUT[1].ToString().PadLeft(4),LZUT[2].ToString().PadLeft(4),LZUT[3].ToString().PadLeft(4),LZUT[4].ToString().PadLeft(4),
                        LZUT[5].ToString().PadLeft(4),LZUT[6].ToString().PadLeft(4),LZUT[7].ToString().PadLeft(4),LZUT[8].ToString().PadLeft(4),LZUT[9].ToString().PadLeft(4),LZUT[10].ToString().PadLeft(4));
                    //1X,10E13.5/1X,10E
                    //13.5//1X,10E13.5)
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",XPT[I].ToString("0.00000E+0").PadLeft(13),XE1T[I].ToString("0.00000E+0").PadLeft(13),XG[I].ToString("0.00000E+0").PadLeft(13),XE2T[I].ToString("0.00000E+0").PadLeft(13),XH0[I].ToString("0.00000E+0").PadLeft(13),XC2GES[I].ToString("0.00000E+0").PadLeft(13),
                        XDFAKT[I].ToString("0.00000E+0").PadLeft(13),PSTFMX[I].ToString("0.00000E+0").PadLeft(13),ETAIOP[I].ToString("0.00000E+0").PadLeft(13),VOLUME[I].ToString("0.00000E+0").PadLeft(13));
                    
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", YPT[I].ToString("0.00000E+0").PadLeft(13),YE1T[I].ToString("0.00000E+0").PadLeft(13), YG[I].ToString("0.00000E+0").PadLeft(13),YE2T[I].ToString("0.00000E+0").PadLeft(13),YH0[I].ToString("0.00000E+0").PadLeft(13),
                        YC2GES[I].ToString("0.00000E+0").PadLeft(13),YDFAKT[I].ToString("0.00000E+0").PadLeft(13),TSTFMX[I].ToString("0.00000E+0").PadLeft(13),ETAUOP[I].ToString("0.00000E+0").PadLeft(13),ETAI [I].ToString("0.00000E+0").PadLeft(13));
                    
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", T1T[I].ToString("0.00000E+0").PadLeft(13),T2T[I].ToString("0.00000E+0").PadLeft(13),DI[I].ToString("0.00000E+0").PadLeft(13),LS[I].ToString("0.00000E+0").PadLeft(13),STFDI[I].ToString("0.00000E+0").PadLeft(13),
                        BRTLE[I].ToString("0.00000E+0").PadLeft(13),BRTLA[I].ToString("0.00000E+0").PadLeft(13),OEFFNG[I].ToString("0.00000E+0").PadLeft(13),PSI[I].ToString("0.00000E+0").PadLeft(13),PHI[I].ToString("0.00000E+0").PadLeft(13));

                    //140 FORMAT (1H ,//,2X,5HELEM ,I2,6X,4HLABT,10I4,8X,2HKT,4X,I1,2(2X,
                    //I2),3(4X,I1,2X,I2,2X,I1,1X,I2),/15X,4HLZUT,10I4//1X,10E13.5/1X,10E
                    //13.5//1X,10E13.5)
                }
            }   //1 CONTINUE
            goto label56;
            
        label50:
            UWA043(2);
            IZ1=0;
            
        label600:
            IZ1=IZ1+1;
            sw16.WriteLine(" \n");
            sw16.WriteLine("                                       E I N G A B E   AUSLEGUNG \n");
            sw16.WriteLine("        GFD         GAB          LSTG        VMECH         ETAG         GMFIX         Q           N-PU     N-FIX N-VAR     LIGHT");
            sw16.WriteLine("0 {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}   {10}{11}{12}{13}{14}{15}{16}{17}{18}{19} ", 
                GFDE[IZ1].ToString("0.00000E+0").PadLeft(13),GABDE[IZ1].ToString("0.00000E+0").PadLeft(13),TLSTGE[IZ1].ToString("0.00000E+0").PadLeft(13),VMECHE[IZ1].ToString("0.00000E+0").PadLeft(13),
                ETAGE[IZ1].ToString("0.00000E+0").PadLeft(13),GMFIXE[IZ1].ToString("0.00000E+0").PadLeft(13),QVERBR.ToString("0.00000E+0").PadLeft(13),PULEIS.ToString("0.00000E+0").PadLeft(13),
                NRMFIE[IZ1].ToString().PadLeft(6),NRMVAE[IZ1].ToString().PadLeft(6),LIGHT[1].ToString().PadLeft(1),LIGHT[2].ToString().PadLeft(1),LIGHT[3].ToString().PadLeft(1),LIGHT[4].ToString().PadLeft(1),
                LIGHT[5].ToString().PadLeft(1),LIGHT[6].ToString().PadLeft(1),LIGHT[7].ToString().PadLeft(1),LIGHT[8].ToString().PadLeft(1),LIGHT[9].ToString().PadLeft(1),LIGHT[10].ToString().PadLeft(1));
            //150 FORMAT (2H0 ,8E13.5,2I6,3X,10I1/)
            
            if(IZ1 < ANZTRB)
                goto label600;
            
            sw16.WriteLine("0                                       L E I T U N G E N  \n");
            sw16.WriteLine("       NR   DRUCK    ENTH.     MENGE   DELTAP   DELTAE  ITURB     NR   DRUCK    ENTH.     MENGE   DELTAP   DELTAE  ITURB ");
            J=1;
            
        label512:
            for(I = 1; I <= 2; I++)     //DO 513 I=1,2
            {
                DP[I] = 0.0;
                DE[I] = 0.0;
                LNR[I]=0;
                GL[I]=0.0;
                EL[I]=0.0;
                PL[I]=0.0;
                IL[I]=0;
            }
            
            K=0;
            
            for(I = 1; I <= 2; I++)     //DO 514 I=1,2
            {
            label517:
                if (PLTG[J]+ELTG[J]+GLTG[J] != 0.0) 
                    goto label515;
                if (J <= 40 && DPLTG[J]+DELTG[J] != 0.0)
                    goto label515;
                if(ILTG[J] != 0)
                    goto label515;
                if(J == 160)
                    goto label516;
                J=J+1;
                goto label517;
            
            label515:
                LNR[I]=J;
                K=K+1;
                GL[I]=GLTG[J];
                EL[I]=ELTG[J];
                PL[I]=PLTG[J];
                IL[I]=ILTG[J];

                if(J == 160)
                    goto label516;
                
                if (J <= 40) 
                    DP[I] = DPLTG[J];
                
                if (J <= 40)
                    DE[I] = DELTG[J];
                J=J+1;
            }
            
        label516:
            if(J != 160)
                goto label519;
            
        label519:
            string ss = "";
            for(int i = 1; i <= K; i++)
                ss = ss + LNR[i].ToString().PadLeft(7) + Math.Round(PL[i],4).ToString().PadLeft(10) + Math.Round(EL[i],2).ToString().PadLeft(8) +
                     Math.Round(GL[i],3).ToString().PadLeft(10) + Math.Round(DP[i],4).ToString().PadLeft(9) + Math.Round(DE[i],2).ToString().PadLeft(8) +
                     IL[i].ToString().PadLeft(7);
            sw16.WriteLine("  {0}", ss);    //160) (LNR[I],PL[I],EL[I],GL[I],DP[I],DE[I],IL[I],I=1,K)
            //160 FORMAT (2X,2(I7,F10.4,F8.2,F10.3,F9.4,F8.2,I7))
            
            if(LNR[1] == 0)
                goto label520;
            
            if(J != 160)
                goto label512;
            
        label520:
            sw16.WriteLine("0                                      WUNSCH-LEITUNGEN \n");
            sw16.WriteLine("  NR   NRTRB    PENTN0    NR   NRTRB    PENTN0    NR   NRTRB    PENTN0    NR   NRTRB    PENTN0    NR   NRTRB    PENTN0    \n");
            //205 FORMAT (1H0,38X,16HWUNSCH-LEITUNGEN//2X,5(2HNR,3X,5HNRTRB,4X,6HPENTN0,4X)/)
            J = 1;
            
        label407:
            K = 0;
            
            for(I = 1; I <= 5; I++)     //DO 401 I= 1,5
            {
                LNR[I] = 0;
                IL [I] = 0;
                PL [I] = 0.0;
                
            label404:
                if (NRTRB[J] != 0 || PENTN0[J] != 0.0)
                    goto label402;
                
                if (J >= 46) 
                    goto label403;
                J = J + 1;
                goto label404;
                
            label402:
                LNR[I] = J;
                K= K+1;
                PL[I] = PENTN0[J];
                IL[I]=NRTRB[J];
                
                if (J == 46)
                    goto label403;
                J = J + 1;
            }
            
        label403:
            if (J != 46) 
                goto label405;
            
            if (LNR[1] == 0) 
                goto label406;

        label405:
            string s = "";
            for(int i = 1; i <= K; i++)
                s = s + LNR[i].ToString().PadLeft(3) + IL[i].ToString().PadLeft(8) + Math.Round(PL[i],4).ToString().PadLeft(11) + "  ";
            
            sw16.WriteLine(" {0} ", s);     //210) (LNR[I],IL[I],PL[I],I=1,K)
            //210 FORMAT (1X,5(I3,I8,F11.4,2X))
            
            if (J < 46) 
                goto label407;
            
        label406:
            if (LIGHT[10] == 1) 
                goto label53;
            
            if (LIGHT[9] == 0) 
                goto label56;
            UWA006("RDISC", 58,1);
            UWA006("RDISC", 51,1);
            goto label54;
            
        label53:
            UWA043(2);
            //sw16.WriteLine("",180)
            for(I = 1; I <= 75; I++)    //DO 65 I = 1,75
            {
                UWA010(I,1);
                
                if (KT10 == 0) 
                    goto label54;
                UWA044(I,1);
                sw16.WriteLine(" {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10}{11}{12}{13}{14}{15}{16}{17}{18}{19}     {20}{21}{22}{23}{24}{25}{26}{27}{28}{29} ",
                    I.ToString().PadLeft(3),KT6.ToString().PadLeft(3),KT7.ToString().PadLeft(3),KT10.ToString().PadLeft(3),Math.Round(PT[I,1],4).ToString().PadLeft(8),
                    Math.Round(T1T[I],2).ToString().PadLeft(6),Math.Round(T2T[I],2).ToString().PadLeft(6),Math.Round(E1T[I,1],2).ToString().PadLeft(6),Math.Round(E2T[I,1],2).ToString().PadLeft(6),Math.Round(DI[I],2).ToString().PadLeft(6),
                    LABT[1].ToString().PadLeft(3),LABT[2].ToString().PadLeft(3),LABT[3].ToString().PadLeft(3),LABT[4].ToString().PadLeft(3),LABT[5].ToString().PadLeft(3),LABT[6].ToString().PadLeft(3),LABT[7].ToString().PadLeft(3),
                    LABT[8].ToString().PadLeft(3),LABT[9].ToString().PadLeft(3),LABT[10].ToString().PadLeft(3),LZUT[1].ToString().PadLeft(3),LZUT[2].ToString().PadLeft(3),LZUT[3].ToString().PadLeft(3),LZUT[4].ToString().PadLeft(3),
                    LZUT[5].ToString().PadLeft(3),LZUT[6].ToString().PadLeft(3),LZUT[7].ToString().PadLeft(3),LZUT[8].ToString().PadLeft(3),LZUT[9].ToString().PadLeft(3),LZUT[10].ToString().PadLeft(3));
                
                //185 FORMAT (1H ,4(I3,1X),F8.4,5(1X,F6.2),1X,10I3,5X,10I3)
                if (KT6 == ANZDTT && KT7 == 6) 
                    goto label54;
            }   //65 CONTINUE
            
        label54:
            UWA043(2);
            sw16.WriteLine("0                                      V O R W A E R M S T R E C K E \n");
            sw16.WriteLine("    NR TYP  N1  N2     PW          D-TS         D-TK        QBZWM         VERLE        VERLP            NEBENLEITUNGEN");
            sw16.WriteLine("                       TWAUS       EWAUS        GWAS        EKONDW        DEKOND       S-STEU     TYP0 NN1 NN2 K-A I-T REI RUE");
            
            for(I = 1; I <= INENDE; I++)    //DO 522 I=1,INENDE
            {
                if (I > 60) 
                    goto label530;

                sw16.WriteLine("   {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}  {10}{11}{12}{13}{14}{15}{16}{17} ", I.ToString().PadLeft(4), NTYP[I].ToString().PadLeft(4),N1[I].ToString().PadLeft(4),N2[I].ToString().PadLeft(4),
                    PW[I].ToString("0.00000E+0").PadLeft(13),DTS[I].ToString("0.00000E+0").PadLeft(13),DTK[I].ToString("0.00000E+0").PadLeft(13),QBZWM[I].ToString("0.00000E+0").PadLeft(13),
                    VERLE[I].ToString("0.00000E+0").PadLeft(13),VERLP[I].ToString("0.00000E+0").PadLeft(13),NBLTG[I,1].ToString().PadLeft(4),NBLTG[I,2].ToString().PadLeft(4),
                    NBLTG[I,3].ToString().PadLeft(4),NBLTG[I,4].ToString().PadLeft(4),NBLTG[I,5].ToString().PadLeft(4),NBLTG[I,6].ToString().PadLeft(4),NBLTG[I,7].ToString().PadLeft(4),NBLTG[I,8].ToString().PadLeft(4));
                    
                    
                sw16.WriteLine("                   {0}{1}{2}{3}{4}{5}  {6}{7}{8}{9}{10}{11}{12} ", TWAUS[I].ToString("0.00000E+0").PadLeft(13),EWAUS[I].ToString("0.00000E+0").PadLeft(13), GWAS[I].ToString("0.00000E+0").PadLeft(13),
                    EKONDW[I].ToString("0.00000E+0").PadLeft(13),DEKOND[I].ToString("0.00000E+0").PadLeft(13),SSTEU[I].ToString("0.00000E+0").PadLeft(13),NTYP0[I].ToString().PadLeft(4),NN1[I].ToString().PadLeft(4), 
                    NN2[I].ToString().PadLeft(4),KAUSLF[I].ToString().PadLeft(4),INDDT[I].ToString().PadLeft(4),KREIHE[I].ToString().PadLeft(4),KRUECK[I].ToString().PadLeft(4));
                //175 FORMAT (1H ,2X,4I4,6E13.5,2X,8I4,/19X,6E13.5,2X,7I4/)
            }   //522 CONTINUE
            
        label530:
            UWA043(2);
            sw16.WriteLine("0");
            sw16.WriteLine("                                       GRAEDIGKEITSFAKTOREN  ");
            //190 FORMAT (1H0,/,39X,20HGRAEDIGKEITSFAKTOREN)
            
            for(I = 1; I <= INENDE; I++)    //DO 525 I=1,INENDE
            {
                if (I > 60)
                    goto label531;

                II= Math.Abs(INDDT[I]);
                
                if(II == 0)
                    continue;
            sw16.WriteLine("0 {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", II.ToString().PadLeft(4),I.ToString().PadLeft(4),OMEGA0[II].ToString("0.00000E+0").PadLeft(13),
                GKNULL[II].ToString("0.00000E+0").PadLeft(13),TSNULL[II].ToString("0.00000E+0").PadLeft(13),OMEGAR[II].ToString("0.00000E+0").PadLeft(13),
                GWNULL[II].ToString("0.00000E+0").PadLeft(13),GDNULL[II].ToString("0.00000E+0").PadLeft(13),TDNULL[II].ToString("0.00000E+0").PadLeft(13),TENULL[II].ToString("0.00000E+0").PadLeft(13));
                //195 FORMAT (2H0 ,2I4,8E13.5)
            }   //525 CONTINUE
            
        label531:
            if (LIGHT[9] != 0) 
                goto label55;
            
        label56:
            I=IRET;
            J=JRET;
            K=KRET;
            JJ = JJRET;
            LIGHT[9] = NRET;
        }
        
        
        static double UWA013(double ASP)
        {
            //ENTRY DRKEIN (ASP)
            double uwa013, P = 0;
            int ISP = (int)(ASP-898.9);
            
            if(ISP > 11) 
                goto label50;
            
            //goto label(1,2,3,4,5,6,7,8,9,100,100),
            if(ISP == 1)        goto label1;
            if(ISP == 2)        goto label2;
            if(ISP == 3)        goto label3;
            if(ISP == 4)        goto label4;
            if(ISP == 5)        goto label5;
            if(ISP == 6)        goto label6;
            if(ISP == 7)        goto label7;
            if(ISP == 8)        goto label8;
            if(ISP == 9)        goto label9;
            if(ISP == 10)       goto label100;
            if(ISP == 11)       goto label100;
            
        label1:
            P = PKOND[1];
            goto label100;
            
        label2:
            P = PNE[1];
            goto label100;
            
        label3:
            P = PNE[2];
            goto label100;
            
        label4:
            P = PNE[3];
            goto label100;
            
        label5:
            P = PNE[4];
            goto label100;
            
        label6:
            P = PST905;
            if (LLTG[14] == 2) 
                goto label8;
            
            goto label100;
            
        label7:
            P = PST906;
            
            if (LLTG[14] == 2) 
                goto label9;
            goto label100;
            
        label8:
            P = PST907;
            
            if (LLTG[14] == 2)
                PST905 = PST907;
            
            goto label100;
            
        label9:
            P = PST908;
            
            if (LLTG[14] == 2)
                PST906 = PST908;
            goto label100;
            
        label50:
            ISP = ISP - 11;
            P = PLTG[ISP];
            
            if (P == 0.0)
                P = PENTN0[ISP];
            
        label100:
            uwa013 = P;
            //DRKEIN = P;
            return uwa013;
        }   //END
        

        static void UWA014()
        {
            //ENTRY EXKRLF
            int[] ZWKT = new int[226];
            double[] ZWE1T = new double[76], ZWE2T = new double[76], ZWPT = new double[76], ZWDI = new double[76], ZWT1T = new double[76],
                ZWT2T = new double[76], ZWVENT = new double[76];
            double EVENT = 0.0, SUMG = 0, DPVOR = 0, VOL = 0, DP = 0, SGNSPA = 0, SGNSPZ = 0, SENSPZ = 0.0, E2TVOR = 0, T2TVOR = 0;
            int KT9VOR = 0, NRLTG = 0, IVOR = 0;

            for(JJ = 1; JJ <= 4; JJ++)      //DO 11 JJ = 1,4
                IENDST[JJ] = 0;     //11 CONTINUE
            
            IZ2 = 0;
            QTROM = true;
            
            for(JJ = 1; JJ <= ANZDTT; JJ++)     //DO 4 JJ=1,ANZDTT
            {
                IZ1=JJ;
                UWA006("RDISC", 52,IZ1);
                UWA006("RDISC", 59,IZ1);
                IEND=ITTEND[JJ];
                
                for(I = 1; I <= IEND; I++)      //DO 3 I=1,IEND
                {
                    UWA010(I,1);
                    UWA044(I,1);
                    
                    if(KT5 != 0 || KT1 > 1)
                        goto label1;
                    
                    if (KT7 != 4 && KT7 != 8 && KT7 != 9) 
                        goto label1;
                    
                    if (QTROM) 
                        goto label1;

                    if (ETAUOP[I] <= 0.0) 
                        EVENT = EVENT + ETAI[I];
                    continue;
                    
                label1:
                    IZ2=IZ2+1;
                    
                    if (KT7 != 4 && KT7 != 8 && KT7 != 9) 
                        goto label7;

                    if (ETAUOP[I] <= 0.0) 
                        EVENT = EVENT + ETAI[I];

                label7:
                    DPANZ[IZ2] = 0.0;
                    GESCHW[IZ2] = 0.0;
                    
                    if (KT5 == 0) 
                        goto label40;
                    
                    if (KT9VOR == KT9) 
                        goto label41;
                    
                    UWA006("RDISC",56,KT9);
                    KT9VOR = KT9;
                    
                label41:
                    if (TAFDP[KT14] <= 0.0) 
                        goto label40;
                    
                    if (LAUFEN == 1 && K == 2) 
                        goto label40;
                    SUMG = 0.0;
                    DPVOR = 0.0;
                    
                    for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 42 IZ1 = 1, 10
                    {
                        NRLTG = LABT[IZ1];
                        
                        if (NRLTG == 0)
                            goto label43;
                        
                        if (NRLTG <= 46) 
                            SUMG = SUMG + GLTG[NRLTG];
                        
                        for(int L = 1; L <= 5; L++)     //DO 141 L=1,5
                            if (NRLTG == IM[L])
                                DPVOR = DPHEIZ[L];      //141 CONTINUE
                    }   //42 CONTINUE
                    
                label43:
                    if (SUMG <= 0.0)
                        goto label40;
                    
                    VOL = VISUM(PT[I,K],T2T[I],00);
                    DP = 0.393E-6*Math.Pow((TAFDP[KT14]*SUMG),2)*VOL;
                    A4 = 0.46 * PT[I,K];
                    
                    if (DP <= A4) 
                        goto label46;
                    
                    sw16.WriteLine(" DRUCKVERLUST IM ANZAPFSCHLITZ ZU HOCH {0}{1}", PT[I,K].ToString("0.00000E+0").PadLeft(13), DP.ToString("0.00000E+0").PadLeft(13));
                    //47 FORMAT(" ","DRUCKVERLUST IM ANZAPFSCHLITZ ZU HOCH ",2E13.5) UWA014
                    
                    DP = A4;
                    
                label46:
                    if (DPVOR > 0.0)
                        DP = (DP + DPVOR)*0.5;
                    
                    if (DP > A4) 
                        DP = A4;
                    
                    for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 44 IZ1 = 1,10
                    {
                        NRLTG = LABT[IZ1];
                        if (NRLTG == 0) 
                            goto label40;
                        
                        for(IX2 = 1; IX2 <= 5; IX2++)       //DO 48 IX2 = 1,5
                            if (NRLTG == IM[IX2])
                                DPHEIZ[IX2] = DP;       //48 CONTINUE
                        
                        if (NRLTG <= 69) 
                            PLTG[NRLTG] = PT[I,K] -DP;
                        
                        DPANZ[IZ2] = DP*100.0/PT[I,K];
                        
                        if (KT14 == 1) A1 = HS1MIN[6];
                        if (KT14 == 2) A1 = HS1MAX[6];
                        if (KT14 == 3) A1 = HSZMIN[6];
                        if (KT14 == 4) A1 = HSZMAX[6];
                        if (KT14 == 5) A1 = TAKF1 [6];
                        if (A1 == 0.0) A1 = 1.0;
                        
                        GESCHW[IZ2] = SUMG*VOL*TAFDP[KT14]/Math.Sqrt(A1)/3.6;
                        
                        if (NRLTG > 48 && NRLTG < 70)
                            ELTG[NRLTG] = SIEDI(PLTG[NRLTG]);
                        
                        if (ANZTRB == 1) 
                            continue;
                        
                        for(int L = 2; L <= ANZTRB; L++)    //DO 45 L = 2,ANZTRB
                        {
                            if (NRLTG != LVAR[L]) 
                                continue;
                            DPSCHL[L] = DP;
                            break;
                        }   //45 CONTINUE
                    }   //label44 
                    
                label40:
                   
                    if (I == IVOR+1)
                        QTROM =true;
                    
                    IENDST[KT10]=IZ2;
                    
                    if (QTROM) 
                        E2TVOR = E1T[I,K];
                    
                    if (QTROM) 
                        T2TVOR = T1T[I];
                    
                    if(IZ2 > 75)    
                        sw16.WriteLine(" FELDGRENZEN DES ZWI-SPEICHERS UEBERSCHRITTEN");
                    
                    ZWE1T[IZ2] = E2TVOR;
                    ZWE2T[IZ2] = E2T[I,K];
                    E2TVOR = ZWE2T[IZ2];
                    ZWPT[IZ2] = PT[I,K];
                    ZWDI[IZ2] = DI[I];
                    ZWT1T[IZ2] = T2TVOR;
                    ZWT2T[IZ2] = T2T[I];
                    T2TVOR = ZWT2T[IZ2];
                    QTROM = false;
                    
                    if (KT7 == 6 || KT7 == 7 || KT7 == 1) 
                        goto label18;
                    
                    if(E1T[I+1,K] == E2T[I,K])
                        goto label18;
                    
                    E2TVOR = E1T[I+1,K];
                    T2TVOR = T1T[I+1];
                    
                label18:
                    if (ZWE2T[IZ2] == 0.0)
                        ZWE2T[IZ2] = ZWE1T[IZ2];
                    
                    if (ZWT2T[IZ2] == 0.0)
                        ZWT2T[IZ2] = ZWT1T[IZ2];
                    
                    if (KT1 == 3)
                        QTROM =true;
                    
                    if (KT1 == 2)
                        QTROM = false;
                    
                    if (KT7 != 7)
                        goto label19;
                    
                    ZWE2T[IZ2] = ZWE1T[IZ2];
                    ZWT2T[IZ2] = ZWT1T[IZ2];
                    QTROM = true;;
                    
                label19:
                    IVOR = I;
                    
                    if (XYZXYZ == 0.0 && IZAEL == 0 && K == 1) 
                        EVENT = 0.0;
                    
                    if (LAUFEN == 1 && K == 2) 
                        EVENT = 0.0;
                    ZWVENT[IZ2] = EVENT;
                    EVENT = 0.0;
                    
                    if (LIGHT[2] == 2)
                        sw16.WriteLine(" ++EXKRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", IZ2.ToString().PadLeft(5),ZWPT[IZ2].ToString("0.00000E+0").PadLeft(13),ZWDI[IZ2].ToString("0.00000E+0").PadLeft(13),ZWE1T[IZ2].ToString("0.00000E+0").PadLeft(13),ZWE2T[IZ2].ToString("0.00000E+0").PadLeft(13),E2TVOR.ToString("0.00000E+0").PadLeft(13),ZWT1T[IZ2].ToString("0.00000E+0").PadLeft(13),ZWT2T[IZ2].ToString("0.00000E+0").PadLeft(13),T2TVOR.ToString("0.00000E+0").PadLeft(13),ZWVENT[IZ2].ToString("0.00000E+0").PadLeft(13));
                    //15 FORMAT(" ","++EXKRLF++",I5,9E13.5/)
                    
                    IZ4 = I*3;
                    IZ3 = IZ4-2;
                    IZ5 = IZ2*3-2;
                    
                    for(int M = IZ3; M <= IZ4; M++)     //DO 2 M=IZ3,IZ4
                    {
                        ZWKT[IZ5] = (int)KT[M];
                        IZ5 = IZ5 +1;
                    }
                }   //3 CONTINUE
                
                if (LIGHT[2] == 2)
                    sw16.WriteLine(" ++EXKRLF++{0}", IENDST[KT10].ToString().PadLeft(10));
                //16 FORMAT(" ","++EXKRLF++",I10/)
            }   //4 CONTINUE
            
            for(IZ1 = 1; IZ1 <= IZ2; IZ1++)     //DO 5 IZ1=1,IZ2
            {
                ETAI[IZ1] = ZWVENT[IZ1];
                E1T[IZ1,1] = ZWE1T[IZ1];
                E2T[IZ1,1] = ZWE2T[IZ1];
                PT [IZ1,1] = ZWPT[IZ1];
                DI [IZ1] = ZWDI[IZ1];
                T1T[IZ1] = ZWT1T[IZ1];
                T2T[IZ1] = ZWT2T[IZ1];
                IZ4 = IZ1*3;
                IZ3 = IZ4-2;
                
                for(int M = IZ3; M <= IZ4; M++)     //DO 50 M = IZ3,IZ4
                    KT[M] = ZWKT[M];    //50 CONTINUE
            }   //5 CONTINUE
            //6 FORMAT(1X,44HFELDGRENZEN DES ZWI-SPEICHERS UEBERSCHRITTEN)

            SGNSPA = 0.0;
            SGNSPZ = 0.0;
            SENSPZ = 0.0;
            PLTG [100] = PST906;
            GLTG [100] = 0.0;
            ELTG [100] = 700.0;
            
            for(IZ1 = 1; IZ1 <= 10; IZ1++)  //DO 20 IZ1 = 1,10
            {
                IZ2 = NSPAB[IZ1];
                
                if (IZ2 == 0)
                    goto label21;
                SGNSPA = SGNSPA + GLTG[IZ2];

                if (LIGHT[2] == 2)
                    sw16.WriteLine(" ++EXKRLF{0}", SGNSPA.ToString("0.00000E+0").PadLeft(13));
                //14 FORMAT(" ","++EXKRLF++",2E13.5/)
            }   //20 CONTINUE
            
        label21:
            for(IZ1 = 1; IZ1 <= 10; IZ1++)  //DO 22 IZ1 = 1,10
            {
                IZ2 = NSPZU[IZ1];
                
                if (IZ2 == 0) 
                    goto label23;
                SGNSPZ = SGNSPZ + GLTG[IZ2];
                SENSPZ = SENSPZ + GLTG[IZ2]*ELTG[IZ2];
                
                if (LIGHT[2] == 2)
                    sw16.WriteLine(" ++ EXKRLF{0}{1}", SGNSPA.ToString("0.00000E+0").PadLeft(13),SENSPZ.ToString("0.00000E+0").PadLeft(13));
            }   //22 CONTINUE
            
        label23:
            if ((SGNSPZ + SGNSPA) == 0.0)
                return;
            
            A4 = SGNSPZ - SGNSPA;
            PLTG [100] = PST906;
            
            if(A4 < 0)      goto label27;
            if(A4 == 0)     goto label27;
            if(A4 > 0)      goto label28;

        label28:
            GLTG[100] = A4;
            GLTG[99] = 0.0;
            goto label29;

        label27:
            GLTG[99] = -A4;
            
            if (ELTG[99] == 0.0)
                ELTG[99] = E2T[1,1];
            
            if (PLTG[99] == 0.0)
                PLTG[99] = PT[1,1];
            
            GLTG[100] = 0.0;
            
        label29:
            SGNSPZ = SGNSPZ + GLTG[99];
            SENSPZ = (SENSPZ + GLTG[99]*ELTG[99])/SGNSPZ;
            
            for(IZ1 = 1; IZ1 <= 10; IZ1++)  //DO 30 IZ1 = 1,10
            {
                IZ2 = NSPAB[IZ1];
                
                if (IZ2 == 0) 
                    goto label31;
                ELTG[IZ2] = SENSPZ;
            }   //30 CONTINUE
            
        label31:
            if (GLTG[100] != 0.0)
                ELTG[100] = SENSPZ;
            return;
        }   //END
        
        
        static void UWA015(string s)
        {
            int LTGSTB;
            if (s == "KNOTAN")      goto KNOTAN;
            if (s == "KNOTUM")      goto KNOTUM;

        KNOTUM:
            //ENTRY KNOTUM
            bool QWEICH;
            //EQUIVALENCE (NVENT[7],IZAEL)

            QWEICH = false;
            for(IX1 = 1; IX1 <= 46; IX1++)      //DO 1 IX1=1,46
            {
                if (NRTRB[IX1] == 0)
                    continue;
                UWA008("UNPACK", ILTG[IX1], ref IZ1, ref IZ2, ref IZ3, ref IZ4);

                if (XYZXYZ == 99.0 && IZAEL > 1) 
                    goto label60;
                
                if (IZ3 > JJ && NRTRB[IX1] < 0 && IZ2 > 1) 
                    PENTN0[IX1] = 0.0;
                
            label60:
                if(IZ3 != JJ) 
                    continue;

                UWA008("UNPACK", NRTRB[IX1],ref IZ5,ref IZ6,ref IZ7,ref IZ8);

                if (XYZXYZ != 99.0)
                    goto label150;
                
                if (STZNDT[KT10] != 0 && NTTETB[KT10] == KT6)
                    goto label151;
                
                if (NRTRB[IX1] < 0)
                    goto label150;
                
            label151:
                if (IZ4 != 0)
                    PENTN0[IX1] = XPT[IZ4];
                
            label150:
                if (IZ8 == 0)
                    goto label2;
                
                if (IZ8 > ITTEND[JJ])
                    IZ8 = ITTEND[JJ];
                
                PENTN0[IX1] = XPT[IZ8];
                continue;
                
            label2:
                UWA044(IZ4,1);
                
                for(IZ9 = 1; IZ9 <= 10; IZ9++)      //DO 3 IZ9 = 1,10
                {
                    if (LABT[IZ9] == IX1) 
                        goto label4;
                    
                    if (LZUT[IZ9] != IX1)
                        continue;
                    
                    LZUT[IZ9] = 0;
                    goto label41;
                    
                label4:
                    LABT[IZ9] = 0;

                label41:
                    int IN1, IN2, IN3, IN4;
                    
                    for(IN1 = 1; IN1 <= 15; IN1++)  //DO 38 IN1 = 1,15
                    {
                        if (LTGAB[1,IN1] == 0)
                            continue;
                        UWA006("RDISC",54,IN1);
                        
                        for(IN2 = 1; IN2 <= 6; IN2++)   //DO 39 IN2 = 1,6
                        {
                            LTGSTB = LTGAB[IN2,IN1];
                            
                            if (LTGSTB == 0) 
                                break;
                            
                            IN3 = (int)(PNAST[IN2]-909.9);
                            
                            if (IN3 != IX1) 
                                continue;
                            
                            for(IN4 = 1; IN4 <= 10; IN4++)  //DO 40 IN4 = 1,10
                            {
                                if (LZUT[IN4] == LTGSTB)
                                    LZUT[IN4] = 0;
                                
                                if (LABT[IN4] == LTGSTB)
                                    LABT[IN4] = 0;
                            }   //40 CONTINUE
                        }   //39 CONTINUE
                    }   //38 CONTINUE
                    goto label5;
                }   //3 CONTINUE
                
            label5:
                UWA044(IZ4,2);
                
                if (XYZXYZ == 99.0 && IZAEL > 1)
                    goto label70;
                if (NRTRB[IX1] < 0) 
                    PENTN0[IX1] = 0.0;
                
            label70:
                UWA010(IZ4,1);
                
                if (LTGSAM[1,KT5] != 0) 
                    continue;
                KT5 = 0;
                UWA010(IZ4,2);
            }       //1 CONTINUE
            
            goto label36;
            
        KNOTAN:
            //ENTRY KNOTAN;
            QWEICH = true;
            
        label36:
            UWA021();
            
            for(IX1 = 1; IX1 <= 46; IX1++)  //DO 6 IX1 = 1,46
            {
                if (NRTRB[IX1] == 0)
                    continue;
                
                UWA008("UNPACK", NRTRB[IX1],ref IZ1,ref IZ2,ref IZ3,ref IZ4);
                if (LIGHT[2] == 3)
                    sw16.WriteLine(" ++KNOTAN,KNOTUM++{0}{1} ", JJ.ToString().PadLeft(10),KT10.ToString().PadLeft(10));
                
                if (QWEICH) 
                    goto label37;
                
                if (IZ4 != 0) 
                    continue;
                
                if (IZ3 != JJ && IZ3 != 9 && IZ3 != 0) 
                    continue;
                
            label37:
                if (IZ3 == JJ) 
                    goto label7;
                
                if(IZ2 == 0) 
                    IZ2 = 1;
                
                if(IZ2 != KT10) 
                    continue;
                
                if (IZ4 != 0 && IZ3 != JJ) 
                    continue;
                
                goto label8;

            label7:
                if (IZ4 == 0) 
                    goto label8;
                
                if (IZ4 > ITTEND[JJ])
                    IZ4 = ITTEND[JJ];
                
                PLTG[IX1] = XPT[IZ4];
                PENTN0[IX1] = XPT[IZ4];
                I = IZ4;
                goto label19;
                
            label8:
                double PANF = XPT[1];
                IX2 = ITTEND[JJ];
                PEND = XPT[IX2];
                
                if (LIGHT[2] == 3)
                    sw16.WriteLine(" ++KNOTAN,KNOTUM++{0}{1}{2}{3}{4} ", IX1.ToString().PadLeft(10),NRTRB[IX1].ToString().PadLeft(10),PENTN0[IX1].ToString("0.00000E+0").PadLeft(13),
                        PANF.ToString("0.00000E+0").PadLeft(13),PEND.ToString("0.00000E+0").PadLeft(13));
                    //25 FORMAT(" ","++KNOTAN,KNOTUM++",2I10,5E13.5/)
                
                if (IZ3 != JJ) 
                    goto label10;
                
                if (PENTN0[IX1] < PANF) 
                    goto label11;
                IX5 = 1;
                IX4 = 2;
                goto label12;
                
            label11:
                if (PENTN0[IX1] > PEND) 
                    goto label13;
                IX5 = IX2 -1;
                IX4 = IX2;
                goto label12;
                
            label10:
                if (PENTN0[IX1] < PANF && PENTN0[IX1] >= PEND) 
                    continue;
                
                if (KT10 == 1 || NTTETB[KT10]-NTTETB[KT10-1] != 1) 
                    continue;
            
            label16:
                IZ5 = JJ;
                UWA008("PACK", NRTRB[IX1], ref IZ1, ref IZ2, ref IZ5, ref IZ4);

                if(IZ3 == 9)
                    NRTRB[IX1] = -NRTRB[IX1];
                
            label13:
                for(I = 1; I <= IX2; I++)       //DO 14 I = 1,IX2
                    if (PENTN0[IX1] > XPT[I]) 
                        goto label15;       //14 CONTINUE
                
            label15:
                IX4 = I;
                IX5 = I-1;
                
            label12:
                if (IX4 > IX2) 
                    IX4 = IX2;
                
                if (IX5 < 1)
                    IX5 = 1;
                
                double PMITTE = Math.Sqrt(XPT[IX4]*XPT[IX5]);
                
                if(PENTN0[IX1] > PMITTE ) 
                    goto label17;
                IZ5 = IX4;
                IZ6 = IX5;

                goto label18;
                
            label17:
                IZ5 = IX5;
                IZ6 = IX4;
                
            label18:
                KT4 = UWA011(IZ5,4);
                I = IZ5;
                
                if (KT4 != 0) 
                    goto label19;
                
                KT4 = UWA011(IZ6,4);
                I = IZ6;
                
                if (KT4 != 0) 
                    goto label19;
                IX5 = IX5 - 1;
                IX4 = IX4 + 1;
                
                if (IX4 > IX2 && IX5 < 1) 
                    continue;
                goto label12;
                
            label19:
                UWA010(I,1);

                if (STZNDT[KT10] != 0 && NTTETB[KT10] == KT6)
                    goto label50;
                
                if (IZAEL != 2) 
                    goto label50;
                
                if (NRTRB[IX1] >= 0) 
                    goto label51;
                
                if (STWRT1 != 1) 
                    goto label55;
                
                goto label50;
                
            label51:
                if (KT11 > 0) 
                    goto label52;
                
            label55:
                KT11 = 1;
                
                if (PENTN0[IX1] > 0.0)
                    XPT[I] = PENTN0[IX1];
                
            label52:
                UWA010(I,2);
                
            label50:
                if (KT5 != 0) 
                    goto label26;
                
                for(IX3 = 1; IX3 <= 35; IX3++)      //DO 27 IX3 = 1,35
                    if (LTGSAM[1,IX3] == 0) 
                        goto label28;       //27 CONTINUE
                
                FORERR();
                
            label28:
                KT5 = IX3;
                UWA010(I,2);
                
            label26:
                UWA008("PACK", ILTG[IX1], ref IZ1, ref KT10, ref JJ, ref I);
                UWA044(I,1);
                
                for(IX3 = 1; IX3 <= 10; IX3++)      //DO 20 IX3 = 1,10
                {
                    if (IZ1 > 0) 
                        goto label21;
                    if (LABT[IX3] == 0)
                        goto label22;
                    continue;
                    
                label21:
                    if (LZUT[IX3] == 0)
                        goto label23;
                }   //20 CONTINUE
                sw16.WriteLine(" EITUNG {0} KANN NICHT MEHR ANGEKNOTET WERDEN", IX1.ToString().PadLeft(3));
                //100 FORMAT(1H ,"LEITUNG ",I3," KANN NICHT MEHR ANGEKNOTET WERDEN")
                continue;
                
            label22:
                LABT[IX3] = IX1;
                PABT[IX3] = XPT[I];
                EABT[IX3] = XE2T[I];
                GABT[IX3] = GLTG[IX1];
                goto label24;
                
            label23:
                LZUT[IX3] = IX1;
                PZUT[IX3] = PENTN0[IX1];
                EZUT[IX3] = ELTG[IX1];
                GZUT[IX3] = GLTG[IX1];
                
            label24:
                UWA044(I,2);
                
                if (LIGHT[2] == 3)
                    sw16.WriteLine(" ++KNOTAN,KNOTUM++{0}{1}{2} ", IX1.ToString().PadLeft(10),I.ToString().PadLeft(10),PLTG[IX1].ToString("0.00000E+0").PadLeft(13));
                
                if (IX1 > 40) 
                    goto label30;
                
                for(IX3 = 1; IX3 <= 15; IX3++)  //DO 31 IX3 = 1,15
                {
                    if(LTGAB[1,IX3] == 0) 
                        continue;
                    UWA006("RDISC", 54,IX3);
                    
                    for(IX4 = 1; IX4 <= 6; IX4++)   //DO 32 IX4 = 1,6
                    {
                        LTGSTB = LTGAB[IX4,IX3];
                        
                        if (LTGSTB == 0) 
                            break;
                        
                        IX5 = (int)(PNAST[IX4]-909.9);
                        
                        if (IX5 != IX1) 
                            continue;
                        
                    label33:
                        for(IX6 = 1; IX6 <= 12; IX6++)  //DO 34 IX6 = 1,12
                            if (LTGSAM[IX6,KT5] == 0) 
                                goto label35;       //34 CONTINUE
                        
                        break;      //goto label31
                        
                    label35:
                        if (ILTG[LTGSTB] > 9999)
                            LTGSTB = - LTGSTB;
                        
                        LTGSAM[IX6,KT5] = LTGSTB;
                    }       //32 CONTINUE
                }   //31 CONTINUE
                
            label30:
                if (NRTRB[IX1] >= 0)
                    goto label9;
                
                if (STZNDT[KT10] == 0 || NTTETB[KT10] != KT6)
                    goto label9;

                PENTN0[IX1] = XPT[I];
                
            label9:
                if (IX1 <= NVOR ) 
                    UWA021();
            }   //6 CONTINUE
            return;
        }   //END
              
        
        static void UWA016()
        {
            //ENTRY TURBF  
            bool QWIEDE;
            double GKORRH = 0, GKORR = 0, DSUM = 0, DPDUE = 0, ET = 0, GFDVOR = 0;
            int I1 = 0, I2 = 0, I3 = 0, I4 = 0, KT7VOR = 0, KT9RET = 0, L1 = 0, L = 0, KT10VR = 0, JJEND = 0, N = 0,
                NPROF = 0, KT9VOR = 0, KT14N = 0;
            double[] XXXC2G = new double[5];
            //EQUIVALENCE (NVENT[7],IZAEL)
            //COMMON /ABSCHR/ ABKRIT ,IZMAXA ,IZMINA ,IZMAXT ,IZMINT ,IGENND[4]  
            
            if (IZAEL  >  0)
                goto label300;
            
            XXXC2G[1] = 0.0;
            XXXC2G[2] = 0.0;                                                
            XXXC2G[3] = 0.0;                                                
            XXXC2G[4] = 0.0;                                               

        label300:
            for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 27 IZ1 = 1,10                                                
            {
                NSPAB[IZ1] = 0;
                NSPZU[IZ1] = 0;
            }   //27 CONTINUE
            GKORRH = 0.0;

            for(ITRB = 1; ITRB <= ANZTRB; ITRB++)   //DO 20 ITRB= 1,ANZTRB
            {
                IZ1 = STZNDT[ITRB];

                if (IZ1 == 0)
                    continue;
                
                JJ = NTTETB[ITRB];
                IZ1 = JJ;
                UWA006("RDISC", 52,IZ1);
                UWA006("RDISC",59,IZ1);
                I = ITTEND[JJ] + 1;
                
                if (NVENT[JJ] == -999)
                    XC2GES[2] = XXXC2G[ITRB];
                
                KT9 = 0;
                GKORR = 0.0;
                A1 = XG[I-1];
                
                if (GABDE[ITRB] > 0.0)
                    GKORR = GABDE[ITRB]- A1;
                
                if (NITRE[ITRB] == 2 && GABDE[ITRB] < 1.0) 
                    GKORR = 0.0;
                
                if (A1 != 0.0) 
                    goto label153;
                II = I;
                
            label154:
                II = II - 1;
                
                if (II == 0) 
                    goto label153;
                UWA010(II,1);
                KT9 = 0;
                
                if (KT5 == 0)
                    goto label154;
                UWA044(II,1);
                
                for(I1 = 1; I1 <= 10; I1++)     //DO 151 I1 = 1,10
                {
                    I2 = (int)LZUT[I1];
                    
                    if (I2 == 0) 
                        goto label153;
                    for(I3 = 2; I3 <= ANZTRB; I3++)     //DO 150 I3 = 2,ANZTRB
                    {
                        I4 = (int)NRMVAE[I3] + 100;
                        
                        if (I2 == I4)
                            goto label152;
                    }   //150 CONTINUE
                }   //151 CONTINUE
                goto label153;
                
            label152:
                if (GABDE[ITRB] > 0.0)
                    GKORR = GABDE[ITRB]-GLTG[I4];
                
            label153:
                if (ITRB == 1) 
                    goto label82;
                
                if ((NTTETB[ITRB]-NTTETB[ITRB-1]) != 1) 
                    goto label82;
                
                if (NITRE[ITRB] != 8 && NITRE[ITRB] != 9) 
                    goto label82;
                
                GKORR = GKORRH;
                goto label23;
                
            label82:
                GKORRH = GKORR;
                
            label23:
                I= I-1;
                KT9RET = KT9;
                UWA010(I,1);
                
                if (I == 1) 
                    goto label21;
                
                IZ1 = KT9;
                
                if (KT9 != KT9RET) 
                    UWA006("RDISC", 53,IZ1);
                
                //goto label(21,22,23,24,55,25,23,24,24),
                if(KT7 == 1)    goto label21;
                if(KT7 == 2)    goto label22;
                if(KT7 == 3)    goto label23;
                if(KT7 == 4)    goto label24;
                if(KT7 == 5)    goto label55;
                if(KT7 == 6)    goto label25;
                if(KT7 == 7)    goto label23;
                if(KT7 == 8)    goto label24;
                if(KT7 == 9)    goto label24;
                
            label55:
                if (KT11 == 0) 
                    XPT[I-1] = XPT[I];
                
                goto label23;
                
            label22:
                KT7VOR = UWA011(I+1,7);
                A3 = 1.0;
                
                if (KT7VOR == 5)
                    XC2GES[I] = XC2GES[I+1];
                
                TSTFMX[I] = 1.0;
                
                if (KT10 == 1)
                    goto label141;
                
                if ((NTTETB[KT10]-NTTETB[KT10-1]) != 1)
                    goto label141;
                
                if (NITRE[KT10] != 8 && NITRE[KT10] != 9)
                    goto label141;

                if (IZAEL != 1 || XYZXYZ != 0.0)
                    goto label141;
                
                IX1 = (int)NRMVAE[KT10];
                UWA008("UNPACK", ILTG[IX1], ref IX2, ref IX3, ref IX4, ref IX5);
                
                if (IX5 == 1) 
                    goto label141;
                
                if (IX5 == 2 && IX4 == 1) 
                    goto label141;
                
                DI[I] = 1.0;
                
            label141:
                if (KT7VOR == 3) 
                    goto label26;
                
                if (VOLUME[I-1] == 0.0)
                    goto label133;
                
                DSUM = 0.0;
                
                for(IX7 = 1; IX7 <= 4; IX7++)   //DO 110 IX7 = 1,4
                    DSUM = DSUM + Math.Pow(VENDUR[IX7],2);      //110 CONTINUE
                
                A1 = 0.0;
                
                if (DSUM == 0.0) 
                    goto label120;
                
                A1 = XG[I]*VOLUME[I-1]*0.354E+06/DSUM;
                CVENT[1] = A1;
                A1 = A1*A1*ZETAV/VOLUME[I-1]/19.62E+04;
                
            label120:
                A1 = A1 + DPBEZ*XPT[I-1];
                A2 = XPT[I-1] - A1;

                if (STZMDT[ITRB] != 99) 
                    goto label131;
                
                A3 = A2;
                goto label132;
                
            label131:
                A3 = VISUM(A2,XE1T[I],13);
                A3 = VISUM(A2,A3,12);
                A4 = XE1T[I] - Math.Pow(XC2GES[I],2)/8.37225E+03;
                A3 = VISUM(A3,A4,15);
                TSTFMX[I] = A2/A3;
                
            label132:
                A3 = A3/XPT[I-1];
                
            label133:
                if (KT7VOR != 5) 
                    goto label130;
                
                KT11 = UWA011(I+1,11);
                
                if (KT11 == 0)
                    goto label130;
                goto label26;
                
            label130:
                XPT[I-1] = XPT[I]/DI[I]/A3;
                goto label23;
                
            label26:
                XPT[I] = XPT[I-1]*DI[I]*A3;
                goto label23;
                
            label25:
                XPT[I-1] = XPT[I] + YDFAKT[I]*Math.Pow((XG[I]*VOLUME[I]/FLUT),2)*XPT[I] * 1.0E-08;
                goto label23;
                
            label24:
                A1 = (XG[I]+GKORR)/FLUT;
                A2 = YG[I];
                
                if (A1 == 0.0)
                    A1 =A2;
                
                if (A1 < 0.1)
                    A1 = 0.1;
                A3 = 1.0;
                
                if (XDFAKT[I] != 0.0)
                    A3 = YDFAKT[I] / XDFAKT[I];
                
                if (A3 < 0.01)
                    A3 = 1.0;
                
                if (XG[I] == 0.0) 
                    goto label42;
                
                if (Math.Abs(GKORR/XG[I]) > 0.20) 
                    A3 = 1.0;
                
            label42:
                A4 = XE1T[I];
                A5 = YE1T[I];
                
                if (A4 < 300.0)
                    A4 = A5;

                A6 = XPT[I];
                
                if (KT1 > 1 && PSI[75] != 0.0)
                    A6 = PSI[75]* A6;
                
                XPT[I-1] = DRUCKT(YPT[I-1],A5,YPT[I],A2,A4,A6,A1,A3);
                
                if (LIGHT[2] == 2) 
                {
                    sw16.WriteLine(" **TURBF**{0}{1}", ITRB.ToString().PadLeft(5),I.ToString().PadLeft(5));
                    sw16.WriteLine(" {0} ", Math.Round(YPT[I-1],6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(A5,6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(YPT[I],6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(A2,6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(A4,6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(A6,6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(A1,6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(A3,6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(XPT[I-1],6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(XPT[I],6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(PSI[75],6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(XG[I],6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(YG[I],6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(GABDE[ITRB],6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} ", Math.Round(GKORR,6).ToString().PadLeft(16));
                    sw16.WriteLine(" {0} \n", Math.Round(GKORRH,6).ToString().PadLeft(16));
                //40 FORMAT (" "," **TURBF**",2I5,/,2(/1X,8F16.6,/),/)
                }
                goto label23;
                
            label21:
                A1 = P0E[JJ];
                A1 = (XPT[I]-A1)/XPT[I];
                
                if (Math.Abs(A1) < 0.025)
                    IGENND[ITRB] = 1;
                
                P0E[JJ] =XPT[I];
                
                if (I == 2)
                    XPT[1] = XPT[2]/LS[1];
                IZ1 = JJ;
                
                if (JJ == 1) 
                    goto label28;
                
                if (ITRB == 1) 
                    goto label29;
                
                if(NTTETB[ITRB] == (NTTETB[ITRB-1]+1) && GMFIXE[ITRB] != 1.0)
                    goto label28;
                
            label29:
                if (LAUFEN == 1) 
                    goto label125;
                
                if (KT5 == 0) 
                    goto label125;
                UWA044(I,1);
                
                for(J = 1; J <= 10; J++)    //DO 121 J = 1,10
                {
                    IX10 = (int)LZUT[J];
                    
                    if (IX10 == 0) 
                        goto label125;
                    
                    if (IX10 > 40 && IX10 < 47) 
                        goto label122;
                }   //121 CONTINUE
                
                goto label125;
                
            label122:
                DPDUE = 0.0;
                L1 = (int)IHENDE + 1;
                
            label123:
                for(L = L1; L <= INENDE; L++)   //DO 124 L = L1,INENDE
                {
                    IZ9 = (int)NN2[L];

                    if (IZ9 != IX10)
                        continue;
                    
                    if(NTYP[L] == 8 || NTYP[L] == 9 || NTYP[L] == 19 || NTYP[L] == 23)
                        DPDUE = DPDUE + SSTEU[L];
                    
                    if (NTYP[L] == 13)
                        DPDUE = DPDUE + VERLP[L];
                    
                    IX10 = (int)NN1[L];
                    goto label123;
                }   //124 CONTINUE
                
                DI[I] = P0E[JJ]/(P0E[JJ] + DPDUE);
                
            label125:
                PNE[JJ-1] = P0E[JJ]/DI[I];
                
                if (NVENT[JJ] == -999)
                    PNE[JJ-1] = P0E[JJ]/TSTFMX[2]/DI[I];
                
            label28:
                if (NVOR <= 0)
                    goto label18;
                
                IZ3 = JJ-1;
                
                if (IZ3 <= 0)
                    goto label18;
                
                IZ4 = ITTEND[IZ3];
                
                for(IZ2 = 1; IZ2 <= NVOR; IZ2++)    //DO 19 IZ2 = 1,NVOR
                {
                    UWA008("UNPACK", NRTRB[IZ2], ref IZ5, ref IZ6, ref IZ7, ref IZ8);
                    
                    if (IZ7 != IZ3 || IZ8 < IZ4) 
                        continue;
                    
                    PENTN0[IZ2] = PNE[JJ-1];
                    PLTG[IZ2] = PNE[JJ-1];
                }   //19 CONTINUE
                
            label18:
                UWA006("WDISC", 52,IZ1);
                UWA006("WDISC", 59,IZ1);
            }   //20 CONTINUE
            
            KT10VR = 0;
            
            for(JJ = 1; JJ <= ANZDTT; JJ++)     //DO 1 JJ = 1,ANZDTT
            {
                QWIEDE = false;
                JJEND=ITTEND[JJ];
                IZ1 = JJ;
                UWA006("RDISC",52,IZ1);
                UWA006("RDISC",59,IZ1);
                UWA010(1,1);
                
            label54:
                if (IZAEL == 0 && XYZXYZ == 0.0) 
                    goto label1002;
                UWA044(1,1);
                
                for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 1000 IZ1 = 1,10
                {
                    IZ2 = LZUT[IZ1];
                    
                    if (IZ2 > 40 && IZ2 < 47 && T0E[JJ] == 0.0)
                        T1T[1] = 0.0;
                    
                    if (IZ2 > 40 && IZ2 < 47 && T0E[JJ] == 0.0)
                        ET = ELTG[IZ2];
                    
                    if (IZ2 > 40 && IZ2 < 47) 
                        goto label1001;
                }       //label1000:

            label1002:
                if (JJ > 1)
                    T1T[1] = T0E[JJ];
                
            label1001:
                if (T1T[1] == 0.0) 
                    goto label8;
                
                if (KT10 <= 1) 
                    goto label10;
                
                if((NTTETB[KT10-1]+1) != JJ ) 
                    goto label10;
                
                if(P0E[JJ] <= 0) 
                    goto label10;
                
                if (STZNDT[KT10] != 0 && NTTETB[KT10] == KT6) 
                    goto label70;
                
                goto label71;

            label70:
                if (NITRE[KT10] != 8 && NITRE[KT10] != 9) 
                    goto label10;
                
                if((IZAEL == 1 || IZAEL == 3 || IZAEL == 5) && GMFIXE[KT10] != 1.0)
                    GMFIXE[KT10] = GMFIXE[KT10] * (P0E[JJ]-(P0E[JJ]-XPT[1])*GMFIXE[KT10])/XPT[1];

                sw16.WriteLine(" {0} ", Math.Round(GMFIXE[KT10],5).ToString().PadLeft(7));
                //72 FORMAT (1X,F7.5)
                goto label10;
                
            label71:
                XPT[1] = P0E[JJ];
                
            label10:
                XE1T[1] = VISUM(XPT[1],T1T[1],01);
                goto label9;
                
            label8:
                XE1T[1]=ET;
                
                if (KT10 > 1 && KT6 == (NTTETB[KT10-1]+1))
                    XE1T[1]=ELTG[NRMVAE[KT10]];
                
                T1T[1] = VISUM(XPT[1],XE1T[1],03);
                
            label9:
                if (XYZXYZ != 99.0)
                    goto label60;
                
                if (IZAEL > 1) 
                    goto label60;
                
                if (STZNDT[KT10] != 0 && NTTETB[KT10] == KT6) 
                    goto label60;
                UWA052();
                
            label60:
                I = 0;
                
            label3:
                I= I+1;
                if (I > JJEND) 
                    goto label2;

                UWA010(I,1);
                //goto label(4,12,13,14,15,4,17,14,14),
                if(KT7 == 1)    goto label4;
                if(KT7 == 2)    goto label12;
                if(KT7 == 3)    goto label13;
                if(KT7 == 4)    goto label14;
                if(KT7 == 5)    goto label15;
                if(KT7 == 6)    goto label4;
                if(KT7 == 7)    goto label17;
                if(KT7 == 8)    goto label14;
                if(KT7 == 9)    goto label14;
                
            label4:
                XE2T[I] = XE1T[I];
                
            label31:
                XE1T[I+1] = XE2T[I];
                T2T[I] = VISUM (XPT[I],XE2T[I],03);
                T1T[I+1] = T2T[I];
                
                if (KT7 != 3) 
                    goto label3;

                A2 = XE2T[I] - Math.Pow(XC2GES[I],2)/8.37225E+03;
                A3 = VISUM(XPT[I],A2,13);
                A3 = VISUM(XPT[I],A3,12);
                A2 = XE2T[I];
                A3 = VISUM(A3,A2,15);
                TSTFMX[I] = A3/XPT[I];
                goto label3;
                
            label12:
                int KT7NAC = UWA011(I+1,7);
                A3 = 1.0;
                TSTFMX[I] = 1.0;

                if (KT7NAC == 5) 
                    XC2GES[I] = XC2GES[I+1];
                
                if (KT7NAC == 3) 
                    goto label90;
                
                if (I > 3) 
                    goto label90;
                
                if (VOLUME[I-1] == 0.0)
                    goto label90;

                DSUM = 0.0;
                
                for(IZ7 = 1; IX7 <= 4; IX7++)   //DO 80 IX7 = 1,4
                    DSUM = DSUM + Math.Pow(VENDUR[IX7],2);  //80 CONTINUE
                
                A1 = 0.0;
                if (DSUM == 0.0)
                    goto label100;
                
                A1 = XG[I]*VOLUME[I-1]*0.354E+06/DSUM;
                CVENT[1] = A1;
                A1 = A1*A1*ZETAV/VOLUME[I-1]/19.62E+04;
                
            label100:
                A1 = A1 + DPBEZ*XPT[I-1];
                A2 = XPT[I-1] - A1;
                
                if (STZMDT[KT10] != 99) 
                    goto label91;
                A3 = A2;
                goto label92;
                
            label91:
                A3 = VISUM(A2,XE1T[I],13);
                A3 = VISUM(A2,A3,12);
                A4 = XE1T[I] - Math.Pow(XC2GES[I],2)/8.37225E+03;
                A3 = VISUM(A3,A4,15);
                TSTFMX[I] = A2/A3;

            label92:
                A3 = A3/XPT[I-1];
                
            label90:
                XPT[I] = XPT[I-1]*DI[I]*A3;
                goto label4;
                
            label13:
                if(KT11 == 0) 
                    XPT[I] = XPT[I-1]/(GMAXG1+0.05);
                
                if (YPT[I] < 0.0)
                    XPT[I] = - XPT[I-1] * YPT[I];
                
            label93:
                if (LAUFEN > 1) 
                    goto label31;
                
                double HNULL = HADCA(XPT[I-1],XPT[I],XE1T[I]);
                XE2T[I] = XE1T[I]-0.7*HNULL;
                goto label31;
                
            label14:
                IANF = I;
                if(KT11 > 0)
                    goto label50;
                
            label51:
                I = I + 1;
                
                if (I > JJEND) 
                    goto label2;
                UWA010(I,1);
                
                if (KT7 == 4 || KT7 == 9)
                    goto label50;
                goto label51;
                
            label50:
                if (KT11 == 0) 
                    goto label51;
                IEND = I;
                
                if (KT10 <= 1 && GMFIXE[KT10+1] != 1.0)
                    goto label11;
                
                if (NTTETB[KT10] != JJ) 
                    goto label11;
                
                if (IEND == JJEND) 
                    goto label16;
                
                if (IEND != (JJEND-1))
                    goto label11;
                
                XPT[IEND+1] = PNE[JJ];
                
            label16:
                XPT[IEND] = PNE[JJ];
                
            label11:
                if (NTTETB[KT10] != (JJ+1)) 
                    goto label30;
                
                if (IEND == JJEND && STZNDT[KT10] != 0) 
                    XPT[IEND] =PNE[JJ];
                
            label30:
                KT7NAC = UWA011(I+1,7);
                
                if (KT7NAC != 6) 
                    goto label85;
                
                UWA006("RDISC", 53,KT9);
                XPT[IEND] = XPT[JJEND] + YDFAKT[JJEND]*Math.Pow((VOLUME[JJEND]*XG[JJEND]/FLUT),2) *XPT[JJEND]*1.0E-08;
                
            label85:
                if(IANF == IEND) 
                    goto label93;
                UWA018();
                I = IEND;
                goto label3;
                
            label15:
                if (KT11 == 0)
                    XPT[I] = XPT[I-1];
                
                if (YPT[I] < 0.0)
                    XPT[I] = - XPT[I-1] * YPT[I];
                TSTFMX[I] = TSTFMX[I-1];
                
                if (XPT[I-1] <= XPT[I]) 
                    goto label140;
                
                XPT[I-1] = XPT[I-1] * TSTFMX[I-1];
                TSTFMX[I-1] = 1.0;
                
            label140:
                N = 1;
                
                if (XPT[I-1] < XPT[I]) 
                    sw16.WriteLine(" TURB.WARNING{0}", N.ToString().PadLeft(3));
                //88 FORMAT(1X,12HTURB.WARNING,I3)
                
                goto label4;
                
            label17:
                XE2T[I] = XE1T[I]-DI[I];
                XPT[I+1] = XPT[I]*LS[I];
                
                if (XG[1] <= 0.0)
                    goto label31;
                
                A3 = VISUM (XPT[1],T1T[1],00);
                XDFAKT[1] = (1.0-LS[1])*XPT[1]/A3/XG[1]/XG[1];
                A3 = T1T[1];
                
                if(A3 <= 0.0)
                    A3 = UW0011(XPT[1],1);
                
                ETAI[1] = DI[1] * XG[1]/(A3-300.0);
                goto label31;

            label2:
                if (LAUFEN != 1) 
                    goto label32;
                
                if (XYZXYZ == 99.0)
                    goto label32;
                UWA015("KNOTAN");

                for(I = 1; I <= JJEND; I++)     //DO 37 I = 1,JJEND
                {
                    UWA044(I,1);
                    
                    for(N = 1; N <= 10; N++)    //DO 38 N = 1,10
                    {
                        if (LABT[N] == 0) 
                            goto label39;
                        if (PABT[N] == 0.0)
                            PABT[N] = XPT[I];
                        if (EABT[N] == 0.0)
                            EABT[N] = XE2T[I];
                        
                    label39:
                        if (LZUT[N] == 0) 
                            continue;
                        
                        if (PZUT[N] == 0.0) 
                            PZUT[N]= XPT[I];
                        if (EZUT[N] == 0.0)
                            EZUT[N]= XE2T[I];
                    }   //38 CONTINUE
                    UWA044(I,2);
                }   //37 CONTINUE
                goto label33;
                
            label32:
                UWA015("");
                
                if (IZAEL != 2) 
                    goto label53;
                if (QWIEDE) 
                    goto label53;
                QWIEDE = true;
                if (XYZXYZ == 99.0)
                    goto label53;
                UWA010(1,1);
                
                if (STZNDT[KT10] != 0 && NTTETB[KT10] == KT6) 
                    goto label53;
                goto label54;
                
            label53:
                NPROF = 0;
                KT9VOR = 0;
                
                if (KT10 == KT10VR) 
                    goto label52;
                KT10VR = KT10;
                GFDVOR = GFDE[KT10];
                
            label52:
                XG[1] = GFDVOR;
                
                for(I = 1; I <= JJEND; I++)     //DO 34 I=1,JJEND
                {
                    UWA010(I,1);
                    IZ1 = KT9;
                    
                    if (KT9 == KT9VOR) 
                        goto label7;
                    KT14N = 1;
                    UWA006("RDISC", 53, IZ1);
                    UWA006("RDISC", 56, IZ1);
                    KT9VOR = KT9;
                    
                label7:
                    //goto label(41,41,43,44,41,41,47,44,44), 
                    if(KT7 == 1)    goto label41;
                    if(KT7 == 2)    goto label41;
                    if(KT7 == 3)    goto label43;
                    if(KT7 == 4)    goto label44;
                    if(KT7 == 5)    goto label41;
                    if(KT7 == 6)    goto label41;
                    if(KT7 == 7)    goto label47;
                    if(KT7 == 8)    goto label44;
                    if(KT7 == 9)    goto label44;
                
                label41:
                    XE2T[I] = XE1T[I];
                    
                label5:
                    T2T[I] = VISUM (XPT[I],XE2T[I],03);
                    
                label36:
                    UWA020();
                
                    if (KT7 != 4 && KT7 != 8 && KT7 != 9)
                        VOLUME[I] = VISUM(XPT[I],T2T[I],00);

                    continue;
                    
                label43:
                    UWA032();
                    goto label5;
                    
                label44:
                    if (NPROF == KT15) 
                        goto label35;
                    
                    NPROF = KT15;
                    UWA006("RDISC",61,NPROF);
                    UWA006("RDISC",60, NPROF);
                    UWA006("RDISC",63, NPROF);
                    
                label35:
                    if (STZMDT[KT10] == 99) 
                        goto label83;
                    UWA070();
                    goto label84;
                    
                label83:
                    UWA083();
                    
                label84:
                    if (TABANZ[1] >= 0.0)
                        goto label36;
                    
                    if (TAZLE[2] < 0.5) 
                        goto label36;
                    
                    if (XYZXYZ == 99.0)
                        goto label36;
                    
                    if (STZNDT[KT10] != 0 && NTTETB[KT10] == KT6) 
                        goto label36;
                    
                    KT14 = KT14N;
                    UWA010(I,2);
                    
                    if (KT5 == 0)
                        goto label36;
                    
                    for(N = 1; N <= 12; N++)    //DO 61 N=1,12
                    {
                        double LTG = Math.Abs(LTGSAM[N,KT5]);
                        
                        if (LTG == 0) 
                            goto label36;

                        if (LTG > 46)
                            continue;
                        KT14N = KT14N + 1;
                        goto label36;
                    }   //label61 CONTINUE
                    
                label47:
                    XE2T[I] = XE1T[I] - DI[I];
                    goto label5;
                }   //34 CONTINUE

            label33:
                ET = XE1T[JJEND+1];
                GFDVOR = XG[JJEND+1];
                
                if (LIGHT[2] == 1) 
                    UWA012();
                UWA006("WDISC", 52,JJ);
                UWA006("WDISC", 59,JJ);
                
                for(N = 1; N <= ANZTRB; N++)    //DO 400 N = 1,ANZTRB
                {
                    I = NTTETB[N];
                    
                    if (STZNDT[N] == 0) 
                        continue;
                    
                    if (JJ != I-1) 
                        continue;
                    
                    if (NVENT[JJ+1] != -999) 
                        continue;
                    
                    XXXC2G[N] = XC2GES[ITTEND[JJ]];
                    break;
                }   //400 CONTINUE
            }   //1 CONTINUE
            return;
        }   //END


        static void UWA017()
        {
            //ENTRY UPETRU
            return;
        }   //END
        
        
        static void UWA018()
        {
            //ENTRY STFGRF
            int N, KT7A;
            double HISTF, PNULL, TNULL, ENULL, PGEG, PHTURB, SNULL, STFNR, TGEG, EGEG, HNULL, SUMMEH, SUMMEU, STFZAL, KT9RET, SUMPSI, A11, A12, A13, A14;
            double[] FLSTF = new double[76], UPMSTF = new double[76];
            //EQUIVALENCE (NVENT[7],IZAEL)
            //COMMON /GEFFAK/ HFAKTE(15)
            //EQUIVALENCE ( FLSTF[1],C2GES(1,2)), (UPMSTF[1], H0(1,2))
            
            PNULL = XPT[IANF-1];
            TNULL = T1T[IANF];
            ENULL = XE1T[IANF]-Math.Pow(XC2GES[IANF-1],2.0)/8372.25;
            
            if (IZAEL > 2) 
                goto label18;
            
            if (XYZXYZ != 0.0 && IZAEL > 1) 
                goto label18;
            
            TNULL = T2T[IANF-1];
            ENULL = XE2T[IANF-1];
            
        label18:
            PGEG =XPT[IEND];
            
            if (PGEG > 300.0)
                UWA013(PGEG);

            PHTURB = XPT[IEND];
            
            if (XYZXYZ == 0.0 && IZAEL <= 2) 
                goto label11;
            
            if (IZAEL == 0) 
                goto label11;
            
            KT1 = UWA011(IEND,1);
            
            if (KT1 <= 1 || PSI[75] == 0.0) 
                goto label11;
            
            PGEG = PSI[75] * PGEG;
            
            A1 = (XPT[IEND-1]-PGEG)*0.5;
            
            if ((PGEG+A1) < PHTURB) 
                PGEG = PHTURB;
            
        label11:
            SNULL = VISUM(PNULL,TNULL,12);
            TGEG = VISUM(PGEG,SNULL,14);
            EGEG = VISUM(PGEG,TGEG,11);
            HNULL = ENULL-EGEG;
            HNULL = HNULL + (Math.Pow(XC2GES[IANF-1],2.0) - Math.Pow(XC2GES[IEND],2)) /8372.25;
            SUMMEH=HNULL*(1.0+0.00036*HNULL);
            SUMMEU = 0.0;
            KT9 = 0;
            STFZAL = 0.0;

            if (STZNDT[KT10] == 0) 
                goto label12;
            
            if (NTTETB[KT10] != KT6) 
                goto label12;
            STFZAL = (IEND-IANF);
            KT7A = UWA011(IEND,7);
            
            if (KT7A == 4) 
                STFZAL = STFZAL + 1;
            
            if (XYZXYZ == 99.0)
                return;
            goto label13;
            
        label12:
            for(I = IANF; I <= IEND; I++)   //DO 1 I=IANF,IEND
            {
                KT9RET = KT9;
                UWA010(I,1);
                IZ1 = KT9;
                
                if (KT9RET != KT9)
                    UWA006("RDISC", 53,IZ1);
                
                if (KT7 == 4)
                    goto label2;
                
                if (KT7 < 8)
                    continue;
                
            label2:
                UPMSTF[I] = (STFDI[I]+LS[I])*XUPM*5.23598E-05;
                FLSTF[I] = FLUT;

                if (KT7 == 8)
                    continue;
                
                STFZAL = STFZAL + 1.0;
                SUMMEU = SUMMEU + UPMSTF[I] * UPMSTF[I];
            }   //1 CONTINUE
            SUMPSI= SUMMEH/SUMMEU*8.37225E+03;
            A11 = (STFDI[IEND]+LS[IEND])/(STFDI[IANF]+LS[IANF]);
            
            if (A11 < 1.0 || STFZAL <= 1.0)
                A11 = 1.0;

            A12 = 0.0;
            
            if (STZMDT[1] == 99)
                A12 = 0.3;
            A11 = Math.Pow(A11,A12);
            A12 = (A11 - 1.0) * 2.0;
            
            if (STFZAL >= 2.0) 
                A12 = A12/(STFZAL-1.0);
            
            for(I = IANF; I <= IEND; I++)   //DO 3 I=IANF,IEND
            {
                KT7 = UWA011(I,7);
                KT7A=UWA011(I-1,7);
                
                if (KT7 == 4) 
                    goto label7;
                
                if (KT7 < 8) 
                    goto label8;
                
            label7:
                A13 = 1.0;
                
                if (KT7 >= 8) 
                    A13 = 0.5;
                A11 = A11 - A12*A13;
                A14 = 1.0;
                XH0[I] = SUMPSI*UPMSTF[I]* UPMSTF[I]/8.37225E+03;
                
                if (KT7 == 8 || KT7 == 9) 
                    XH0[I] = XH0[I]/2.0;
                
                if (XH0[I] <= 0.0) 
                    XH0[I] = 0.01;
                
                if (PSI[I] != 0.0)
                    A14 = A14 + (Math.Pow(XC2GES[I],2) - Math.Pow(XC2GES[I-1],2)) / 8.37225E+03/XH0[I];
                
                if (A14 > 3.0) 
                    A14 = 3.0;
                
                if (A14 < 0.7) 
                    A14 = 0.7;
                
                if (STZMDT[1] != 99) 
                    goto label9;
                
                if (KT7A != 4)
                    A14 = 1.03;
                
            label9:
                XH0[I] = SUMPSI*UPMSTF[I]* UPMSTF[I]/8.37225E+03 * A11 *A14;
                
                if (KT7 < 8) 
                    goto label4;
                
                XH0[I] = XH0[I]/2.0;
                KT1 = UWA011(IEND,1);
                
                if (KT1 <= 1) 
                    goto label4;
                
                KT9 = UWA011(I,9);
                XH0[I] = XH0[I] * HFAKTE[KT9];
                
            label4:
                XPT[I] = HADCA(XPT[I-1],XE1T[I],XH0[I]) * XPT[I-1];
                
                if (LIGHT[2] == 2) 
                {
                    sw16.WriteLine(" **STFGRF**{0} ", I.ToString().PadLeft(5));
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7} ",Math.Round(XPT[I],6).ToString().PadLeft(16),Math.Round(XPT[I-1],6).ToString().PadLeft(16),Math.Round(XE1T[I],6).ToString().PadLeft(16),
                        Math.Round(XH0[I],6).ToString().PadLeft(16),Math.Round(A11,6).ToString().PadLeft(16),Math.Round(A14,6).ToString().PadLeft(16),Math.Round(SUMPSI,6).ToString().PadLeft(16),Math.Round(UPMSTF[I],6).ToString().PadLeft(16));
                }
                if (ETAI [I] == 0.0)
                    ETAI [I] = 0.8;
                
                XE2T[I] = XE1T[I] - (XH0[I]*ETAI [I]);
                
                if (I != IEND) 
                    XE1T[I+1]= XE2T[I];
                continue;
                
            label8:
                XPT[I] = XPT[I-1];
                if (KT7 == 2) 
                    XPT[I] = XPT[I]*DI[I];
            }   //3 CONTINUE
            PEND = XPT[IEND];
            A1 = PGEG/PEND;
            STFNR = 0.0;
            
            for(I = IANF; I <= IEND; I++)   //DO 5 I=IANF,IEND
            {
                KT7 = UWA011(I,7);
                if (KT7 == 4) 
                    goto label16;
                if (KT7 < 8) 
                    goto label17;
                STFNR = STFNR + 0.5;
                goto label17;
                
            label16:
                STFNR = STFNR + 1.0;
                
            label17:
                XPT[I] = XPT[I]* Math.Pow(A1,(STFNR/STFZAL));
                T2T[I] = VISUM(XPT[I],XE2T[I],03);
                if (I != IEND) 
                    T1T[I+1] = T2T[I];
                
                if (LIGHT[2] == 2) 
                {
                    sw16.WriteLine(" **STFGRF**{0}", I.ToString().PadLeft(5));
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7} ", Math.Round(XPT[I],6).ToString().PadLeft(16),Math.Round(STFNR,6).ToString().PadLeft(16),Math.Round(STFZAL,6).ToString().PadLeft(16),
                        Math.Round(XPT[IEND],6).ToString().PadLeft(16),Math.Round(PGEG,6).ToString().PadLeft(16),Math.Round(PHTURB,6).ToString().PadLeft(16),Math.Round(SUMMEH,6).ToString().PadLeft(16),
                        Math.Round(SUMMEU,6).ToString().PadLeft(16));
                //10 FORMAT(" "," **STFGRF**",I5,/1X,8F16.6,/)
                }
            }   //5 CONTINUE
            
            if (KT1 > 1 && PSI[75] != 0.0) 
                XPT[IEND] = PHTURB;

        label13:
            if(LAUFEN > 1) 
                return;
            
            HISTF = SUMMEH*0.8/STFZAL;
            
            for(I = IANF; I <= IEND; I++)   //DO 6 I = IANF,IEND
            {
                KT7 = UWA011(I,7);
                if (KT7 == 4) 
                    goto label14;
                if (KT7 == 9) 
                    goto label14;
                
                XE2T[I] = XE1T[I];
                goto label15;
                
            label14:
                XE2T[I] = XE1T[I]-HISTF;
                XH0[I] = HISTF/0.8;
                
            label15:
                XE1T[I+1] = XE2T[I];
                T2T[I] = VISUM(XPT[I],XE2T[I],03);
                T1T[I+1] = T2T[I];
            }   //6 CONTINUE
            return;
        }   //END
                
                
        static void UWA019()
        {
            //ENTRY ENDVOR
            int N, L;
            for(L = 1; L <= IHENDE; L++)    //DO 1000 L=1,IHENDE
            {
                if (NTYP[L] != 22) 
                    continue;
                
                A1 = UW0011(DTK[L]+273.15,2) - UW0011(TWAUS[L-1],2);
                I = L - 1;
                
            label100:
                if (NTYP[I] == 1 || NTYP[I] == 2 || NTYP[I] == 21) 
                    goto label200;
                I = I - 1;
                
                if (I <= 1) 
                    goto label1100;
                goto label100;
                
            label200:
                II = (int)N1[I];
                
            label300:
                UWA008("UNPACK", ILTG[II], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
                
                if (IZ2 > 0) 
                    goto label500;

                for(N= 1; N <= IHENDE; N++)     //DO 350 N=1,IHENDE
                {
                    if (NTYP[N] != 5)
                        continue;

                    if (N2[N] != II)
                        continue;
                    II = (int)N1[N];
                    goto label300;
                }   //350 CONTINUE

                if (INENDE == IHENDE) 
                    goto label1300;
                N = IHENDE;
                
            label400:
                N = N + 1;
                
                if (N > INENDE) 
                    goto label1300;

                K1 = NN1[N];
                K2 = NN2[N];
                K3 = N2[N];
                
                if (K1 == 0 || K2 == 0) 
                    goto label400;
                
                if (K2 != II && K3 != II) 
                    goto label400;
                II = K1;
                goto label300;

            label500:
                IZ1 = NTTETB[IZ2];
                if (IZ3 == IZ1 && STZNDT[IZ2] != 0) 
                    goto label1500;
                
                if (IZ4 == ITTEND[IZ3] && IZ3+1 == IZ1 && STZNDT[IZ2] != 0)
                    goto label1500;
                
                UWA006("RDISC", 52,IZ3);
                A2 = XPT[IZ4];
                PENTN0[II] = XPT[IZ4] + A1;
                XPT[IZ4] = PENTN0[II];
                A3 = XPT[IZ4];
                IZ6 = ILTG[II];
                
                for(int LL = 1; LL <= 46; LL++)     //DO 600 LL=1,46
                    if (ILTG[LL] == IZ6) 
                        PENTN0[LL] = PENTN0[II];    //600 CONTINUE

                UWA006("WDISC", 52,IZ3);

                if (ITTEND[IZ3] != IZ4) 
                    goto label800;

                A4 = P0E[IZ3+1]/PNE[IZ3];
                PNE[IZ3] = PENTN0[II];
                P0E[IZ3+1] = PNE[IZ3]*A4;
                UWA006("RDISC", 52,IZ3+1);
                XPT[1] = P0E[IZ3+1];
                UWA006("WDISC", 52,IZ3+1);

            label800:
                if (LIGHT[2] == 7)
                    sw16.WriteLine(" *** ENDVOR ***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11} ", L.ToString().PadLeft(5),IZ2.ToString().PadLeft(5),IZ3.ToString().PadLeft(5),IZ4.ToString().PadLeft(5),ITTEND[IZ3].ToString().PadLeft(5),NTTETB[IZ2].ToString().PadLeft(5),
                        Math.Round(DTK[L],3).ToString().PadLeft(12),Math.Round(TWAUS[L-1]-273.15,3).ToString().PadLeft(12),Math.Round(A1,3).ToString().PadLeft(12),Math.Round(A2,3).ToString().PadLeft(12),Math.Round(A3,3).ToString().PadLeft(12),Math.Round(PENTN0[II],3).ToString().PadLeft(12));
                    //900 FORMAT(1H ,"*** ENDVOR ***",6I5,7F12.3)

                if (NRTRB[II] < 0) 
                    NRTRB[II] = -NRTRB[II];
            }       //1000 CONTINUE
            return;

        label1100:
            //sw16.WriteLine("",1200) L
            sw16.WriteLine(" *** ENDVOR *** VOR DEM SOLLWERT ELEMENT NR.{0} KOM UWA019MT KEIN ELEMENT 01, 02 ODER 21", L.ToString().PadLeft(3));
            Console.WriteLine("$$$$$$$$ E N D V O R 1 $$$$$$$$$");
            Console.ReadKey();
            Environment.Exit(0);

        label1300:
            //sw16.WriteLine("",1400) N1[I],L
            sw16.WriteLine(" *** ENDVOR *** ANZAPFLEITUNG{0} IST NICHT AN EINE T UWA019URBINE ANGEKNOTET . ELEMENT{1} NICHT ZULAESSIG",
                N1[I].ToString().PadLeft(3), L.ToString().PadLeft(3));
            Console.WriteLine("$$$$$$$$ E N D V O R 2 $$$$$$$$$");
            Console.ReadKey();
            Environment.Exit(0);

        label1500:
            //sw16.WriteLine("",1600) N1[I],L
            sw16.WriteLine(" *** ENDVOR *** ANZAPFLEITUNG{0} AUS ND-TEIL. SOLLWE UWA019RT ELEMENT NR.{1} NICHT MOEGLICH",
                N1[I].ToString().PadLeft(3), L.ToString().PadLeft(3));
            
            Console.WriteLine("$$$$$$$$ E N D V O R 3 $$$$$$$$$");
            Console.ReadKey();
            Environment.Exit(0);
        }   //END
        
        
        static void UWA020()
        {
            //ENTRY MENGUP
            //INCLUDE "KRAWAL80.COMMON"
            //COMMON /ENTWCO/ ACW1, ACW2, ACW3, ACW4, ACW5, ACW6, ACW7, TKUEL
            //COMMON /ENTWNR/ NRENTW
            //COMMON /STOBU/ GSTOB[2], QSTOB[2],GSTOZU,GSTOAB,QSTOZU
            //COMMON /VERS9/ GMINTT[4]
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /LVART/ LVAR[4],PVAR[4],HVAR[4]
            double GEXTAP = 0, GENTW = 0, GMI = 0, QMI = 0, GZUESP = 0, QZUESP = 0, GPARA = 0, QPARA = 0, GAPARA = 0, GDIFPA = 0, A11 = 0,
                GMIN = 0, GVOR = 0, EVOR = 0, A12 = 0, A13 = 0, A14 = 0, A15 = 0, A16 = 0, DELTAG = 0, ENTALP = 0, ENACH = 0, T = 0, EENTW = 0;

            int NEXTAP = 0, I11 = 0, I12 = 0, LTGSTB = 0, N = 0, I13 = 0, NVH = 0, I14 = 0, I15 = 0;
            
            if (I == 1 && JJ == 1)
                NRENTW = 0;
            
            if (NRENTW == 0) 
                PLTG[49] = 0.0;
            
            A11 = Math.Abs(T1T[I]);
            
            if (KT7 == 9)
                A11 = Math.Abs(T1T[I-1]);
            
            GMIN = GMINTT[KT10];
            NEXTAP = 0;
            GEXTAP = 0.0;
            GENTW = 0.0;
            GMI=0.0;
            QMI=0.0;
            GSTOBU = 0.0;
            GSTOAB = 0.0;
            GSTOZU = 0.0;
            QSTOZU = 0.0;
            GSTOB[1] = 0.0;
            GSTOB[2] = 0.0;
            QSTOB[1] = 0.0;
            QSTOB[2] = 0.0;
            GZUESP = 0.0;
            QZUESP = 0.0;
            GPARA = 0.0;
            QPARA = 0.0;
            GAPARA = 0.0;
            GDIFPA = 0.0;
            
            if(KT2 != 0 || KT3 != 0)
                goto label2;
            
            if(KT5 != 0)
                goto label3;
            
            if (KT8 != 0 && A11 < ACW3) 
                goto label3;
            
            if (QTLES && A11 < ACW3) 
                goto label3;

            E1T[I+1,K]=E2T[I,K];
            G[I+1,K] = G[I,K];
            
            if (KT7 == 4 || KT7 > 7)
                DI[I] = 0.0;
            goto label5;
            
        label2:
            UWA031();
            
        label3:
            if (KT5 == 0) 
                goto label6;
            
            for(IZ1 = 1; IZ1 <= 12; IZ1++)  //DO 7 IZ1 = 1,12
            {
                LTGSTB = (int)Math.Abs(LTGSAM[IZ1,KT5]);
                
                if (LTGSTB == 0) 
                    goto label6;
                
                if (LTGSTB < 70) 
                    continue;
                
                if (LTGSTB > 92) 
                    continue;
                
                I11 = ILTG[LTGSTB];
                
                if (I11 > 10000)
                    I11 = I11 - 10000;
                
                if (KT2 == 0) 
                    goto label16;
                
                I12 = ISTOBU[KT2];
                
                if (I11 == I12) 
                    continue;
                
                if (KT3 == 0) 
                    goto label16;
                
                I12 = ISTOBU[KT3];
                
                if (I11 == I12) 
                    continue;
                
            label16:
                PLTG[LTGSTB]= PT[I,K];
                
                if (ILTG[LTGSTB] < 10000)
                    goto label15;

                ELTG[LTGSTB] = E2T[I,K];
                LTGSTB = -LTGSTB;
                goto label8;
                
            label15:
                if (LTGSTB < 86) 
                    goto label8;
                GMI = GMI + GLTG[LTGSTB];
                QMI = QMI + GLTG[LTGSTB]* ELTG[LTGSTB];
                
            label8:
                LTGSAM[IZ1,KT5] = LTGSTB;
            }   //7 CONTINUE
            
        label6:
            UWA044(I,1);
            N = 1;
            F = ACW2;
            GSTOBU = GSTOB[1] + GSTOB[2];
            
        label1023:
            IZ1=LABT[N];
            
            if (IZ1 == 0) 
                goto label1021;
            
            if (KT10 >= ANZTRB) 
                goto label104;
            I11 = KT10 + 1;
            
            for(I13 = I11; I13 <= ANZTRB; I13++)    //DO 105 I13 = I11,ANZTRB
            {
                I12 = NRMVAE[I13];
                if (I12 == 0) 
                    goto label104;
            
                if (I12 == IZ1) 
                    goto label106;
            }   //105 CONTINUE
            goto label104;
            
        label106:
            GAPARA = GABT[N] + GAPARA;
            
        label104:
            if (IZ1 >= 41 && IZ1 <= 46)
                GEXTAP = GABT[N];
            
            if (IZ1 < 49 || IZ1 > 69) 
                goto label1024;
            
            LABT[N]=0;
            
            if (IZ1 <= (NRENTW+48))
                goto label1024;
            
            PLTG[IZ1]=0.0;
            ILTG[IZ1] = 0;
            GLTG[IZ1]=0.0;
            ELTG[IZ1]=0.0;
            
        label1024:
            N=N+1;
            
            if(N <= 10)
                goto label1023;
            
        label1021:
            NVH=1;
            GVOR = G[I,K];
            EVOR = E2T[I,K];
            
        label1010:
            IZ1 = LZUT[NVH];
            
            if (IZ1 == 0) 
                goto label1022;
            
            if (IZ1 == IDRUCK) 
                PDRUCK = PT[I,K];
            
            if (IZ1 != 31 && IZ1 != 32) 
                goto label1011;
            
            GZUESP = GZUESP + GLTG[IZ1];
            QZUESP = QZUESP + GLTG[IZ1]* ELTG[IZ1];
            goto label1009;
            
        label1011:
            if (IZ1 < 93 || IZ1 > 98) 
                goto label100;
            
            GMI = GMI + GLTG[IZ1];
            QMI = QMI + GLTG[IZ1]*ELTG[IZ1];
            
        label100:
            if (KT10 >= ANZTRB) 
                goto label101;
            I11 = KT10 +1;
            
            for(N = I11; N <= ANZTRB; N++)  //DO 102 N = I11,ANZTRB
            {
                I12 = NRMVAE[N];
                
                if (I12 == 0) 
                    goto label101;
                
                I12 = I12 + 100;
                
                if (I12 == IZ1) 
                    goto label103;
            }   //102 CONTINUE
            goto label101;
            
        label103:
            GPARA = GPARA + GLTG[IZ1];
            QPARA = QPARA + GLTG[IZ1] * ELTG[IZ1];
            
            if (GLTG[IZ1] < GMINTT[N]) 
                GPARA=GPARA-GLTG[IZ1]+GMINTT[N];
            if (GLTG[IZ1] < GMINTT[N]) 
                QPARA=QPARA-GLTG[IZ1]*ELTG[IZ1]+ GMINTT[N]*ELTG[IZ1];
            goto label1009;
            
        label101:
            if (IZ1 > 40) 
                goto label1001;
            GMI = GMI + GLTG[IZ1];
            QMI = QMI + GLTG[IZ1]*ELTG[IZ1];
            goto label1009;
            
        label1001:
            if (IZ1 < 41 || IZ1 > 46) 
                goto label1009;
            
            A12 = PLTG[IZ1];
            A13 = ELTG[IZ1];
            
            if (A12 == 0.0 || A13 == 0.0)
                goto label1009;
            
            SUMQZU = SUMQZU - GLTG[IZ1] * A13;
            SUMGZU = SUMGZU - GLTG [IZ1];
            GVOR = G[I,K] + GLTG[IZ1];
            A14=VISUM(A12,A13,03);
            PZUT[NVH] = PT[I,K];
            A12 = PZUT[NVH];
            A13 = VISUM (A12,A14,01);
            A15 = VISUM(A12,T,-11);
            A16 = VISUM(A12,-0.80,01);
            
            if (A13 < A16) 
                sw16.WriteLine(" KREISLAUF-WARNING NR. 20 IM MENGUP");
                //50 FORMAT(1H ,34HKREISLAUF-WARNING NR. 20 IM MENGUP)
            
            if (A13 < A16) 
                A13 = A15;
            
            E1T[I,K] = A13;
            E2T[I,K] = A13;
            EVOR = A13;
            EZUT[NVH] =A13;
            T1T[I] = A14;
            T2T[I] = A14;
            
        label1009:
            NVH = NVH + 1;
            
            if (NVH >= 10) 
                goto label1022;
            goto label1010;
            
        label1022:
            for(N = 1; N <= 2; N++)     //DO 30 N = 1,2
            {
                if (GSTOB[N] < 0.0)
                    goto label31;
                GVOR = GVOR - GSTOB[N];
                continue;
                
            label31:
                EVOR = (EVOR*GVOR - QSTOB[N])/(GVOR - GSTOB[N]);
                GVOR = GVOR - GSTOB[N];
            }   //30 CONTINUE
            
            SUMGAB = SUMGAB - GSTOAB;
            SUMGZU = SUMGZU - GMI - GPARA - GSTOZU;
            SUMQZU = SUMQZU - QMI - QPARA - QSTOZU;
            
            if (QMI != 0.0 || QPARA != 0.0)
                EVOR = (EVOR * GVOR + QMI + QPARA) / (GVOR + GMI + GPARA);
            
            GVOR = GVOR + GMI + GPARA;
            SUMGAB = SUMGAB - GEXTAP - GAPARA;
            SUMGZU = SUMGZU - GZUESP;
            SUMQZU = SUMQZU - QZUESP;
            DELTAG = SUMGZU - SUMGAB;
            ENTALP = EVOR;
            
            if (DELTAG < 0)
                goto label32;
            if (DELTAG == 0)
                goto label33;
            if (DELTAG > 0)
                goto label34;
            
        label34:
            if (SUMGZU > 0.0)
                ENTALP = SUMQZU/SUMGZU;
            ENACH = (GVOR * EVOR + DELTAG * ENTALP)/( GVOR + DELTAG);
            
            if (ENACH <= 0.0)
                ENACH = EVOR;
            goto label127;
            
        label32:
            F = ACW1;
            
            if (SUMGAB > 0.0)
                ENTALP = (Math.Abs(DELTAG)*EVOR + SUMQZU)/ SUMGAB;
            
            if (KT7 == 7) 
                ENTALP = E1T[1,K];
            
        label33:
            ENACH = EVOR;
            
        label127:
            GVOR = GVOR + DELTAG;
            
            if (GZUESP != 0.0)
                ENACH = (GVOR * ENACH + QZUESP) / (GVOR + GZUESP);
            G[I+1,K] = GVOR + GZUESP - GEXTAP - GAPARA;
            GDIFPA = G[I+1,K];
            
            if (G[I+1,K] <= GMIN)
                G[I+1,K] = GMIN;
            
            GDIFPA = GDIFPA - G[I+1,K];
            E1T[I+1,K] = ENACH;
            N = 1;
            
        label1028:
            if(N > 10)
                goto label1032;
            I11 = N + 1;
            
            if (I11 > 10) 
                I11 = 10;
            
            if ((LABT[N]+LABT[I11]) == 0)
                goto label1029;
            
            if(LABT[N] == 0)
                goto label1030;
            
            if (LABT[N] >= 41 && LABT[N] <= 46) 
                NEXTAP = N;
            
            if (NEXTAP != 0)
                GEXTAP = GABT[NEXTAP];
            
            if(LABT[N] >= 47 && LABT[N] <= 92)
                goto label1030;
            
            EABT[N]=ENTALP;
            
            if (LABT[N] > 40 && LABT[N] < 47)
                EABT[N] = ENACH;
            
            PABT[N]=PT[I,K];
            
            if (KT10 >= ANZTRB) 
                goto label1030;
            
            I11 = KT10 + 1;
            
            for(I12 = I11; I12 <= ANZTRB; I12++)    //DO 1031 I12=I11,ANZTRB
            {
                IZ1 = LVAR[I12];
                
                if (LABT[N] != IZ1)
                    continue;
                EABT[N] = ENACH;
                goto label1030;
            }   //1031 CONTINUE
            
        label1030:
            N=N+1;
            goto label1028;
            
        label1029:
            GENTW=0.0;
            EENTW=0.0;
            
            if (KT7 != 4 && KT7 != 9) 
                goto label1034;
            
            DI[I] = 0.0;
            
            if (XH0[I] <= 0.0)
                goto label1100;
            
            if (KT1 == 2) 
                goto label1100;
            
            if (A11 > ACW3) 
                goto label1034;
            
            if (KT1 == 3) 
                goto label1034;
            
            A12 = 0.01;
            
            if (QTLES) 
                goto label907;
            
            if (KT8 != 0) 
                goto label907;
            
            if ((LABT[1]+LABT[2]) <= 0) 
                goto label1032;
            
            A12 = -0.01;
            
            if (KT5 != 0) 
                goto label907;
            goto label1034;
            
        label907:
            if (DELTAG >= A12 || GMI >= A12) 
                goto label1032;
            A12 = 0.0;
            
            if (KT7 != 9) 
                goto label22;
            A1 = T1T[I-1];
            A2 = XH0[I] + XH0[I-1];
            IX1 = UWA011(I-2,7);
            
            if (IX1 != 4 && IX1 != 9) 
                goto label20;
            
            A12 = XH0[I-2];
            A3 = DI[I-2];
            
            if (K == 1) 
                goto label21;
            
            A12 = VISUM(XPT[I-3],XE1T[I-2],03);
            A13 = VISUM(XPT[I-3],A12 ,02);
            A12 = VISUM(XPT[I-2],A13 ,04);
            A13 = VISUM(XPT[I-2],A12 ,01);
            A12 = XE1T[I-2] - A13;
            goto label21;
            
        label22:
            A1 = T1T[I];
            A2 = XH0[I];
            IX1 = UWA011(I-1,7);
            
            if (IX1 != 4 && IX1 != 9) 
                goto label20;
            
            A12 = XH0[I-1];
            A3 = DI[I-1];
            
            if (K == 1) 
                goto label21;
            A12 = VISUM(XPT[I-2],XE1T[I-1],03);
            A13 = VISUM(XPT[I-2],A12 ,02);
            A12 = VISUM(XPT[I-1],A13 ,04);
            A13 = VISUM(XPT[I-1],A12 ,01);
            A12 = XE1T[I-1] - A13;
            
        label21:
            if (IX1 == 9)
                A12 = A12 * 2.0;
            
            if (A12 > 0.0) 
                A12 = A3 / A12;
            
        label20:
            DI[I] = F * (ACW3+A1)*Math.Pow((ACW4/(PT[I,K]+ACW4)),ACW5)* (ACW6/(A12+ACW6/(1.0-ACW7))) * A2;
            E1T[I+1,K] = E1T[I+1,K]+DI[I];
            T1T[I+1]=VISUM(PT[I,K], E1T[I+1,K],03);
            
        label1100:
            A12 = G[I+1,K];
            
            if (NEXTAP == 0) 
                goto label1;
            
            EABT[NEXTAP] = E1T[I+1,K];
            NEXTAP= LABT[NEXTAP];
            A12 = A12 + GLTG[NEXTAP];
            
        label1:
            if (DI[I] <= 0.0)
                goto label1034;
            
            if (Math.Abs(T2T[I]) >= Math.Abs(T1T[I+1])) 
                goto label1034;
            
            EENTW=SIEDI(PT[I,K]);
            GENTW = A12*DI[I]/(E1T[I+1,K]-EENTW);
            G[I+1,K] = G[I+1,K] - GENTW;
            
            if(NRENTW < 21)
                NRENTW=NRENTW+1;
            
            LABT[N]=(int)NRENTW+48;
            
            if (NRENTW < 21)
                PLTG[(int)NRENTW+49]= 0.0;
            PABT[N]=PT[I,K];
            EABT[N]=EENTW;
            GABT[N]=GENTW;
            int i = 0;
            UWA008("PACK", ILTG[(int)NRENTW+48],ref i, ref KT10, ref KT6, ref I);
            
            if (KT5 != 0) 
                goto label1034;
            
            for(I11 = 1; I11 <= 35; I11++)      //DO 908 I11 = 1,35
            {
                if (LTGSAM[1,I11] != 0)
                    continue;
                KT5 = I11;
                goto label1034;
            }   //908 CONTINUE
            
        label1032:
            DI[I]=0.0;
        
        label1034:
            if (G[I+1,K] <= (GENTW+GMIN)) 
                G[I+1,K] = GENTW + GMIN;
            
            if (KT10 >= ANZTRB) 
                goto label911;
            I11 = KT10 + 1;
            
            for(N = I11; N <= ANZTRB; N++)      //DO 912 N = I11,ANZTRB
            {
                IZ1 = LVAR[N];
                IX2 = NRMVAE[N];
                
                if (IZ1 == 0) 
                    goto label911;

                UWA008("UNPACK", ILTG[IZ1], ref I12, ref I13, ref I14, ref I15);
                
                if (I14 != KT6) 
                    goto label913;
                if (I15 != I) 
                    goto label913;
                I13 = NTTETB[N-1] + 1;
                P0E[I13] = PT[I,K];
                
                if (KT7 == 2 || KT7 == 3 || KT7 == 5) 
                    P0E[I13] = PT[I,K]*TSTFMX[I];
                
                P0E[I13] = P0E[I13] - DPSCHL[N] - DPLTG[IX2];
                
                if (IZ1 != IX2 && PVAR[N] > 0.0) 
                    P0E[I13] = PVAR[N]-DPLTG[IX2];
                
                A12 = E1T[I+1,K];
                
                if (KT7 == 7) 
                    A12 = E1T[1,K];
                
                A12 = A12 - DELTG[IZ1];
                
                if (IZ1 != IX2 && HVAR[N] > 0.0) 
                    A12 = HVAR[N]-DELTG[IX2];
                
                T0E[I13] = VISUM (P0E[I13],A12 ,03);
                if (NITRE[N] != 8) 
                    goto label913;
                
                if (K == 2 && PKOP[KT10] < 1.0)
                    goto label913;
                
                G[I+1,K] = G[I+1,K] +GDIFPA;
                
                if (GMFIXE[N] == 0.0)
                    GMFIXE[N] = 0.5;
                
                A12 = (G[I+1,K] + GLTG[IZ1])*GMFIXE[N];
                GFDE[N] = A12;
                G[I+1,K] = G[I+1,K] + GLTG[IZ1] - A12;
                GLTG[IZ1+100] = GLTG[IZ1+100] - GLTG[IZ1]+ A12;
                
                for(I12 = 1; I12 <= 10; I12++)      //DO 915 I12 = 1,10
                {
                    I13 = LABT[I12];
                    
                    if (I13 != IZ1) 
                        continue;
                    GABT[I12] = A12;
                    goto label913;
                }   //915 CONTINUE
                FORERR();
                
            label913:
                IZ1 = IZ1 + 100;
                UWA008("UNPACK", ILTG[IZ1],ref I12, ref I13, ref I14, ref I15);
                
                if (I14 != KT6) 
                    continue;
                if (I15 != I) 
                    continue;
                
                I13 = NTTETB[N];
                PN4 [N] = PT[I,K];
                PNE[I13] = PT[I,K];
                
                if (NITRE[N] != 9) 
                    continue;
                
                if (GMFIXE[N] == 0.0)
                    GMFIXE[N] = 0.5;
                
                GABDE[N] = (G[I,K] + GLTG[IZ1]) * GMFIXE[N];
            }   //912 CONTINUE
            
        label911:
            UWA010(I,2);
            UWA044(I,2);
            
            if (LTGSAM[1,KT5] != 0) 
                goto label5;
            KT5 = 0;
            UWA010(I,2);
            
        label5:
            T1T[I+1] = VISUM(PT[I,K],E1T[I+1,K],03);
            N = UWA011(I+1,7);
            
            if (I < ITTEND[KT6] && G[I+1,K] < GMIN)
                G[I+1,K] = GMIN;
            return;
        }   //END
        
        
        static void UWA021()
        {
            //ENTRY DRKSUC
            //INCLUDE "KRAWAL80.COMMON"
            //EQUIVALENCE (NVENT[7],IZAEL)
            //EQUIVALENCE (EFIX1,A1),(EFIX2,A2),(SDELTI,A3),(DELTI,A4),(TSPENT,A5),(TAUSVW,A6)

            int NVHD = ITURB[5], N = 0, IX11 = 0;
            int L1 = NVOR - NVHD;
            double TSPENT = 0, TAUSVW = 0, P = 0, EFIX2 = 0, SDELTI = 0, DELTI = 0, DELTI0 = 0;
            
            if (LIGHT[2] == 3) 
            {
                sw16.WriteLine(" ++ DRKSUC 1 ++{0}{1}{2}", NVOR.ToString().PadLeft(10),NVHD.ToString().PadLeft(10),JJ.ToString().PadLeft(10));
                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7} ", Math.Round(PKOND[1],4).ToString().PadLeft(10),Math.Round(PKSP,4).ToString().PadLeft(10),Math.Round(PENTN0[NVOR],4).ToString().PadLeft(10),
                    Math.Round(PENTN0[L1],4).ToString().PadLeft(10),Math.Round(HIKSP,4).ToString().PadLeft(10),Math.Round(XYZXYZ,4).ToString().PadLeft(10));
            }
            if (XYZXYZ == 99.0 && IZAEL > 1) 
                return;
            
            if(NVOR < 2)
                return;
            
            double GRAED=0.0;
            double DRUKAB = 2.0;
            double CONST = 2.0;
            IX5=0;
            double EFIX1 = 20.0;
            
            if(PKOND[1] != 0.0 && PKOND[1] < 0.5)
                EFIX1 = SIEDI(PKOND[1]);
            
            //501 FORMAT(" ","++ DRKSUC 1 ++",3I10,/, 8F10.4/)
            //502 FORMAT(" ","++ DRKSUC 2 ++",6I10,/, 3F10.4/)
            //503 FORMAT(" ","++ DRKSUC 3 ++",2I10,/, 6F10.4/)
            //504 FORMAT(" ","++ DRKSUC 4 ++",2I10,/, 4F10.4/)
            //505 FORMAT(" ","++ DRKSUC 5 ++",I10,F10.4,7I10/)
            //506 FORMAT(" ","++ DRKSUC 6 ++",L10,F10.4,/,3F10.4/)
            //507 FORMAT(" ","++ DRKSUC 7 ++",L10,I10,/,4F10.4/)
            //508 FORMAT(" ","++ DRKSUC 8 ++",2I10,/,7F10.4/)
            //509 FORMAT(" ","++ DRKSUC 9 ++",5I10/)
            
        label280:
            for(N = 1; N <= NVOR; N++)  //DO 270 N=1,NVOR
            {
                UWA008("UNPACK", NRTRB[N], ref IX6, ref IX7, ref IX8, ref IX9);
                
                if (LIGHT[2] == 3) 
                {
                    sw16.WriteLine(" ++ DRKSUC 2 ++{0}{1}{2}{3}{4}{5} ", N.ToString().PadLeft(10),NRTRB[N].ToString().PadLeft(10),IX6.ToString().PadLeft(10),IX7.ToString().PadLeft(10),IX8.ToString().PadLeft(10),IX9.ToString().PadLeft(10));
                    sw16.WriteLine("{0}{1}{2} ", Math.Round(PENTN0[N],4).ToString().PadLeft(10),Math.Round(PLTG[N],4).ToString().PadLeft(10),Math.Round(EFIX1,4).ToString().PadLeft(10));
                }
                
                if(PENTN0[N] == 0.0 || IX8 == 9)
                    goto label300;
                
                goto label203;
                
            label300:
                IX5=IX5+1;
                continue;
                
            label203:
                if(PLTG[N] == 0.0)
                    goto label300;
                
                TSPENT=UW0011(PLTG[N],1);
                TAUSVW=TSPENT-GRAED-DRUKAB;
                
                if(N > (NVOR-NVHD))
                    goto label206;
                
                P = UW0011(TAUSVW,2);
                EFIX2 = VISUM(P,TAUSVW,21);
                goto label207;
                
            label206:
                if (PKSP == 0.0)
                    PKSP = 1.35*XPT[1];
                
                EFIX2 = VISUM(PKSP,TAUSVW,21);
                if (LIGHT[2] == 3)
                {
                    sw16.WriteLine(" ++ DRKSUC 3 ++ {0}{1}", N.ToString().PadLeft(10),IX5.ToString().PadLeft(10));
                    sw16.WriteLine("{0}{1}{2}{3}{4}{5} ", Math.Round(TSPENT,4).ToString().PadLeft(10),Math.Round(TAUSVW,4).ToString().PadLeft(10),Math.Round(EFIX1,4).ToString().PadLeft(10),
                        Math.Round(EFIX2,4).ToString().PadLeft(10),Math.Round(GRAED,4).ToString().PadLeft(10),Math.Round(DRUKAB,4).ToString().PadLeft(10));
                }

            label207:
                if(IX5 == 0)
                    goto label204;
                
                goto label208;
                
            label204:
                EFIX1=EFIX2;
                continue;
                
            label208:
                SDELTI=EFIX2-EFIX1;
                
                if(N > (NVOR-NVHD) && (N-IX5-1) <= (NVOR-NVHD))
                    SDELTI =SDELTI-HIKSP;
                EFIX1=EFIX2;
                
                if (LIGHT[2] == 3)
                {
                    sw16.WriteLine(" ++ DRKSUC 4 ++{0}{1}", IX5.ToString().PadLeft(10),ANZDTT.ToString().PadLeft(10));
                    sw16.WriteLine("{0}{1}{2}{3} ", Math.Round(SDELTI,4).ToString().PadLeft(10),Math.Round(HIKSP,4).ToString().PadLeft(10),Math.Round(EFIX1,4).ToString().PadLeft(10),Math.Round(EFIX2,4).ToString().PadLeft(10));
                }
                Z1 = IX5;

                for(IX11 = 1; IX11 <= ANZDTT; IX11++)   //DO 220 IX11=1,ANZDTT
                {
                    int IX12 = IX11+1;
                    
                    if (LIGHT[2] == 3) 
                        sw16.WriteLine(" ++ DRKSUC 9 ++{0}", Math.Round(T0E[IX12],4).ToString().PadLeft(10));
                        //510 FORMAT(" ","++ DRKSUC 10 ++",F10.4/)
                    
                    if(IX11 == ANZDTT)
                        continue;
                    
                    if(T0E[IX11+1] < 623.0)
                        continue;

                    UWA008("UNPACK", ILTG[N], ref IX6, ref IX7, ref IX8, ref IX9);
                    
                    if (LIGHT[2] == 3)
                        sw16.WriteLine(" ++ DRKSUC 5 ++{0}{1}{2}{3}{4}{5}{6}{7}{8} ", IX11.ToString().PadLeft(10),Math.Round(Z1,4).ToString().PadLeft(10),IX5.ToString().PadLeft(10),ILTG[N].ToString().PadLeft(10),IX6.ToString().PadLeft(10),IX7.ToString().PadLeft(10),IX8.ToString().PadLeft(10),IX9.ToString().PadLeft(10),ITTEND[IX11].ToString().PadLeft(10));
                    
                    if(IX8 != IX11)
                        continue;
                    if(IX9 == ITTEND[IX11])
                        goto label230;
                }   //220 CONTINUE
                QTROM=true;
                DELTI=SDELTI/(Z1+1.0);
                goto label240;
                
            label230:
                DELTI=SDELTI/(1.0+0.75*Z1);
                DELTI0=DELTI;
                QTROM=false;
                
                if (LIGHT[2] == 3)
                {
                    sw16.WriteLine(" ++ DRKSUC 6 ++{0}{1} ", QTROM.ToString().PadLeft(10),Math.Round(Z1,4).ToString().PadLeft(10));
                    sw16.WriteLine("{0}{1}{2} ", Math.Round(SDELTI,4).ToString().PadLeft(10),Math.Round(DELTI,4).ToString().PadLeft(10),Math.Round(DELTI0,4).ToString().PadLeft(10));
                }
            label240:
                for(IX10 = 1; IX10 <= IX5; IX10++)      //DO 250 IX10=1,IX5
                {
                    if(QTROM)
                        goto label260;
                    
                    if(IX10 != 1)
                        DELTI=0.75*DELTI0;
                    
                label260:
                    A10 = 0.0;
                    
                    if(((N-IX10+1)-(NVOR-NVHD+1)) < 0)
                        goto label210;
                    if(((N-IX10+1)-(NVOR-NVHD+1)) == 0)
                        goto label211;
                    if(((N-IX10+1)-(NVOR-NVHD+1)) > 0)
                        goto label212;
                    
                label211:
                    EFIX2 = EFIX2 - HIKSP;
                    goto label210;
                    
                label212:
                    A10=PKSP;
                    if (LIGHT[2] == 3)
                    {
                        sw16.WriteLine(" ++ DRKSUC 7 ++{0}{1} ", QTROM.ToString().PadLeft(10),IX10.ToString().PadLeft(10));
                        sw16.WriteLine("{0}{1}{2}{3}", Math.Round(DELTI,4).ToString().PadLeft(10),Math.Round(EFIX1,4).ToString().PadLeft(10),Math.Round(EFIX2,4).ToString().PadLeft(10),Math.Round(A10,4).ToString().PadLeft(10));
                    }
                    
                label210:
                    EFIX2=EFIX2-DELTI;
                    
                    if (A10 == 0.0)
                        A10 = PSTR(EFIX2);
                    
                    TAUSVW=VISUM(A10,EFIX2,23);
                    
                    if (TAUSVW < 0.0)
                        TAUSVW = UW0011(A10,1);
                    
                    TSPENT=TAUSVW+GRAED+DRUKAB;
                    int IA=N-IX10;
                    PENTN0[IA] = UW0011(TSPENT,2);
                    
                    if (LIGHT[2] == 3)
                    {
                        sw16.WriteLine(" ++ DRKSUC 8 ++{0}{1}", N.ToString().PadLeft(10),IA.ToString().PadLeft(10));
                        sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}", Math.Round(DELTI,4).ToString().PadLeft(10),Math.Round(PENTN0[IA],4).ToString().PadLeft(10),Math.Round(EFIX1,4).ToString().PadLeft(10),
                            Math.Round(EFIX2,4).ToString().PadLeft(10), Math.Round(PENTN0[N],4).ToString().PadLeft(10),Math.Round(TAUSVW,4).ToString().PadLeft(10),Math.Round(TSPENT,4).ToString().PadLeft(10));
                    }

                    UWA008("UNPACK", NRTRB[IA], ref IX6, ref IX7, ref IX8, ref IX9);
                    
                    if (LIGHT[2] == 3) 
                        sw16.WriteLine(" ++ DRKSUC 9 ++{0}{1}{2}{3}{4} ", NRTRB[IA].ToString().PadLeft(10),IX6.ToString().PadLeft(10),IX7.ToString().PadLeft(10),IX8.ToString().PadLeft(10),IX9.ToString().PadLeft(10));
                    
                    if (IX9 == 0) 
                        IX8=9;
                    
                    if (IX7 == 0) 
                        IX7 = 1;

                    UWA008("PACK", NRTRB[IA], ref IX6, ref IX7, ref IX8, ref IX9);
                    
                    if (IX9 == 0)
                        NRTRB[IA] =-NRTRB[IA];
                    
                    if (LIGHT[2] == 3)
                        sw16.WriteLine(" ++ DRKSUC 9 ++{0}{1}{2}{3}{4} ", NRTRB[IA].ToString().PadLeft(10),IX6.ToString().PadLeft(10),IX7.ToString().PadLeft(10),IX8.ToString().PadLeft(10),IX9.ToString().PadLeft(10));
                }   //250 CONTINUE
                IX5=0;
            }   //270 CONTINUE
            return;
        }   //END
        
        
        static void UWA022()
        {
            string S = "";
            double F1 = 0, F2 = 0, X1 = 0, SH0TT = 0, SHITT = 0, SNITT = 0, SH0GR = 0, SHIGR = 0, SNIGR = 0, KFLUT = 0, YUPM = 0, CVOR = 0, E1STAT = 0, T1STAT = 0, S0STAT = 0, T2STAT = 0, E2STAT = 0, H0STAT = 0, HI = 0, S0GR = 0, T20GR = 0, E20GR = 0, 
                H0GR = 0, ETAGR = 0, ETAGR1 = 0,HCVOR = 0, HCNACH = 0, A51 = 0, A52 = 0, A53 = 0, A54 = 0, EM = 0, TM = 0, ZETA = 0, A50 = 0, BEAUF = 0, TVOR = 0, S0TT = 0, T02TT = 0, E02TT = 0, H0TT1 = 0, H0TT = 0, ETATT = 0, ETATT1 = 0;
            int I1 = 0, I2 = 0, K9VOR = 0, NRPROF = 0, KT7VOR = 0, KT14E = 0,  KT7R = 0, KT7D = 0, IXXX = 0, IN1 = 0, IN2 = 0, IN3 = 0;

            //ENTRY PRINTG
            //DIMENSION FMTSPA[4]
            //CHARACTER * 132 STEXT
            //CHARACTER * 180 TEXT
            //CHARACTER * 33 F23
            //CHARACTER * 36 F22
            //CHARACTER * 92 F27
            //CHARACTER * 102 F30
            //CHARACTER *(20) S
            //INCLUDE "KRAWAL80.COMMON"
            //COMMON /KRLFKO/ IENDST [4]
            //COMMON /ETAWTS/ WTSOLL,FETAE[7],FBEWE[7]
            //COMMON /STOBUE/ PSTOB(15), ESTOB(15)            
            //EQUIVALENCE(S0GR ,A2 ), (SH0GR ,Z2 ),
            //1 (T20GR ,A3 ), (SHIGR ,Z3 ),
            //2 (E20GR ,A4 ), (SNIGR ,Z4 ),
            //3 (H0GR ,A5 ), (S0TT ,Z5 ),
            //4 (ETAGR ,A6 ), (T02TT ,Z6 ),
            //5 (ETAGR1,A7 ), (E02TT ,Z7 ),
            //6 ( EM ,A8 ), (H0TT ,Z8 ),
            //7 (E02 ,A9 ), (ETATT ,Z9 ),
            //8 (T02 ,A10), (ETATT1 ,Z10),
            //9 (S02 ,TX2),
            //1 (TM ,TX3)
            int JJVOR, IMI = 0;
            double P0TURB = 0.0, T0TURB = 0.0, HITURB = 0.0;
            string STEXT = "", TEXT = "LASTPUNKT NRAUSLEGUNG . P A R A L L E L T U R B I N E V.GR V.DUE N.RSTF V.KLN.KLDRUCKVERLUSTDROSSELKLAPPE VOR-IN STUFE H.KESS H.TURB VENTIL GEDROSS.UNGEDROSS. ";
            string[] FMTSPA = {"", " ","26X,","52X,","78X,"};
                        
            if (LIGHT[7] == 1 && K == 2)
                return;
            UWA043(2);
            
            if(K == 1)
                goto label60;
            
            sw16.WriteLine("0{0}{1}     ", TEXT.Substring(0,12),IFALL.ToString().PadLeft(3));
            IZ1 = IENDST[ANZTRB];
            int KT10VO = 0;
            
            for(IZ2 = 1; IZ2 <= IZ1; IZ2++) //DO 750 IZ2 = 1,IZ1
            {
                UWA010(IZ2,1);
                if (KT7 != 1) 
                    goto label751;
                
                if (KT6 > 1)
                    KT10VO = UWA011(IZ2-1,10);
                
                P0E[KT6] = XPT[IZ2];
                T0E[KT6] = T2T[IZ2];
                
                if (KT10 != KT10VO)
                    continue;
                
                PNE[KT6-1] = XPT[IZ2-1];
                continue;

            label751:
                if (KT7 != 6) 
                    continue;
                PNE[KT6] = XPT[IZ2-1];
                PN4[KT10] = XPT[IZ2];
            }   //750 CONTINUE
            goto label61;
            
        label60:
            sw16.WriteLine("0{0}{1}     {2} ", TEXT.Substring(0,12), IFALL.ToString().PadLeft(3),TEXT.Substring(12,12));
            
        label61:
            JJVOR=1;
            
            for(IZ1 = 1; IZ1 <= ANZTRB; IZ1++)      //DO 700 IZ1=1,ANZTRB
            {
                if (STZMDT[IZ1] != 99) 
                    continue;
                
                if (IZ1 > 1)
                    JJVOR = NTTETB[IZ1-1] + 1;

                IMI = 0;
                P0TURB = 0.0;
                T0TURB = 0.0;
                HITURB = 0.0;
                
                sw16.WriteLine("\n\n                                        {0}{1} {2} MW", IZ1.ToString().PadLeft(1),TEXT.Substring(24,32), Math.Round(ARBTA[IZ1],3).ToString().PadLeft(9));
                
                if(IZ1 > 1)
                    goto label1;

                IZ4=0;
                goto label2;
                
            label1:
                IZ4=NTTETB[IZ1-1];
                
            label2:
                IZ5=NTTETB[IZ1]-IZ4;
                sw16.WriteLine("0  P01     T01     PN1       P02     T02     PN2       P03     T03     PN3       P04     T04     PN4      PABD   TKW   F-ETA ");
                QZEIC=false;
                STEXT = " ";
                IX1=IZ4+1;
                
                if(IZ5 > 4)
                    goto label91;
                IX2=NTTETB[IZ1];
                goto label90;
                
            label91:
                IX2 = IZ4+4;

            label90:
                for(IZ3 = IX1; IZ3 <= IX2; IZ3++)   //DO 10 IZ3 = IX1,IX2
                {
                    IMI = IMI + 26;
                    A1 = T0E[IZ3]*100.0;

                    if (A1 > 0.0)
                        A1 = A1/100.0-273.15;

                    F1 = P0E[IZ3];
                    F2 = PNE[IZ3];
                    X1 = A1;

                    if (A1 > 0.0)
                        X1 = A1;

                    I1 = IMI - 26 + 1;
                    I2 = IMI - 26 + 6;
                    //WRITE (S,"(F6.2)") F1
                    S = Math.Round(F1,2).ToString().PadLeft(6);
                    //STEXT(I1:I2) = S
                    STEXT.Remove(I1-1,I2-I1);
                    STEXT.Insert(I1-1,S);
                    
                    //WRITE (S,"(F6.4)") F1
                    S =  Math.Round(F1,4).ToString().PadLeft(6);
                    
                    if (F1 < 9.9999) 
                    {
                        //STEXT(I1:I2) = S;
                        STEXT.Remove(I1-1,I2-I1);
                        STEXT.Insert(I1-1,S);
                    }
                    //WRITE (S,"(F6.1)") F1
                    S =  Math.Round(F1,1).ToString().PadLeft(6);
                    
                    if (F1 >= 999.99)
                    {
                        //STEXT(I1:I2) = S;
                        STEXT.Remove(I1-1,I2-I1);
                        STEXT.Insert(I1-1,S);
                    }

                    I1 = IMI - 26 + 8;
                    I2 = IMI - 26 + 14;
                    //WRITE (S,"(F7.2)") X1
                    S =  Math.Round(F1,2).ToString().PadLeft(7);
                    //STEXT(I1:I2) = S;
                    STEXT.Remove(I1-1,I2-I1);
                    STEXT.Insert(I1-1,S);
                    I1 = IMI - 26 + 17;
                    I2 = IMI - 26 + 22;
                    //WRITE (S,"(F6.2)") F2;
                    S =  Math.Round(F1,2).ToString().PadLeft(6);
                    //STEXT(I1:I2) = S;
                    STEXT.Remove(I1-1,I2-I1);
                    STEXT.Insert(I1-1,S);
                    //WRITE (S,"(F6.4)") F2;
                    S =  Math.Round(F1,4).ToString().PadLeft(6);

                    if (F2 < 9.9999)
                    {
                        //STEXT(I1:I2) = S;
                        STEXT.Remove(I1 - 1, I2 - I1);
                        STEXT.Insert(I1 - 1, S);
                    }
                }   //10 CONTINUE
                //write (16,20) STEXT
                //20 FORMAT (1H ,A)
                
                if(QZEIC)
                    goto label81;

                if(PN4[IZ1] < 10.0)
                    goto label40;
                
                //F23(13:16)="F6.2";
                goto label41;

            label40:
                //F23(13:16)="F6.4";
                
            label41:
                sw16.WriteLine("+                                                                                                         {0}  {1}  {2}",
                    Math.Round(PN4[IZ1],4).ToString().PadLeft(6),Math.Round(ETWK[IZ1],2).ToString().PadLeft(5),Math.Round(DETA,3).ToString().PadLeft(5));
                
                if(IZ5 <= 4)
                    goto label81;

                QZEIC =true;
                IX1=IZ4+5;
                IX2=NTTETB[IZ1];
                sw16.WriteLine("0  P05     T05     PN5       P06     T06     PN6       P07     T07     PN7 ");
                goto label90;

            label81:
                sw16.WriteLine("0\n");
                IX5=NTTETB[IZ1];
                
            label80:
                for(JJ = JJVOR; JJ <= IX5; JJ++)    //DO 600 JJ=JJVOR,IX5
                {
                    SH0TT=0.0;
                    SHITT=0.0;
                    SNITT=0.0;
                    SH0GR=0.0;
                    SHIGR=0.0;
                    SNIGR=0.0;
                    K9VOR=0;
                    NRPROF=0;
                    
                    UWA006("RDISC", 52,JJ);
                    UWA006("RDISC", 59,JJ);
                    IZ9=ITTEND[JJ];
                    QTROM=false;
                    IX3=1;
                    IX4=IZ9;
                    
                label534:
                    for(I = IX3; I <= IX4; I++)    //DO 500 I=IX3,IX4
                    {
                        if(QTROM)
                            goto label533;
                        UWA010(I,1);
                        if(KT9 == K9VOR)
                            goto label50;
                        UWA006("RDISC", 53,KT9);
                        UWA006("RDISC", 56,KT9);
                        KFLUT = FLUT;
                        
                        if(K > 1)
                            YUPM=XUPM*DREQUE[KT10];
                        
                    label50:
                        if(KT2 == 0)
                            goto label70;
                        PSTOB[KT2]=PT[I,K];
                        ESTOB[KT2]=E2T[I,K];
                        
                    label70:
                        if(KT3 == 0)
                            goto label71;
                        PSTOB[KT3] = PT[I,K];
                        ESTOB[KT3]=E2T[I,K];
                        
                    label71:
                        A1=T2T[I]*100.0;
                        
                        if(KT7 == 7)
                            A1=100.0*T1T[I];
                        
                        if(A1 > 0.0)
                            A1=A1/100.0-273.15;
                        Z1=VISUM(PT[I,K],T2T[I],00);
                        
                        if (KT7 != 3 && KT7 != 4 && KT7 != 8 && KT7 != 9) 
                            goto label492;
                        if(NRPROF == KT15)
                            goto label85;
                        NRPROF=KT15;
                        UWA006("RDISC", 60,NRPROF);

                    label85:
                        CVOR=C2GES[I-1,K];
                        CVOR=CVOR*CVOR/8.37225E+03;
                        E1STAT=E1T[I,K]-CVOR;
                        T1STAT=VISUM(PT[I-1,K],E1STAT,13);
                        S0STAT=VISUM(PT[I-1,K],T1STAT,12);
                        T2STAT=VISUM(PT[I,K],S0STAT,14);
                        E2STAT=VISUM(PT[I,K],T2STAT,11);
                        H0STAT=E1STAT-E2STAT;
                        HI=E1T[I,K]-E2T[I,K];
                        
                        if(KT7 != 3)
                            goto label493;
                        SH0TT=SH0TT+H0[I,K];
                        goto label63;
                        
                    label493:
                        SH0TT=SH0TT+XH0[I];
                        
                    label63: SHITT=SHITT+HI;
                        SNITT=SNITT+HI/860.0*G[I,K];
                        
                    label492:
                        if(KT9 == K9VOR)
                            goto label501;
                        if(K9VOR == 0)
                            goto label503;
                        
                    label533:
                        KT7VOR=UWA011(IANF-1,7);
                        
                        if(KT7VOR != 4 || KT7VOR != 8 || KT7VOR != 9)
                            C2GES[IANF-1,K]=0.0;
                        IEND=I-1;
                        
                        if (QTROM && JJ == IX5) 
                            IEND = I - 2;
                        S0GR=VISUM(PT[IANF-1,K],T1T[IANF],02);
                        T20GR=VISUM(PT[IEND,K],S0GR,04);
                        E20GR=VISUM(PT[IEND,K],T20GR,01);
                        H0GR=E1T[IANF,K]-E20GR;
                        ETAGR=SHIGR/SH0GR;
                        ETAGR1=SHIGR/H0GR;
                        sw16.WriteLine("0           H0    SUMH0     HI*   ETAI*  HI*/SH0    HI     ETAI    H-AV    SUMNI  H0(ABD)                         GMAX/G11  GMIN/G11 ");
                        HCVOR=C2GES[IANF-1,K];
                        HCVOR=HCVOR*HCVOR/8.37225E+03;
                        HCNACH=C2GES[IEND,K];
                        HCNACH=HCNACH*HCNACH/8.37225E+03;
                        A51 = SHIGR + HCNACH;
                        A52 = A51/H0GR * 100.0;
                        A53 = A51/SH0GR * 100.0;
                        A54 = ETAGR1 * 100.0;
                        sw16.WriteLine(" STFGR  {0}{1}{2}{3}{4}{5}{6}{7}{8}                                      -         -  ",
                            Math.Round(H0GR,2).ToString().PadLeft(8),Math.Round(SH0GR,2).ToString().PadLeft(8),Math.Round(A51,2).ToString().PadLeft(8),
                            Math.Round(A52,2).ToString().PadLeft(7),Math.Round(A53,2).ToString().PadLeft(8),Math.Round(SHIGR,2).ToString().PadLeft(9),
                            Math.Round(A54,2).ToString().PadLeft(8),Math.Round(HCNACH,2).ToString().PadLeft(8),Math.Round(SNIGR,2).ToString().PadLeft(8));
                        
                        if(QTROM)
                            goto label535;
                        sw16.WriteLine(" ");
                        SH0GR=0.0;
                        SHIGR=0.0;
                        SNIGR=0.0;
                        
                    label523:
                        if(KT7 != 4)
                            goto label504;
                        
                    label536:
                        IANF=I;
                        KT14E=IANF+(int)NSTFZ[KT9]-1;
                        KT14E=UWA011(KT14E,14);
                        sw16.WriteLine("0{0}.STUFENGRUPPE {1} STUFEN{2}-FLUTIG{3}U/MIN  DI-1 {4}  DI-Z {5}     ISTOBU  DM {6}  SPIEL {7}  LAB {8}  SIGMA {9} ",
                            KT9.ToString().PadLeft(2),NSTFZ[KT9].ToString().PadLeft(4),KFLUT.ToString().PadLeft(4), Math.Round(UPM[K],0).ToString().PadLeft(7),
                            Math.Round(STFDI1,0).ToString().PadLeft(6),Math.Round(STFDIZ,0).ToString().PadLeft(6),Math.Round(TASAX[1],0).ToString().PadLeft(5),Math.Round(DELTLE,2).ToString().PadLeft(5),
                            Math.Round(TAZLE[1],0).ToString().PadLeft(3),Math.Round(DELTLA,2).ToString().PadLeft(5));
                        
                        sw16.WriteLine("0 VOR-    IN  STUFE ");
                        sw16.WriteLine("  ENTH       P    T(-X)   ENTH     VOL   DELTI    H0    ETA-I     G       LS    DNGG   DI  -LE  B-LA   C0/U  C0/UX   QUAZIF   FSTB");

                    label501:
                        EM = E1STAT - AK21 * H0STAT;
                        TM = VISUM(S0STAT, EM, 05);
                        
                        if(EM < 0.0)
                            goto label499;
                        ZETA=0.0;
                        goto label502;
                        
                    label499:
                        ZETA=AK22*(1.0+EM);
                        
                    label502:
                        if(PT[I,K] < 10.0)
                            goto label505;
                        //F30(17:20)="F6.2";
                        goto label506;
                        
                    label505:
                        //F30(17:20)="F6.4";
                        
                    label506:
                        if(Z1 < 10.0)
                            goto label507;
                        //F30(37:40)="F6.2";
                        goto label508;

                    label507:
                        //F30(37:40)="F6.4";
                        
                    label508:
                        if(KT7 == 6)
                            goto label490;
                        A50=PHI[I];
                        
                        if(K > 1)
                            A50=YH0[I];
                        
                        A51 = Math.Sqrt(PSI[I]);
                        //1H ,F6.2,3X,   F6.2,F7.1,F8.2,2X,  F6.2,F7.2,F8.2,2PF7.2,A 020389
                        //20PF9.2,F7.1,F7.3,F6.0,2F6.1,2F7.2,F9.4,F8.3
                        sw16.WriteLine(" {0}   {1}{2}{3}  {4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}  ",
                            Math.Round(E1T[I,K],2).ToString().PadLeft(6),Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E2T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(DI[I],2).ToString().PadLeft(7),Math.Round(XH0[I],2).ToString().PadLeft(8),Math.Round(ETAI[I],2).ToString().PadLeft(7),
                            Math.Round(G[I,K],2).ToString().PadLeft(7),Math.Round(LS[I],2).ToString().PadLeft(9),Math.Round(OEFFNG[I],1).ToString().PadLeft(7),
                            Math.Round(STFDI[I],3).ToString().PadLeft(7),Math.Round(BRTLE[I],0).ToString().PadLeft(6),Math.Round(BRTLA[I],1).ToString().PadLeft(6),
                            Math.Round(YH0[I],1).ToString().PadLeft(6),Math.Round(A51,2).ToString().PadLeft(7),Math.Round(ETAUOP[I],2).ToString().PadLeft(7),Math.Round(ETAIOP[I],4).ToString().PadLeft(9));
                        SH0GR=SH0GR+XH0[I];
                        SHIGR=SHIGR+HI;
                        SNIGR=SNIGR+HI/860.0*G[I,K];
                        goto label509;

                    label490:
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}  {5} ", TEXT.Substring(144,12),Math.Round(PT[I,K],4).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),
                            Math.Round(E1T[I,K],2).ToString().PadLeft(8),Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(7));
                        
                    label509:
                        K9VOR=KT9;
                        continue;
                        
                    label504:
                        IANF=I+1;
                        KT14E=IANF+(int)NSTFZ[KT9]-1;
                        KT14E=UWA011(KT14E,14);
                        sw16.WriteLine("0 {0} ", TEXT.Substring(88,100));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G");
                        if(PT[I,K] < 10.0)
                            goto label4;
                        //F27(13:16)="F6.2";
                        goto label5;
                        
                    label4:
                        //F27(13:16)="F6.4";
                        
                    label5:
                        if(Z1 < 10.0)
                            goto label6;
                        //F27(33:36)="F6.2";
                        goto label7;

                    label6:
                        //F27(33:36)="F6.4";
                    label7:
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(64,6), Math.Round(PT[I,K],2).ToString().PadLeft(6), Math.Round(A1,1).ToString().PadLeft(7), Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6), Math.Round(G[I,K],2).ToString().PadLeft(9));

                        sw16.WriteLine("0{0}.STUFENGRUPPE {1} STUFEN{2}-FLUTIG{3}U/MIN  DI-1 {4}  DI-Z {5}     ISTOBU  DM {6}  SPIEL {7}  LAB {8}  SIGMA {9}", 
                            KT9.ToString().PadLeft(2),NSTFZ[KT9].ToString().PadLeft(4),KFLUT.ToString().PadLeft(4),Math.Round(UPM[K],0).ToString().PadLeft(7),
                            Math.Round(STFDI1,0).ToString().PadLeft(6), Math.Round(STFDIZ,0).ToString().PadLeft(6),Math.Round(TASAX[1],0).ToString().PadLeft(5),
                            Math.Round(DELTLE,2).ToString().PadLeft(5),Math.Round(TAZLE[1],0).ToString().PadLeft(3),Math.Round(DELTLA,2).ToString().PadLeft(5));
                        sw16.WriteLine("0 VOR-    IN  STUFE");
                        sw16.WriteLine("  ENTH       P    T(-X)   ENTH     VOL   DELTI    H0    ETA-I     G       LS    DNGG   DI   B-LE  B-LA   C0/U  C0/UX   QUAZIF   FSTB");
                        goto label509;
                        
                    label503:
                        if(JJ == 1)
                            goto label400;
                        KT7R = UWA011(3,7);
                        KT7D=UWA011(2,7);
                        goto label401;

                    label400:
                        KT7R = UWA011(4,7);
                        KT7D = UWA011(3,7);
                        
                    label401:
                        if(PT[I,K] < 10.0)
                            goto label510;
                        //F27(13:16)="F6.2";
                        goto label511;
                        
                    label510:
                        //F27(13:16)="F6.4";
                        
                    label511:
                        if(Z1 < 10.0)
                            goto label512;
                        //F27(33:36)="F6.2";
                        goto label513;
                        
                    label512:
                        //F27(33:36)="F6.4";
                        
                    label513:
                        //GOTO(517,517,470,517,410,517,517,517,517),
                        if(KT7R == 1)       goto label517;
                        if(KT7R == 2)       goto label517;
                        if(KT7R == 3)       goto label470;
                        if(KT7R == 4)       goto label517;
                        if(KT7R == 5)       goto label410;
                        if(KT7R == 6)       goto label517;
                        if(KT7R == 7)       goto label517;
                        if(KT7R == 8)       goto label517;
                        if(KT7R == 9)       goto label517;
                        
                    label470:
                        if(JJ == 1)
                            goto label480;
                        //GOTO(520,521,522,523),
                        if(I == 1)      goto label520;
                        if(I == 2)      goto label521;
                        if(I == 3)      goto label522;
                        if(I == 4)      goto label523;
                        
                    label520:
                        sw16.WriteLine("0REGELSTUFE              {0}-KRAENZIG        {1}-FLUTIG       {2}U/MIN         DM {3} ", KRANZZ[JJ].ToString().PadLeft(1),KFLUT.ToString().PadLeft(1),
                            Math.Round(UPM[K],0).ToString().PadLeft(6), Math.Round(STFDI[3],0).ToString().PadLeft(6));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G      H0   ETA-I  DELT-I   LS    DNGG   B-LA  C0/U  EPS  EPSMAX  EPSMIN");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(56,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),
                            Math.Round(E1T[I,K],2).ToString().PadLeft(8), Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label521:
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(64,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),
                            Math.Round(E1T[I,K],2).ToString().PadLeft(8), Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label522:
                        sw16.WriteLine("", TEXT.Substring(72,8), Math.Round(PT[I,K],2).ToString().PadLeft(6), Math.Round(A1,1).ToString().PadLeft(7), Math.Round(E2T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9),Math.Round(H0[I,K],2).ToString().PadLeft(8), Math.Round(ETAIOP[I],2).ToString().PadLeft(7),
                            Math.Round(DI[I],2).ToString().PadLeft(7),Math.Round(LS[I],2).ToString().PadLeft(7),Math.Round(OEFFNG[I],1).ToString().PadLeft(7),Math.Round(BRTLA[I],3).ToString().PadLeft(7),
                            Math.Round(PHI[I],1).ToString().PadLeft(6),Math.Round(BEPS[K],2).ToString().PadLeft(6),Math.Round(EPSMAX,2).ToString().PadLeft(6),Math.Round(EPSMIN,2).ToString().PadLeft(7));
                        
                        for(I1 = 1; I1 <= 5; I1++)      //DO 316 I1 =1,5
                        {
                            if(GVENT[I1] == 0.0)
                                continue;
                            sw16.WriteLine("0           NR      D      G       EPS     C    P V.DUE ");
                            goto label317;
                        }   //316 CONTINUE
                        
                    label317:
                        for(I1 = 1; I1 <= 5; I1++)      //DO 300 I1 = 1,5
                        {
                            if(GVENT[I1] == 0.0)
                                continue;
                            if(I1 != 1)
                                goto label314;
                            BEAUF=BEAUFG[I1];
                            goto label315;
                            
                        label314:
                            BEAUF=BEAUFG[I1]-BEAUFG[I1-1];
                            
                            if(BEAUFG[I1] == 0.0)
                                BEAUF=0.0;
                            
                        label315:
                            if(DELTAP[I1] == PT[I-1,K])
                                goto label312;
                            
                            sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}         {7} ", TEXT.Substring(152,8), I1.ToString().PadLeft(5), Math.Round(VENDUR[I1],1).ToString().PadLeft(9),Math.Round(GVENT[I1],2).ToString().PadLeft(8),
                                Math.Round(BEAUF,3).ToString().PadLeft(8),Math.Round(CVENT[I1],1).ToString().PadLeft(7),Math.Round(DELTAP[I1],2).ToString().PadLeft(9),TEXT.Substring(160,8));
                            
                            continue;
                            
                        label312:
                            sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}         {7} ", TEXT.Substring(152,8), I1.ToString().PadLeft(5),Math.Round(VENDUR[I1],1).ToString().PadLeft(9),Math.Round(GVENT[I1],2).ToString().PadLeft(8),
                                Math.Round(BEAUF,3).ToString().PadLeft(8) ,Math.Round(CVENT[I1],1).ToString().PadLeft(7),Math.Round(DELTAP[I1],2).ToString().PadLeft(9),TEXT.Substring(168,12));
                        }   //300 CONTINUE

                        if(NSTFZ[KT9] == 0 && I >= IZ9)
                            goto label599;
                        
                        if(NSTFZ[KT9] == 0)
                            sw16.WriteLine(" ");
                        continue;
                        
                    label480:
                        //GOTO(481,482,521,522,523),
                        if(I == 1)      goto label481;
                        if(I == 2)      goto label482;
                        if(I == 3)      goto label521;
                        if(I == 4)      goto label522;
                        if(I == 5)      goto label523;
                        
                    label481:
                        sw16.WriteLine("0REGELSTUFE              {0}I1-KRAENZIG        {1}I1-FLUTIG       {2}F6.0U/MIN         DM {3}F6.0", KRANZZ[JJ].ToString().PadLeft(1),KFLUT.ToString().PadLeft(1),Math.Round(UPM[K],0).ToString().PadLeft(6),Math.Round(STFDI[4],0).ToString().PadLeft(6));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G      H0   ETA-I  DELT-I   LS    DNGG   B-LA  C0/U  EPS  EPSMAX  EPSMIN");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(136,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label482:
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(56,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E1T[I,K],2).ToString().PadLeft(8),Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label410:
                        if(JJ == 1)
                            goto label420;
                        //GOTO(525,526,527,523),I
                        if(I == 1)      goto label525;
                        if(I == 2)      goto label526;
                        if(I == 3)      goto label527;
                        if(I == 4)      goto label523;
                        
                    label525:
                        sw16.WriteLine("0 {0}", TEXT.Substring(100,16));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(56,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label526:
                        sw16.WriteLine(" {0}{1} {2}{3}{4}  {5}{6} ", TEXT.Substring(80,4), TEXT.Substring(60,4), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),
                            Math.Round(E1T[I,K],2).ToString().PadLeft(8),Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label527:
                        sw16.WriteLine(" {0}{1} {2}{3}{4}  {5}{6} ", TEXT.Substring(84,4), TEXT.Substring(60,4),Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),
                            Math.Round(E1T[I,K],2).ToString().PadLeft(8),Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        
                        if(NSTFZ[KT9] == 0 && I >= IZ9)
                            goto label599;
                        if(NSTFZ[KT9] == 0)
                            sw16.WriteLine(" ");
                        continue;
                        
                    label420:
                        //GOTO(421,422,526,527,523),
                        if(I == 1)      goto label421;
                        if(I == 2)      goto label422;
                        if(I == 3)      goto label526;
                        if(I == 4)      goto label527;
                        if(I == 5)      goto label523;
                        
                    label421:
                        sw16.WriteLine(" {0}", TEXT.Substring(100,16));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(136,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),
                            Math.Round(E1T[I,K],2).ToString().PadLeft(8),Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label422:
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(56,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),
                            Math.Round(E1T[I,K],2).ToString().PadLeft(8),Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label517:
                        if(KT7D == 2)
                            goto label450;
                        
                        if(KT7D == 4)
                            goto label430;
                        sw16.WriteLine(" FEHLER");
                        //16 FORMAT(1X,"FEHLER")
                        
                    label430:
                        if(JJ == 1)
                            goto label440;
                        //GOTO(530,523),
                        if(I == 1)      goto label530;
                        if(I == 2)      goto label523;
                        
                    label530:
                        sw16.WriteLine(" {0}", TEXT.Substring(88,12));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(56,8),Math.Round(PT[I,K],2).ToString().Substring(6),Math.Round(A1,1).ToString().Substring(7),Math.Round(E1T[I,K],2).ToString().Substring(8),
                            Math.Round(Z1,2).ToString().Substring(6),Math.Round(G[I,K],2).ToString().Substring(9));
                        continue;
                        
                    label440:
                        //GOTO(441,442,523),
                        if(I == 1)      goto label441;
                        if(I == 2)      goto label442;
                        if(I == 3)      goto label523;
                        
                    label441:
                        sw16.WriteLine(" {0} ", TEXT.Substring(88,12));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(136,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label442:
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(56,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(8));
                        continue;
                        
                    label450:
                        if(JJ == 1)
                            goto label460;
                        //GOTO(531,532,536),
                        if(I == 1)      goto label531;
                        if(I == 2)      goto label532;
                        if(I == 3)      goto label536;
                        
                    label531:
                        sw16.WriteLine("0 {0}", TEXT.Substring(88,12));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(56,8),Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label532:
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(64,8), Math.Round(PT[I,K],2).ToString().PadLeft(6), Math.Round(A1,1).ToString().PadLeft(7), Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                    
                    label460:
                        //GOTO(461,462,532,523),
                        if(I == 1)      goto label461;
                        if(I == 2)      goto label462;
                        if(I == 3)      goto label532;
                        if(I == 4)      goto label523;
                        
                    label461:
                        sw16.WriteLine("0 {0} ", TEXT.Substring(88,12));
                        sw16.WriteLine("0            P    T(-X)   ENTH     VOL       G");
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5}", TEXT.Substring(136,8), Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                        
                    label462:
                        sw16.WriteLine(" {0} {1}{2}{3}  {4}{5} ", TEXT.Substring(56,8),Math.Round(PT[I,K],2).ToString().PadLeft(6),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(E1T[I,K],2).ToString().PadLeft(8),
                            Math.Round(Z1,2).ToString().PadLeft(6),Math.Round(G[I,K],2).ToString().PadLeft(9));
                        continue;
                    }   //500 CONTINUE
                    
                    QTROM=true;
                    IX3=I;
                    IX4=IX3;
                    goto label534;
                    
                label535:
                    TVOR = T0E[JJ];
                    
                    if(TVOR == 0.0)
                        TVOR = T1T[1];
                    
                    if (T0TURB == 0.0)
                        T0TURB = TVOR;
                    
                    if (P0TURB == 0.0)
                        P0TURB = P0E[JJ];
                    
                    S0TT=VISUM(P0E[JJ],TVOR ,02);
                    T02TT=VISUM(PT[IZ9,K],S0TT,04);
                    E02TT=VISUM(PT[IZ9,K],T02TT,01);
                    IXXX = UWA011(IZ9,7);
                    H0TT1 = 0.0;
                    
                    if (IXXX != 6)
                        goto label8;
                    
                    H0TT1 = VISUM(PT[IZ9-1,K],S0TT,04);
                    H0TT1 = VISUM (PT[IZ9-1,K],H0TT1,01);
                    H0TT1 = E1T[2,K] - H0TT1;
                    
                label8:
                    if(JJ == 1) 
                        goto label537;
                    
                    H0TT =E1T[1,K]-E02TT;
                    goto label538;
                    
                label537:
                    H0TT=E1T[2,K]-E02TT;
                    
                label538:
                    ETATT=SHITT/SH0TT;
                    ETATT1=SHITT/H0TT;
                    A51 = SHITT + HCNACH;
                    A52 = A51/H0TT * 100.0;
                    A53 = A51/SH0TT * 100.0;
                    A54 = ETATT1 * 100.0;
                    
                    sw16.WriteLine(" TEILT  {0}{1}{2}{3}{4}{5}{6}     -  {7}{8}                       {9}{10} ", Math.Round(H0TT,2).ToString().PadLeft(8),Math.Round(SH0TT,2).ToString().PadLeft(8),
                        Math.Round(A51,2).ToString().PadLeft(8), Math.Round(A52,2).ToString().PadLeft(7),Math.Round(A53,2).ToString().PadLeft(8),Math.Round(SHITT,2).ToString().PadLeft(9),
                        Math.Round(A54,2).ToString().PadLeft(8),Math.Round(SNITT,2).ToString().PadLeft(8),Math.Round(H0TT1,2).ToString().PadLeft(8),Math.Round(GMAXG1,2).ToString().PadLeft(10),
                        Math.Round(GMING1,2).ToString().PadLeft(10));
                    
                    sw16.WriteLine("0FETA = {0} ", Math.Round(FETAE[JJ],4).ToString().PadLeft(6));
                    //539 FORMAT(1H0,"FETA = ",F6.4)
                    HITURB = HITURB + SHITT;
                    
                label599:
                    sw16.WriteLine(" ");
                    sw16.WriteLine(" ");
                }   //600 CONTINUE
                A51 = VISUM (P0TURB,T0TURB,01);
                A52 = VISUM (P0TURB,T0TURB,02);
                A52 = VISUM (PT[IZ9,K],A52,04);
                A52 = VISUM (PT[IZ9,K],A52,01);
                A52 = A51 - A52;
                A53 = HITURB/A52*100.0;
                sw16.WriteLine(" TURB {0}                              {1}{2} ", Math.Round(A52,2).ToString().PadLeft(8),Math.Round(HITURB,2).ToString().PadLeft(9),Math.Round(A53,2).ToString().PadLeft(8));
                //3 FORMAT (1H ,"TURB ",F8.2,31X,F9.2,F8.2)
                
                if(IZ1 == ANZTRB)
                    goto label72;
                JJVOR=JJ;
                UWA043(2);
            }   //700 CONTINUE
            
        label72:
            for(int IN4 = 1; IN4 <= 15; IN4++)      //DO 73 IN4 = 1,15
            {
                if (LTGAB[1, IN4] == 0.0)
                    continue;
                
                goto label78;
            }   //73 CONTINUE
            goto label79;
            
        label78:
            UWA043(2);
            //sw16.WriteLine("",595)
            for(IN1 = 1; IN1 <= 15; IN1++)      //DO 74 IN1 = 1,15
            {
                if(LTGAB[1,IN1] == 0)
                    continue;
                UWA006("RDISC", 54,IN1);
                GSTOBU= 0.0;
                
                for(IN2 = 1; IN2 <= 6; IN2++)   //DO 75 IN2=1,6
                {
                    IX1=LTGAB[IN2,IN1];
                    
                    if(IX1 == 0)
                        goto label76;
                    IZWZ[IN2] = IX1;
                    ANIND[IN2] = GLTG[IX1];
                    A10 = PSTOB[IN1];
                    
                    if (IN2 <= 1) 
                        goto label62;
                    
                    JJVOR = LTGAB[IN2-1,IN1];
                    A10 = PLTG[JJVOR];
                
                label62:
                    if(A10 < PLTG[IX1] || ILTG[IX1] > 9999)
                        ANIND[IN2] =-ANIND[IN2];
                    GSTOBU = GSTOBU + ANIND[IN2];
                }           //75 CONTINUE
            label76:
                IX1 = IZWZ[1];
                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", IN1.ToString().PadLeft(2), Math.Round(PSTOB[IN1],3).ToString().PadLeft(10),Math.Round(ESTOB[IN1],2).ToString().PadLeft(10),
                    Math.Round(GSTOBU,3).ToString().PadLeft(8), Math.Round(DMAST[1],1).ToString().PadLeft(10),Math.Round(SPAST[1],2).ToString().PadLeft(8),Math.Round(ZZAST[1],0).ToString().PadLeft(6),
                    IX1.ToString().PadLeft(7),Math.Round(PLTG[IX1],3).ToString().PadLeft(10),Math.Round(ANIND[1],3).ToString().PadLeft(10));
                IN2=IN2-1;

                if (IN2 == 1)
                    continue;
                
                for(IN3 = 2; IN3 <= IN2; IN3++)     //DO 77 IN3 = 2,IN2
                {
                    IX1 = IZWZ[IN3];
                    sw16.WriteLine("                               {0}{1}{2}{3}{4}{5} ", Math.Round(DMAST[IN3],1).ToString().PadLeft(10),Math.Round(SPAST[IN3],2).ToString().PadLeft(8),
                        Math.Round(ZZAST[IN3],0).ToString().PadLeft(6),IX1.ToString().PadLeft(7),Math.Round(PLTG[IX1],3).ToString().PadLeft(10),Math.Round(ANIND[IN3],3).ToString().PadLeft(10));
                }   //77 CONTINUE
            }   //74 CONTINUE
            
        label79:
            return;
        }   //END
        
        
        static void UWA023()
        {
            //ENTRY TEILL
            int J1 = 0, J2 = 0, KT10RT = 0, NUSA1 = 0, IWAERM = 0, NSTUSA = 0, M = 0, NRLTG = 0, L1 = 0, JJEND = 0, IZ11 = 0, KT7VOR = 0, NKPARR = 0, L = 0, L2 = 0;
            double GDIF = 0, WPT = 0, PERZEU = 0, GABTT = 0, PKOPSP = 0, FAKUSA = 0, DPDUE = 0, PTVORA = 0, ETVORA = 0, V1 = 0, V2 = 0, T1 = 0, T2 = 0,PTVORT = 0,ETVORT = 0, VMA = 0, VMT = 0, DP = 0,
                UG = 0, VG = 0, UE1T = 0, UE2T = 0, VE1T = 0, VE2T = 0, VPT = 0, UPTTWKA = 0, WZUKA = 0, TWKT = 0, WZUKT = 0, TWKA = 0, UPT = 0, VM = 0, DPSOLL = 0, A90 = 0, ET = 0, K15RET = 0, K9RET = 0,
                YUPM = 0, WT1 = 0, WT2 = 0, Y1 = 0, Y2 = 0, FBEW = 0;
            bool QUEBER, QEND, QEND1, QUSA, QUSA1, QUSA2, QAUSL, QWAERM;
            double[] AFELD = new double[11], ZFELD = new double[11], TFELD = new double[6], GZUG = new double[5], XGLTG = new double[6],
                GUEB = new double[7], JAKUSA = new double[8], PSIALT = new double[8], GABAUS = new double[5],
                XXXC2G = new double[5];
            int[] LUEBER = new int[3];
            double[,] VERLEM = new double[6,4];

            XXXC2G[1] = 0.0;
            XXXC2G[2] = 0.0;
            XXXC2G[3] = 0.0;
            XXXC2G[4] = 0.0;
            
            UWA006("WDISC", 55, IFALL);
            UWA006("RDISC", 55, 1);
            
            for(JJ = 1; JJ <= 4; JJ++)      //DO 2 JJ = 1,4
            {
                ETWKA[JJ]=ETWK[JJ];
                if(EWKEFF[JJ] > 0.0 && GABDE[JJ] > 0.0)
                    EWKZUK[JJ] = EWKEFF[JJ]/(GABDE[JJ]+GZUKOA[JJ]);
                
                EWKZKA[JJ] = EWKZUK[JJ];
                GZUG[JJ] = GFDE[JJ];
                
                GABAUS[JJ] = GABDE[JJ];
                DPHEIZ[JJ] = 0.0;
                IM[JJ] = 0;
                TFELD [JJ] = 0.0;
            }   //2 CONTINUE
            
            DPHEIZ[5] = 0.0;
            TFELD [5] = 0.0;
            IM[5] = 0;
            
            for(JJ = 1; JJ <= 40; JJ++)     //DO 52 JJ = 1,40
            {
                DPLTG[JJ] = 0.0;
                DELTG[JJ] = 0.0;
            }   //52 CONTINUE
            
            KT10RT = 0;
            QEND = false;
            GDIF = 0.0;
            WPT = 0.0;
            QEND1 =false;
            QUSA1 = true;
            QUSA2 = true;
            NUSA1 = 0;
            
            for(J1 = 1; J1 <= 5; J1++)  //DO 57 J1 = 1,5
            {
                for(J2 = 1; J2 <= 3; J2++)      //DO 56 J2 = 1,3
                {
                    GMERK[J1,J2] = 0.0;
                    VERLEM[J1,J2] = 0.0;
                }   //56 CONTINUE
                XGLTG[J1] = 0.0;
                GURSTF[J1] = 0.0;
            }   //57 CONTINUE
            
            GURSTF[6] = 0.0;
            UWA006("RDISC",55,IFALL);
            IWAERM = 0;
            QWAERM =false;
            
            if (WTSOLL == 0.0) 
                QWAERM = true;
            
            Y = 0.0;
            
            if (ANZTRB == 1)
                goto label71;
            
            for(JJ = 2; JJ <= ANZTRB; JJ++)     //DO 72 JJ = 2,ANZTRB
            {
                if (NITRE[JJ] == 9) 
                    NITRE[JJ] = 8;
            }   //72 CONTINUE
            
        label71:
            for(JJ = 1; JJ <= ANZDTT; JJ++)     //DO 3 JJ = 1,ANZDTT
            {
                IZ3 = ITTEND[JJ] + 1;
                IZ1 = JJ;
                QUSA = true;
                NSTUSA = 0;
                JAKUSA[JJ] = 0;
                PSIALT[JJ] = 0.0;
                UWA006("RDISC",52,IZ1);
                UWA006("RDISC", 59,IZ1);
                UWA010(1,1);
                
                if (KT10 == KT10RT) 
                    goto label81;
                
                GDIF = GZUG[KT10] - XG[1];
                TNPROZ[KT10] = 1.0;
                KT10RT = KT10;
                
                if (KUSA == 0 || KUSA > 2) 
                    goto label81;
                
                if (KT10 == 1 || KT10 == JUSA) 
                    QUSA = false;
                
            label81:
                I = 2;
                
                if (JJ == 1)
                    I = 3;
                A1 = XG[I];
                
                if (IFALL == 2)
                    A1 = XG[I] + GDIF;
                
                if (VBEZ == 0.0) 
                    VBEZ = A1*A1*VOLUME[I-1]/XPT[I-1];
                
                for(I = 1; I <= IZ3; I++)       //DO 4 I = 1,IZ3
                {
                    if (IFALL != 2) 
                        goto label82;
                    A1 = XG[I] + GDIF;
                    XG[I] = A1;
                    
                label82:
                    if (QUSA)
                        goto label85;
                    
                    UWA010(I,1);
                    
                    A3 = (NUSA);
                    A4 = (NSTUSA);
                    A3 = FUSA - (FUSA - 1.0)* A4/A3;
                    
                    if (A3 != 0.0)
                        A3 = A3*A3;
                    
                    if (KT7 == 4)
                        NSTUSA = NSTUSA + 1;
                    
                    if (NSTUSA >= NUSA) 
                        QUSA = true;
                    
                    XG[I] = XG[I] * A3;
                    
                    if (KT7 == 4 || KT7 == 3)
                        LS[I] = LS[I]* A3;
                    
                    JAKUSA[JJ] = I;
                    QUSA1 = false;
                    
                label85:
                    YG [I] = XG [I];
                    YE1T [I] = XE1T[I];
                    YE2T [I] = XE2T[I];
                    YPT [I] = XPT[I];
                    
                    if (I == 1)
                        continue;
                    YH0 [I] = XH0 [I];
                    YC2GES [I] = XC2GES [I];
                    
                    if (I == 2 && JJ == 1) 
                        continue;
                    YDFAKT [I] = XDFAKT [I];
                }   //4 CONTINUE
                
                IZ1 = JJ;
                UWA006("WDISC", 52,IZ1);
            }   //3 CONTINUE
            
            IHEIZ = 0;
            JHEIZ = 0;
            LAUFEN = 0;
            QAUSL = false;
            
            if (LIGHT[9] == 7)
                LIGHT[9] = 5;
            
        label5:
            LAUFEN = LAUFEN + 1;
            LIGHT[10] = 1;
            
            for(IZ1 = 1; IZ1 <= ANZTRB; IZ1++)      //DO 6 IZ1 = 1,ANZTRB
            {
                AFELD[IZ1] = GFDE[IZ1];
                ZFELD[IZ1] = GABDE[IZ1];
                GFDE[IZ1] = GFDE[IZ1] * TNPROZ[IZ1];
            }   //6 CONTINUE
            M = 1;
            PERZEU = 0.0;
            UWA098(0);
            //64 FORMAT( LINK 4 ITER ,I2,5(5X,F10.3))
            
            for(J2 = 1; J2 <= 5; J2++)      //DO 92 J2 = 1,5
            {
                TX1 = GLTG[J2+34];
                if (LAUFEN < IZMINT) 
                    XGLTG[J2] = TX1;
            }   //92 CONTINUE
            
            if (GFDE[1] < 0.0) 
                FORERR();
            
            if (PDEPKT[1] == 0.0 || TTHPKT[1] == 0.0)
                goto label66;
            
            TX1 = GFDE[1] * (E1T[1,1]-EWAUS[IHENDE])/860.0;
            
            for(IZ1 = 1; IZ1 <= 3; IZ1++)   //DO 67 IZ1 = 1,3
            {
                if (PDEPKT[IZ1] == 0.0)
                    goto label68;
                IZ2 =IZ1;
                
                if (TX1 > TTHPKT[IZ1]) 
                    goto label68;
            }   //67 CONTINUE
            
        label68:
            IZ1 = IZ2 - 1;
            if (IZ1 < 1)
                IZ1 = IZ2 + 1;

            A1 = TTHPKT[IZ1];
            A2 = TTHPKT[IZ2];
            Z1 = PDEPKT[IZ1];
            Z2 = PDEPKT[IZ2];
            TX2 = A1 - A2;
            TX2 = (A1*Z2 - A2*Z1)/TX2 + (Z1 - Z2)/TX2*TX1;
            PERZEU = UW0011(TX2,2);
            
            if (PDWR != 0.0)
                PERZEU = PDWR;
            
        label66:
            if (LIGHT[4] == 1) 
                UWA012();
            
            if (LAUFEN >= IZMINT) 
                goto label79;
            
            for(J2 = 1; J2 <= 5; J2++)      //DO 59 J2 = 1,5
            {
                GMERK[J2,1] = GMERK[J2,2];
                GMERK[J2,2] = GMERK[J2,3];
                GMERK[J2,3] = XGLTG[J2];
                
                UWA008("UNPACK", ILTG[34+J2], ref IX1, ref IX2, ref IX3, ref IX4);
                
                if (IX2 == 0)
                    continue;
                
                if (NHEIZ != 10) 
                    continue;
                
                if (LAUFEN < IZMINT && XGLTG[J2] > GFDE[IX2]*0.9)
                    GLTG[34+J2] = 0.9*GFDE[IX2];
                
                if (LAUFEN < IZMINT && XGLTG[J2] > GFDE[IX2]*0.9)
                    XGLTG[J2] = 0.9*GFDE[IX2];
                
                GMERK[J2,3] = GLTG[J2+34];
            }   //59 CONTINUE
            
        label79:
            if (LAUFEN < IZMINT) 
                goto label7;
            QAUSL = true;
            
            for(IZ1 = 1; IZ1 <= ANZTRB; IZ1++)  //DO 8 IZ1 = 1,ANZTRB
            {
                TX1 = Math.Abs((AFELD[IZ1]-GFDE[IZ1])/GFDE[IZ1]);
                TX2 = Math.Abs(ZFELD[IZ1]-GABDE[IZ1]);
                
                if (GABDE[IZ1] != 0.0)
                    TX3 = Math.Abs(TX2/GABDE[IZ1]);
                if (GFDE[IZ1] < 0.05) 
                    TX1 = ABKRIT;
                if (TX2 < 0.05) 
                    TX3 = ABKRIT;
                if (TX1 > ABKRIT || TX3 > ABKRIT) 
                    QAUSL = false;
                if ((LIGHT[4] == 4 || LAUFEN > IZMAXT-3) && !QAUSL)
                    sw16.WriteLine(" **TEILL**   {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", LAUFEN.ToString().PadLeft(3), IZ1.ToString().PadLeft(3),
                        Math.Round(ABKRIT,5).ToString().PadLeft(8),Math.Round(GFDE[IZ1],4).ToString().PadLeft(12),Math.Round(AFELD[IZ1],4).ToString().PadLeft(12),
                        Math.Round(TX1,5).ToString().PadLeft(8), Math.Round(GABDE[IZ1],4).ToString().PadLeft(12), Math.Round(ZFELD[IZ1],4).ToString().PadLeft(12),
                        Math.Round(TX3,5).ToString().PadLeft(8),Math.Round(TX2,4).ToString().PadLeft(12));
                //69 FORMAT(1H ,9H**TEILL**,3X,2I3,F8.5,2(2F12.4,F8.5),F12.4)
            }   //8 CONTINUE
            
            for(IZ1 = 1; IZ1 <= 5; IZ1++)   //DO 70 IZ1 = 1,5
            {
                TX1 = GLTG[IZ1+34];
                
                if (TX1 == 0.0)
                    continue;
                
                TX2 = Math.Abs ((TX1 - XGLTG[IZ1])/TX1);
                
                if (TX1 < 0.05) 
                    TX2 = ABKRIT;
                
                if (Math.Abs(TX1-XGLTG[IZ1]) < 0.05) 
                    TX2 = ABKRIT;
                
                if (TX2 > ABKRIT)
                    QAUSL = false;
                
                if ((LIGHT[4] == 4 || LAUFEN > IZMAXT-3) && !QAUSL)
                    sw16.WriteLine("**TEILL**   {0}{1}{2}{3}{4}{5}{6}{7}", LAUFEN.ToString().PadLeft(3), IZ1.ToString().PadLeft(3),
                        Math.Round(ABKRIT,5).ToString().PadLeft(8),Math.Round(GLTG[IZ1+34],4).ToString().PadLeft(12),Math.Round(XGLTG[IZ1],4).ToString().PadLeft(12),
                        Math.Round(TX2,5).ToString().PadLeft(8),Math.Round(PLTG[IZ1+34],4).ToString().PadLeft(12),Math.Round(DPLTG[IZ1+34],4).ToString().PadLeft(12));
                
                XGLTG[IZ1] = TX1;
                
                if (NHEIZ != 10) 
                    continue;
                TX1 = Math.Abs(GLTG[IZ1+34]-GMERK[IZ1,3])/GLTG[IZ1+34];
                
                if (GLTG[IZ1+34] < 0.05)
                    TX1 = ABKRIT;
                if (Math.Abs(GLTG[IZ1+34]-GMERK[IZ1,3]) < 0.05)
                    TX1 = ABKRIT;
                
                if (TX1 > ABKRIT) 
                    QAUSL = false;
                
                if ((LIGHT[4] == 4 || LAUFEN > IZMAXT-3) && !QAUSL)
                    sw16.WriteLine("**TEILL**   {0}{1}{2}{3}{4}", LAUFEN.ToString().PadLeft(3),IZ1.ToString().PadLeft(3),Math.Round(TX1,5).ToString().PadLeft(8),
                        Math.Round(GLTG[IZ1+34],4).ToString().PadLeft(12),Math.Round(GMERK[IZ1,3],4).ToString().PadLeft(12));
            }   //70 CONTINUE
            
            if (LAUFEN == IZMINT && NHEIZ == 10) 
                QAUSL = false;
            
            if (!QWAERM) 
                QAUSL = false;
            
            if (!QAUSL) 
                QEND = false;
            if (!QAUSL)
                LIGHT[9] = 5;
            
            if (LAUFEN == (IZMAXT-1))
                QAUSL = true;
            
            if (!QWAERM && LAUFEN > IZMINT+1 && !QAUSL) 
                goto label114;
            
            if (QAUSL && LIGHT[9] != 6) 
                LIGHT[9] = 7;
            
        label7:
            if (LAUFEN > IZMAXT) 
                goto label100;
            
            if (QEND) 
                goto label100;
            
            if (QAUSL) 
                QEND = true;
            
        label103:
            if (IKUEHL != 1)
            {
                sw16.WriteLine("                                                                                                                        {0}{1}", LAUFEN.ToString().PadLeft(3),LIGHT[9].ToString().PadLeft(2));
                //20 FORMAT (120X,2I3);
            }
            
            if (IKUEHL != 1)
            {  
                Console.WriteLine(" {0}{1} ", LAUFEN.ToString().PadLeft(3),LIGHT[9].ToString().PadLeft(3));
                //58 FORMAT (1H ,2I3)
            }
            
        label99:
            LIGHT[10] = 0;
            
            if (IHENDE == INENDE) 
                goto label303;
            
            if (LAUFEN <= 3) 
                goto label303;
            
            if (QAUSL) 
                goto label303;
            
            if (LAUFEN/2*2 != LAUFEN) 
                goto label303;
            
            if (LAUFEN > IZMAXT-5) 
                goto label303;
            
            IX7 = 0;
            IZ1 = IHENDE + 1;
            
            for(I = IZ1; I <= INENDE; I++)      //DO 302 I=IZ1,INENDE
            {
                if (NTYP[I] != 8) 
                    continue;
                
                if (KRUECK[I] != 1) 
                    continue;
                
                if (VERLE[I] == 0.0) 
                    continue;
                
                if (KATZE2[I] == 9) 
                    continue;
                
                if (IZMINT < 10)
                    IZMINT = 10;
                
                K1 = (int)NBLTG[I,1];
                
                if (K1 == 0)
                    continue;
                
                IX7 = IX7 + 1;
                
                if (IX7 > 5) 
                    continue;
                K2 = NN1[I];
                K3 = N2[I];
                
                if (GLTG[K1] < 0.1 && GLTG[K2] < 0.1) 
                    continue;
                A1 = PLTG[K1];
                A3 = PLTG[K2];
                
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  PAR.ANZ{0}{1}{2}{3}{4}{5}{6}{7} 3I5,8E13.5)", K1.ToString().PadLeft(5),K2.ToString().PadLeft(5),K3.ToString().PadLeft(5),
                        A1.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),VERLE[I].ToString("0.00000E+0").PadLeft(13),
                        GLTG[K1].ToString("0.00000E+0").PadLeft(13),GLTG[K2].ToString("0.00000E+0").PadLeft(13));
                
                if (Math.Abs(A1-A3)/A3 < 0.0001) 
                    continue;
                A5 = (A1+A3)*0.5;
                IZ10 = 0;
                IX5 = 0;
                
            label300:
                UWA008("UNPACK", ILTG[K1], ref IX1, ref IX2, ref IX3, ref IX4);
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA044(IX4,1);
                
                if (IX5 > 0) 
                    goto label410;
                
                A10 = 0.0;
                Z4 = 0.0;
                
                for(IZ2 = 1; IZ2 <= 10; IZ2++)      //DO 400 IZ2 = 1,10
                {
                    NRLTG = LABT[IZ2];
                    
                    if (NRLTG == 0) 
                        continue;
                    
                    if (NRLTG <= 46)
                        A10 = A10 + GLTG[NRLTG];
                }   //400 CONTINUE
                
            label410:
                IX6 = ITTEND[IX3];
                A2 = PT[IX6,K];
                A1 = PT[IX4,K];
                Z6 = G[IX4,K] + SUMGZU - SUMGAB;
                
                if (Z6 < GMINTT[IX2])
                    Z6 = GMINTT[IX2];
                
                Z1 = VISUM (A1,T2T[IX4],00);
                IX10 = 0;
                A4 = PT[IX4,K] - PLTG[K1];
                
            label420:
                if (IX10 != 0) 
                    goto label421;
                A8 = A1;
                Z7 = A10;
                
                if (A10/Z6 < 0.01)
                    Z7 = Z6 * (A5/A1-1.0);
                
            label421:
                Z5 = VISUM(A8,T2T[IX4],00);
                A8 = Math.Sqrt((A1*A1-A2*A2)*Math.Pow(((Z6+Z7)/Z6),2)*A8*Z5/A1/Z1 + A2*A2);
                A9 = A10 - Z7;
                A6 = 0.0;
                
                if (A10 > 0.01) 
                    A6 = A4 * Math.Pow((A9/A10),2) * Z5/Z1;
                
                if (A9 < 0.0) 
                    A6 = -A6;
                A7 = A8 - A6;
                
                if (Math.Abs((A5-A7)/A5) < 0.0001 && IX10 > 2) 
                    goto label422;
                Z9 = PLTG[K1] - A7;
                
                if (Math.Abs(Z9/PLTG[K1]) < 0.001) 
                    goto label423;
                
                Z7 = (PLTG[K1]-A5)/Z9 * Z7;
                
            label423:
                IX10 = IX10 + 1;

                if (IX10 > 20)
                    goto label422;

                goto label420;
                
            label422:
                if (LIGHT[4] == 5)
                {
                    sw16.WriteLine("0PAR.ANZ1{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}", IX5,A1.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13),A4.ToString("0.00000E+0").PadLeft(13),
                        A5.ToString("0.00000E+0").PadLeft(13),A6.ToString("0.00000E+0").PadLeft(13),A7.ToString("0.00000E+0").PadLeft(13),A8.ToString("0.00000E+0").PadLeft(13),
                        A9.ToString("0.00000E+0").PadLeft(13),A10.ToString("0.00000E+0").PadLeft(13));
                    
                    sw16.WriteLine("          {0}  {1}{2}{3}{4}{5}{6}{7}{8}{9} ", IX10.ToString().PadLeft(5),Z1.ToString("0.00000E+0").PadLeft(13),
                        Z2.ToString("0.00000E+0").PadLeft(13),Z3.ToString("0.00000E+0").PadLeft(13),Z4.ToString("0.00000E+0").PadLeft(13),Z5.ToString("0.00000E+0").PadLeft(13),
                        Z6.ToString("0.00000E+0").PadLeft(13),Z7.ToString("0.00000E+0").PadLeft(13),Z8.ToString("0.00000E+0").PadLeft(13),Z10.ToString("0.00000E+0").PadLeft(13));
                //10302 FORMAT (1H0,"PAR.ANZ1",I5,9E13.5,/,1X,9X,I2,2X,9E13.5)
                }

                A5 = A7;
                UWA008("UNPACK", ILTG[K2], ref IX1, ref IX2, ref IX3, ref IX4);

                if (IX2 > 0) 
                    goto label12300;
                
                IZ2 = K2;
                
            label10300:
                for(L = IZ1; L <= INENDE; L++)      //DO 11300 L=IZ1,INENDE
                {
                    if (IZ2 != NN2[L]) 
                        continue;
                    IZ2 = NN1[L];
                    UWA008("UNPACK", ILTG[IZ2], ref IX1, ref IX2, ref IX3, ref IX4);
                    
                    if (IX2 > 0) 
                        goto label12300;
                    goto label10300;
                }   //11300 CONTINUE
                continue;
                
            label12300:
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA044(IX4,1);
                
                if (IX5 > 0) 
                    goto label430;
                
                Z10 = 0.0;
                
                for(IZ2 = 1; IZ2 <= 10; IZ2++)      //DO 425 IZ2 = 1,10
                {
                    NRLTG = LABT[IZ2];
                    if (NRLTG == 0) 
                        continue;
                    
                    if (NRLTG <= 46)
                        Z10 = Z10 + GLTG[NRLTG];
                
                }   //425 CONTINUE
                
            label430:
                IX6 = ITTEND[IX3];
                A9 = Z10 + Z7;
                A2 = PT[IX6,K];
                A3 = PT[IX4,K];
                Z8 = G[IX4,K] + SUMGZU - SUMGAB;
                
                if (Z8 < GMINTT[IX2]) 
                    Z8 = GMINTT[IX2];
                A8 = A5 + Z4;
                
                if (IX5 == 0) 
                    A8 = A3;
                
                Z5 = T2T[IX4];
                Z3 = VISUM(A3,Z5,00);
                Z5 = VISUM(A8,Z5,00);
                A7 = Math.Sqrt((Math.Pow(A3,2.0)- Math.Pow(A2,2.0))*Math.Pow(((Z8-Z7)/Z8),2.00) * A8*Z5/A3/Z3+Math.Pow(A2,2.0));
                Z4 = 0.0;
                if (Z10 > 0.1) 
                    Z4 = Math.Pow(A9,2)*Z5/Math.Pow(Z10,2)/Z3*(PT[IX4,K]-PLTG[K2]);
                
                if (A9 < 0.0) Z4 = -Z4;
                
                if (LIGHT[4] == 5)
                {
                    sw16.WriteLine("0PAR.ANZ1{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}", IX5,A1.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),
                        A5.ToString("0.00000E+0").PadLeft(13),A6.ToString("0.00000E+0").PadLeft(13),A7.ToString("0.00000E+0").PadLeft(13),A8.ToString("0.00000E+0").PadLeft(13),A9.ToString("0.00000E+0").PadLeft(13),A10.ToString("0.00000E+0").PadLeft(13));
                
                    sw16.WriteLine("          {0}  {1}{2}{3}{4}{5}{6}{7}{8}{9}", IX10,Z1.ToString("0.00000E+0").PadLeft(13),Z2.ToString("0.00000E+0").PadLeft(13),Z3.ToString("0.00000E+0").PadLeft(13),
                        Z4.ToString("0.00000E+0").PadLeft(13),Z5.ToString("0.00000E+0").PadLeft(13),Z6.ToString("0.00000E+0").PadLeft(13),Z7.ToString("0.00000E+0").PadLeft(13),Z8.ToString("0.00000E+0").PadLeft(13),Z10.ToString("0.00000E+0").PadLeft(13));
                }

                A7 = A7 - Z4;
                
                if (Math.Abs(A7-A5)/A5 < 0.0002) 
                    goto label301;
                A5 = (A7+A5)*0.5;
                IX5 = IX5 + 1;

                if (IX5 > 20) 
                    goto label301;
                
                goto label300;
                
            label301:
                A1 = GLTG[K1] - Z7;
                A2 = GLTG[K2] + Z7;
                
                if (A1 == -A2)
                    A1 = A1 + 0.0001;
                
                VERLE[I] = A1/(A1+A2)*100.0;
                
                if (VERLE[I] > 0.0 && VERLE[I] <= 100.0 && K3 == 0)
                    goto label305;
                
                if (VERLE[I] > 0.0 && VERLE[I] <= 100.0 && K3 != 0 && GLTG[K3] == 0.0) 
                    goto label305;
                
                if (VERLE[I] > 0.0 && VERLE[I] <= 100.0 && K3 != 0 && GLTG[K3] > 0.0)
                    goto label10304;
                
                if (K3 == 0)
                    goto label304;

                UWA008("UNPACK", ILTG[K1], ref IX1, ref IX2, ref IX3, ref IX4);
                UWA008("UNPACK", ILTG[K2], ref IX6, ref IX8, ref IX9, ref IX10);
                UWA008("UNPACK", ILTG[K3], ref IZ6, ref IZ7, ref IZ8, ref IZ9);
                
                if (IZ7 == 0) 
                    goto label304;
                
                if (A2 < 0.0 && IZ7 == IX8) 
                    GLTG[K3] = GLTG[K3] - A2*0.5;
                
                if (A2 < 0.0 && IZ7 == IX8)
                    QBZWM[I] = GLTG[K3];
                
                if (A2 < 0.0 && IZ7 == IX8) 
                    GLTG[K2] = 0.0;
                
                if (A1 < 0.0 && IZ7 == IX2)
                    GLTG[K3] = GLTG[K3] - A1*0.5;
                
                if (A1 < 0.0 && IZ7 == IX2)
                    QBZWM[I] = GLTG[K3];
                
                if (A1 < 0.0 && IZ7 == IX2)
                    GLTG[K1] = 0.0;
                
                if (A1 < 0.0 && IZ7 == IX8) 
                    GLTG[K3] = 0.0;
                
                if (A2 < 0.0 && IZ7 == IX2)
                    GLTG[K3] = 0.0;
                
                KK = NN2[I];
                
                if (GLTG[K2] == 0.0)
                    GLTG[K1] = GLTG[KK] + GLTG[K3];

                if (GLTG[K1] == 0.0)
                    GLTG[K2] = GLTG[KK] + GLTG[K3];
                
                if (LIGHT[4] == 5) 
                    sw16.WriteLine("0PAR.{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", K1.ToString().PadLeft(4),K2.ToString().PadLeft(4),K3.ToString().PadLeft(4),
                        IX2.ToString().PadLeft(4),IX8.ToString().PadLeft(4),IZ7.ToString().PadLeft(4),A1.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13),
                        GLTG[K1].ToString("0.00000E+0").PadLeft(13),GLTG[K2].ToString("0.00000E+0").PadLeft(13),GLTG[K3].ToString("0.00000E+0").PadLeft(13),
                        Z7.ToString("0.00000E+0").PadLeft(13),VERLE[I].ToString("0.00000E+0").PadLeft(13));
                //20301 FORMAT(1H0,"PAR.",6I4,7E13.5)
                
                if (GLTG[K3] > 0.0)
                    goto label304;
                
                IZ10 = IZ10 + 1;
                
                if (IZ10 > 2) 
                    goto label304;
                
                NBLTG[I,1] = K2;
                NN1[I] = K1;
                K1 = (int)NBLTG[I,1];
                K2 = NN1[I];
                A1 = PLTG[K1];
                A3 = PLTG[K2];
                A5 = (A1+A3)*0.5;
                IX5 = 0;
                goto label300;
                
            label304:
                if (A2 <= 0.0) 
                    VERLE[I] = 100.0;
                if (A1 <= 0.0) 
                    VERLE[I] = 0.00001;
                
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0PAR.{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", K1.ToString().PadLeft(4),K2.ToString().PadLeft(4),K3.ToString().PadLeft(4),IX5.ToString().PadLeft(4),
                    IZ10.ToString().PadLeft(4),I.ToString().PadLeft(4),VERLE[I].ToString("0.00000E+0").PadLeft(13),A1.ToString("0.00000E+0").PadLeft(13),
                    A2.ToString("0.00000E+0").PadLeft(13),Z7.ToString("0.00000E+0").PadLeft(13),GLTG[K1].ToString("0.00000E+0").PadLeft(13),GLTG[K2].ToString("0.00000E+0").PadLeft(13),
                    GLTG[K3].ToString("0.00000E+0").PadLeft(13));
                continue;
                
            label10304:
                UWA008("UNPACK", ILTG[K1], ref IX1, ref IX2, ref IX3, ref IX4);
                UWA008("UNPACK", ILTG[K2], ref IX6, ref IX8, ref IX9, ref IX10);
                UWA008("UNPACK", ILTG[K3], ref IZ6, ref IZ7, ref IZ8, ref IZ9);
                
                if (IZ7 == 0) 
                    goto label305;
                
                A8 = GLTG[K3];
                
                if (A2 < A8 && IZ7 == IX8) 
                    GLTG[K3] = GLTG[K3] - A2;
                if (A2 < A8 && IZ7 == IX8) 
                    A2 = 0.00001;
                if (A1 < A8 && IZ7 == IX2)
                    GLTG[K3] = GLTG[K3] - A1;
                if (A1 < A8 && IZ7 == IX2)
                    A1 = 0.00001;
                if (A2 > A8 && IZ7 == IX8)
                    GLTG[K3] = 0.0;
                if (A2 > A8 && IZ7 == IX8)
                    A2 = A2 - A8;
                if (A1 > A8 && IZ7 == IX2)
                    GLTG[K3] = 0.0;
                if (A1 > A8 && IZ7 == IX2)
                    A1 = A1 - A8;
                
                VERLE[I] = A1/(A1+A2)*100.0;
                QBZWM[I] = GLTG[K3];
                
            label305:
                VERLEM[IX7,1] = VERLEM[IX7,2];
                VERLEM[IX7,2] = VERLEM[IX7,3];
                VERLEM[IX7,3] = VERLE[I];
                
                if (LAUFEN > 10 && VERLEM[IX7,1] != 0.0)
                    VERLE[I] = (VERLEM[IX7,1]+VERLEM[IX7,2]+VERLEM[IX7,3])/3.0;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  PAR.ANZ{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", IX5.ToString().PadLeft(5),K1.ToString().PadLeft(5),K2.ToString().PadLeft(5),A1.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13), VERLE[I].ToString("0.00000E+0").PadLeft(13),
                        Z7.ToString("0.00000E+0").PadLeft(13),A7.ToString("0.00000E+0").PadLeft(13),A5.ToString("0.00000E+0").PadLeft(13),Z6.ToString("0.00000E+0").PadLeft(13),Z8.ToString("0.00000E+0").PadLeft(13));
                    //10301 FORMAT(1H0,2X,"PAR.ANZ",3I5,8E13.5)
            }   //302 CONTINUE
            
        label303:
            KT10 = 0;
            GABTT = 0.0;
            
            for(L = 93; L <= 98; L++)   //DO 306 L=93,98
            {
                if (LAUFEN <= 1)
                    GUEB[L-92] = 0.0;
                GLTG[L] = GUEB[L-92];
            }   //306 CONTINUE
            
            QUEBER = true;
            
            for(JJ = 1; JJ <= ANZDTT; JJ++)     //DO 10 JJ = 1,ANZDTT
            {
                IEND= ITTEND[JJ];
                IZ1 = JJ;
                UWA006("RDISC",52,IZ1);
                UWA006("RDISC",59,IZ1);
                
                if (JJ != 1) 
                    goto label29;
                
                if (PERZEU != 0.0)
                    YC2GES[1] = PERZEU;
                
                if (YC2GES[1] != 0.0)
                    P0E[1] = YC2GES[1]*LS[1];
                
                if (NVENT[1] == 99 && PERZEU != 0.0)
                    PSOLL[1] = P0E[1];
                
            label29:
                KT10RT = UWA011(1,10);
                YG[1] = GABTT;
                int KT9RET = 0;
                
                if (KT10 != KT10RT)
                    YG[1] = GFDE[KT10RT];
                
                for(I = 1; I <= IEND; I++)  //DO 11 I = 1,IEND
                {
                    UWA010(I ,1);
                    if (KT9RET == KT9)
                        goto label19;
                    
                    UWA006("RDISC",53,KT9);
                    KT9RET = KT9;
                    
                label19:
                    PKOPSP = PKOP[KT10];
                    PKOP[KT10] = 1.5;
                    UWA020();
                    PKOP[KT10] = PKOPSP;
                    
                    if (QUSA2) 
                        continue;
                    
                    if (JAKUSA[JJ] >= I) 
                        XG[I] = XG[I] * FAKUSA;
                }   //11 CONTINUE
                
                GABTT = YG[IEND+1];
                PSI[1] = 1.0;
                
                if (JJ == 1) 
                    goto label1;
                
                if (DPUEB[JJ] != 0.0) 
                    goto label113;
                
                UWA044(1,1);
                
                for(IZ7 = 1; IZ7 <= 10; IZ7++)  //DO 111 IZ7 = 1,10
                {
                    IZ8 = LZUT[IZ7];
                    
                    if (IZ8 == 0)
                        goto label112;
                    
                    if (IZ8 < 41 || IZ8 > 46) 
                        continue;
                    
                    DPDUE = 0.0;
                    L1 = IHENDE + 1;
                    
                label108:
                    for(L = L1; L <= INENDE; L++)   //DO 109 L = L1,INENDE
                    {
                        IZ9 = NN2[L];
                        
                        if (IZ9 != IZ8) 
                            continue;
                        
                        if(NTYP[L] == 8 || NTYP[L] == 9 || NTYP[L] == 19 || NTYP[L] == 23)
                            DPDUE = DPDUE + SSTEU[L];
                        
                        if (NTYP[L] == 13)
                            DPDUE = DPDUE + VERLP[L];
                        IZ8 = NN1[L];
                        goto label108;
                    }   //109 CONTINUE
                    
                    PSI[1] = YPT[1]/(YPT[1] + DPDUE);
                    goto label1;
                }   //111 CONTINUE
                
            label112:
                T2 = VISUM(PTVORA, ETVORA, 03);
                
                if (NVENT[JJ] == -999) 
                    PSI[1] = 1.0;
                
                if (NVENT[JJ] == -999) 
                    goto label1;
                
                V2 = VISUM(PTVORA,T2,00);
                T1 = VISUM(XPT[1],XE1T[1],03);
                V1 = VISUM(XPT[1],T1,00);
                VMA = (V1 + V2)/2.0;
                T2 = VISUM(PTVORT,ETVORT,03);
                V2 = VISUM(PTVORT,T2,00);
                T1 = VISUM(YPT[1],YE1T[1],03);
                V1 = VISUM(YPT[1],T1,00);
                VMT = (V1 + V2)/2.0;
                PSI[1] = (PTVORA - XPT[1])* Math.Pow(YG[1],2.0)*VMT/(Math.Pow(XG[1],2.0)*VMA);
                PSI[1] = YPT[1]/(YPT[1]+PSI[1]);
                
                if (PSI[1] < 0.4)
                    PSI[1] = 0.4;
                
                if (PSIALT[JJ] != 0.0)
                    PSI[1] = (PSI[1] + PSIALT[JJ])/2.0;
                goto label1;
                
            label113:
                PSI[1] = XPT[1]/PTVORA;
                DP = DPUEB[JJ];
                
                if (DPUEB[JJ] < 0.0)
                    DP = PTVORT-PTVORT*(1.0+DPUEB[JJ]/100.0);
                
                PSI[1] = YPT[1]/(YPT[1]+DP);
                
            label1:
                PTVORA = XPT[IEND];
                ETVORA = XE1T[IEND+1];
                PTVORT = YPT[IEND];
                ETVORT = YE1T[IEND+1];
                PSIALT[JJ] = PSI[1];
                IZ1 = JJ;
                UWA006("WDISC", 52,IZ1);
                UWA006("WDISC", 59,IZ1);
            }   //10 CONTINUE
            
            for(ITRB = 1; ITRB <= ANZTRB; ITRB++)   //DO 61 ITRB = 1,ANZTRB
            {
                JJ=NTTETB[ITRB] + 1;
                JJEND = 1;
                
                if (ITRB > 1)
                    JJEND = NTTETB[ITRB - 1] + 1;
                JJANF = JJ - 1;
                
            label12:
                JJ = JJ - 1;
                if (JJ >= JJEND)
                    goto label51;
                
                if (GMFIXE[ITRB] == 1.0)
                    PN4[ITRB-1] = YPT[1];
                continue;
                
            label51:
                I = ITTEND[JJ] +1;
                
                if (JJ < ANZDTT && PSI[1] != 0.0)
                    WPT = WPT / PSI[1];
                IZ1 = JJ;
                DP = TSTFMX[2];
                UWA006("RDISC",52,IZ1);
                UWA006("RDISC",59,IZ1);
                
                if (STZNDT[ITRB] != 0 && NVENT[JJ] == -999)
                    YC2GES[2] = XXXC2G[ITRB];
                
                if (JJ != JJANF) 
                    YPT[I-1] = WPT;
                
                if (JJ != JJANF && NVENT[JJ+1] == -999)
                    YPT[I-1] = WPT/DP;
                
            label13:
                I = I-1;
                
                if (I > 1) 
                    goto label34;
                
                IZ1 = JJ;
                UWA006("WDISC", 52,IZ1);
                UWA006("WDISC", 59,IZ1);
                
                if (LIGHT[4] == 1) 
                    UWA012();
                
                goto label12;
                
            label34:
                UG = XG[I];
                VG = YG[I];
                UE1T = XE1T[I];
                VE1T = YE1T[I];
                UE2T = XE2T[I];
                VE2T = YE2T[I];
                UPT = XPT[I];
                VPT = YPT[I];
                IZ11 = ITRB;
                
                
            label80:
                IZ11 = IZ11 + 1;
                
                if (IZ11 > ANZTRB) 
                    goto label63;
                
                IZ1=NRMVAE[IZ11] + 100;
                
                if (IZ1 <= 100) 
                    goto label80;

                UWA008("UNPACK", ILTG[IZ1], ref IZ2, ref IZ3, ref IZ4, ref IZ5);
                
                if (IZ4 == JJ && IZ5 == I) 
                    PN4[IZ11] = VPT;
                goto label80;
                
            label63:
                KT7VOR = KT7;
                UWA010(I,1);
                
                //goto label(21,22,60,24,13,26,13,24,24),
                if(KT7 == 1)        goto label21;
                if(KT7 == 2)        goto label22;
                if(KT7 == 3)        goto label60;
                if(KT7 == 4)        goto label24;
                if(KT7 == 5)        goto label13;
                if(KT7 == 6)        goto label26;
                if(KT7 == 7)        goto label13;
                if(KT7 == 8)        goto label24;
                if(KT7 == 9)        goto label24;
                
            label60:
                A2 = YE2T[I] - Math.Pow(YC2GES[I],2)/8.37225E+03;
                A3 = VISUM(YPT[I],A2,13);
                A3 = VISUM(YPT[I],A3,12);
                A2 = YE2T[I];
                A3 = VISUM(A3,A2,15);
                TSTFMX[I] = A3/YPT[I];
                
                if (KRZEIN[KT6] <= 2)
                    goto label13;
                
                A1 = 1.0;
                goto label25;
                
            label26:
                if (PN4[KT10] == 0.0) 
                    goto label17;
                
                VPT = PN4[KT10];
                A1 = -VPT;
                TWKA = ETWKA[KT10];
                WZUKA = EWKZKA[KT10];
                
                
                if (WZUKA <= 0.0) 
                    goto label16;
                TWKT = ETWK[KT10];
                WZUKT = EWKZUK[KT10];
                UG = GABAUS[KT10];

                VPT = UWA025(ref UG, ref VG, ref UPT, ref A1, ref UE2T, ref VE2T, ref TWKA, ref TWKT, ref WZUKA, ref WZUKT, ref KT10);
                NKPARR = NKPARA[KT10];
                
                if (NKPARR > 0)
                    ETWK[NKPARR] = TKONAT[KT10];
                goto label16;
                
            label15:
                VPT = UPT;
                goto label16;
                
            label17:
                TWKA = ETWKA[KT10];
                WZUKA = EWKZKA[KT10];
                
                if (WZUKA <= 0.0) 
                    goto label15;
                TWKT = ETWK[KT10];
                WZUKT = EWKZUK[KT10];
                UG = GABAUS[KT10];
                
                if (LIGHT[4] == 2) 
                {
                    sw16.WriteLine(" ++TEILL++");
                    sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", UG.ToString("0.00000E+0").PadLeft(13),VG.ToString("0.00000E+0").PadLeft(13),UPT.ToString("0.00000E+0").PadLeft(13),
                        VPT.ToString("0.00000E+0").PadLeft(13),UE2T.ToString("0.00000E+0").PadLeft(13),VE2T.ToString("0.00000E+0").PadLeft(13),TWKA.ToString("0.00000E+0").PadLeft(13),
                        TWKT.ToString("0.00000E+0").PadLeft(13),WZUKA.ToString("0.00000E+0").PadLeft(13),WZUKT.ToString("0.00000E+0").PadLeft(13));
                    //9 FORMAT(" ","++TEILL++",/,10E13.5/)
                }

                VPT = UWA025(ref UG, ref VG, ref UPT, ref VPT, ref UE2T, ref VE2T, ref TWKA, ref TWKT, ref WZUKA, ref WZUKT, ref KT10);
                NKPARR = NKPARA[KT10];
                
                if (NKPARR > 0)
                    ETWK[NKPARR] = TKONAT[KT10];
                
            label16:
                YPT[I] = VPT;
                A1 = VISUM (VPT,VE2T,13);
                A1 = VISUM (VPT,A1, 10);
                UWA006("RDISC", 53,KT9);
                WPT = VPT + YDFAKT[I]*Math.Pow((VG *A1/FLUT),2) * VPT * 1.0E-08;
                goto label18;
                
            label24:
                A1 = 1.0;
                
                if (YDFAKT[I] != 0.0)
                    A1 = XDFAKT[I] / YDFAKT[I];
                
                if (KT1 <= 1)
                    goto label240;

                if (LAUFEN == 1) 
                    goto label240;
                
                if (XPT[75] == 0.0 || PSI[75] == 0.0) 
                    goto label240;
                
                UPT = XPT[75];
                VPT = PSI[75] * VPT;
                
            label240:
                if (A1 > 0.0) 
                    goto label25;
                
                WPT = 1.001*VPT;
                goto label18;
                
            label25:
                WPT = DRUCKT(XPT[I-1],UE1T,UPT,UG,VE1T,VPT,VG,A1);
                goto label18;
                
            label22:
                A3 = 1.0;
                
                if (KT7VOR == 3) 
                    goto label23;
                
                if (I > 3) 
                    goto label110;

                double DSUM = 0.0;
                
                for(IX7 = 1; IX7 <= 4; IX7++)   //DO 120 IX7 = 1,4
                    DSUM = DSUM + Math.Pow(VENDUR[IX7],2);      //120 CONTINUE
                
                A1 = 0.0;
                A4 = VISUM(YPT[I-1],T1T[I-1],10);
                
                if (DSUM == 0.0)
                    goto label130;
                
                A1 = YG[I]*A4*0.354E+06/DSUM;
                CVENT[1] = A1;
                A1 = A1*A1*ZETAV/A4/19.62E+04;
                
            label130:
                if (VBEZ != 0.0) 
                    A1 = A1 + DPBEZ*Math.Pow(YG[I],2.0)*A4/VBEZ;
                
                A2 = YPT[I-1] - A1;
                
                if (A2 <= 0.0) 
                    A2 = YPT[I-1];
                
                if (STZMDT[ITRB] != 99) 
                    goto label131;
                A3 = A2;
                goto label132;
                
            label131:
                A3 = VISUM(A2,YE1T[I],13);
                
                if (KT7VOR == 5)
                    YC2GES[I] = YC2GES[I+1];
                
                A3 = VISUM(A2,A3,12);
                A4 = YE1T[I] - Math.Pow(YC2GES[I],2)/8.37225E+03;
                A3 = VISUM(A3,A4,15);
                TSTFMX[I] = A2/A3;
                
            label132:
                A3 = A3/YPT[I-1];
                
            label110:
                if (KT7VOR == 5) 
                    goto label23;

                WPT = VPT/DI[I]/A3;
                goto label18;
                
            label23:
                IZ1 = UWA011(I-1,15);
                
                if (KT7VOR == 3) 
                    TSTFMX[I] = 1.0;
                
                if (IZ1 != 0) 
                    goto label28;
                
                WPT = P0E[KT6];
                
                if (JJ == IHEIZ)
                    WPT = PHZ2*PSI[1];
                
                if (IHEIZ > 0 && JHEIZ > 2 && JJ == JHEIZ)
                    WPT = PHZ1*PSI[1];
                
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7} ", JJ.ToString().PadLeft(5),IHEIZ.ToString().PadLeft(5),JHEIZ.ToString().PadLeft(5),
                        IZ1.ToString().PadLeft(5),WPT.ToString("0.00000E+0").PadLeft(12),PHZ2.ToString("0.00000E+0").PadLeft(12),PHZ1.ToString("0.00000E+0").PadLeft(12),PSI[1].ToString("0.00000E+0").PadLeft(12));
                    //500 FORMAT(1H0,2X,4I5,6F12.5);
                goto label31;
                
            label28:
                WPT = PFABR[IZ1];
                
                if (WPT == 0.0)
                    WPT = PFABRE[IZ1];
                
            label31:
                VPT = WPT*DI[I]*A3;
                A1 = YPT[I+1];
                
                if (KT7VOR == 3)
                    A1=A1/0.99;
                
                if (NVENT[JJ] == 10)
                    goto label1034;
                
                if (JJ != JJEND)
                    goto label1050;
                
                T1 = VISUM(VPT,YE2T[I],03);
                V1 = VISUM(VPT,T1,00);
                T2 = VISUM(A1,YE2T[I+1],03);
                V2 = VISUM(A1,T2,00);
                VM = (V1 + V2)/2.0;
                
                if (NVENT[JJ] == 99) 
                    goto label1032;
                
                if (VPT-A1 <= 0.0)
                    goto label1031;
                
                if (VG != 0.0)
                    DPDROS[ITRB] = (VPT-A1)/VG*VG/VM;
                goto label32;
                
            label1031:
                DPDROS[ITRB] = 0.0;
                goto label33;

            label1032:
                DPSOLL = DPDROS[ITRB]*VG*VG*VM;
                
                if(PSOLL[ITRB] == 0.0)
                    goto label1033;
                
                VPT = A1 + DPSOLL;
                WPT = VPT/A3/DI[I];
                PABFR[ITRB] = WPT;
                TNPROZ[ITRB] = PSOLL[ITRB]/WPT;
                goto label32;
                
            label1033:
                VPT = A1 + DPSOLL;
                WPT = VPT/DI[I]/A3;
                goto label32;
                
            label1034:
                if (NITRE[ITRB] != 3 && LAUFEN < 3) 
                    goto label1050;
                
                J = I - 1;
                UWA044(J,1);
                IZ3 = 0;
                
                for(L = 1; L <= 10; L++)    //DO 1035 L=1,10
                {
                    IZ1 = LABT[L];
                    if (IZ1 < 93 || IZ1 > 98) 
                        continue;
                    IZ3 = IZ3 + 1;
                    LUEBER[IZ3] = IZ1;
                }   //1035 CONTINUE
                
                if (IZ3 == 0) 
                    goto label1050;
                
                A10 = A1;
                A9 = VPT;
                
                if (PNE[JJ] >= VPT)
                    A9 = PNE[JJ] * 1.01;
                
                A9 = Math.Sqrt((A9*A9-PNE[JJ]*PNE[JJ])/(A10*A10-PNE[JJ]*PNE[JJ]));
                A8 = (G[I+1,K]+G[J,K]) * 0.5;
                Z1 = A8 - A8 * A9;
                A90 = G[J,K] - GMINTT[ITRB];
                
                if (Z1 > A90) 
                    Z1 = A90;

                Z4 = A90;
                IZ1 = LUEBER[IZ3];
                
                if (KT7VOR != 3 && IZ3 == 2)
                    Z4 = A90 - GLTG[IZ1];
                A9 = 0.0;
                
                for(L1 = 1; L1 <= IZ3; L1++)    //DO 1045 L1 = 1,IZ3
                {
                    IZ1 = LUEBER[L1];
                    L = I;
                    
                label1036:
                    L = L + 1;
                    
                    if (L > ITTEND[JJ]) 
                        goto label1050;
                    UWA044(L,1);
                    
                    for(L2 = 1; L2 <= 10; L2++)     //DO 1037 L2=1,10
                    {
                        IZ2 = LZUT[L2];
                        
                        if (IZ2 == IZ1) 
                            goto label1038;
                    }   //1037 CONTINUE
                    goto label1036;
                    
                label1038:
                    Z7 = PT[L,K];
                    Z10 = VPT/DI[I]/A3;
                    
                    if (A10 > VPT)
                        Z10 = A10/DI[I]/A3;
                    
                    Z8 = Z7/Z10;
                    Z2 = VENDUR[5];
                    
                    if (Z2 <= 0.0) 
                        goto label1039;
                    Z3 = Z10 - Z7;
                    
                    if (Z8 < 0.54)
                        Z3 = Z10*0.46;
                    Z2 = Math.Pow((Z2/1000.0),2.0)*3.141593/4.0;
                    Z2 = Math.Sqrt(Z3*Z2*Z2*2.0*9.81*3.6*3.6*1.0E04/ZETAV/VOLUME[J]);
                    
                    if (Z2 < Z4) 
                        Z4 = Z2;
                    
                label1039:
                    if (LIGHT[4] == 5)
                        sw16.WriteLine("** TEILL UEL **{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", IZ3.ToString().PadLeft(5),LUEBER[L1].ToString().PadLeft(5),KT7VOR.ToString().PadLeft(5),
                            Math.Round(A1,4).ToString().PadLeft(12),Math.Round(VPT,4).ToString().PadLeft(12),Math.Round(VENDUR[5],4).ToString().PadLeft(12),Math.Round(Z4,4).ToString().PadLeft(12),
                            Math.Round(A90,4).ToString().PadLeft(12),Math.Round(Z1,4).ToString().PadLeft(12),Math.Round(A9,4).ToString().PadLeft(12));
                    IZ5 = 0;
                    A6 = 0.0;

                    if (KT7VOR != 3) 
                        goto label1040;
                    
                    if (A1 >= VPT) 
                        goto label1040;
                    
                    if (IZ3 == 1) 
                        goto label1040;
                    
                    if (L1 == IZ3) 
                        continue;
                    
                    IZ5 = LUEBER[IZ3];
                    IZ4 = IZ5 - 92;
                    A6 = GURSTF[IZ4]*0.5;
                    
                    if (A6 > 0.0) 
                        Z1 = 0.0;
                    
                    if (A6 <= 0.0) 
                        Z1 = GLTG[IZ1]*0.005;
                    
                label1040:
                    A7 = GLTG[IZ1];
                    Z5 = A7 + A6 + Z1;
                    
                    if (Z5 < 0.0) 
                        Z5 = 0.0;
                    
                    A5 = 0.0;
                    
                    if (Z5 > Z4) 
                        A5 = Z5 - Z4;
                    
                    if (Z5 > Z4) 
                        Z5 = Z4;

                    if (LIGHT[4] == 5)
                        sw16.WriteLine("** TEILL UEL **{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}", L1.ToString().PadLeft(5),IZ1.ToString().PadLeft(5),IZ5.ToString().PadLeft(5),
                            Math.Round(A7,4).ToString().PadLeft(12),Math.Round(A6,4).ToString().PadLeft(12),Math.Round(A5,4).ToString().PadLeft(12),
                            Math.Round(Z5,4).ToString().PadLeft(12),Math.Round(GLTG[IZ1],4).ToString().PadLeft(12),Math.Round(Z4,4).ToString().PadLeft(12),
                            Math.Round(Z1,4).ToString().PadLeft(12));
                        //1043 FORMAT(1H0,"** TEILL UEL **",3I5,9F12.4)
                    
                    if (Math.Abs(GLTG[IZ1]-Z5) > 0.01) 
                        QUEBER = false;
                    
                    GLTG[IZ1] = Z5;
                    GUEB[IZ1-92] = Z5;
                    
                    if (KT7VOR != 3) 
                        continue;
                    
                    if (IZ3 == 1) 
                        continue;
                    
                    if (Math.Abs(GLTG[IZ5]-A5) > 0.01) 
                        QUEBER = false;
                    
                    GLTG[IZ5] = A5;
                    GUEB[IZ4] = A5;
                    GURSTF[IZ4] = A5;
                }   //1045 CONTINUE
                
                if (LAUFEN > IZMINT && A9 <= 0.10 && M == 4) 
                    QUEBER = true;
                
            label1050:
                if (A1 > VPT) 
                    goto label33;
                
            label32:
                YPT[I] =VPT;
                goto label18;
                
            label33:
                VPT = A1;
                WPT = VPT/DI[I]/A3;
                goto label32;
                
            label21:
                if (I <= 1) 
                    goto label13;
                
                if (KUSA > 0) 
                    goto label86;
                
                if (YDFAKT[1] != 99.0)
                    goto label1055;
                
                A1 = VISUM (YPT[1],T1T[1],00);
                LS[1] = 1.0 - XDFAKT[1]*YG[1]*YG[1]*A1/YPT[1];
                goto label55;
                
            label1055:
                A1 = VISUM(YPT[1],T1T[1],00);
                XDFAKT[1] = (1.0-LS[1])*YPT[1]/A1/YG[1]/YG[1];
                
            label55:
                if (PHI[1] != 99.0) 
                    goto label1054;
                A1 = T1T[1];
                
                if (A1 <= 0.0)
                    A1 = UW0011(YPT[1],1);
                
                DI[1] = ETAI[1] * (A1-300.0)/YG[1];
                goto label54;
                
            label1054:
                A1 = T1T[1];
                
                if (A1 <= 0.0)
                    A1 = UW0011(YPT[1],1);
                
                ETAI[1] = DI[1]*YG[1]/(A1-300.0);
                
            label54:
                WPT = VPT/LS[1];
                
                if (YC2GES[1] != 0.0)
                    WPT = YC2GES[1];
                
            label18:
                YPT[I-1] = WPT;
                
                if (KT7VOR != 5) 
                    goto label140;
                
                TSTFMX[I+1] = TSTFMX[I];
                if (YPT[I] <= YPT[I+1]) 
                    goto label140;
                
                YPT[I] = YPT[I] * TSTFMX[I];
                TSTFMX[I] = 1.0;
                
            label140:
                if (I == 2 && KT6 == 2 && KUSA == 4) 
                    goto label93;
                
                if (KT7 != 3) 
                    goto label13;
                
                P0E[KT6] = WPT/DI[I-1];
                goto label13;
                
            label86:
                YPT[2] = PUSA;
                A1 = PUSA/XPT[2];
                YPT[1] = XPT[1] * A1;
                FAKUSA = YPT[3];
                YPT[3] = XPT[3] * A1;
                FAKUSA = FAKUSA/YPT[3];
                DI[1] = XE1T[1] - XE2T[1];
                IZ1 = UWA011(4,7);
                
                if (IZ1 == 4) 
                    goto label87;
                FAKUSA = YPT [4];
                YPT[4] = XPT[4] * A1;
                FAKUSA = FAKUSA/YPT[4];
                
                if (IZ1 == 3) 
                    NVENT[1] = (int)NADUES;
                
            label87:
                if (JUSA > 0)
                    FAKUSA = FAKUSA + (1.0-FAKUSA)/2.0;
                goto label13;
                
            label93:
                YPT[1] = FUSA;
                WPT = YPT[1];
                A1 = FUSA/XPT[1];
                YPT[2] = XPT[2] * A1;
                IZ1 = UWA011(3,7);
                if (IZ1 == 4) goto label13;
                YPT[3] = XPT[3] * A1;
                goto label13;
            }   //61 CONTINUE

            if (NHEIZ != 10) 
                goto label30;
            
            if (LAUFEN < 4) 
                goto label30;
            
            if (QAUSL && LAUFEN > IZMINT+1) 
                goto label30;
            QAUSL = false;
            QEND = false;
            LIGHT[9] = 5;
            UWA041();
            NHEIZ = 0;
            A1 = GFDE[1];
            GFDE[1] = GFDE[1]*TNPROZ[1];
            TX1 = Math.Abs(GFDE[1]-A1)/GFDE[1];
            if (TX1 > 0.0002) QAUSL = false;
            if (TX1 > 0.0002) QEND = false;
            TNPROZ[1] = 1.0;
            IZ1 = 1;
            //69 FORMAT(1H ,9H**TEILL**,3X,2I3,F8.5,2(2F12.4,F8.5),F12.4)
            if ((LIGHT[4] == 4 || LAUFEN > IZMAXT-3) && !QAUSL)
                sw16.WriteLine(" **TEILL**   {0}{1}{2}{3}{4}{5} ", LAUFEN.ToString().PadLeft(3), IZ1.ToString().PadLeft(3),
                    Math.Round(ABKRIT,5).ToString().PadLeft(8),Math.Round(GFDE[1],4).ToString().PadLeft(12),Math.Round(A1,4).ToString().PadLeft(12),Math.Round(TX1,5).ToString().PadLeft(8));
            
            LIGHT[10] = 0;
            goto label303;
            
        label30:
            for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 27 IZ1 = 1,10
            {
                NSPAB[IZ1] = 0;
                NSPZU[IZ1] = 0;
            }   //27 CONTINUE
            KT10 = 0;
            GABTT = 0.0;
            
            for(JJ = 1; JJ <= ANZDTT; JJ++)     //DO 35 JJ = 1,ANZDTT
            {
                IZ1 = JJ;
                UWA006("RDISC",52,IZ1);
                UWA006("RDISC",59,IZ1);
                KT10RT = UWA011(1,10);
                YG[1] = GABTT;
                
                if (KT10 == KT10RT) 
                    goto label62;
                YG[1] = GFDE[KT10RT];
            
                if (KT10RT == 1) 
                    goto label62;
                
                if (NITRE[KT10RT] != 8) 
                        goto label62;
                IZ1 = NRMVAE[KT10RT];
                A1 = GMFIXE[KT10RT];
                A2 = P0E[JJ];
                
                if (LAUFEN <= 1) 
                    A2 = PLTG[IZ1];
                if (A1 != 1.0)
                    GMFIXE[KT10RT] = A1 * (A2 + A1 * (YPT[1] - A2)) / YPT[1];
                
                if (IKUEHL != 1) 
                    sw16.WriteLine(" {0}{1}{2} ", IZ1.ToString().PadLeft(5),Math.Round(A1,5).ToString().PadLeft(13),Math.Round(GMFIXE[KT10RT],5).ToString().PadLeft(13));
                    //53 FORMAT (1X,I5,2E13.5)
                
            label62:
                if (JJ > 1) 
                    goto label45;
                
                if ((YH0[1]+XC2GES[1]) == 0.0)
                    goto label46;
                
                if(XC2GES[1] == 0.0)
                    goto label47;
                
                YE1T[1] = XC2GES[1];
                T1T[1] = VISUM (YPT[1],YE1T[1],03);
                
            label47:
                if (YH0[1] == 0.0)
                    goto label49;
                
                T1T[1] = YH0[1];
                YE1T[1] = VISUM(YPT[1],T1T[1],01);
                
            label49:
                if (YDFAKT[2] != 0.0) 
                    DI[1] = YE1T[1] - VISUM(YPT[2],YDFAKT[2],01);
                
                goto label44;
                
            label46:
                if (T0E[JJ] == 0.0)
                    T0E[JJ] = T2T[1];
                
                YE1T[1] = VISUM (YPT[2],T0E[JJ],01) + DI[1];
                T1T[1] = VISUM (YPT[1],YE1T[1],03);
                goto label44;
                
            label45:
                T1T[1] = T0E[JJ];
                
                if (T1T[1] != 0.0)
                    goto label43;
                
                YE1T[1] = ET;
                T1T[1] = VISUM(YPT[1],ET,03);
                goto label44;
                
            label43:
                YE1T[1]= VISUM(YPT[1],T1T[1],01);
                Z3 = VISUM(YPT[1],Z4,-21) + 10.0;
                
                if (YE1T[1] <= Z3)
                    YE1T[1] = VISUM(YPT[1],Z4,-11);

            label44:
                IEND = ITTEND[JJ];
                K9RET = 0;
                K15RET = 0;
                
                for(I = 1; I <= IEND; I++)      //DO 36 I=1,IEND
                {
                    UWA010(I,1);
                    UWA044(I,1);
                    
                    if (K9RET == KT9) 
                        goto label41;
                    
                    IZ1 = KT9;
                    UWA006("RDISC",53,IZ1);
                    UWA006("RDISC",56,IZ1);
                    YUPM = XUPM * DREQUE[KT10];
                    K9RET = KT9;
                    
                label41:
                    //goto label(37,37,38,39,37,37,48,39,39),
                    if(KT7 == 1)    goto label37;
                    if(KT7 == 2)    goto label37;
                    if(KT7 == 3)    goto label38;
                    if(KT7 == 4)    goto label39;
                    if(KT7 == 5)    goto label37;
                    if(KT7 == 6)    goto label37;
                    if(KT7 == 7)    goto label48;
                    if(KT7 == 8)    goto label38;
                    if(KT7 == 9)    goto label39;
                    
                label48:
                    YE2T[I] = YE1T[I] - DI[1];
                    goto label40;
                    
                label37:
                    YE2T[I] = YE1T[I];
                    goto label40;
                    
                label38:
                    if (LAUFEN <= 1) 
                        STFDI[I-1] = 0.0;
                    UWA032();
                    goto label40;
                    
                label39:
                    if (K15RET == KT15) 
                        goto label42;
                    
                    UWA006("RDISC",60,KT15);
                    UWA006("RDISC",61,KT15);
                    UWA006("RDISC",63,KT15);
                    K15RET = KT15;
                    
                label42:
                    if (STZMDT[KT10] == 99) 
                        goto label90;
                    
                    UWA071();
                    goto label40;
                    
                label90:
                    UWA083();
                    
                label40:
                    T2T[I] = VISUM(YPT[I],YE2T[I],03);
                    PKOPSP = PKOP[KT10];
                    PKOP[KT10] = 0.0;
                    UWA020();
                    PKOP[KT10] = PKOPSP;
                }   //36 CONTINUE
                ET = YE1T[IEND+1];
                GABTT = YG[IEND+1];
                IZ1 = JJ;
                UWA006("WDISC", 52,IZ1);
                UWA006("WDISC", 59,IZ1);
                
                if (LIGHT[4] == 1) 
                    UWA012();
                
                for(I = 1; I <= ANZTRB; I++)    //DO 150 I = 1,ANZTRB
                {
                    L = NTTETB[I];
                    
                    if (STZNDT[I] == 0) 
                        continue;
                    
                    if (JJ != L-1) 
                        continue;
                    
                    if (NVENT[JJ+1] != -999) 
                        continue;
                    
                    XXXC2G[I] = YC2GES[ITTEND[JJ]];
                    break;
                }   //150 CONTINUE
            }   //35 CONTINUE
            
            for(ITRB = 1; ITRB <= ANZTRB; ITRB++)   //DO 95 ITRB = 1,ANZTRB
            {
                if (PSOLL[ITRB] == 0.0)
                    continue;
                
                if (Math.Abs(PSOLL[ITRB]-PABFR[ITRB]) <= 0.01) 
                    goto label5;
                
                if (M <= 5)
                    GFDE[ITRB] = GFDE[ITRB]*TNPROZ[ITRB];
                
                if (M > 5) 
                    goto label5;

                M = M + 1;
                goto label99;
            }   //95 CONTINUE
            
            if (QUEBER) 
                goto label5;
            
            if (LAUFEN == 1) 
                goto label5;
            
            M = M + 1;
            if (M > 4) QAUSL = false;
            if (M > 4) QEND = false;
            if (M > 4) goto label5;
            goto label99;
            
        label100:
            if(QUSA1)
                goto label102;
            if (IKUEHL != 1)
            {
                sw16.WriteLine(" ++TEILL++");
                sw16.WriteLine("{0} ", FAKUSA.ToString("0.00000E+0").PadLeft(13));
            }
            
            NUSA1 = NUSA1 + 1;
            QUSA2 = false;
            if (JUSA == 0)
                goto label104;
            
            if (NUSA1 != 1 && NUSA1 != 4 && NUSA1 != 7 && NUSA1 != 10 && NUSA1 != 12)
                QUSA2 = true;
            
            if (NUSA1 > 14) 
                goto label102;
            
            goto label103;
            
        label104:
            if (NUSA1 < 5) 
                goto label103;
            
        label102:
            if (QAUSL) 
                return;
            
        label250:
            sw16.WriteLine(" LINK 4 ITER. NICHT BEENDET");
            Console.WriteLine(" LINK 4 ITER. NICHT BEENDET");
            return;
            
        label114:
            IWAERM = IWAERM + 1;
            if (LIGHT[4] == 2)
                sw16.WriteLine(" LINK 4 ITER {0}     {1}     {2}  ", IWAERM.ToString().PadLeft(2),Math.Round(WTSOLL,3).ToString().PadLeft(10),Math.Round(QVERBR,3).ToString().PadLeft(10));
            QWAERM = true;
            WT2 = WT1;
            WT1 = QVERBR;
            
            if (IDEFW == 0) 
                goto label12114;
            
            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            
            for(L = 1; L <= 11; L++)    //DO 11114 L=1,11
            {
                IX1 = (int)Math.Abs(LTGWT1[L]);
                IX2 = (int)Math.Abs(LTGWT2[L]);
                
                if (IX1 == 0 || IX2 == 0) 
                    goto label10114;
                
                if (LTGWT1[L] > 0)
                    A1 = A1 + GLTG[IX1]*(ELTG[IX1]-ELTG[IX2]);
                
                if (LTGWT1[L] < 0)
                    A2 = A2 + GLTG[IX1]*(ELTG[IX1]-ELTG[IX2]);
                
            label10114:
                IX3 = (int)Math.Abs(LTGWT3[L]);
                IX4 = (int)Math.Abs(LTGWT4[L]);
                
                if (IX3 == 0 || IX4 == 0) 
                    continue;

                if (LTGWT3[L] > 0)
                    A3 = A3 + GLTG[IX3]*(ELTG[IX3] - ELTG[IX4])/859.845;
                
                if (LTGWT3[L] < 0)
                    A3 = A3 - GLTG[IX3]*(ELTG[IX3] - ELTG[IX4])/859.845;
            }   //11114 CONTINUE
            
            if (IDEFW == 1)
                WT1 = (WAUFW + A1 - A2)/ARBTA[1];
            if (IDEFW == 2)
                WT1 = WAUFW/(ARBTA[1] + A3);
            if (IDEFW == 3)
                WT1 = (WAUFW + A1 - A2)/(ARBTA[1]+A3);
            
        label12114:
            Y2 = Y1;
            Y1 = Y;
            
            for(K1 = 1; K1 <= ANZDTT; K1++)     //DO 116 K1 = 1,ANZDTT
                if (MREGEL[K1] == 1) 
                    goto label210;      //116 CONTINUE
            
            if (IWAERM == 1) 
                goto label117;
            
            if (IWAERM > 20) 
                goto label250;

            if (Math.Abs(WTSOLL-WT1) < 0.1) 
                goto label103;
            
            QWAERM = false;
            Y = Y1 + ((Y1-Y2)/(WT1-WT2))*(WTSOLL- WT1);
            goto label118;
            
        label117:
            FBEW = 0.0;
            QWAERM = false;
            
            for(K1 = 1; K1 <= ANZDTT; K1++)     //DO119 K1 = 1,ANZDTT
            {
                FBEW = FBEW + FBEWE[K1];
                
                if (FBEWE[K1] == 0.0)
                    FBEW = FBEW + 1.0;
            }   //119 CONTINUE
            
            FBEW = FBEW/ANZDTT;
            Y = WT1/WTSOLL;
            Y=(Y-1.0)/0.7;
            Y =Y/FBEW;
            
        label118:
            if (LIGHT[4] == 2) 
            {
                sw16.WriteLine("++TEILL++");
                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6} ", WT1.ToString("0.00000E+0").PadLeft(13), WT1.ToString("0.00000E+0").PadLeft(13),WT2.ToString("0.00000E+0").PadLeft(13),
                    Y1.ToString("0.00000E+0").PadLeft(13),Y2.ToString("0.00000E+0").PadLeft(13),Y.ToString("0.00000E+0").PadLeft(13),FBEW.ToString("0.00000E+0").PadLeft(13));
            }
            for(K1 = 1; K1 <= ANZDTT; K1++)     //DO 200K1 = 1,ANZDTT
                FETAE[K1] = FETAE[K1]* (1.0+(Y-Y1)*FBEWE[K1]);  //200 CONTINUE
            
            if (LIGHT[4] == 2)
            {
                sw16.WriteLine("++TEILL++");
                sw16.WriteLine("{0} ", FETAE[1].ToString("0.00000E+0").PadLeft(13), FETAE[2].ToString("0.00000E+0").PadLeft(13), FETAE[3].ToString("0.00000E+0").PadLeft(13),
                     FETAE[4].ToString("0.00000E+0").PadLeft(13), FETAE[5].ToString("0.00000E+0").PadLeft(13), FETAE[6].ToString("0.00000E+0").PadLeft(13), FETAE[7].ToString("0.00000E+0").PadLeft(13));
            }
            
            goto label103;
            
        label210:
            if (Math.Abs(WTSOLL-WT1) < 0.1) 
                goto label103;
            
            QWAERM = false;
            
            if (IWAERM > 20) 
                goto label250;
            if (LIGHT[4] == 2) 
            {
                sw16.WriteLine("++TEILL++");
                sw16.WriteLine("{0}{1}{2}{3}{4} ", WT1.ToString("0.00000E+0").PadLeft(13), WT1.ToString("0.00000E+0").PadLeft(13),WT2.ToString("0.00000E+0").PadLeft(13),Y1.ToString("0.00000E+0").PadLeft(13),Y2.ToString("0.00000E+0").PadLeft(13));
            }
            
            if (IWAERM > 1) 
                goto label211;
            Y = WT1/WTSOLL;
            Y = (Y-1.0)/0.7;
            goto label212;
            
        label211:
            Y = Y1 + ((Y1-Y2)/(WT1-WT2))*(WTSOLL-WT1);
            
        label212:
            for(K1 = 1; K1 <= ANZDTT; K1++)     //DO 213 K1 = 1,ANZDTT
            {
                if (MREGEL[K1] != 1) 
                    continue;
                FETAR[K1] = FETAR[K1]*(1.0+(Y-Y1));
            }   //213 CONTINUE
            sw16.WriteLine("   {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", IWAERM.ToString().PadLeft(5),Math.Round(WTSOLL,2).ToString().PadLeft(12),Math.Round(WT1,2).ToString().PadLeft(12),Math.Round(FETAR[1],5).ToString().PadLeft(12),
                Math.Round(FETAR[2],5).ToString().PadLeft(12),Math.Round(FETAR[3],5).ToString().PadLeft(12),Math.Round(FETAR[4],5).ToString().PadLeft(12),Math.Round(FETAR[5],5).ToString().PadLeft(12),
                Math.Round(FETAR[6],5).ToString().PadLeft(12),Math.Round(FETAR[7],5).ToString().PadLeft(12));
            //214 FORMAT(1H ,2X,I5,2F12.2,7F12.5);
            goto label103;
        }   //END
        
        
        static void UWA024()
        {
            //ENTRY TEILRD
            bool QWEICH, QOFFEN, QACPSI;
            double[] A = new double[5], AA = new double[5], AAA = new double[4], III = new double[4], EWKZUM = new double[5],
                ETWKUM = new double[5], VMECHT = new double[5], DREQUT = new double[5], PFDK = new double[8], TFDK = new double[8];
            double GP = 0, GI = 0, GM = 0, GW = 0, PAUSA = 0, HFDKL = 0, DIKL = 0, THERML = 0, A1 = 0, LSKL = 0, THERMA = 0, LSKL1 = 0;
            int L = 0, IVENTI = 0, KZ3 = 0, ITYP1 = 0, I1 = 0, N = 0;
                
            string STXT1 = "", TYP3 = "", TYPVAR = "", FELD = "", a1 = "";

            string SYMBC = "C", SYMBH = "H", SYMBL = "L", SYMBN = "N", SYMBP = "P", SYMBS = "S", KARTU = "U", KARTZ = "Z", SYMBG = "G";
            string[] ss;
            int IZIFF0 = 0, IZIFF1 = 1, IZIFF2 = 2, IZIFF3 = 3, IZIFF4 = 4, IZIFF9 = 9;

            IFALL = IFALL + 1;
            if (IFALL > 8)  IFALL = 8;
            if (IFALL == 2) STWRT2 = 1;
            STWRT2 = STWRT2 + 1;

            GP = 0.980665;
            GI = 4.1868;
            GM = 3.6;
            GW = 3.6/4.1868;
            if (LIGHT[8] != 1)
                goto label10;
            
            GP = 1.0;
            GI = 1.0;
            GM = 1.0;
            GW = 1.0;

        label10:
            if (IKUEHL != 1) 
                UWA043(2);
            
            QWEICH = false;
            
            for(L = 1; L <= INENDE; L++)    //DO 20 L = 1,INENDE
            {
                if (NTYP[L] == 1 || NTYP[L] == 10) 
                    PW[L] = EKONDW[L];
                
                if (NTYP[L] == 3) 
                    KRUECK[L] = 0;
            }   //20 CONTINUE
            UWA006("RDISC", 52,1);

            MVAR = 0;
            LOEST = 0;
            MITER = 0;
            LITER = 0;
            WTSOLL = 0.0;

            YC2GES[1] = 0.0;
            PDWR = 0.0;
            XC2GES[1] = 0.0;
            YH0 [1] = 0.0;
            LS [1] = 0.0;
            YDFAKT[1] = 0.0;
            YDFAKT[2] = 0.0;
            DI[1] = 0.0;
            PHI[1] = 0.0;
            PAUSA = P0E[1];
            PKOMIN = 0.0062;
            
            for(L = 1; L <= ANZTRB; L++)    //DO 30 L = 1,ANZTRB
            {
                DREQUE[L] = 1.0;
                LVAR[L] = 0;
                EWKZUK[L] = 0.0;
                FAKTKF[L] = 1.0;
            }   //30 CONTINUE
            
            for(L = 1; L <= 4; L++)     //DO 40 L=1,4
                ETAGET[L] = 0.0;    //40 CONTINUE
            
            for(L = 1; L <= ANZTRB; L++)    //DO 60 L=1,ANZTRB
            {
                if (NITRE[L] == 7) 
                    continue;

                IZ1 = NTTETB[L];

                if (L == 1 && IZ1 == 1) 
                    continue;
                J = 2;
                
                if (L > 1)
                    J = NTTETB[L-1] + 1;
                
                if (L > 1 && J == IZ1 && NITRE[L] != 8 && NITRE[L] != 9)
                    continue;
                
                for(N = J; N <= IZ1; N++)   //DO 50 N=J,IZ1
                {
                    UWA006("RDISC", 59,N);
                    KT7 = UWA011(3,7);
                    
                    if (KT7 != 5) 
                        continue;
                    P0E[N] = 0.05;
                }   //50 CONTINUE
            }   //60 CONTINUE
            
            if (NKUEHL != 0) 
                goto label5000;
            
        label100:
            IVENTI = 0;
            LSKL = 0;
            LSKL1 = 0;
            TFDKL = 0.0;
            PFDKL = 0.0;
            HFDKL = 0.0;
            DIKL = 0.0;
            
            for(L= 1; L<= 7; L++)       //DO 110 L=1,7
            {
                PFDK[L] = 0.0;
                TFDK[L] = 0.0;
                DPUEB[L] = 0.0;
            }   //110 CONTINUE
            
            for(L = 1; L <= 4; L++)     //DO 120 L=1,4
            {
                VMECHT[L] = 0.0;
                DREQUT[L] = 0.0;
                EWKZUM[L] = 0.0;
                ETWKUM[L] = 0.0;
            }   //120 CONTINUE

            if (IKUEHL == 1)
                NKUEHL = 1;

            LKUEHL = 0;
            THERML = 0.0;

        label200:
            if (MVAR == 2) 
                goto label320;

            //READ(15,210,END=10000) CORE
            //210 FORMAT(20A4)
            CORE = sr15.ReadLine();

            //WRITE (*,215) CORE 
            //215 FORMAT (20A4) 
            Console.WriteLine("0", CORE);
            //DECODE(3,220,CORE) TYP3
            //220 FORMAT(A3)
            TYP3 = CORE.Substring(0,3);
            //DECODE(1,225,CORE) ITYP1 
            //225 FORMAT(A1) 
            ITYP1 = Convert.ToInt32(CORE.Substring(0,1));
            KZ3 = 0;
            if (KVAR > 0)
                goto label300;
            goto label400;

        label300:
            for(L = 1; L <= 20; L++)    //DO 310 L=1,20
                FELD = CORE;      //310 CONTINUE
            
            //DECODE(3,220,FELD) TYPVAR
            TYPVAR = FELD.Substring(0,3);

        label320:
            //WRITE(STXT1,210) (KARV[J1],J1=JVAR,JVAR+19)
            STXT1 = "";
            for(int J1 = JVAR; J1 <= JVAR+19; J1++)
                STXT1 = STXT1 + KARV[J1].ToString().PadLeft(4);

            //READ (STXT1,210) CORE 
            CORE = STXT1;
            JVAR = JVAR + 20;
            
            //DECODE(3,220,CORE) TYP3
            TYP3 = CORE.Substring(0,3);

            if (TYPVAR == TYP3) 
                goto label330;

            MVAR = 2;
            KZ3 = 0;
            goto label400;

        label330:
            for(L = 1; L <= 20; L++)    //330 DO 340 L=1,20
                CORE = FELD;  //340 CONTINUE
            
            MVAR = 1;
            KZ3 = 2;

        label400:
            if (KZ3 == 0)
                sw33.WriteLine("           {0}", CORE);
            
            if (KZ3 == 2)
                sw33.WriteLine("         < {0}", CORE);

            //410 FORMAT(11X,20A4)
            //420 FORMAT(9X,2H< ,20A4) 

            UWA087(ref ITYP1, ref KZ3, ref CORE);
            
            if (KVAR == 1) 
                goto label430;

            //WRITE(STXT1,210) CORE
            STXT1 = CORE;
            
            //READ (STXT1,210) (KARV[J1],J1=IVAR,IVAR+19)
            STXT1 = "";
            for(int J1 = JVAR; J1 <= JVAR+19; J1++)
                STXT1 = STXT1 + KARV[J1].ToString().PadLeft(4);

        label430:
            IVAR = IVAR + 20;
            
            //DECODE(1,440,CORE) IZ1
            //440 FORMAT(A1)
            string iz1 = CORE.Substring(0,1);
            
            if (iz1 == KARTZ)
                goto label600;
            
            if (iz1 != KARTU)
                goto label500;

            //DECODE(3,450,CORE) I1,A1
            //450 FORMAT(1X,I1,A1)
            I1 = Convert.ToInt32(CORE.Substring(1,1));
            a1 = CORE.Substring(2,1);

            if (I1 == 2)
                UWA043(3);
            
            if (I1 == 3) 
                UWA043(4);

            if (I1 != 3) 
                goto label200;

            //DECODE(80,35,CORE) IX1
            //35 FORMAT (79X,I1)
            IX1  = Convert.ToInt32(CORE.Substring(79,1));
            
            if (IX1 != 1) 
                goto label200;

            TWA091();
            goto label200;

        label500:
            //DECODE(3,510,CORE) A1,IZ1
            //510 FORMAT(A1,I2)
            a1 = CORE.Substring(0,1);
            IZ1 = Convert.ToInt32(CORE.Substring(1,2));

            if (a1 == SYMBS) goto label1000;
            if (a1 == SYMBL) goto label2000;
            if (a1 == SYMBH) goto label3000;
            if (a1 == SYMBN) goto label3000;
            if (a1 == SYMBP) goto label4000;
            if (a1 == SYMBC) goto label200;
            if (a1 == SYMBG) goto label4400;

            sw16.WriteLine("0  {0} IST KEINE GUELTIGE KENNUNG FUER TEILLASTKARTEN . NAECHSTE KARTE WIRD GELESEN .", A1.ToString().PadLeft(2));
            //520 FORMAT(1H0,2X,A2," IST KEINE GUELTIGE KENNUNG FUER TEILLASTKARTEN . NAECHSTE KARTE WIRD GELESEN .")
            goto label200;

        label600:
            IFALL = 1;
            KVAR = 0;
            MVAR = 0;
            return;

        label1000:
            IZ2 = IZ1/10;
            IZ3 = IZ1 - IZ2*10;

            //goto label(1100,1200,1300,1400),
            if(IZ2 == 1)        goto label1100;
            if(IZ2 == 2)        goto label1200;
            if(IZ2 == 3)        goto label1300;
            if(IZ2 == 4)        goto label1400;

        label1100:
            //DECODE(43,1110,CORE) YC2GES[1],YH0[1],XC2GES[1],A1,A2,A3
            //1110 FORMAT(3X,2F6.0,F7.0,2F6.0,F9.0)
            YC2GES[1] = Convert.ToDouble(CORE.Substring(3,6));
            YH0[1] = Convert.ToDouble(CORE.Substring(9,6));
            XC2GES[1] = Convert.ToDouble(CORE.Substring(15,7));
            A1 = Convert.ToDouble(CORE.Substring(22,6));
            A2 = Convert.ToDouble(CORE.Substring(28,6));
            A3 = Convert.ToDouble(CORE.Substring(34,9));

            YC2GES[1] = YC2GES[1]/GP;
            XC2GES[1] = XC2GES[1]/GI;
            HFDKL = XC2GES[1];
            A2 = A2/GI;
            
            if (YH0[1] != 0.0) 
                YH0[1] = UWA003("TABS", YH0[1]);

            PFDKL = YC2GES[1];
            PDWR = YC2GES[1];
            TFDKL = YH0[1];
            if (A1 != 0.0) LS[1] = 1.0 - 0.01*A1;
            if (A1 != 0.0) LSKL = LS[1];
            if (A2 != 0.0) DI[1] = A2;
            if (A2 != 0.0) DIKL = DI[1];
            
            THERMA = THERMN;
            
            if (A3 < 0.0) 
                A3 = THERMN * A3 * (-0.0001);

            THERMN = A3;
            THERML = THERMN;
            goto label200;

        label1200:
            IZ5 = 1;
            
            if (IZ3 > 1)
                IZ5 = NTTETB[IZ3-1] + 1;
            IZ4 = IZ5 + 1;
            IZ6 = IZ5 + 3;

            //DECODE(80,1210,CORE) (ANIND[L],ZNIND[L],IZWX[L],L=IZ5,IZ6), PN4[IZ3],(TXNIND[L],L=IZ4,IZ6)
            //1210 FORMAT(3X,4(2F6.0,I2),F6.0,3F5.2)

            int p = 0;
            for(L = IZ5; L <= IZ6; L++)
            {
                ANIND[L] = Convert.ToDouble(CORE.Substring(p+3,6));
                ZNIND[L] = Convert.ToDouble(CORE.Substring(p+9,6));
                IZWX[L] = Convert.ToInt32(CORE.Substring(p+15,2));
                p = p + 14;
            }
            PN4[IZ3] = Convert.ToDouble(CORE.Substring(58,6));

            p = 0;
            for(L = IZ4; L <= IZ6; L++)
            {
                TXNIND[L] = Convert.ToDouble(CORE.Substring(p+64,5));
                p = p + 5;
            }

            PN4[IZ3] = PN4[IZ3]/GP;
            if (PN4[IZ3] < 0.0)
                PKOMIN = -PN4[IZ3];
            if (PN4[IZ3] < 0.0) 
                PN4[IZ3] = 0.0;

            for(L = IZ5; L <= IZ6; L++)    //DO 1220 L = IZ5,IZ6
            {
                if (IZWX[L] != 0) 
                    NVENT[L] = IZWX[L];
                
                if (NVENT[IZ5] != 0)
                    NITRE[IZ3] = 3;
                
                if (NVENT[IZ5] == 99)
                    IVENTI = 99;

                ANIND[L] = ANIND[L]/GP;
                
                if (ANIND[L] != 0.0) 
                    P0E[L] = ANIND[L];
                
                if (ANIND[IZ5] != 0.0 && NVENT[IZ5] == 99) 
                    PSOLL[IZ3]=ANIND[IZ5];
                
                if (ZNIND[L] != 0.0)
                    T0E[L] = UWA003("TABS", ZNIND[L]);
                
                if (L == 1 && ANIND[1] > 0.0 && YC2GES[1] > 0.0)
                    LS[1] = P0E[1]/YC2GES[1];
                
                if (L == 1 && ZNIND[1] != 0.0) 
                    YDFAKT[2] = T0E[L];
                
                if (ANIND[L] != 0.0) 
                    PFDK[L] = P0E[L];
                
                if (ZNIND[L] != 0.0) 
                    TFDK[L] = T0E[L];
                
                if (ANIND[1] > 0.0 && YC2GES[1] > 0.0 && L == 1)
                    LSKL1=LS[1];
                
                if (L > 7)
                    continue;

                if (TXNIND[L] != 0.0)
                    DPUEB[L] = TXNIND[L];
                
                if (DPUEB[L] > 0.0) 
                    DPUEB[L] = DPUEB[L]/GP;
            }   //1220 CONTINUE
            
            goto label200;

        label1300:
            //DECODE(80,1310,CORE)A1,A2,A3,A4,A5,A6,NRMFIE[IZ3],IZ7,NITRE[IZ3],A7,EWKZUK[IZ3],FAKTKF[IZ3],A8,IZ4,IZ5,IZ6,LIGHT[2]
            //1310 FORMAT(3X,3F9.0,2F6.0,F9.0,2I3,I2,F4.0,F6.0,F1.0,F5.0,2I1,I2,I1)

            A1 = Convert.ToDouble(CORE.Substring(3,9));
            A2 = Convert.ToDouble(CORE.Substring(12,9));
            A3 = Convert.ToDouble(CORE.Substring(21,9));
            A4 = Convert.ToDouble(CORE.Substring(30,6));
            A5 = Convert.ToDouble(CORE.Substring(36,6));
            A6 = Convert.ToDouble(CORE.Substring(42,9));
            NRMFIE[IZ3] = Convert.ToInt32(CORE.Substring(51,3));
            IZ7 = Convert.ToInt32(CORE.Substring(54,3));
            NITRE[IZ3] = Convert.ToInt32(CORE.Substring(57,2));
            A7 = Convert.ToDouble(CORE.Substring(59,4));
            EWKZUK[IZ3] = Convert.ToDouble(CORE.Substring(63,6));
            FAKTKF[IZ3] = Convert.ToDouble(CORE.Substring(69,1));
            A8 = Convert.ToDouble(CORE.Substring(70,5));
            IZ4 = Convert.ToInt32(CORE.Substring(75,1));
            IZ5 = Convert.ToInt32(CORE.Substring(76,1));
            IZ6 = Convert.ToInt32(CORE.Substring(77,2));
            LIGHT[2] = Convert.ToInt32(CORE.Substring(79,1));

            if (NITRE[IZ3] == 0 && THERML == 0) 
                THERMN = 0.0;
            
            if (A1 > 0.0 && A1 != 999999.0)
                A1 = A1*GM;
            
            if (A2 > 0.0)
                A2 = A2*GM;
            
            if (A1 < 0.0) 
                A1 = GFDE [IZ3]*A1*(-0.0001);
            
            if (A2 < 0.0) 
                A2 = GABDE[IZ3]*A2*(-0.0001);
            
            if (A6 > 1.0) 
                A6 = A6*GM;
            
            if (EWKZUK[IZ3] > 10.0 && EWKEFF[IZ3] > 0.0)
                EWKZUK[IZ3] = EWKZUK[IZ3]*GM/EWKEFF[IZ3];

            EWKZUM[IZ3] = EWKZUK[IZ3];
            
            if (FAKTKF[IZ3] == 0.0) 
                FAKTKF[IZ3] = 1.0;
            
            if (IZ3 == 1 && A1 > 0.0) 
                MITER = 1;
            
            if (IZ3 > 1) 
                goto label1320;

            KUSA = IZ4;
            JUSA = IZ5;
            
            if (IZ4 <= 0)
                goto label1320;
            
            if (IZ6 == 0) 
                IZ6 = 4;

            NUSA = IZ6;
            PUSA = P0E[1];
            FUSA = PAUSA/PUSA;
            
            if (KUSA == 1)
                FUSA = A1/GFDE[1]*FUSA;
            
            if (KUSA == 2)
                FUSA = THERMN/THERMA*FUSA;
            
            if (KUSA == 3) 
                FUSA = 1.0;
            
            if (KUSA == 4) 
                FUSA = P0E[2];
            
        label1320:
            GFDE[IZ3] = A1;
            GABDE[IZ3] = A2;
            
            if (A3 < 0.0) 
                A3 = ARBTA[IZ3]*A3*(-0.0001);
            TLSTGE[IZ3] = A3;
            
            if (A4 != 0.0) 
                VMECHE[IZ3] = A4;
            
            if (A4 != 0.0)
                VMECHT[IZ3] = A4;
            
            if (A5 > 1.0)
                A5 = A5/100.0;
            
            if (A5 != 0.0) 
                ETAGE [IZ3] = A5;
            
            if (A5 != 0.0) 
                ETAGET[IZ3] = A5;
            
            if (A6 != 0.0) 
                GMFIXE[IZ3] = A6;
            
            if (IZ7 != 0) 
                NRMVAE[IZ3] = IZ7;
            
            if (IZ7 != 0) 
                LVAR[IZ3] = IZ7;
            
            if (A7 != 0.0) 
                ETWK [IZ3] = A7;
            
            if (A7 != 0.0) 
                ETWKUM[IZ3] = A7;
            
            if (A8 == 0.0) 
                A8 = 1.0;

            DREQUE[IZ3] = A8;
            DREQUT[IZ3] = A8;

            goto label200;

        label1400:
            IZ5 = 1;
            
            if (IZ3 > 1)
                IZ5 = NTTETB[IZ3-1] + 1;

            IZ6 = NTTETB[IZ3];

            //DECODE(75,1410,CORE)
            A1 = Convert.ToDouble(CORE.Substring(3,7));
            IX1 = Convert.ToInt32(CORE.Substring(10,2));
            A2 = Convert.ToDouble(CORE.Substring(12,5));
            A[1] = Convert.ToDouble(CORE.Substring(17,5));
            AA[1] = Convert.ToDouble(CORE.Substring(22,5));
            A[2] = Convert.ToDouble(CORE.Substring(27,5));
            AA[2] = Convert.ToDouble(CORE.Substring(32,5));
            A[3] = Convert.ToDouble(CORE.Substring(37,5));
            AA[3] = Convert.ToDouble(CORE.Substring(42,5));
            A[4] = Convert.ToDouble(CORE.Substring(47,5));
            AA[4] = Convert.ToDouble(CORE.Substring(52,5));
            III[1] = Convert.ToInt32(CORE.Substring(57,1));
            AAA[1] = Convert.ToDouble(CORE.Substring(58,5));
            III[2] = Convert.ToInt32(CORE.Substring(63,1));
            AAA[2] = Convert.ToDouble(CORE.Substring(64,5));
            III[3] = Convert.ToInt32(CORE.Substring(69,1));
            AAA[3] = Convert.ToDouble(CORE.Substring(70,5));
            //1410 FORMAT(3X,F7.0,I2,9F5.4,3(I1,F5.4))
            
            int IJ = 0;
            
            for(L = IZ5; L <= IZ6; L++)     //DO 1420 L=IZ5,IZ6
            {
                IJ = IJ + 1;
                
                if (IJ < 4)
                    FETAR[L] = AAA[IJ];
                if (IJ < 4)
                    MREGEL[L] = III[IJ];
                
                FETAE[L] = A[IJ];
                FBEWE[L] = AA[IJ];
            }   //1420 CONTINUE
            
            if (IZ3 != 1) 
                goto label1430;
            
            WTSOLL = A1*GW;
            
            if (LIGHT[8] == 0)
                WTSOLL = WTSOLL/3.6;
            IDEFW = IX1;
            DETA = A2;
            
            if (DETA <= 0.0) 
                DETA = 1.0;
            
        label1430:
            for(L = IZ5; L <= IZ6; L++)     //DO 1440 L=IZ5,IZ6
            {
                if (FETAE[L] == 0.0) 
                    FETAE[L] = 1.0;
                
                if (FBEWE[L] == 0.0) 
                    FBEWE[L] = 1.0;
            }   //1440 CONTINUE
            goto label200;

        label2000:
            //DECODE(69,2010,CORE) (LABT[L],GABT[L],PABT[L], QGAE[L],EABT[L],L=1,3)
            //2010 FORMAT(3X,3(I3,F7.0,F6.0,A1,F5.0))
            LABT[1] = Convert.ToInt32(CORE.Substring(3,3));
            GABT[1] = Convert.ToDouble(CORE.Substring(6,7));
            PABT[1] = Convert.ToDouble(CORE.Substring(13,6));
            QGAE[1] = Convert.ToBoolean(CORE.Substring(19,1));
            EABT[1] = Convert.ToDouble(CORE.Substring(20,5));
            LABT[2] = Convert.ToInt32(CORE.Substring(25,3));
            GABT[2] = Convert.ToDouble(CORE.Substring(28,7));
            PABT[2] = Convert.ToDouble(CORE.Substring(35,6));
            QGAE[2] = Convert.ToBoolean(CORE.Substring(41,1));
            EABT[2] = Convert.ToDouble(CORE.Substring(42,5));
            LABT[3] = Convert.ToInt32(CORE.Substring(47,3));
            GABT[3] = Convert.ToDouble(CORE.Substring(50,7));
            PABT[3] = Convert.ToDouble(CORE.Substring(57,6));
            QGAE[3] = Convert.ToBoolean(CORE.Substring(63,1));
            EABT[3] = Convert.ToDouble(CORE.Substring(64,5));

            for(L = 1; L <= 3; L++)     //DO 2050 L = 1,3
            {
                if (LABT[L] > 69 && LABT[L] < 93) 
                    goto label2020;
                PABT[L] = PABT[L]/GP;
                
                if (!QGAE[L])
                    EABT[L] = EABT[L]/GI;
                
                if (!QGAE[L]) 
                    continue;
                
                EABT[L] = EABT[L]*0.01;
                
                if (EABT[L] > 0.0) 
                    EABT[L] = EABT[L]*100 + 273.15;
                
                if (PABT[L] > 0.0 && EABT[L] != 0.0)
                    EABT[L] = VISUM(PABT[L],EABT[L],01);
                goto label2050;

            label2020:
                for(int L1 = 1; L1 <= 15; L1++)     //DO 2040 L1 = 1,15
                {
                    for(int L2 = 1; L2 <= 6; L2++)      //DO 2030 L2 = 1,6
                    {
                        if (LABT[L] != LTGAB[L2,L1]) 
                            continue;
                        UWA006("RDISC", 54,L1);
                        PNAST[L2] = PABT[L];
                        
                        if (PABT[L] < 900.0) 
                            PNAST[L2] = PNAST[L2]/GP;
                        UWA006("WDISC", 54,L1);
                        goto label2050;
                    }   //2030 CONTINUE
                }   //2040 CONTINUE

            label2050:  ;
            }

            for(L = 1; L <= 3; L++)     //DO 2060 L = 1,3
            {
                IZ2 = LABT[L];
                
                if (IZ2 == 0) 
                    continue;
                
                GABT[L] = GABT[L]*GM;
                IZ2 = Math.Abs(IZ2);
                
                if (PABT[L] > 0.0) 
                    PLTG[IZ2] = PABT[L];

                GLTG[IZ2] = GABT[L];
                if (EABT[L] > 0.0) ELTG[IZ2] = EABT[L];
            }   //2060 CONTINUE
            goto label200;

        label3000:
            //DECODE(3,3010,CORE) A1,I
            //3010 FORMAT(A1,I2,I2,10I3,F8.0,2F6.0,2I3,I2,F8.0,2(I1,F3.0),I1)
            a1 = CORE.Substring(0,1);
            I = Convert.ToInt32(CORE.Substring(1,2));
            
            if (I == 99) 
                goto label6000;
            if (QWEICH) 
                goto label3040;
            QWEICH = true;
            
            for(L = 1; L <= INENDE; L++)    //DO 3020 L=1,INENDE
                PWT[L] = 0.0;   //3020 CONTINUE
            
            if (LS[1] > 0.0) 
                goto label3030;
            LS [1] = 1.0;
            YDFAKT[1] = 99.0;
            
        label3030:
            if (DI[1] == 0.0) 
                PHI[1] = 99.0;
            UWA006("WDISC", 52,1);

        label3040:
            //3010 FORMAT(A1,I2,I2,10I3,F8.0,2F6.0,2I3,I2,F8.0,2(I1,F3.0),I1)
            //DECODE(80,3010,CORE)
            a1 = CORE.Substring(0,1);
            K2 = Convert.ToInt32(CORE.Substring(1,2));
            NTYP[I] = Convert.ToInt32(CORE.Substring(3,2));
            N1[I] = Convert.ToInt32(CORE.Substring(5,3));
            N2[I] = Convert.ToInt32(CORE.Substring(8,3));
            NBLTG[I,1] = Convert.ToInt32(CORE.Substring(11,3));
            NBLTG[I,2] = Convert.ToInt32(CORE.Substring(14,3));
            NBLTG[I,3] = Convert.ToInt32(CORE.Substring(17,3));
            NBLTG[I,4] = Convert.ToInt32(CORE.Substring(20,3));
            NBLTG[I,5] = Convert.ToInt32(CORE.Substring(23,3));
            NBLTG[I,6] = Convert.ToInt32(CORE.Substring(26,3));
            NBLTG[I,7] = Convert.ToInt32(CORE.Substring(29,3));
            NBLTG[I,8]  = Convert.ToInt32(CORE.Substring(32,3));
            PWT[I] = Convert.ToDouble(CORE.Substring(35,8));
            DTS[I] = Convert.ToDouble(CORE.Substring(43,6));
            DTKT[I] = Convert.ToDouble(CORE.Substring(49,6));
            NN1[I] = Convert.ToInt32(CORE.Substring(55,3));
            NN2[I] = Convert.ToInt32(CORE.Substring(58,3));
            IZ9 = Convert.ToInt32(CORE.Substring(61,2));
            Z10 = Convert.ToDouble(CORE.Substring(63,8));
            KATZE1[I] = Convert.ToInt32(CORE.Substring(71,1));
            VERLP[I] = Convert.ToDouble(CORE.Substring(72,3));
            KATZE2[I] = Convert.ToInt32(CORE.Substring(75,1));
            VERLE[I] = Convert.ToDouble(CORE.Substring(76,3));
            KRUECK[I] = Convert.ToInt32(CORE.Substring(79,1));

            if (KRUECK[I] < 8)
                goto label3050;
            INDDT[I] = 0;
            if (KRUECK[I] == 8) 
                KRUECK[I] = 0;
            if (KRUECK[I] == 9) KRUECK[I] = 1;

        label3050:
            N = (int)NTYP[I];
            NTYP0[I] = N;

            if (PWT[I] > 0.0) 
                PWT[I] = PWT[I]/GP;
            
            if (N == 3 && PWT[I] < 0.0) 
                PWT[I] = PWT[I]/GP;

            PW[I] = PWT[I];

            if (N == 3 && DTS[I] > 100.0 || N == 4 || N == 6 || N == 7 || N == 9 || N == 11 && DTS[I] > 100.0 || N == 13 || N == 15 && DTS[I] > 100.0 || N == 22) 
                DTS[I] = DTS[I]/GI;

            if (N == 1 && DTKT[I] != 0.0) DTK[I] = DTKT[I]/GP;
            if (N == 3 && DTKT[I] < 0.0) DTKT[I] = DTKT[I]/GI;
            if (N == 15 && DTKT[I] < 0.0) DTKT[I] = DTKT[I]/GI;
            if (N == 2 || N == 3 || N == 6 || N == 7 || N == 9 || N == 13 || N == 19 || N == 21 || N == 22 || N == 23)
                DTK[I] = DTKT[I];

            if (N != 6 && N != 22 && VERLP[I] > 100.0)
                VERLP[I] = VERLP[I]/10.0;

            if (N == 13 && (KATZE1[I] == 1 || KATZE1[I] == 3))
                VERLP[I] = VERLP[I]/GP;

            if (N != 22 && VERLE[I] > 100.0)
                VERLE[I] = VERLE[I]/10.0;

            if (N == 6) VERLE[I] = VERLE[I]*GM;
            if (N == 22) VERLE[I] = VERLE[I]/100.0;
            
            if ((N == 1 || N == 2 || N == 3 || N == 5 || N == 7 || N == 10 || N == 11 || N == 15 || N == 19 || N == 21) && KATZE2[I] == 1)
                VERLE[I] = VERLE[I]/GI;

            if ((N == 1 || N == 2 || N == 3 || N == 5 || N == 7 || N == 10 || N == 11 || N == 15 || N == 19 || N == 21) && KATZE2[I] == 2) 
                VERLE[I] = 1.0-VERLE[I]/100.0;

            if (N == 7 && KATZE2[I] >= 3)
                VERLE[I] = VERLE[I]/GI;

            if (N == 3 && DTS[I] <= 100.0) 
                SSTEU[I] = DTS[I];
            if (N == 7 || N == 8 || N == 18)
                SSTEU[I] = PW[I];
            if (N == 11) SSTEU[I] = DTS[I];
            if (N == 15 && DTS[I] <= 100.0) SSTEU[I] = DTS[I];
            if (N == 19 || N == 23) SSTEU[I] = PW[I];

            if (N == 0 || N == 1 || N == 3 || N == 6 || N == 7 || N == 8 ||N == 9 || N == 10 || N == 11 || N == 13 || N == 15 || N == 16 || N == 18 || N == 22) 
                QBZWM[I] = Z10;
            
            if (N == 0)
                QBZWM[I] = QBZWM[I]/GP;
            if (N == 1 && QBZWM[I] >= 0.0) QBZWM[I] = QBZWM[I]*GM;
            if (N == 6 || N == 7 || N == 8 || N == 11 || N == 16 || N == 18)    QBZWM[I] = QBZWM[I]*GM;
            if (N == 9 || N == 10) QBZWM[I] = QBZWM[I]*1000.0*GW;
            if (N == 22 && KRUECK[I] == 0) QBZWM[I] = QBZWM[I]*1000.0*GW;
            if (N == 22 && KRUECK[I] == 1) QBZWM[I] = QBZWM[I]*GM;

            if (N == 1 || N == 10) EKONDW[I] = PW[I];
            if (N == 3 || N == 15) EKONDW[I] = DTS[I];

            if (N == 5) DEKOND[I] = DTKT[I]/GI;
            if (N == 11 && DTS[I] <= 100.0) DEKOND[I] = DTS[I];
            if (N == 19 || N == 23) DEKOND[I] = DTS[I];

            if (N == 1 && KRUECK[I] > 1) IPUMP[I] = 1;
            if (N == 1 && KRUECK[I] == 2) KRUECK[I] = 0;
            if (N == 1 && KRUECK[I] == 3) KRUECK[I] = 1;
            if ((N == 2 || N == 21) && KRUECK[I] > 1 && KRUECK[I] < 6)      IPUMP[I] = 1;
            if ((N == 2 || N == 21) && KRUECK[I] > 1 && KRUECK[I] < 4)      KRUECK[I] = KRUECK[I] - 2;
            if ((N == 2 || N == 21) && KRUECK[I] > 3 && KRUECK[I] < 6)      INDDT[I] = 0;
            if ((N == 2 || N == 21) && KRUECK[I] > 3 && KRUECK[I] < 6)      KRUECK[I] = KRUECK[I] - 4;
            if (N == 3 || N == 15) IPUMP[I] = 1;
            if (N == 3 && NBLTG[I,1] != 0) IPUMP[I] = NBLTG[I,1];
            if (N == 3 && NBLTG[I,1] != 0) NBLTG[I,1] = 0;
            if (N == 15 && NBLTG[I,1] != 0) IPUMP[I] = NBLTG[I,1];
            if (N == 15 && NBLTG[I,1] != 0) NBLTG[I,1] = 0;

            if (N == 7 && NBLTG[I,1] != 0) NDRUCK = I;
            if (N == 7 && NBLTG[I,1] != 0) IDRUCK = NBLTG[I,1];
            if (N == 7 && NBLTG[I,1] != 0) NBLTG[I,1]= 0;

            if (N != 3 && N != 15) goto label200;
            JJ = N2[I];
            if (JJ == 0) goto label200;
            if (PLTG[JJ] == 0.0) PLTG[JJ] = PKOND[1];
            ELTG[JJ] = DTS[I];
            goto label200;

        label4000:
            IZ2 = IZ1/10;
            IZ3 = IZ1 - IZ2*10;
            //goto label(200,4100,4200,4300),
            if(IZ2 == 1)    goto label200;
            if(IZ2 == 2)    goto label4100;
            if(IZ2 == 3)    goto label4200;
            if(IZ2 == 4)    goto label4300;

        label4100:
            if (IZ3 == 2) goto label4150;

            //DECODE(66,4110,CORE)
            //4110 FORMAT(3X,I2, A ,A ,A2,A1,F8.0)
            CORE = CORE.Replace("  ", " |").Replace("| ","").Replace("|","");
            string[] s = CORE.Split(' ');
            IP2 = Convert.ToInt32(s[0]);
            UEBER2 = s[1];
            NUMMER = s[2];
            NINDEX = s[3];
            IX1 = Convert.ToInt32(s[4]);
            PELEKT = Convert.ToDouble(s[5]);
            
            IELEKT = 3;
            
            if (IX1 == IZIFF0) IELEKT = -1;
            if (IX1 == IZIFF1) IELEKT = 1;
            if (IX1 == IZIFF2) IELEKT = 2;
            if (IX1 == IZIFF9) IELEKT = 9;
            if (IP2 > 0) goto label200;
            IP2 = ISLEN(UEBER2);
            goto label200;

        label4150:
            //DECODE(45,4160,CORE) IP3, UEBER3
            //4160 FORMAT(3X,I2, A )
            IP3 = Convert.ToInt32(CORE.Substring(3,2));
            UEBER3 = CORE.Substring(5);

            if (IP3 > 0) 
                goto label200;
            
            IP3 = ISLEN(UEBER3);
            goto label200;

        label4200:
            //DECODE(52,4210,CORE) IX1,IX2,IX3
            //4210 FORMAT(3X,I3,20X,I3,20X,I3)
            IX1 = Convert.ToInt32(CORE.Substring(3,3));
            IX2 = Convert.ToInt32(CORE.Substring(26,3));
            IX3 = Convert.ToInt32(CORE.Substring(49,3));

            if (IX3 == 0 && IX2 == 0) goto label4250;
            if (IX3 == 0) goto label4230;
            
            //DECODE(72,4220,CORE) 
            CORE = CORE.Replace("  ", " |").Replace("| ","").Replace("|","");
            ss = CORE.Split(' ');
            IPL[IX1] = Convert.ToInt32(ss[0]);
            BESCHR[IX1] = ss[1];
            IPL[IX2] = Convert.ToInt32(ss[2]);
            BESCHR[IX2] = ss[3];
            IPL[IX3] = Convert.ToInt32(ss[4]);
            BESCHR[IX3] = ss[5];
            //4220 FORMAT(3X,3(I3, A ))
            goto label200;
            
        label4230:
            //DECODE(49,4240,CORE) 
            CORE = CORE.Replace("  ", " |").Replace("| ","").Replace("|","");
            ss = CORE.Split(' ');
            IPL[IX1] = Convert.ToInt32(ss[0]);
            BESCHR[IX1] =ss[1];
            IPL[IX2] = Convert.ToInt32(ss[2]);
            BESCHR[IX2] = ss[2];
            //4240 FORMAT(3X,2(I3, A ))
            goto label200;
            
        label4250:
            //DECODE(26,4260,CORE) IPL[IX1], BESCHR[IX1]
            //4260 FORMAT(3X,I3, A )
            IPL[IX1] = Convert.ToInt32(CORE.Substring(3,3));
            BESCHR[IX1] = CORE.Substring(6);
            goto label200;

        label4300:
            //DECODE(46,4310,CORE) 
            PGENN = Convert.ToDouble(CORE.Substring(3,8));
            VOLTG = Convert.ToDouble(CORE.Substring(11,5));
            COSPHI = Convert.ToDouble(CORE.Substring(16,5));
            ETAGLR = Convert.ToDouble(CORE.Substring(21,5));
            PH2 = Convert.ToDouble(CORE.Substring(26,5));
            SCR = Convert.ToDouble(CORE.Substring(31,5));
            MAKEUP = Convert.ToDouble(CORE.Substring(36,5));
            ENDSCH = Convert.ToDouble(CORE.Substring(41,5));
            //4310 FORMAT(3X,F8.0,7F5.0)
            goto label200;

        label4400:
            IZ2 = IZ1/10;
            //goto label(4410,4500,4600,4700,4800),
            if(IZ2 == 1)    goto label4410;
            if(IZ2 == 2)    goto label4500;
            if(IZ2 == 3)    goto label4600;
            if(IZ2 == 4)    goto label4700;
            if(IZ2 == 5)    goto label4800;

        label4410:
            //DECODE(24,4420,CORE) 
            IVERD[1] = Convert.ToInt32(CORE.Substring(3,1));
            IKLAB[1] = Convert.ToInt32(CORE.Substring(4,1));
            IZWKUE = Convert.ToInt32(CORE.Substring(5,1));
            IVERD[2] = Convert.ToInt32(CORE.Substring(6,1));
            IKLAB[2] = Convert.ToInt32(CORE.Substring(7,1));
            IREKU = Convert.ToInt32(CORE.Substring(8,1));
            IZUF[1] = Convert.ToInt32(CORE.Substring(9,1));
            IBRK[1] = Convert.ToInt32(CORE.Substring(10,1));
            IKLZU[1] = Convert.ToInt32(CORE.Substring(11,1));
            IGTURB[1] = Convert.ToInt32(CORE.Substring(12,1));
            IKLZU[3] = Convert.ToInt32(CORE.Substring(13,1));
            IZUF[2] = Convert.ToInt32(CORE.Substring(14,1));
            IBRK[2] = Convert.ToInt32(CORE.Substring(15,1));
            IKLZU[2] = Convert.ToInt32(CORE.Substring(16,1));
            IGTURB[2] = Convert.ToInt32(CORE.Substring(17,1));
            IKLZU[4] = Convert.ToInt32(CORE.Substring(18,1));
            IABHI = Convert.ToInt32(CORE.Substring(19,1));
            KABHI = Convert.ToInt32(CORE.Substring(20,1));
            NGASTA = Convert.ToInt32(CORE.Substring(21,1));
            NGAST = Convert.ToInt32(CORE.Substring(22,1));
            NRGAS = Convert.ToInt32(CORE.Substring(23,1));
            //4420 FORMAT(3X,21I1)
            goto label200;

        label4500:
            //DECODE(80,4510,CORE) 
            PVVERD[1] = Convert.ToDouble(CORE.Substring(3,7));
            TVVERD[1] = Convert.ToDouble(CORE.Substring(10,7));
            GLUFT = Convert.ToDouble(CORE.Substring(17,7));
            TNVERD[1] = Convert.ToDouble(CORE.Substring(24,7));
            PVERD[1] = Convert.ToDouble(CORE.Substring(31,7));
            GKLAB[1] = Convert.ToDouble(CORE.Substring(38,7));
            PVVERD[2] = Convert.ToDouble(CORE.Substring(45,7));
            TVVERD[2] = Convert.ToDouble(CORE.Substring(52,7));
            TNVERD[2] = Convert.ToDouble(CORE.Substring(59,7));
            PVERD[2] = Convert.ToDouble(CORE.Substring(66,7));
            GKLAB[2] = Convert.ToDouble(CORE.Substring(73,7));
            //4510 FORMAT(3X,11F7.0)
            goto label200;

        label4600:
            //DECODE(80,4510,CORE) 
            TNZUF[1] = Convert.ToDouble(CORE.Substring(3,7));
            PZUF[1] = Convert.ToDouble(CORE.Substring(10,7));
            TNBRK[1] = Convert.ToDouble(CORE.Substring(17,7));
            GBRK[1] = Convert.ToDouble(CORE.Substring(24,7));
            GKLZU[1] = Convert.ToDouble(CORE.Substring(31,7));
            TVTURB[1] = Convert.ToDouble(CORE.Substring(38,7));
            TNTURB[1] = Convert.ToDouble(CORE.Substring(45,7));
            GNTURB[1] = Convert.ToDouble(CORE.Substring(52,7));
            GKLZU[3] = Convert.ToDouble(CORE.Substring(59,7));
            PGTURB[1] = Convert.ToDouble(CORE.Substring(66,7));
            TNREKU = Convert.ToDouble(CORE.Substring(73,7));
            goto label200;

        label4700:
            //DECODE(73,4510,CORE) TNZUF[2],PZUF[2],TNBRK[2],GBRK[2],GKLZU[2],TVTURB[2],TNTURB[2],GNTURB[2],GKLZU[2],PGTURB[2]
            TNZUF[2] = Convert.ToDouble(CORE.Substring(3,7));
            PZUF[2] = Convert.ToDouble(CORE.Substring(10,7));
            TNBRK[2] = Convert.ToDouble(CORE.Substring(17,7));
            GBRK[2] = Convert.ToDouble(CORE.Substring(24,7));
            GKLZU[2] = Convert.ToDouble(CORE.Substring(31,7));
            TVTURB[2] = Convert.ToDouble(CORE.Substring(38,7));
            TNTURB[2] = Convert.ToDouble(CORE.Substring(45,7));
            GNTURB[2] = Convert.ToDouble(CORE.Substring(52,7));
            GKLZU[2] = Convert.ToDouble(CORE.Substring(59,7));
            PGTURB[2] = Convert.ToDouble(CORE.Substring(66,7));
            goto label200;

        label4800:
            //DECODE(31,4510,CORE) PGAS,TABGAS,GABGAS,HU
            PGAS = Convert.ToDouble(CORE.Substring(3,7));
            TABGAS = Convert.ToDouble(CORE.Substring(10,7));
            GABGAS = Convert.ToDouble(CORE.Substring(17,7));
            HU = Convert.ToDouble(CORE.Substring(24,7));
            goto label200;

        label5000:
            LKUEHL = LKUEHL + 1;
            if (LKUEHL > 10) goto label5100;
            if (TKUEHL[LKUEHL] == 0.0) goto label5100;

            NITRE[1] = KNITRA;
            if (KNITRA == 1) TLSTGE[1] = AKUEHL;
            if (KNITRA == 2) GABDE[1] = AKUEHL;
            if (KNITRA == 3) GFDE[1] = AKUEHL;
            if (KNITRA == 4) GMFIXE[1] = AKUEHL;
            if (KNITRA == 8) THERMN = AKUEHL;
            if (IVENTI == 99) NVENT[1] = 99;
            PDWR = PFDKL;
            YC2GES[1] = PFDKL;
            XC2GES[1] = HFDKL;
            YH0[1] = TFDKL;
            if (LSKL != 0.0) LS[1] = LSKL;
            if (DIKL != 0.0) DI[1] = DIKL;
            if (LSKL1 != 0.0) LS[1] = LSKL1;
            if (TFDK[1] != 0.0) YDFAKT[2] = TFDK[1];
            
            for(L = 1; L <= 7; L++)   //DO 5010 L = 1,7
            {
                if (PFDK[L] != 0.0) P0E[L] = PFDK[L];
                if (TFDK[L] != 0.0) T0E[L] = TFDK[L];
            }   //5010 CONTINUE
            
            for(L = 1; L <= ANZTRB; L++)    //DO 5020 L=1,ANZTRB
            {
                if (VMECHT[L] != 0.0) VMECHE[L] = VMECHT[L];
                if (DREQUT[L] != 0.0) DREQUE[L] = DREQUT[L];
            }   //5020 CONTINUE
            
            if (MKUEHL == 2 || MKUEHL == 5) goto label5050;
            if (MKUEHL == 1 || MKUEHL == 4) goto label5030;
            PN4[1] = TKUEHL[LKUEHL];
            goto label6000;
            
        label5030:
            for(L = 1; L <= ANZTRB; L++)    //DO 5040 L=1,ANZTRB
            {
                ETWK[L] = TKUEHL[LKUEHL];
                if (EWKZUM[L] != 0.0) 
                    EWKZUK[L] = EWKZUM[L];
            }   //5040 CONTINUE
            goto label6000;
            
        label5050:
            for(L = 1; L <= ANZTRB; L++)    //DO 5060 L=1,ANZTRB
            {
                EWKZUK[L] = TKUEHL[LKUEHL];
                
                if (ETWKUM[L] != 0.0)
                    ETWK[L] = ETWKUM[L];
            }   //5060 CONTINUE
            goto label6000;

        label5100:
            UWA027(1);
            goto label100;

        label6000:
            if (!QWEICH) 
                goto label6100;
            return;
            
        label6100:
            if (LS[1] > 0.0) 
                goto label6200;
            LS [1] = 1.0;
            YDFAKT[1] = 99.0;
            
        label6200:
            if (DI[1] == 0.0) 
                PHI[1] = 99.0;
            UWA006("WDISC", 52,1);
            return;
            
        label10000:
            Console.WriteLine("KRAWALENDE UWA024");
            Console.ReadKey();
            Environment.Exit(0);
        }   //END
        

        static double UWA025(ref double GKA,ref double GKT,ref double PKA,ref double PKT,ref double EKA,ref double EKT,ref double TKWA,ref double TKWT,
            ref double WZUKA,ref double WZUKT,ref int I)
        {
            double uwa025 = 0, TSA = 0, DIA = 0, DTWA = 0, ATWA = 0, XA = 0, FTT = 0, FT = 0, FTA = 0, FV = 0, TST = 0, DIT = 0, DTWT = 0, ATWT = 0,
                CT = 0, TSTMIN = 0;
            int NEGER = 0;
            J = 0;
            
            if (PKT <= 0.0)
                J = 1;

            PKT = Math.Abs(PKT);

            A1 = GKA + GZUKOA[I];
            A2 = (EKA*GKA + QZUKOA[I])/A1;
            A3 = GKT + GZUKOT[I];
            A4 = (EKT*GKT + QZUKOT[I])/A3;
            GKA = A1;
            EKA = A2;
            GKT = A3;
            EKT = A4;
            TSA = UW0011(PKA,1) - 273.15;
            DIA = EKA - TSA;
            DTWA = DIA/WZUKA;
            ATWA = TKWA+DTWA;
            XA = (TSA-TKWA)/(TSA-ATWA);
            
            if (TKWT == 0.0) TKWT = TKWA;
            NEGER=0;
            TX1 =TKWA;
            
        label1751:
            NEGER=NEGER+1;
            if(TX1 < 36.0) goto label7043;
            FTT = (-0.1478E-4*TX1 + 0.41792E-2)*TX1 + 0.968822E+00;
            goto label100;
            
        label7043:
            FTT = (((-0.393765E-06*TX1 + 0.3559265E-04)*TX1 - 0.121798E-02)*TX1 + 0.259529E-01) * TX1 + 0.7450794E-00;
            
        label100:
            if (NEGER == 2)  goto label1750;
            TX1 =TKWT;
            FTA = FTT;
            goto label1751;
            
        label1750:
            FT = FTT/FTA;
            
            if(WZUKT == 0.0)
                goto label1752;
            A1=WZUKA*GKA*WZUKT/GKT;
            goto label1753;
            
        label1752:
            A1=WZUKA*GKA/GKT;

        label1753:
            FV = Math.Sqrt(WZUKA*GKA/A1/GKT*FAKTKF[I])/FAKTKF[I];
            TST = TSA;
            if (PKT > 0.0) TST = UW0011(PKT,1) - 273.15;
            DIT = EKT - TST;
            DTWT = DIT/A1;
            ATWT = TKWT+DTWT;
            XT = Math.Pow(XA, (FT*FV));
            CT = XT/(XT-1.0);
            TST = TKWT+(CT*DTWT);
            
            if (TST-ATWT < DTKOTL) TST = ATWT + DTKOTL;
            TST = TST + 273.15;
            if (PKOMIN <= 0.0) PKOMIN = 0.0062;
            TSTMIN = UW0011(PKOMIN,1);
            if (TST < TSTMIN) TST = TSTMIN;
            if (J == 1) TST = UW0011(PKT,1);
            DKONDA[I] = GKA;
            DKONDT[I] = GKT;
            uwa025 = UW0011(TST,2);
            GKONDA[I] = WZUKA *GKA;
            GKONDT[I] = A1 * GKT;
            TKONDA[I] = TKWA;
            TKONDT[I] = TKWT;
            PKONDA[I] = PKA;
            PKONDT[I] = uwa025;
            DTKONA[I] = TSA - ATWA;
            DTKONT[I] = TST - ATWT - 273.15;
            TKONAA[I] = ATWA;
            TKONAT[I] = ATWT;
            return uwa025;
        }   //END
        
        
        static void UWA026(ref double P, ref double E, double EPS,ref double ALFA,ref double PSI)
        {
            //ENTRY ALPHAF(P ,E ,EPS ,ALFA ,PSI)
            //ENTRY ALPHA (P ,E ,EPS ,ALFA ,PSI)
            double Z = 0, EGR = 0, EPSK = 0;
            Z = Math.Log10(P);
            EGR = 26.179 * Z + 658.063;
            
            if ((EGR-E) <= 0)
                goto label3;
            else
                goto label1;

        label3:
            ALFA = (((((-211.6402E-15*E +826.0192E-12)*E-1291.7812E-09)*E  +1013.7342E-06)*E-400.6091E-03)*E+64.5131);
            EPSK = 0.454;
            
        label2:
            PSI = 1.0;
            
            if (EPS < (1.0 - EPSK)) 
                goto label4;
            A1 = 1.0-Math.Pow(((EPS+EPSK-1.0)/EPSK),2);
            
            if (A1 <= 0.0) 
                sw16.WriteLine("0UWA026 {0}{1}{2}{3}{4}{5}{6}", P.ToString("0.00000E+0").PadLeft(13),E.ToString("0.00000E+0").PadLeft(13),
                    EPS.ToString("0.00000E+0").PadLeft(13),EPSK.ToString("0.00000E+0").PadLeft(13),ALFA.ToString("0.00000E+0").PadLeft(13),A1.ToString("0.00000E+0").PadLeft(13));
                //10 FORMAT(1H0,"UWA026",6E13.5)
            
            if (A1 <= 0.0) goto label4;
            PSI = Math.Sqrt(A1);
            
        label4:
            ALFA = ALFA*P*PSI;
            return;
            
        label1:
            ALFA = ((1.51848E-06+0.39984E-06*Z)*E-2.33417E-03-0.50061E-03 *Z)*E+1.41576+0.13108*Z;
            EPSK = 0.423;
            goto label2;
        }   //END
        
        
        static void UWA030()
        {
            //ENTRY KRLF
            double[] GTURBA = new double[5], X2INTA = new double[5], G2INTA = new double[5];
            //INCLUDE "KRAWAL80.COMMON"
            int NITRA = 0, NZAEL = 0, NZUWA = 0, N = 0, NWEICH = 0, I11 = 0, K9VOR = 0, M = 0, M1 = 0, NX = 0, NZAEL3 = 0, IKL = 0,
                ISPT = 0, L = 0, IRUECK = 0, IRETK = 0, NY = 0, K8 = 0, ITABD = 0, KKK = 0, NRMVAR = 0, L1 = 0, IKOND = 0, LL = 0;

            double XINT = 0, X1INT = 0, GINT = 0, G1INT = 0, X2INT = 0, G2INT = 0, NEBZW = 0, DTVERL = 0.0, B = 0, TS = 0,
                ETA2 = 0, P = 0, SSTEUV = 0, T1 = 0, V1 = 0, T2 = 0, V = 0, V2 = 0, T = 0, DP = 0, PSPT = 0.0, PULVOR = 0.0,
                KAUSL3 = 0, GFD = 0, GW = 0, EVOR = 0,PVOR = 0, GN1 = 0, GN2 = 0, EN1 = 0, EN2 = 0, PN2 = 0, EAUSEL = 0, 
                ENTD = 0, GABDK = 0, SUQL = 0, GW0 = 0, DPSPT = 0, GHEIZ = 0, Z7VOR = 0, GTURB = 0, QARB = 0, GENTW = 0, 
                GMFIXI = 0, ARBT = 0, TLSTG = 0, GMFIX = 0, GABD = 0, A11 = 0, A12 = 0;
            //215 FORMAT (36H ***********KREISLAUF WARNING*** NR.,I3)
            //22 FORMAT(" "," ++KRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}",3I5,6E13.5/)
            
            B = 859.845;
            
            if (LLTG[9] == 1) B = 860.0;
            if (LIGHT[2] == 2)
                sw16.WriteLine(" ++KRLF++{0}{1}{2}", IENDST.ToString().PadLeft(5),IHENDE.ToString().PadLeft(5),INENDE.ToString().PadLeft(5));
            //770 FORMAT(" ","++KRLF++",7I5/)
            
            UWA051();
            if (MITER == 1) LITER = LITER + 1;
            JJ = 1;
            
        label401:
            NITRA = 3;
            if (TLSTGE[JJ] != 0.0) NITRA = 1;
            if (NRMFIE[JJ] != 0) NITRA = 4;
            if (JJ > 1) goto label400;
            if (NRMVAE[1] != 0) NITRA = 6;
            if (NTYP[1] == 10) NITRA = 5;
            if (THERMN != 0.0) NITRA = 8;
            if (GFDE[1] != 0.0) goto label662;
            GFDE[1] = 3.0*TLSTGE[1];
            if (THERMN != 0.0) GFDE[1] = 2.0* THERMN;
            if (GFDE[1] < 2.0) GFDE[1] = 9999.9;
            
        label662:
            if(NITRE[JJ] == 0)NITRE[JJ]= NITRA;
            JJ = JJ + 1;
            if (JJ <= ANZTRB) goto label401;
            goto label62;
            
        label400:
            if (NRMVAE[JJ] == 40) NITRA = 7;
            if (GFDE[JJ] == 0.0) GFDE[JJ] = 0.05*GFDE[1];
            if(NITRE[JJ] == 8 || NITRE[JJ] == 9 )   ETAGE[JJ]=ETAGE[JJ-1];
            goto label662;
            
        label62:
            NZAEL = 6;
            WAUFW = 0.0;
            XINT = 0.0;
            X1INT = 0.0;
            GINT = 0.0;
            G1INT = 0.0;
            X2INT = 0.0;
            G2INT = 0.0;
            NZUWA = 0;
            NHEIZ = 0;
            JJ = 0;
            
        label431:
            JJ = JJ +1;
            GTURBA[JJ] = 0.0;
            X2INTA[JJ] = 0.0;
            G2INTA[JJ] = 0.0;
            
            if (JJ < ANZTRB) 
                goto label431;
            GZUW = 0.0;
            
            for(N = 1; N <= 60; N++)    //DO 504 N = 1,60
            {
                KAUSLF[N] = 0;
                NTYP[N] = NTYP0[N];
            }   //504 CONTINUE
            K1 = 0;
            
        label60:
            NZAEL = NZAEL - 1;
            if (LIGHT[2] == 1)
                UWA012();
            
            if (NZAEL == 0) 
                goto label3;
            NWEICH = 0;
            I = 0;
            
        label1:
            I = I + 1;
            if (I > INENDE) 
                goto label2;
            
            if (K1 == -9999) 
                goto label67;
            
            N= NTYP[I]+1;
            JJ = N2[I];
            II = N1[I];
            
            if (I > 1)
                J = NTYP[I-1];
            NEBZW = 0;
            
            if (KAUSLF[I] == 9) 
                goto label1;
            
            if (GWAS[I] < 0.0)
                GWAS[I] = GMINTT[1];
            if (I <= IHENDE) goto label24;
            NEBZW =1;
            KK = NN1[I];
            if (KK == 0) goto label24;
            A2 = ELTG[KK];
            if (KPW[I] == 1 && A2 != 0.0) 
                PLTG[KK] = PSTR(A2);
            A1 = PLTG[KK];
            I11 = KK;
            
            if (KRUECK[I] == 1) I11 = NN2[I];
            GWAS[I] = GLTG[I11];
            goto label24;
            
        label34:
            ELTG[JJ]=EKONDW[I];
            PLTG[JJ]=A3;
            
        label26: 
            KAUSLF[I] = 9;
            
        label59:
            if (NEBZW != 1) goto label1;
            K1 = NN2[I];
            if (K1 == 0) goto label1;
            PLTG[K1] = PW[I];
            ELTG[K1] = EWAUS[I];
            I11 = K1;

            if (KRUECK[I] == 1) I11 = NN1[I];
            GLTG[I11] = GWAS[I];
            goto label1;
            
        label2:
            if (NWEICH == 1) goto label60;
            goto label61;
            
        label3:
            K9VOR = 17;
            goto label50;
            
        label24:
            //goto label(4,5,6,7,8,9,10,11,12,12,14,15,909,38,17,7,18,19,41,20,21,6,222,1023),
            if(N == 1)      goto label4;
            if(N == 2)      goto label5;
            if(N == 3)      goto label6;
            if(N == 4)      goto label7;
            if(N == 5)      goto label8;
            if(N == 6)      goto label9;
            if(N == 7)      goto label10;
            if(N == 8)      goto label11;
            if(N == 9)      goto label12;
            if(N == 10)      goto label12;
            if(N == 11)      goto label14;
            if(N == 12)      goto label15;
            if(N == 13)      goto label909;
            if(N == 14)      goto label38;
            if(N == 15)      goto label17;
            if(N == 16)      goto label7;
            if(N == 17)      goto label18;
            if(N == 18)      goto label19;
            if(N == 19)      goto label41;
            if(N == 20)      goto label20;
            if(N == 21)      goto label21;
            if(N == 22)      goto label6;
            if(N == 23)      goto label222;
            if(N == 24)      goto label1023;

        label5:
            if (EKONDW[I] == 0.0) goto label23;
            
            if (PLTG[II] == 0.0) goto label27;
            UWA046(0);
            PW[I] = EKONDW[I];
            
            if (II == 33 || II == 34) PW[I] = PEMIN;
            if (A3 < PW[I]) PW[I] = A3;
            
        label4:
            TWAUS[I] = UW0011 (PW[I],1);
            goto label25;
            
        label23:
            if (PLTG[II] == 0.0) goto label27;
            UWA046(0);
            PW[I] = A3;
            
            if (II != 33 && II != 34) goto label25;
            PW[I] = PEMIN;
            TWAUS[I] = UW0011(PEMIN,1);
            
        label25:
            EWAUS[I]= VISUM(PW[I],TWAUS[I],21);
            JJ = N2[I];
            if (JJ > 0) PLTG[JJ] = PW[I];
            if (JJ > 0) ELTG[JJ] =EWAUS[I];
            if (JJ > 0 && IPUMP[I] == 1) 
                ELTG[JJ] = VISUM(PW[I],TS,-11);
            goto label26;
            
        label6:
            if (DTK[I] == 0.0) goto label28;
            if (N2[I] == 0) goto label29;
            if (NEBZW == 1) goto label30;
            
        label16:
            A1 = TWAUS[I-1];
            A2 = EWAUS[I-1];

            if (J == 3 || J == 4 || J == 5 || J == 8 || J == 9 || J == 13 || J == 15) goto label31;
            if (N == 13) goto label55;
            if (A1 == 0.0) goto label27;
            
        label32:
            if (PLTG[II] == 0.0)     goto label27;
            UWA046(0);
            
            if (DTKT[I] >= 0.0)  goto label351;
            
        label350:
            if (K == 2 && LLTG[15] == 0 && INDDT[I] > 0)    goto label351;
            A4 = TWAUS[I]+DTKT[I];
            DTK[I] = A4-A1;
            EKONDW[I] = VISUM(A3,A4,21);
            SSTEU[I] = EKONDW[I] - A2;
            goto label33;
            
        label351:
            A4 = A1 + DTK[I];
            EKONDW[I] = VISUM(A3,A4,21);
            SSTEU[I] = EKONDW[I]-A2;
            
        label33:
            TWAUS[I] = TWAUS[I] - DTS[I];
            
            if (KKONDP == 1 && I < KKENTG) PW[I] = UW0011(TWAUS[I],2);
            EWAUS[I] = VISUM (PW[I],TWAUS[I],21);
            QBZWM[I] = EWAUS[I];
            if (N2[I] != 0) goto label34;
            if (TWAUS[I-1] == 0.0) goto label27;
            
            UWA047 (A3,PW[I],ref TWAUS[I-1],0.6, ref DEKOND[I]);
            goto label26;
            
        label29:
            if (DTKT[I] < 0.0) goto label350;
            DTK[I] =0.0;
            
        label28:
            if(PLTG[II] == 0.0) goto label27;
            UWA046(0);
            EKONDW [I] = VISUM (A3,TWAUS[I],21);
            goto label33;
            
        label30:
            if (A1 == 0.0) goto label27;
            if (A2 == 0.0) goto label27;
            A1 = VISUM (A1,A2,23);
            goto label32;
            
        label31:
            if (A2 == 0.0) goto label27;
            if ((KKONDP == 1 && (I-1) < KKENTG) || KPW[I-1] == 1) goto label90;
            if (N == 13) goto label57;
            A1 = VISUM (PW[I-1],A2,23);
            goto label32;
            
        label90:
            PW[I-1] = PSTR(A2);
            
            if (N == 13) goto label57;
            A1 = UW0011(PW[I-1],1);
            goto label32;
            
        label7:
            if (NEBZW != 1) goto label35;
            if (A1 == 0.0) goto label27;
            if (A2 == 0.0) goto label27;
            A4 = VISUM (A1,A2,23);
            goto label36;
            
        label35:
            A1 = PW[I-1];
            A4 = TWAUS[I-1];
            A2 = EWAUS[I-1];
            if (A1 == 0.0 || A4 == 0.0)     goto label27;
            
        label36:
            TWAUS[I]=A4;
            if (II == 0) goto label37;
            
            if (ELTG[II] == 0.0) goto label27;
            if (PLTG[II] == 0.0) goto label27;
            if (KATZE2[I] >= 2) KATZE2[I] = 0;
            A9 = TWAUS[I];
            UWA046(0);
            TWAUS[I] = A9;
            
            if (SSTEU[I] <= 0.0) goto label331;
            if (JJ == 0) goto label27;
            A7 = PLTG[JJ];
            if (A7 <= 0.0) goto label27;
            A6 = ELTG[II] - VERLE[I];
            A9 = VISUM(A3,A6,03);
            A8 = VISUM(A3,A9,02);
            A9 = VISUM(A7,A8,04);
            A8 = VISUM(A7,A9,01);
            A8 = (A6 - A8) * SSTEU[I]/100.0;
            A8 = A6 - A8;
            EKONDW[I] = A8;
            ELTG[JJ] = A8;
            
        label331:
            DTS[I] = ELTG[II] - EKONDW[I] - VERLE[I];
            
        label37:
            ETA2 = DEKOND[I]/100.0;
            M = I-1;
            
            if (A4 < 0.0)
                sw16.WriteLine("0DAMPF AM AUSTRITT ELEMENT{0}{1}{2}{3}{4}", M.ToString().PadLeft(5),A4.ToString("0.00000E+0").PadLeft(13),
                    A1.ToString("0.00000E+0").PadLeft(13),PW[M].ToString("0.00000E+0").PadLeft(13),EWAUS[M].ToString("0.00000E+0").PadLeft(13));
            //450 FORMAT("0","DAMPF AM AUSTRITT ELEMENT"I5,4E13.5)
            
            if (A4 < 0.0) A4 = UW0011(A1,1);
            UWA047 (A1, PW[I], ref A4, ETA2, ref DTK[I]);
            
            if (NEBZW != 1 && PW[I] > 40.0)  HIKSP = DTK[I];
            EWAUS[I] = A2 + DTK[I];
            goto label26;
            
        label38:
            if (NEBZW != 0) goto label39;
            A1 = PW[I];
            A2 = EWAUS[I-1];
            
        label39:
            if (A1 == 0.0 || A2 == 0.0) goto label27;
            if (QBZWM[I] != 0.0) goto label1040;
            if (DTS[I] != 0.0) goto label40;
            TWAUS[I] = VISUM(A1,A2,03) + DTK[I];
            EWAUS[I] = VISUM(A1,TWAUS[I],01);
            if (KATZE1[I] != 0) goto label2040;
            goto label26;
            
        label40:
            EWAUS[I] = A2 + DTS[I];
            TWAUS[I] = VISUM(A1,EWAUS[I],03);
            if (KATZE1[I] != 0) goto label2040;
            goto label26;
            
        label1040:
            if (NEBZW == 0) A1 = PW[I-1];
            A4 = VISUM(A1,A2,23);
            A3 = VISUM(A1,A4,20);
            PW[I] = A1 + QBZWM[I]/A3/10000.0;
            A3 = VISUM(A1,A4,22);
            TWAUS[I] = VISUM(PW[I],A3,24);
            EWAUS[I] = VISUM(PW[I],TWAUS[I],21);
            DTS[I] = EWAUS[I]-A2;
            A1 = PW[I];
            
            if (KATZE1[I] == 0) goto label26;
            
        label2040:
            if (KATZE1[I] == 1) PW[I] = A1 - VERLP[I];
            if (KATZE1[I] == 2) PW[I] = A1*(1.0-VERLP[I]/100.0);
            if (KATZE1[I] < 3) TWAUS[I] = VISUM(PW[I],EWAUS[I],03);
            if (KATZE1[I] < 3) goto label26;
            A3 = VERLP[I];
            if (K == 1 && KATZE1[I] == 4) A3 = A1 - A1*(1.0-VERLP[I]/100.0);
            A4 = VISUM(A1,A2,03);
            A4 = VISUM(A1,A4,00);
            P = A1 - A3;
            if (A3 > A1*0.46) P = 0.46*A1;
            A5 = VISUM(P,TWAUS[I],00);
            if (NEBZW == 0) A5 = VISUM(P,TWAUS[I],20);
            A4 = (A4+A5)*0.5;
            if (K == 1 && GWAS[I] > 0.0) SSTEU[I] = A3/GWAS[I]/GWAS[I]/A4;
            if (K == 2) A3 = SSTEU[I]*GWAS[I]*GWAS[I]*A4;
            if (A3 < A1) PW[I] = A1 - A3;
            if (K == 2) VERLP[I] = A3;
            TWAUS[I] = VISUM(PW[I],EWAUS[I],03);
            goto label26;
            
        label41:
            if (NTYP[I+1] == 3 || NTYP[I+1] == 15) 
                goto label42;
            K9VOR = 10;
            
        label50:
            sw16.WriteLine(" ***********KREISLAUF WARNING*** NR.{0}", K9VOR.ToString().PadLeft(3));
            FORERR();
            
        label42:
            K1 = N1[I+1];
            K2 = NBLTG [I,1];
            N2[I] = K2;
            
            if (K1 == 0) goto label43;
            if (ELTG[K1] == 0.0) goto label27;
            
        label43:
            A1 = DEKOND[I+1]/100.0;
            UWA047 (PW[I-1],PW[I],ref TWAUS[I-1],A1, ref DTK[I]);
            EWAUS[I] = EWAUS[I-1] + DTK[I];
            PLTG[K2] = PW[I];
            ELTG[K2] = EWAUS[I];
            
            if (QBZWM[I] != 0.0) GLTG[K2] = QBZWM[I];
            A1 = PW[I-1];
            A4 = TWAUS[I-1];
            A2 = EWAUS[I-1];
            KAUSLF [I] = 9;
            K1 = -9999;
            goto label1;
            
        label67:
            K1=0;
            II= N1[I];
            JJ = N2[I];
            goto label36;
            
        label8:
            if (NEBZW == 1) goto label44;
            
            EWAUS[I] = EWAUS[I-1];
            TWAUS[I] = TWAUS[I-1];
            
            if (EWAUS[I] == 0.0 || TWAUS[I] == 0.0) goto label27;
            
        label45:
            EKONDW[I] = DTS[I];
            K1 = NBLTG[I,1];
            A3 = PLTG[K1];
            
            if (A3 == 0.0)   goto label27;
            if (EKONDW[I] == 0.0)   EKONDW[I] = SIEDI(A3);
            goto label34;
            
        label44:
            EWAUS[I] = A2;
            if (A2 == 0.0)       goto label27;
            K1 = NN2[I];
            PLTG[K1] = A1;
            ELTG[K1] = A2;
            
            if (K1 > 40 && K1 < 47) 
                PW[I] = A1;
            
            goto label45;
            
        label9:
            PLTG[JJ] = PLTG[II];
            
            if(PLTG[II] == 0.0)     goto label909;
            UWA046(0);
            PLTG[JJ] = A3;
            
        label909:
            if(NEBZW == 1)goto label46;
            
            EWAUS[I]=EWAUS[I-1];
            TWAUS[I]=TWAUS[I-1];
            
            if (EWAUS[I] == 0.0 || TWAUS[I] == 0.0) goto label27;
            if (N == 13) goto label16;
            
        label56:
            if (DEKOND[I] == 0.0)
                goto label47;
            EKONDW[I] = DEKOND[I];
            SSTEU[I] = 999.0;
            DTK[I] = EWAUS[I];
            A3 = PLTG[II];
            goto label48;
            
        label47:
            DTK[I] = EWAUS[I];
            
            if (TWAUS[I] < 0.0) 
                TWAUS[I] = UW0011(A1,1);
            A4 = TWAUS[I]+ DTS[I];
            
            if(PLTG[II] == 0.0)     goto label27;
            UWA046(1);
            EKONDW[I]= VISUM (A3,A4,11);
            A5 = VISUM(A3,A6,-11);
            
            if (EKONDW[I] < A5) EKONDW[I] = A5;
            goto label171;
            
        label48:
            if(PLTG[II] == 0.0)     goto label27;
            UWA046(0);
            
        label171:
            QBZWM[I] = ELTG[II]-VERLE[I];
            
            if (KATZE2[I] == 2) QBZWM[I] = ELTG[II];
            if (KATZE2[I] == 3) QBZWM[I] = ELTG[II]-DTVERL;
            goto label34;
            
        label46:
            if (A1 == 0.0 || A2 == 0.0)     goto label27;
            
            EWAUS[I] = A2;
            TWAUS[I] = VISUM(A1,A2,03);
            if (N == 13) goto label55;
            goto label56;
            
        label10:
            if (NEBZW == 1) goto label49;
            
            K9VOR=11;
            if (I != 1) goto label50;
            
        label53:
            EWAUS[I] = DTS[I];
            if (DTS[I] == 0.0)      goto label51;
            if (NEBZW == 1)         goto label52;
            TWAUS[I] = VISUM (PW[I],EWAUS[I],03);
            
        label52:
            GWAS[I] = QBZWM[I];
            if (NEBZW != 1) goto label26;
            K1 = NN1[I];
            PLTG[K1] = PW[I];
            ELTG[K1] = EWAUS[I];
            GLTG[K1] = QBZWM[I];
            goto label26;
            
        label51:
            K9VOR = 12;
            
            if (DTK[I] == 0.0) goto label50;
            TWAUS[I] = DTK[I] +273.15;
            EWAUS[I] = VISUM (PW[I],TWAUS[I],01);
            goto label52;
            
        label49:
            NN1[I]= NN2[I];
            
            if (KATZE2[I] == 1 || KATZE2[I] == 2) LHEIZ = KATZE2[I];
            goto label53;
            
        label11:
            K9VOR = 13;
            
            if (I != IHENDE && NTYP[I+1] != 7) goto label50;
            EWAUS[I]= DTS[I];
            if (DTS[I] == 0.0) goto label54;
            
        label156:
            PLTG[JJ] = PW[I];
            ELTG[JJ] = EWAUS[I];
            
            if (KATZE2[I] == 1) ELTG[JJ] = EWAUS[I] - VERLE[I];
            if (KATZE2[I] == 3 && K == 1) ELTG[JJ] = EWAUS[I]-VERLE[I];
            GLTG[JJ] = QBZWM[I];
            goto label26;
            
        label54:
            if (DTK[I] == 0.0) goto label166;
            TWAUS[I] = DTK[I] * 0.01;
            
            if (DTK[I] > 0.0)    TWAUS[I] = DTK[I] + 273.15;
            A4 = PW[I];
            
            if (A4 > 225.55) A4 = 225.55;
            A1 = UW0011(A4,1) - 273.15 + 0.005;
            
            if (KRUECK[I] == 7 && DTK[I] < A1) TWAUS[I] = A1 + 273.15;
            EWAUS[I] = VISUM (PW[I],TWAUS[I],01);
            goto label156;
            
        label166:
            EWAUS[I] = SIEDI(PW[I]);
            TWAUS[I] = VISUM (PW[I],EWAUS[I],03);
            goto label156;
            
        label12:
            if (NEBZW == 1) goto label165;
            
            EWAUS[I] = EWAUS[I-1];
            TWAUS[I] = TWAUS[I-1];
            if (EWAUS[I] == 0.0 || TWAUS[I] == 0.0) goto label27;
            if ((KKONDP == 1 && I < KKENTG) || KPW[I] == 1) PW[I] = PW[I-1];
            
        label58:
            if(JJ == 0) goto label26;
            if (QBZWM[I] != 0.0 && KATZE2[I] == 0) GLTG[JJ] = QBZWM[I];
            PLTG[JJ] = PW[I];
            ELTG[JJ] = EWAUS[I];
            goto label26;
            
        label165:
            EWAUS[I] = A2;
            
            if (JJ != 0) PLTG[JJ] = A1;
            K1 = NN2[I];
            PLTG[K1] = A1;
            if (A1 == 0.0 || A2 == 0.0) goto label27;
            if (K == 1) goto label164;
            if (PWT[I] != 0.0) goto label164;
            SSTEUV = SSTEU[I];
            T1 = VISUM(A1,A2,03);
            V1 = VISUM(A1,T1,00);
            P = A1;
            if (SSTEUV < A1) P = A1 - SSTEUV;
            T2 = VISUM(P,A2,03);
            V2 = VISUM(P,T2,00);
            V = (V1 + V2)/2.0;
            if (N == 9) SSTEU[I] = DTK[I] * Math.Pow(GLTG[KK],2.0)*V ;
            if (N == 10) SSTEU[I] = DEKOND[I]*Math.Pow(GLTG[KK],2.0)*V; 
            SSTEU[I] = (SSTEU[I] + SSTEUV)/2.0;
            P = (A1 - SSTEU[I])/A1;
            if (P < 0.4) SSTEU[I] = 0.4*A1;
            PW[I] = A1 - SSTEU[I];
            goto label168;
            
        label164:
            if (K == 1 && PWA[I] > 0.0) SSTEU[I] = 0.0;
            if (K > 1 && PWT[I] > 0.0) SSTEU[I] = 0.0;
            if (K == 1 && PWA[I] < 0.0) SSTEU[I] = A1-A1*(1.0+PWA[I]/100.0);
            if (K > 1 && PWT[I] < 0.0) SSTEU[I] = A1-A1*(1.0+PWT[I]/100.0);
            PW[I] = A1 - SSTEU[I];
            
            if (K == 1 && PWA[I] > 0.0) PW[I] = PWA[I];
            if (K > 1 && PWT[I] > 0.0) PW[I] = PWT[I];
            if (K > 1 && PWT[I] >= 0.0) goto label168;
            T1 = VISUM(A1,A2,03);
            V1 = VISUM(A1,T1,00);
            P = A1 - SSTEU[I];
            T2 = VISUM(P,A2,03);
            V2 = VISUM(P,T2,00);
            V = (V1 + V2)/2.0;
            
            if (N == 9 && GLTG[KK] > 0.0) DTK[I] = SSTEU[I]/ Math.Pow(GLTG[KK],2.0)/V;
            if (N == 10 && GLTG[KK] > 0.0) DEKOND[I] = SSTEU[I]/ Math.Pow(GLTG[KK],2.0)/V;
            
        label168:
            if (N == 9) goto label58;
            if (DTK[I] != 0.0) EWAUS[I] = VISUM(PW[I],UWA003("TABS", DTK[I]),01);
            if (DTS[I] > 0.0) EWAUS[I] = DTS[I];
            goto label58;
            
        label14:
            if (NEBZW != 1) goto label13;
            
            SSTEU[I] =0.0;
            
            if (QBZWM[I] == 0.0)     SSTEU[I] = 888.0;
            
        label13:
            if (PW[I] == 0.0)    goto label159;
            if (EKONDW[I] == 0.0)    goto label159;
            UWA046(1);
            TWAUS[I] = UW0011(PW[I],1);
            
        label160:
            EWAUS[I] = VISUM (PW[I],TWAUS[I],21);
            NN2[I] = JJ;
            GWAS[I]= 0.0;
            goto label26;
            
        label159:
            if (PLTG[II] == 0.0) goto label27;
            UWA046(0);
            PW[I] = A3;
            goto label160;
            
        label15:
            if (PLTG[II] == 0.0) goto label27;
            UWA046(0);
            K9VOR = 14;
            if(A3 < PW[I] && DEKOND[I] <= 0.0)  goto label50;
            EKONDW[I] = VISUM (A3,TWAUS[I],21);
            if (SSTEU[I] == 0.0) goto label163;
            if (DEKOND[I] == 0.0) goto label916;
            TWAUS[I] = TWAUS[I]-DEKOND[I];
            PW[I]=UW0011(TWAUS[I],2);
            EWAUS[I] = VISUM(PW[I],TWAUS [I],11);
            goto label161;
            
        label916:
            EWAUS[I] = SSTEU[I];
            TWAUS[I] = VISUM (PW[I],EWAUS[I],03);
            
        label161:
            DTS[I] = SIEDI(PW[I]);
            
            if (DTS[I] > EWAUS[I]) 
                goto label50;
            if (DTK[I] != 0.0) QBZWM[I] = DTK[I]*GWAS[I]/100.0;
            ELTG[JJ] = EKONDW[I];
            PLTG[JJ] = A3;
            K1 = NN2[I];
            PLTG[K1] = PW[I];
            ELTG[K1] = EWAUS[I];
            
            if (A1 == 0.0 || A2 == 0.0)     goto label27;
            K1 = NBLTG[I,1];
            if (K1 == 0) goto label26;
            ELTG[K1] = DTS [I];
            PLTG[K1] = PW[I];
            
            if (QBZWM[I] != 0.0)    GLTG[K1] = QBZWM[I];
            if (KRUECK[I] == 0) GWAS[I] = GWAS[I] - GLTG[K1];
            if (KRUECK[I] == 1) GWAS[I] = GWAS[I] + GLTG[K1];
            goto label26;
            
        label163:
            EWAUS[I] = VISUM (PW[I],TWAUS[I],-11);
            goto label161;
            
        label57:
            TWAUS[I] = VISUM (PW[I-1],A2,23);
            
        label55:
            K1 = NBLTG[I,1];
            A3 = PLTG[K1];
            if (A3 == 0.0) goto label27;
            A4 = TWAUS[I]+DTS[I];
            EKONDW[I] = VISUM (A3,A4,21);
            DEKOND[I] = EKONDW[I]-EWAUS[I];
            goto label34;
            
        label17:
            A3 = PW[I];
            EWAUS[I] = VISUM (A3 ,TWAUS[I],-21);
            EKONDW[I] = VISUM (A3 ,TWAUS[I],-11);
            DEKOND[I] = EKONDW[I] - EWAUS[I];
            goto label34;
            
        label18:
            GWAS[I] = QBZWM[I];
            EWAUS[I]= DTS[I];
            NN1[I]= NN2[I];
            goto label26;
            
        label19:
            for(K1 = 1; K1 <= 8; K1++)      //DO 167 K1 = 1,8
            {
                K2 = NBLTG[I,K1];
                if (K2 == 0) goto label58;
                if (K2 == IDRUCK && PDRUCK > 0.0) PW[I] = PDRUCK;
                PLTG[K2] = PW[I];
            }   //167 CONTINUE
            goto label59;
            
        label20:
            if (PLTG[II] == 0.0) goto label27;
            if (A1 == 0.0) goto label27;
            T1 = VISUM(A1,A2,03);
            V1 = VISUM(A1,T1,00);
            M1 = NN2[I];
            Z1 = PLTG[M1];
            Z2 = ELTG[M1];
            V2 = 0.0;
            if (Z1 == 0.0 || Z2 == 0.0) goto label1020;
            T2 = VISUM(Z1,Z2,03);
            V2 = VISUM(Z1,T2,00);
            
        label1020:
            if (V2 == 0.0) V2 = V1;
            V = (V1 + V2)/2.0;
            if (K == 1) goto label1021;
            if (PWT[I] != 0.0) goto label1021;
            SSTEUV = SSTEU[I];
            
            if (GLTG[KK] != 0.0) SSTEU[I] = QBZWM[I]* Math.Pow(GLTG[KK],2.0)*V;
            SSTEU[I] = (SSTEUV+SSTEU[I])/2.0;
            
            if ((A1-SSTEU[I])/A1 < 0.4) SSTEU[I] = A1*0.4;
            PW[I] = A1 - SSTEU[I];
            goto label1022;
            
        label1021:
            if (K == 1 && PWA[I] < 0.0) SSTEU[I] = A1-A1*(1.0+PWA[I]/100.0);
            if (K > 1 && PWT[I] < 0.0) SSTEU[I] = A1-A1*(1.0+PWT[I]/100.0);
            PW[I] = A1 - SSTEU[I];
            
            if (GLTG[KK] != 0.0) QBZWM[I] = SSTEU[I]/(Math.Pow(GLTG[KK],2.0)*V);
            
        label1022:
            K9VOR = 15;
            UWA046(0);
            
            if (A3 < PW[I]) goto label50;
            EKONDW[I] = VISUM (A3,TWAUS[I],21);
            
            if (DTK[I] == 0.0) goto label1000;
            TWAUS[I] = DTK[I]+ 273.15;
            goto label1008;
            
        label1000:
            TWAUS[I] = TWAUS[I] - DEKOND[I];
            
        label1008:
            A4 = UW0011 (PW[I],1);
            if (TWAUS[I] > A4) goto label1001;
            K9VOR = 20;
            sw16.WriteLine(" ***********KREISLAUF WARNING*** NR.{0}", K9VOR.ToString().PadLeft(3));
            TWAUS[I] = A4 + 0.1;
            
        label1001:
            EWAUS[I] =VISUM (PW[I],TWAUS[I],01);
            goto label34;
            
        label21:
            if (NEBZW == 1) goto label151;
            
        label221:
            TWAUS[I] = TWAUS[I-1];
            EWAUS[I] = EWAUS[I-1];
            if(KAUSLF[I-1] == 0) goto label27;
            goto label26;
            
        label151:
            if (A1 == 0.0 || A2 == 0.0) goto label27;
            EWAUS[I] = A2;
            PW[I] = A1;
            goto label26;
            
        label222:
            if (NEBZW == 0) goto label221;
            if (A1 == 0.0) goto label27;
            if (K == 1 && PWA[I] == 0.0) PW[I] = A1;
            if (K == 2 && PWT[I] == 0.0) PW[I] = A1;
            I11 = NN2[I];
            
            if (KRUECK[I] == 1 && QBZWM[I] != 0.0) GLTG[I11] = QBZWM[I];
            EWAUS[I] = DTS[I];
            
            if (DTK[I] != 0.0) goto label223;
            TWAUS[I] = VISUM(PW[I],EWAUS[I],03);
            
        label224:
            GLTG[II] = 0.0;
            if (KRUECK[I] == 1 || QBZWM[I] == 0.0) goto label26;
            A2 = EWAUS[I];
            NX = I;
            
        label225:
            NX = NX - 1;
            if (NX <= IHENDE) goto label27;
            if (NTYP[NX] != 6) goto label225;
            A1 = EWAUS[NX];
            if (A1 == 0.0 || A2 == 0.0) goto label27;
            if (A2-A1 > 0.0) QBZWM[NX] = QBZWM[I]/(A2-A1);
            IX1 = NN2[NX];
            GLTG[IX1] = QBZWM[NX];
            goto label26;
            
        label223:
            TWAUS[I] = DTK[I] +273.15;
            EWAUS[I] = VISUM(PW[I],TWAUS[I],01);
            DTS[I] = EWAUS[I];
            goto label224;
            
        label1023:
            if (A1 == 0.0) goto label27;
            T = VISUM(A1,A2,03);
            V = VISUM(A1,T,00);
            if (K == 1) goto label1024;
            if (PWT[I] != 0.0) goto label1024;
            SSTEUV = SSTEU[I];
            if (GLTG[KK] != 0.0) SSTEU[I] = QBZWM[I]* Math.Pow(GLTG[KK],2.0)*V;
            SSTEU[I] = (SSTEUV+SSTEU[I])/2.0;
            if ((A1-SSTEU[I])/A1 < 0.4) SSTEU[I] = A1*0.4;
            PW[I] = A1 - SSTEU[I];
            goto label1025;
            
        label1024:
            if (K == 1 && PWA[I] < 0.0) SSTEU[I] = A1 - A1*(1.0+PWA[I]/100.0);
            if (K > 1 && PWT[I] < 0.0) SSTEU[I] = A1 - A1*(1.0+PWT[I]/100.0);
            PW[I] = A1 - SSTEU[I];
            if (GLTG[KK] != 0.0) QBZWM[I] = SSTEU[I]/(Math.Pow(GLTG[KK],2.0)*V);
            
        label1025:
            A3 = PW[I];
            TWAUS[I] = DTK[I]/100.0;
            EKONDW[I] = SIEDI(A3);
            goto label1001;
            
        label27:
            NWEICH = 1;
            
            if (NEBZW != 1) goto label1;
            if (A1 != 0.0 && A2 != 0.0) goto label59;
            goto label1;
            
        label65:
            sw16.WriteLine(" ***********KREISLAUF WARNING*** NR.{0}", K9VOR.ToString().PadLeft(3));
            if (K9VOR != 18)  UWA012();
            goto label131;
            
        label61:
            NZAEL3 = 0;
            IKL = 0;
            ISPT = 0;
            PSPT = 0.0;
            NZUWA = 0;
            PULVOR = 0.0;
            
            if (NDRUCK == 0) goto label64;
            L = NDRUCK;
            if (KRUECK[L] != 7) goto label64;
            if (PDRUCK <= 0.0) goto label64;
            if (IHENDE == INENDE) goto label601;
            DP = 0.0;
            II = IHENDE + 1;
            
            for(I = II; I <= INENDE; I++)   //DO 600 I=II,INENDE
            {
                if (KRUECK[I] != 7) continue;
                K1 = NN1[I];
                K2 = NN2[I];
                DP = DP + PLTG[K1] - PW[I];
            }   //600 CONTINUE
            
        label601:
            PW[L] = PDRUCK + DP;
            SSTEU[L] = PW[L];
            if (K == 1) PWA[L] = PW[L];
            if (K == 2) PWT[L] = PW[L];
            
        label64:
            NZAEL3 = NZAEL3 + 1;
            K9VOR = 18;
            if (LIGHT[2] == 1)   UWA012();
            if (NZAEL3 >= 52)   goto label65;
            KAUSL3 = 0;
            NEBZW = 0;
            WAUFW = 0.0;
            IX10 = 0;
            
            for(I = 1; I <= IHENDE; I++)    //DO 2062 I=1,IHENDE
            {
                for(II = 1; II <= 8; II++)      //DO 1062 II=1,8
                {
                    L = NBLTG[I,II];
                    if (L == 30 || L == 27 || L == 28 || L == 29) NBLTG[I,II] = 0;
                    if (L == 30 || L == 27 || L == 28 || L == 29)
                    {
                        GLTG[L] = 0.0;
                        ELTG[L] = 0.0;
                        PLTG[L] = 0.0;
                    }   //endif
                }   //1062 CONTINUE
            }   //2062 CONTINUE
            I = IHENDE;
            GFD = GFDE[1];
            GWAS[I] = GFD;
            GW = GFD;
            EVOR = EWAUS[I-1];
            PVOR = PW[I-1];
            if (NTYP[I-1] == 18) EVOR = EWAUS[I-2];
            if (NTYP[I-1] == 18) PVOR = PW[I-2];
            
        label71:
            JJ = N2[I];
            II = N1[I];
            NTYP[I] = NTYP0[I];
            GN1 = 0.0;
            GN2 = 0.0;
            EN1 = 0.0;
            EN2 = 0.0;
            
            if (II == 0) goto label101;
            GN1 = GLTG[II];
            EN1 = ELTG[II];
            N = NTYP[I] + 1;
            if (N != 2) goto label202;
            if (NZAEL3 == 1 && PLTG[33] > 0.0) GLTG[33] = 0.0;
            if (NZAEL3 == 1 && PLTG[34] > 0.0) GLTG[34] = 0.0;
            if (NZAEL3 == 1 && LIGHT[9] != 7 && (II == 33 || II == 34))
                II = KREIHE[I];
            N1[I] = II;
            if (II == 33 || II == 34) A3 = PEMIN;
            if (II == 33 || II == 34) goto label201;
            
            UWA046(0);
            if (EKONDW[I] == 0.0) goto label201;
            A3 = EKONDW[I];
            
        label201:
            PW[I] = A3;
            if (I > IHENDE) goto label4201;
            if (II == 33 || II == 34) goto label3201;
            if (PLTG[II]-DPLTG[II]-DTK[I] >= PEMIN) goto label4201;

            PW[I] = PEMIN;
            if (LIGHT[9] == 7) 
                sw16.WriteLine(" DRUCK IN DER ANZAPFLEITUNG ZUM ENTGASER UEBERPRUEFEN{0}{1}{2}{3}{4}{5}{6} ", II.ToString().PadLeft(5),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(DPLTG[II],4).ToString().PadLeft(12),Math.Round(DTK[I],4).ToString().PadLeft(12),Math.Round(A3,4).ToString().PadLeft(12),Math.Round(EKONDW[I],4).ToString().PadLeft(12),Math.Round(PEMIN,4).ToString().PadLeft(12));
            //999 FORMAT(1H ," DRUCK IN DER ANZAPFLEITUNG ZUM ENTGASER UEBERPRUEFEN", 
            //1 I5,6F12.4)
            if (LIGHT[9] == 7) goto label4201;
            GLTG[II] = 0.0;
            if (PLTG[33]-DPLTG[33]-DTK[I] >= PEMIN) goto label1201;
            if (PLTG[34]-DPLTG[34]-DTK[I] >= PEMIN) goto label2201;
            goto label4201;
            
        label1201:
            N1[I] = 33;
            II = 33;
            goto label4201;
        
        label2201:
            N1[I] = 34;
            II = 34;
            goto label4201;
            
        label3201:
            IZ1 = KREIHE[I];
            if (NZAEL3 < 15 && PLTG[IZ1]-DPLTG[IZ1]-DTK[I] < PEMIN)
                DPLTG[IZ1] = DPLTG[IZ1]*0.9;

            if (PLTG[IZ1]-DPLTG[IZ1]-DTK[I] < PEMIN) 
                goto label4201;

            if (LIGHT[9] == 7) 
                sw16.WriteLine(" DRUCK IN DER ANZAPFLEITUNG ZUM ENTGASER UEBERPRUEFEN{0}{1}{2}{3}{4}{5}{6} ", IZ1.ToString().PadLeft(5),
                    Math.Round(PLTG[IZ1],4).ToString().PadLeft(12),Math.Round(DPLTG[IZ1],4).ToString().PadLeft(12),Math.Round(DTK[I],4).ToString().PadLeft(12),
                    Math.Round(A3,4).ToString().PadLeft(12),Math.Round(EKONDW[I],4).ToString().PadLeft(12),Math.Round(PEMIN,4).ToString().PadLeft(12));
            if (LIGHT[9] == 7) goto label4201;
            GLTG[II] = 0.0;
            II = IZ1;
            N1[I] = II;
            PW[I] = PLTG[II] - DPLTG[II] - DTK[I];
            if (EKONDW[I] > 0.0) PW[I] = EKONDW[I];
        
        label4201: 
            TWAUS[I] = UW0011(PW[I],1);
            EWAUS[I] = VISUM(PW[I],TWAUS[I],21);
            if (JJ == 0) goto label101;
            PLTG[JJ] = PW[I];
            ELTG[JJ] = EWAUS[I];
            if (IPUMP[I] == 1) 
                ELTG[JJ] = VISUM(PW[I],TS,-11);
            goto label101;
            
        label202:
            if (N != 3 && N != 22) goto label203;
            UWA046(0);
            if (JJ != 0) PLTG[JJ] = A3;
            if (DTK[I] == 0.0) EKONDW[I] = VISUM(A3,TWAUS[I],21);
            if (DTK[I] == 0.0 && JJ != 0) ELTG[JJ] = EKONDW[I];
            TWAUS[I] = TWAUS[I] - DTS[I];
            QBZWM[I] = VISUM(PW[I],TWAUS[I],21);
            goto label101;
            
        label203:
            if (N != 20) 
                goto label101;
            if (KATZE1[I] == 1 || KATZE1[I] == 2) 
                goto label101;
            UWA046(0);
            EKONDW[I] = VISUM(A3,TWAUS[I],21);
            
            if (DTK[I] > 0.0) TWAUS[I] = DTK[I] + 273.15;
            if (DTK[I] != 0.0) goto label204;
            TWAUS[I] = TWAUS[I] - DEKOND[I];
            A4 = UW0011(PW[I],1);
            if (TWAUS[I] > A4) goto label204;
            K9VOR = 20;
            
            sw16.WriteLine(" KRLF-WARNING  {0}{1}{2}{3}{4}{5} ", K9VOR.ToString().PadLeft(2),PW[I].ToString("0.00000E+0").PadLeft(13),
                A4.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),TWAUS[I].ToString("0.00000E+0").PadLeft(13),DEKOND[I].ToString("0.00000E+0").PadLeft(13));
            //205 FORMAT(1H, 14HKRLF-WARNING ,I2,5E13.5)
            TWAUS[I] = A4 + 0.1;
            DEKOND[I] = UW0011(A3,1) - TWAUS[I];
            
        label204:
            EWAUS[I] = VISUM(PW[I],TWAUS[I],01);
            ELTG[JJ] = EKONDW[I];
            PLTG[JJ] = A3;
            M1 = NN2[I];
            ELTG[M1] = EWAUS[I];
            
        label101:
            if (JJ == 0) goto label102;
            GN2 = GLTG[JJ];
            EN2 = ELTG[JJ];
            PN2 = PLTG[JJ];
            
        label102:
            EAUSEL = EWAUS[I];
            UWA048(I);
            N = NTYP[I]+1;
            goto label87;
            
        label83:
            EAUSEL = EVOR + DTK[I];
            
        label84:
            if (JJ == 0) goto label103;
            GLTG[JJ] = GN2;
            ELTG[JJ] = EN2;
            
        label103:
            if (II != 0) GLTG[II] = GN1;
            ENTD = Math.Abs (EWAUS[I] - EAUSEL);
            if (ENTD > 0.050) KAUSL3 = 9;

            if (LIGHT[2] == 4 && KAUSL3 == 9 || LIGHT[9] == 7 && NZAEL3 > 45 && KAUSL3 == 9)
                sw16.WriteLine(" ++KRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}", NZAEL3.ToString().PadLeft(5),I.ToString().PadLeft(5),NTYP[I].ToString().PadLeft(5),EAUSEL.ToString("0.00000E+0").PadLeft(13),EWAUS[I].ToString("0.00000E+0").PadLeft(13),EVOR.ToString("0.00000E+0").PadLeft(13),EN1.ToString("0.00000E+0").PadLeft(13),EN2.ToString("0.00000E+0").PadLeft(13),GW.ToString("0.00000E+0").PadLeft(13));

            if (ENTD < 0.001) EAUSEL = EWAUS[I];
            EWAUS[I] = EAUSEL;
            if (NTYP[I] != 8) goto label85;
            K1 = NN1[I];
            K2 = NN2[I];
            if (I > IHENDE && (K1 == 0 || K2 == 0)) goto label85;
            A3 = GWAS[I-1];
            if (I > IHENDE && IRUECK == 0) A3 = GLTG[K2];
            if (I > IHENDE && IRUECK == 7) A3 = GLTG[K2];
            if (I > IHENDE && IRUECK == 1) A3 = GLTG[K1];
            A1 = Math.Abs(GW-A3);
            A2 = 0.001;
            if (GW > 10.0) A2 = GW/1000.0;
            if (A1 > A2) KAUSL3 = 9;
            if (LIGHT[2] == 4 && KAUSL3 == 9 || LIGHT[9] == 7 && NZAEL3 > 45 && KAUSL3 == 9)
                sw16.WriteLine(" ++KRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}", NZAEL3.ToString().PadLeft(5),I.ToString().PadLeft(5),NTYP[I].ToString().PadLeft(5),GW.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),GN2.ToString("0.00000E+0").PadLeft(13),SUGL.ToString("0.00000E+0").PadLeft(13),A1.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13));
            goto label85;
            
        label70:
            if (NHEIZ != 1) goto label10070;
            A2 = 0.0;
            if (GN1 != 0.0) A2 = Math.Abs((GN1-GLTG[II])/GN1);
            if (A2 > 0.0001 && Math.Abs(GN1-GLTG[II]) > 0.001) KAUSL3 = 9;
            goto label11070;
            
        label10070:
            if (Math.Abs(GN1-GLTG[II]) > 0.001) KAUSL3 = 9;
            
        label11070:
            if (LIGHT[2] == 4 && KAUSL3 == 9 || LIGHT[9] == 7 && NZAEL3 > 45 && KAUSL3 == 9)
                sw16.WriteLine(" ++KRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}", NZAEL3.ToString().PadLeft(5),I.ToString().PadLeft(5),NTYP[I].ToString().PadLeft(5),GN1.ToString("0.00000E+0").PadLeft(13),GLTG[II].ToString("0.00000E+0").PadLeft(13),GN2.ToString("0.00000E+0").PadLeft(13),GLTG[JJ].ToString("0.00000E+0").PadLeft(13),GLTG[K2].ToString("0.00000E+0").PadLeft(13),GW.ToString("0.00000E+0").PadLeft(13));
            if (II != 0) GLTG[II] = GN1;
            if (JJ != 0) GLTG[JJ] = GN2;
            
        label85:
            if (NEBZW == 1) goto label86;
            I=I-1;
            if (I == 1) goto label66;
            if (I == 0) goto label72;
            EVOR =EWAUS [I-1];
            
            if(I-1 > 1 && ((KKONDP == 1 && I-1 < KKENTG) || KPW[I-1] == 1))
                PW[I-1] = UW0011(TWAUS[I-1],2);
            PVOR = PW[I-1];
            if (NTYP[I-1] != 18) goto label66;
            EVOR = EWAUS[I-2];
            if ((KKONDP == 1 &&(I-2) < KKENTG) || KPW[I-2] == 1)
                PW[I-2] = UW0011(TWAUS[I-2],2);
            PVOR = PW [I-2];
            
        label66:
            GWAS[I] = GW;
            goto label71;
            
        label72:
            if (IHENDE == INENDE) goto label73;
            I = IHENDE;
            IRETK= IHENDE;
            NEBZW = 1;
            
        label74:
            IRETK = IRETK + 1;
            if (IRETK > INENDE) goto label73;
            K1 = 0;
            
        label752:
            I = I + 1;
            K1 = K1 + 1;
            if (I > INENDE) I = IHENDE +1;
            if (KREIHE[I] == IRETK) goto label751;
            K9VOR = 19;
            if (KREIHE[I] > INENDE || KREIHE[I] <= IHENDE) goto label50;
            if (K1 > 100) goto label50;
            goto label752;
            
        label751:
            K1 = NN1 [I];
            K2 = NN2 [I];
            if (K1 == 0) goto label753;
            GW = GLTG [K1];
            EVOR = ELTG[K1];
            PVOR = PLTG[K1];
            
        label753:
            IRUECK = KRUECK[I];
            if (IRUECK == 1) GW = GLTG[K2];
            if (NTYP[I] != 8) goto label71;
            JJ = NBLTG[I,1];
            if (JJ == 0 || VERLE[I] == 0.0) goto label71;
            if (VERLE[I] > 0.0) GLTG[JJ] = GW*VERLE[I]/100.0;
            if (VERLE[I] > 0.0) goto label71;
            GLTG[JJ] = 0.0;
            IZ9 = N2[I];
            if (IZ9 == 0) goto label71;
            GLTG[IZ9] = -GW*VERLE[I]/100.0;
            goto label71;
            
        label86:
            if (IRUECK == 1) goto label754;
            GWAS[I]= GW;
            if (K2 == 0) goto label74;
            GLTG[K2] = GW;
            
        label755:
            ELTG[K2] = EAUSEL;
            goto label74;
            
        label754:
            GWAS[I] = GLTG[K2];
            GLTG[K1] = GW;
            goto label755;
            
        label87:
            //goto label(300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,302,322,1123),
            if(N == 1)      goto label300;
            if(N == 2)      goto label301;
            if(N == 3)      goto label302;
            if(N == 4)      goto label303;
            if(N == 5)      goto label304;
            if(N == 6)      goto label305;
            if(N == 7)      goto label306;
            if(N == 8)      goto label307;
            if(N == 9)      goto label308;
            if(N == 10)      goto label309;
            if(N == 11)      goto label310;
            if(N == 12)      goto label311;
            if(N == 13)      goto label312;
            if(N == 14)      goto label313;
            if(N == 15)      goto label314;
            if(N == 16)      goto label315;
            if(N == 17)      goto label316;
            if(N == 18)      goto label317;
            if(N == 19)      goto label318;
            if(N == 20)      goto label319;
            if(N == 21)      goto label302;
            if(N == 22)      goto label322;
            if(N == 23)      goto label300;
            if(N == 24)      goto label1123;
            
        label300:
            if (NEBZW == 1) goto label78;
            GABDK = GW - SUGL;
            goto label85;
            
        label78:
            GW = GW+SUGL;
            goto label85;

        label301:
            if (JJ == 0) goto label10301;
            if (QBZWM[I] > 0.0) GLTG[JJ] = QBZWM[I];
            if (QBZWM[I] < 0.0) GLTG[JJ] = GFD - GFD*(1.0+QBZWM[I]/100.0);
            EN2 = ELTG[JJ];
            GN2 = GLTG[JJ];
            
        label10301:
            A1 = EAUSEL - EVOR;
            A2 = SUQL - SUGL*EAUSEL;
            A3 = EN1 - EAUSEL - VERLE[I];
            if (KATZE2[I] == 2) A3 = (EN1-EAUSEL)*VERLE[I];
            if (NEBZW == 1 && IRUECK == 0) goto label3301;
            GN1 = ((GW-SUGL)*A1-A2+GN2*(EN2-EVOR))/(A3+A1);
            if (GN1 < 0.0) goto label1301;
            GW = GW - GN1 - SUGL + GN2;
            goto label70;
            
        label1301:
            GN1 = 0.0001;
            EAUSEL = (SUQL+(GW-SUGL)*EVOR-GN2*(EN2-EVOR))/GW;
            GW = GW - SUGL + GN2;
            if (EAUSEL <= 0.0) EAUSEL = EWAUS[I];
            if (EAUSEL > 300.0) EAUSEL = EWAUS[I];
            PW[I] = PSTR(EAUSEL);
            EWAUS[I] = VISUM(PW[I],TWAUS[I],-21);
            IX2 = I + 1;
            
            for(IX1 = IX2; IX1 <= IHENDE; IX1++)    //DO 2301 IX1 = IX2,IHENDE
            {
                if (NTYP[IX1] == 3 || NTYP[IX1] == 18) goto label70;
                PW[IX1] = PW[I];
                if (NTYP[IX1] != 13) continue;
                if (QBZWM[IX1] == 0.0) continue;
                A5 = VISUM(PW[IX1-1],A6,-20);
                PW[IX1] = PW[IX1-1] + QBZWM[IX1]/A5/10000.0;
            }   //2301 CONTINUE
            goto label70;

        label3301:
            GN1 = (GW*A1-A2+GN2*(EN2-EVOR))/A3;
            if (GN1 < 0.0) goto label4301;
            GW = GW + GN1 + SUGL - GN2;
            goto label70;
            
        label4301:
            GN1 = 0.0001;
            EAUSEL = (SUQL + GW*EVOR-GN2*(EN2-EVOR))/(GW+SUGL);
            if (EAUSEL <= 0.0) EAUSEL = EWAUS[I];
            if (EAUSEL > 300.0) EAUSEL = EWAUS[I];
            PW[I] = PSTR(EAUSEL);
            EWAUS[I] = VISUM(PW[I],TWAUS[I],-21);
            GW = GW + SUGL - GN2;
            goto label70;

        label302:
            if (DTK[I] == 0.0) goto label340;
            EN2 = VISUM (PVOR,EVOR,23);
            EN2 = EN2 + DTK[I];
            A1 = UW0011(PN2,1);
            if (EN2 > A1) EN2 = A1;
            EN2 = VISUM (PN2,EN2,21);
            
        label340:
            if (JJ != 0) ELTG[JJ] = EN2;
            if(JJ == 0) EN2 = EKONDW[I];
            if (IPUMP[I] == 1 && (NZAEL3 > 3 || KAUSL3 == 0)) goto label1302;
            A4 = QBZWM[I];
            EWAUS[I] = A4;
            A1 = A4 - EVOR;
            A2 = SUGL*EN2-SUQL;
            A3 = EN1-EN2-VERLE[I];
            if (KATZE2[I] < 2) goto label174;
            A2 = A2*VERLE[I];
            if (KATZE2[I] == 3) goto label175;
            A3 = (EN1-EN2)*VERLE[I];
            goto label174;
            
        label175:
            A3 = (EN1-EN2-DTVERL)*VERLE[I];
            
        label174:
            if (JJ == 0) goto label79;
            GN1 =(GW*A1+A2)/A3;
            GN2 = GN1 + SUGL;
            if (GN1 >= 0.0) goto label70;
            if (DTK[I] != 0.0) goto label10174;
            Z1 = (GW*(EVOR+DTS[I])+SUQL)/(GW+SUGL);
            if (Z1 <= 0.0) Z1 = EN2;
            Z4 = PW[I];
            if (Z4 > 225.0) Z4 = 225.0;
            Z3 = SIEDI(Z4);
            if (Z1 > Z3) Z1 = Z3 - 5.0;
            Z2 = PSTR(Z1);
            EWAUS[I] = Z1 - DTS[I];
            if (EWAUS[I] < EVOR) EWAUS[I] = EVOR;
            TWAUS[I] = VISUM(PW[I],EWAUS[I],03);
            EAUSEL = EWAUS[I];
            PLTG[JJ] = Z2;
            ELTG[JJ] = Z1;
            GN1 = 0.0001;
            GN2 = GN1 + SUGL;
            goto label70;
            
        label10174:
            if (GW != 0.0) EWAUS[I] = (SUQL-SUGL*EN2+GW*EVOR)/GW;
            if (EWAUS[I] < EVOR) EWAUS[I] = EVOR;
            Z4 = PW[I];
            if (Z4 > 225.0) Z4 = 225.0;
            Z1 = SIEDI(Z4);
            if (EWAUS[I] > Z1) EWAUS[I] = Z1;
            EAUSEL = EWAUS[I];
            TWAUS[I] = VISUM(PW[I],EWAUS[I],03);
            GN1 = 0.0001;
            GN2 = GN1 + SUGL;
            Z1 = EAUSEL+DTS[I];
            Z2 = PSTR(Z1);
            PLTG[JJ] = Z2;
            Z1 = VISUM(PVOR,EVOR,23) + DTK[I];
            ELTG[JJ] = VISUM(Z2,Z1,21);
            goto label70;
            
        label79:
            if (NEBZW == 1) goto label80;
            
        label756:
            GN1 =((GW-SUGL)*A1+ A2)/(A3+A1);
            if (GN1 < 0.0) goto label330;
            GW0 = GW;
            GW = GW - GN1 - SUGL;
            
        label81:
            EAUSEL = EWAUS[I];
            
            if (GW0 > 0.0) EAUSEL = (GN1+SUGL)*(EN2+DEKOND[I]-A4)/GW0+A4;
            EWAUS[I] = EAUSEL;
            goto label70;
            
        label80:
            if (IRUECK == 1) goto label756;
            GN1 = (GW*A1+A2)/A3;
            if (GN1 < 0.0) goto label330;
            GW = GW+GN1+SUGL;
            GW0 = GW;
            goto label81;
            
        label330:
            GN1 = 0.0001;
            Z2 = GW - SUGL;
            Z1 = EN2;
            if (GW > 0.0) Z1 = (SUQL+Z2*EVOR+Z2*DTS[I])/GW;
            if (Z1 <= 0.0) Z1 = EN2;
            Z4 = PW[I];
            if (Z4 > 225.0) Z4 = 225.0;
            Z3 = SIEDI(Z4);
            if (Z1 > Z3) Z1 = Z3 - 5.0;
            EN2 = Z1;
            Z2 = PSTR(Z1);
            A4 = Z1 - DTS[I];
            
            if (A4 < EVOR) A4 = EVOR;
            QBZWM[I] = A4;
            TWAUS[I] = VISUM(PW[I],A4,03);
            Z1 = UW0011(Z2,1);
            UWA047(Z2,PW[I],ref Z1,0.6, ref DEKOND[I]);
            GN1 = 0.0001;
            GW0 = GW;
            GW = GW - SUGL;
            goto label81;

        label1302:
            A3 = EN1 - EN2 - VERLE[I];
            if (KATZE2[I] == 2) A3 = (EN1 - EN2)*VERLE[I];
            A2 = SUQL - SUGL*EN2;
            if (KATZE2[I] == 2) A2 = A2*VERLE[I];
            EAUSEL = (GN1*A3+A2)/GW + EVOR;
            if (JJ == 0 && (NEBZW == 1 && IRUECK == 1 || NEBZW == 0))
                EAUSEL = (GN1*A3+A2)/(GW-SUGL-GN1) + EVOR;
            A3 = VISUM(PW[I],EAUSEL,03);
            TWAUS[I] = A3;
            GN2 = GN1 + SUGL;
            A4 = UW0011(A3+DTS[I],2) + DPLTG[II];
            A4 = (A4+PLTG[II])*0.5;

            if (ISPT == 0) DPSPT = 0.0;
            IZ1 = II;
            IZ3 = IHENDE + 1;
            
            for(L = IZ3; L <= INENDE; L++)      //DO 3302 L=IZ3,INENDE
            {
                IZ2 = NN2[L];
                if (IZ2 == 0) continue;
                if (IZ2 != IZ1) continue;
                IZ1 = NN1[L];
                if (ISPT == 0) DPSPT = DPSPT + PLTG[IZ1] - PLTG[IZ2];
                
                for(IZ4 = 1; IZ4 <= IHENDE; IZ4++)  //DO 2302 IZ4 = 1,IHENDE
                {
                    if (NTYP[IZ4] != 3 && NTYP[IZ4] != 15) 
                        continue;
                    if (IZ1 == N2[IZ4]) goto label4302;
                }   //2302 CONTINUE
            }   //3302 CONTINUE
            Console.WriteLine("SPT NICHT GEFUNDEN EINGABE UEBERPRUEFEN");
            Console.ReadKey();
            Environment.Exit(0);
            
        label4302:
            PLTG[IZ1] = A4 + DPSPT;
            PLTG[II] = A4;
            ISPT = 1;
            PSPT = A4 + DPSPT;
            goto label84;

        label303:
            A4 = QBZWM[I]*430.0;
            A1 = VISUM(PVOR,EVOR,03);
            if (A1 < 0.0) A1 = UW0011(PVOR,1);
            ETA2 = DEKOND[I]/100.0;
            UWA047 (PVOR,PW[I],ref A1,ETA2,ref DTK[I]);
            if (I > IHENDE) goto label3303;
            IX10 = IX10 + 1;
            if (GPMIN[IX10] == 0.0) goto label3303;
            if (GW >= GPMIN[IX10]*IPUMP[I]) goto label3303;
            IX9 = 26 + IX10;
            GLTG[IX9] = GPMIN[IX10]*IPUMP[I] - GW;
            ELTG[IX9] = EVOR + DTK[I];
            PLTG[IX9] = PW[I];
            GW = GPMIN[IX10]*IPUMP[I];
            IX8 = I;
            
        label1303:
            IX8 = IX8 - 1;
            if (NTYP[IX8] != 0 && NTYP[IX8] != 1 && NTYP[IX8] != 6 && NTYP[IX8] != 10) goto label1303;
            
            for(IX7 = 1; IX7 <= 8; IX7++)   //DO 2303 IX7=1,8
            {
                IX6 = NBLTG[IX8,IX7];
                if (IX6 != 0) 
                    continue;
                NBLTG[IX8,IX7] = IX9;
                goto label3303;
            }   //2303 CONTINUE
            
        label3303:
            if (II == 0) goto label5303;
            if (SSTEU[I] <= 0.0) goto label4303;

            A9 = TWAUS[I];
            UWA046(0);
            TWAUS[I] = A9;
            A7 = PLTG[JJ];
            A6 = ELTG[II] - VERLE[I];
            A9 = VISUM(A3,A6,03);
            A8 = VISUM(A3,A9,02);
            A9 = VISUM(A7,A8,04);
            A8 = VISUM(A7,A9,01);
            A9 = (A6-A8)*SSTEU[I]/100.0;
            A8 = A6 - A9;
            EKONDW[I] = A8;
            ELTG[JJ] = A8;

        label4303:
            DTS[I] = ELTG[II] - VERLE[I] - EKONDW[I];
            if (NTYP[I-1] == 18) goto label82;
            A1 = GW*DTK[I]+A4;
            if (PULVOR != 0.0) A1 = A1 + PULVOR;
            if (NEBZW != 1) PULEIS = A1;
            GN2 =(A1+A4)/DTS[I];
            GN1 = GN2;
            goto label88;
            
        label82:
            PULEIS = GW*DTK[I]+DTS[I-1]+A4;
            if (PULVOR != 0.0) PULEIS = PULEIS + PULVOR;
            GN2 =(PULEIS+A4)/DTS[I];
            GN1 = GN2;
            
        label88:
            if(NRMVAE[2] == II) goto label984;
            if (NRMVAE[3] == II) goto label984;
            if (NRMVAE[4] == II) goto label984;
            if (Math.Abs(GN1-GLTG[II]) > 0.001) KAUSL3 = 9;
            goto label83;
            
        label984:
            II = 0;
            JJ = 0;
            goto label83;
            
        label5303:
            if (JJ != 999) goto label83;
            PULVOR = GW*DTK[I];
            if (NTYP[I-1] == 18) PULVOR = GW*DTK[I] + DTS[I-1];
            goto label83;

        label315:
            A4 = QBZWM[I]*430.0;
            A2 = SUGL*(EN1 - VERLE[I]) - SUQL;
            if (SSTEU[I] <= 0.0) goto label1315;

            A9 = TWAUS[I];
            UWA046(0);
            TWAUS[I] = A9;
            A7 = PLTG[JJ];
            A6 = ELTG[II] - VERLE[I];
            A9 = VISUM(A3,A6,03);
            A8 = VISUM(A3,A9,02);
            A9 = VISUM(A7,A8,04);
            A8 = VISUM(A7,A9,01);
            A9 = (A6-A8)*SSTEU[I]/100.0;
            A8 = A6 - A9;
            EKONDW[I] = A8;
            ELTG[JJ] = A8;

        label1315:
            DTS[I] = ELTG[II] - VERLE[I] - EKONDW[I];
            if (NTYP[I-1] == 18) goto label91;
            PULEIS = GW*DTK[I]+A4;
            GN2 =(PULEIS+A4-A2)/DTS[I];
            GN1 = GN2 + SUGL;
            goto label88;
            
        label91:
            PULEIS = GW*DTK[I]+DTS[I-1]+A4;
            GN2 =(PULEIS+A4-A2)/DTS[I];
            GN1 = GN2 + SUGL;
            goto label88;

        label312:
            A1 = VISUM(PVOR,EVOR,23);
            A2 = A1 + DTS[I];
            EKONDW[I] = VISUM(PN2,A2,21);

        label304:
            EN2 = EKONDW[I];
            A4 = EN2;
            if (SUGL > 0.0) A4 = SUQL/SUGL;
            if (A4 < EN2 && NZAEL3 < 5) A4 = EN2/0.95;
            QBZWM[I] = SUGL*(A4-EN2);
            GN2 = SUGL;
            DTK[I] = 0.0;
            if (GW > 0.0) DTK[I] = QBZWM[I]/GW;
            EAUSEL = EVOR + DTK[I];
            if (EAUSEL <= 0.0) EAUSEL = EVOR;
            if ((KKONDP == 1 && I < KKENTG) || KPW[I] == 1)
                PW[I] = PSTR(EAUSEL);
            if (NTYP[I] == 4 && I > IHENDE) goto label84;
            if ((KKONDP == 1 && I < KKENTG) || KPW[I] == 1) goto label84;
            A1 = PW[I];
            if (A1 > 225.0) A1 = 225.0;
            A2 = UW0011(A1,1) - 2.0;
            A4 = VISUM(PW[I],A2,01);
            if (EAUSEL < A4) goto label84;
            if (LIGHT[9] == 7 && IKL == 0 && NTYP[I] == 12)
                sw16.WriteLine("   GRAEDIGKEIT DES KOND-KUEHLERS UEBERPRUEFEN (ELEMENT UWA030{0})", I.ToString().PadLeft(3));
            //10304 FORMAT(1H ,2X,"   GRAEDIGKEIT DES KOND-KUEHLERS UEBERPRUEFEN (ELEMENT UWA030",I3,")")
            IKL = 1;
            EAUSEL = A4;
            A1 = EAUSEL - EVOR;
            A2 = GW*A1;
            if (SUGL > 0.0) EN2 = (SUQL-A2)/SUGL;
            goto label84;

        label305:
            if (NZAEL3 != 1) goto label92;
            GN2 = SUGL;
            EN2 = EKONDW[I];
            goto label93;
            
        label92:
            if (EVOR == DTK[I]) goto label94;
            if (SSTEU[I] == 999.0) goto label95;
            Z1 = PW[I-1];
            if (NEBZW == 1) Z1 = PLTG[K1];
            A2 = VISUM (Z1,EVOR,23);
            A4 = A2 + DTS[I];
            EN2 = VISUM (PN2,A4,01);
            A5 = VISUM(PN2,A6,-11);
            if (EN2 < A5) EN2 = A5;
            EKONDW[I] = EN2;
            
        label95:
            DTK[I] = EVOR;
            
        label94:
            GN1 = GN2 - SUGL;
            SUQL = GN1*QBZWM[I]+SUQL;
            
        label93:
            EAUSEL = (SUQL-GN2*EN2)/GW;
            if (KATZE2[I] >= 2) EAUSEL = EAUSEL*VERLE[I];
            EAUSEL = EAUSEL+EVOR;
            goto label84;

        label306:
            if(VERLP[I] != 0.0) GW = GFD*VERLP[I]/100.0;
            if (NEBZW != 1) goto label3306;
            IX1 = NN2[I];
            if (IX1 != NRMVAE[1]) goto label3306;
            NX = I;
            NY = I;
            
        label1306:
            NX = NX + 1;
            if (NX > INENDE) goto label2306;
            if (NN1[NX] != IX1) goto label1306;
            IX1 = NN2[NX];
            NY = NX;
            goto label1306;
            
        label2306:
            NHEIZ = 1;
            GHEIZ = EWAUS[NY] - EWAUS[I];
            IX3 = 0;
            A5 = 0.0;
            NX = I;
            
        label4306:
            NX = NX + 1;
            if (NX > INENDE) goto label5306;
            if (NTYP[NX] == 22) goto label5306;
            if (NTYP[NX] != 2 && NTYP[NX] != 21) goto label4306;
            IX1 = N1[NX];
            IX2 = N2[NX];
            IX3 = IX3 + 1;
            A5 = A5 + ELTG[IX1] - ELTG[IX2];
            goto label4306;
            
        label5306:
            if (IX3 > 0) A5 = A5/IX3;
            if (GHEIZ != 0.0) GHEIZ = A5/GHEIZ;
            
        label3306:
            if (NEBZW == 1) goto label85;
            GABDK = GW;
            goto label85;

        label307:
            if (VERLP[I] != 0.0) GN2 = GW*VERLP[I]/(100.0-VERLP[I]);
            if (KATZE1[I] == 1) GN2 = GFD*VERLP[I]/100.0;
            GW = GW + GN2;
            WAUFW = WAUFW + GW*(EAUSEL-EVOR);
            if (KATZE2[I] <= 1) goto label84;
            if (KATZE2[I] != 2) goto label1307;
            EN2 = EWAUS[I]*VERLE[I];
            goto label3307;
            
        label1307:
            A1 = VISUM(PN2,EWAUS[I],03);
            if (K == 2 && KATZE2[I] < 4) goto label2307;
            DEKOND[I] = VERLE[I]*GN2/(A1-300.0);
            EN2=EWAUS[I]-VERLE[I];
            goto label3307;
            
        label2307:
            VERLE[I] = 0.0;
            if (GN2 != 0.0) VERLE[I] = DEKOND[I]*(A1-300.0)/GN2;
            EN2 = EWAUS[I] - VERLE[I];
            
        label3307:
            if (I != NDRUCK) goto label84;
            A4 = PW[I];
            if (A4 > 225.55) A4 = 225.55;
            A1 = VISUM(A4,A2,-21);
            if (EN2 > A1+1.0) goto label84;
            A2 = A2 + 0.005;
            EWAUS[I] = VISUM(PW[I],A2,11);
            if (KATZE2[I] == 2) EN2 = EWAUS[I]*VERLE[I];
            if (KATZE2[I] != 2) EN2 = EWAUS[I] - VERLE[I];
            goto label84;

        label308:
            if (NEBZW != 1) goto label96;
            if (IRUECK == 1) goto label96;
            if (VERLP[I] != 0.0) GN2 = GW*VERLP[I]/100.0;
            if(KATZE1[I] == 1) GN2 = GFD*VERLP[I]/100.0;
            if (NN1[I] == 0) GW = 0.0;
            GW = GW + SUGL;
            EAUSEL = EVOR;
            if (GW == 0.0) goto label84;
            EAUSEL = ((GW-SUGL)*EVOR + SUQL)/GW;
            if ((GW-SUGL) < 0.0) EAUSEL = EVOR;
            if ((GW-SUGL) < 0.0 && SUGL > 0.0) EAUSEL = SUQL/SUGL;
            if (JJ == 0) goto label84;
            if (KATZE2[I] == 0) goto label1308;
            GN2 = GW - QBZWM[I];
            if (KATZE1[I] == 1) GN2 = GW - GFDE[1]*VERLP[I]/100.0;
            if (GN2 < 0.0) GN2 = 0.0;
            
        label1308:
            GW = GW - GN2;
            if (GW < 0.0 && NZAEL3 < 4) GW = 0.0;
            
        label97:
            EN2 =EAUSEL;
            goto label84;

        label96:
            A3 = GW;
            if (JJ == 0) goto label98;
            if (VERLP[I] == 0.0)goto label875;
            GN2 = (GW - SUGL + GN2 ) * VERLP[I]/100.0;
            if (KATZE1[I] == 1) GN2 = GFD*VERLP[I]/100.0;
            
        label875:
            if (KATZE2[I] == 1) GN2 = A3;
            if (KATZE2[I] == 1 && VERLP[I] > 0.0) GN2 = A3*VERLP[I]/100.0;
            if (NZAEL3 > 1) A3 = A3 + GN2;
            
        label98:
            GW = A3- SUGL;
            if (GW < 0.0 && NZAEL3 < 4) GW = 0.0;
            if(A3 != 0.0)EAUSEL=(GW*EVOR+SUQL)/A3;
            if (GW <= 0.0 || A3 < 0.0001) EAUSEL = EVOR;
            if (GW <= 0.0 && SUGL > 0.0) EAUSEL = SUQL/SUGL;
            if (NEBZW == 1) goto label97;
            if (I > IHENDE-3) goto label97;
            A5 = PW[I];
            if (PW[I] > 225.0) A5 = 225.0;
            A1 = VISUM(A5,Z1,-21);

            if (EAUSEL > A1 && LIGHT[9] == 7) 
                sw16.WriteLine(" *** KRLF *** DAMPF IN DER VORWAERMSTRECKE ! ELEMENT {0} TYP {1}", I.ToString().PadLeft(3),NTYP[I].ToString().PadLeft(3));
            //68 FORMAT(1H ,"*** KRLF *** DAMPF IN DER VORWAERMSTRECKE ! ELEMENT ",I3," TYP ",I3)
            
            if (EAUSEL > A1) EAUSEL = A1;
            goto label97;

        label309:
            if (KATZE1[I] > 0) goto label5309;
            if (GW > 0.0) EKONDW[I] = QBZWM[I]/GW;
            EAUSEL = EVOR + EKONDW[I];
            if (NEBZW == 1) goto label1310;
            Z1 = PW[I];
            if (Z1 > 225.0) Z1 = 225.0;
            A1 = VISUM(Z1,Z2,-21);
            if (EAUSEL > A1 && LIGHT[9] == 7)
                sw16.WriteLine(" *** KRLF *** DAMPF IN DER VORWAERMSTRECKE ! ELEMENT {0} TYP {1} ", I.ToString().PadLeft(3),NTYP[I].ToString().PadLeft(3));

            if (EAUSEL > A1) EAUSEL = A1;
            
        label1310:
            if (DTS[I] == 0.0) goto label1309;
            EAUSEL = DTS[I];
            goto label2309;
            
        label1309:
            if (DTK[I] == 0.0) goto label84;
            EAUSEL = VISUM(PW[I],UWA003("TABS", DTK[I]),01);
            
        label2309:
            EKONDW[I] = EAUSEL - EVOR;
            if (NEBZW == 1) goto label3309;
            goto label84;

        label3309:
            if (QBZWM[I] == 0.0) goto label84;
            if (EKONDW[I] != 0.0) GW = QBZWM[I]/EKONDW[I];
            if (Math.Abs(GW-GLTG[K1]) > 0.001) KAUSL3 = 9;
            GLTG[K1] = GW;
            goto label84;

        label5309:
            for(IX1 = 1; IX1 <= INENDE; IX1++)  //DO 7309 IX1 = 1,INENDE
            {
                if (NTYP[IX1] != 8) continue;
                
                for(IX2 = 1; IX2 <= 8; IX2++)       //DO 6309 IX2 = 1,8
                {
                    IX3 = NBLTG[IX1,IX2];
                    if (IX3 == 0) continue;
                    if (IX3 == K2) goto label9309;
                }   //6309 CONTINUE
            }   //7309 CONTINUE

            sw16.WriteLine(" DIE LEITUNG {0}KONNTE ALS ZUGEHENDE NEBENLEITUNG IN UWA030EINEM SAMMLER NICHT GEFUNDEN WERDEN", K2.ToString().PadLeft(3));
            //8309 FORMAT(1H ," DIE LEITUNG ",I3,"KONNTE ALS ZUGEHENDE NEBENLEITUNG IN UWA030EINEM SAMMLER NICHT GEFUNDEN WERDEN");
            //STOP
            Environment.Exit(0);
            
        label9309:
            if (KATZE1[I] == 2) goto label11309;
            if (IX1 > IHENDE) goto label10309;
            EAUSEL = EWAUS[IX1-1];
            goto label15309;
            
        label10309:
            IX3 = NN1[IX1];
            EAUSEL = ELTG[IX3];
            goto label15309;
            
        label11309:
            A1 = DTS[I];
            if (NZAEL3 == 1) goto label84;

            if (DTK[I] != 0.0) 
                A1 = VISUM(PW[I],UWA003("TABS", DTK[I]),01);

            A2 = 0.0;
            A3 = 0.0;
            
            for(IX2 = 1; IX2 <= 8; IX2++)   //DO 12309 IX2 = 1,8
            {
                IX3 = NBLTG[IX1,IX2];
                if (IX3 == 0) continue;
                if (IX3 == K2) continue;
                A2 = A2 + GLTG[IX3]*ELTG[IX3];
                A3 = A3 + GLTG[IX3];
            }   //12309 CONTINUE
            
            if (IX1 > IHENDE) goto label13309;
            A4 = GWAS[IX1];
            A5 = EWAUS[IX1-1];
            goto label14309;
            
        label13309:
            IX2 = NN1[IX1];
            A5 = ELTG[IX2];
            IX3 = NN2[IX1];
            A4 = GLTG[IX3];
            
        label14309:
            if (GW != 0.0) EAUSEL = (A4*A1-(A4-A3-GW)*A5-A2)/GW;
            if (EAUSEL < 0.0) EAUSEL = EWAUS[I];
            
        label15309:
            EKONDW[I] = EAUSEL - EVOR;
            if (QBZWM[I] != 0.0) goto label16309;
            goto label84;
            
        label16309:
            if (EKONDW[I] != 0.0) GW = QBZWM[I]/EKONDW[I];
            if (Math.Abs(GW-GLTG[K1]) > 0.001) KAUSL3 = 9;
            GLTG[K1] = GW;
            goto label84;

        label310:
            if (SSTEU[I] == 888.0) goto label99;
            A2 = SUGL*EAUSEL- SUQL;
            A3 = EN1-EAUSEL-VERLE[I];
            GN1 =(QBZWM[I]+A2)/A3;
            if (KATZE2[I] < 2) goto label176;
            A3 = EN1-EAUSEL;
            if (KATZE2[I] == 3) A3 = A3-DTVERL;
            GN1 = (QBZWM[I]*VERLE[I]+A2)/A3;
            
        label176:
            if (NEBZW == 1) goto label99;
            if (GN1 < 0.0) GN1 = 0.0;
            GABDK= GW - GN1 - SUGL;
            goto label70;
            
        label99:
            GW = GN1 + SUGL;
            goto label70;

        label311:
            K8 = NBLTG[I,1];
            A4 = 0.0;
            
            if (K8 == 0) goto label757;
            if (DTK[I] != 0.0 && IRUECK == 0) GLTG[K8] = GW*DTK[I]/100.0;
            if (IRUECK == 1 && DTK[I] != 0.0) GLTG[K8] = GW*DTK[I]/(100.0-DTK[I]);
            if (DTK[I] != 0.0) QBZWM[I] = GLTG[K8];
            A4 = GLTG[K8];
            if (IRUECK == 0) GW = GW - A4;
            SUGL = SUGL - A4;
            SUQL = SUQL - A4*ELTG[K8];
            
        label757:
            A3 = EN1 - EN2 - VERLE[I];
            if (KATZE2[I] < 2) goto label758;
            A3 = EN1 - EN2;
            if (KATZE2[I] == 3) A3 = A3 - DTVERL;
            A3 = A3*VERLE[I];
            
        label758:
            A2 = DTS[I] - EVOR;
            A1 = EAUSEL - EVOR;
            GN1 = (GW*A1+A4*A2-(SUQL-SUGL*EN2))/A3;
            GN2 = GN1 + SUGL;
            if (IRUECK == 1) GW = GW + A4;
            goto label70;

        label313:
            if (DTS[I] != 0.0) goto label1313;
            A2 = VISUM(PVOR,EVOR,03);
            A2 = A2 + DTK[I];
            EAUSEL = VISUM(PVOR,A2,01);
            goto label2313;
        
        label1313:
            EAUSEL = EVOR + DTS[I];
            
        label2313:
            if (KATZE1[I] < 3) goto label84;
            A4 = VISUM(PVOR,EVOR,03);
            A4 = VISUM(PVOR,A4,00);
            if (NEBZW == 0) A4 = VISUM(PVOR,EVOR,23);
            if (NEBZW == 0) A4 = VISUM(PVOR,A4,20);
            if (QBZWM[I] != 0.0) PVOR = PVOR + QBZWM[I]/A4/10000.0;
            A3 = VERLP[I];
            P = PVOR - A3;
            if (A3 > PVOR*0.46) P = 0.46*PVOR;
            A5 = VISUM(P,EAUSEL,03);
            A5 = VISUM(P,A5,00);
            A4 = (A4+A5)*0.5;
            if (K == 1 && KATZE1[I] == 4) A3 = PVOR-PVOR*(1.0-VERLP[I]/100.0);
            if (K == 1 && GWAS[I] > 0.0) SSTEU[I] = A3/GWAS[I]/GWAS[I]/A4;
            if (K == 2) A3 = SSTEU[I]*GWAS[I]*GWAS[I]*A4;
            if (A3 >= PVOR) A3 = PVOR*0.46;
            PW[I] = PVOR - A3;
            if (K == 2) VERLP[I] = A3;
            goto label84;

        label314:
            GN2 =(EVOR-EAUSEL)*GW/DEKOND[I];
            if (GN2 < 0.0) goto label10314;
            GW = GW - GN2;
            GN1 = GN2;
            II = JJ;
            goto label70;
            
        label10314:
            GN2 = 0.0;
            GN1 = 0.0;
            II = JJ;
            EWAUS[I] = EVOR;
            EAUSEL = EVOR;
            goto label70;

        label316:
            goto label85;
            
        label317:
            for(L = 1; L <= 8; L++)     //DO 1317 L=1,8
            {
                I11 = NBLTG[I,L];
                if (I11 == 0) continue;
                if (I11 == IDRUCK && PDRUCK > 0.0) PW[I] = PDRUCK;
                PLTG[I11] = PW[I];
            }   //1317 CONTINUE
            goto label85;

        label318:
            I11 = NBLTG[I,1];
            GN2 = GLTG[I11];
            A1 = VISUM(PVOR,EVOR,03);
            if (A1 < 0.0) A1 = UW0011(PVOR,1);
            ETA2 = DEKOND[I+1]/100.0;
            UWA047(PVOR,PW[I],ref A1,ETA2, ref DTK[I]);
            
            if (VERLP[I] == 0.0) goto label874;
            GN2 = GW*VERLP[I]/(100.0-VERLP[I]);
            if (KATZE1[I] == 1) GN2 = GFD*VERLP[I]/100.0;
            
        label874:
            GW = GW + GN2;
            EAUSEL = EVOR + DTK[I];
            DTS[I] = DTK[I] * GN2;
            EN2 = EAUSEL;
            goto label84;

        label319:
            A1 = EAUSEL - EVOR;
            A2 = SUGL*EN2 - SUQL;
            A3 = EN1 - EN2 - VERLE[I];
            if (KATZE2[I] < 2) goto label1002;
            A2 = A2* VERLE[I];
            if (KATZE2[I] == 3) goto label1003;
            A3 = (EN1 - EN2)*VERLE[I];
            goto label1002;
            
        label1003:
            A3 = (EN1 - EN2-DTVERL) * VERLE[I];
            
        label1002:
            GN1 = (GW*A1 + A2)/A3;
            GN2 = GN1 + SUGL;
            goto label70;

        label1123:
            TWAUS[I] = DTK[I]/100.0;
            EAUSEL = VISUM(PW[I],TWAUS[I],01);
            if (EAUSEL <= EVOR) goto label1125;
            A1 = EAUSEL - EVOR;
            A2 = EAUSEL - EN2;
            A3 = A1/A2;
            if (IRUECK == 1) goto label1124;
            GN2 = GW*A3;
            GW = GW - GN2;
            goto label1126;

        label1124:
            GN2 = GW*A3/(1.0-A3);
            GW = GW + GN2;
            goto label1126;

        label1125:
            GN2 = 0.0;
            EAUSEL = EVOR;
            EWAUS[I] = EVOR;
            TWAUS[I] = VISUM(PW[I],EVOR,03);
            
        label1126:
            GN1 = GN2;
            II = JJ;
            goto label70;

        label320:
            GN1 = 0.0;
            GN2 = 0.0;
            EAUSEL = EVOR;
            goto label84;

        label322:
            if (NEBZW == 0) goto label320;
            if(II == 0) goto label84;
            if (IRUECK == 1) goto label325;
            A3 = GW + SUGL;
            EAUSEL = EVOR;
            if (A3 > 0.0 && SUGL > 0.0) EAUSEL=(GW*EVOR + SUQL)/A3;
            GW = A3 + GN1;
            if (GW < 0.0) goto label324;
            A3 = EAUSEL - EN1;
            if (EAUSEL > DTS[I] && EN1 >= EVOR) goto label324;
            if (EAUSEL < DTS[I] && EN1 <= EVOR) goto label324;
            if (A3 == 0.0) goto label324;
            GN1 = GW*(EAUSEL-DTS[I])/A3;
            if (GN1 < 0.0)goto label324;
            A3 = GW - SUGL;
            if (GN1 >= A3) goto label323;
            EAUSEL = DTS[I];
            goto label328;
            
        label323:
            GN1 = A3;
            if (GW > 0.0) EAUSEL = (GN1*EN1+SUQL)/GW;
            goto label328;
            
        label324:
            GN1 = 0.0;
            goto label328;
            
        label325:
            A3 = GW - SUGL;
            EAUSEL = EVOR;
            if (A3 > 0.0 && SUGL > 0.0) EAUSEL = (A3*EVOR + SUQL)/GW;
            if (EAUSEL <= DTS[I] && EN1 <= DTS[I]) goto label327;
            if (EAUSEL >= DTS[I] && EN1 >= DTS[I]) goto label327;
            EAUSEL = DTS[I];
            GW = (GW*(EAUSEL-EN1)+SUGL*EN1-SUQL)/(EVOR-EN1);
            if (GW < 0.0) goto label326;
            GN1 = GLTG[K2] - GW - SUGL;
            goto label328;
            
        label326:
            GW = 0.0;
            GN1 = (GLTG[K2]*EAUSEL - SUQL)/EN1;
            goto label328;
            
        label327:
            GN1 = 0.0;
            EAUSEL = EVOR;
            
        label328:
            if (Math.Abs(GN1-GLTG[II]) > 0.001) KAUSL3 = 9;
            if (LIGHT[2] == 4 && KAUSL3 == 9 || LIGHT[9] == 7 && NZAEL3 > 45 && KAUSL3 == 9)
                sw16.WriteLine(" ++KRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}", NZAEL3.ToString().PadLeft(5),I.ToString().PadLeft(5),NTYP[I].ToString().PadLeft(5),GN1.ToString("0.00000E+0").PadLeft(13),GLTG[II].ToString("0.00000E+0").PadLeft(13),QBZWM[I].ToString("0.00000E+0").PadLeft(13),GW.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),GLTG[K2].ToString("0.00000E+0").PadLeft(13));
            goto label84;

        label73:
            if (NZAEL3 == 1) goto label64;

            ITABD = 0;
            Z7VOR = 0.0;
            JJ = ANZTRB;
            
        label403:
            II = 1;
            if (JJ > 1) II = IENDST[JJ-1] + 1;
            GTURB = GFDE[JJ];
            IZ4 = 0;
            QARB = 0.0;
            KKK = IENDST[JJ];
            
            for(I = II; I <= KKK; I++)      //DO 110 I = II,KKK
            {
                UWA010 (I,1);
                UWA044 (I,1);
                IZ3 = 0;
                K1 = 0;
                if (E2T[I,1] > E1T[I,1] && KT7 == 1) goto label111;

                if ((KT7 == 4 || KT7 > 7 || KT7 == 3) && GTURB > 0.0)
                    QARB = QARB + GTURB*(E1T[I,1]-E2T[I,1] + ETAI[I]);
                if (DI[I] == 0.0) goto label115;
                
                for(IZ6 = 1; IZ6 <= 10; IZ6++)      //DO 144 IZ6 = 1,10
                {
                    K1 = LABT[IZ6];
                    if (K1 > 48 && K1 < 70) 
                        goto label145;
                    if (K1 == 0) goto label115;
                }   //144 CONTINUE
                K1 = 0;
                goto label115;
                
            label145:
                A2 = 0.0;
                
                for(IZ6 = 1; IZ6 <= 10; IZ6++)  //DO 146 IZ6 = 1,10
                {
                    K3 = LABT[IZ6];
                    if (K3 == 0) goto label147;
                    if (K3 < 41 || K3 > 46) continue;
                    A2 = GLTG[K3];
                    goto label147;
                }   //146 CONTINUE
                
            label147:
                A2 = GTURB -SUMGAB+A2;
                GENTW = SIEDI(XPT[I]);
                GENTW = A2*DI[I]/(XE1T[I+1]-GENTW);
                
                if (GENTW < 0.0) GENTW = 0.0;
                if (Math.Abs(GENTW-GLTG[K1]) > 0.001) KAUSL3 = 9;
                if (LIGHT[2] == 4 && KAUSL3 == 9 || LIGHT[9] == 7 && NZAEL3 > 45 && KAUSL3 == 9)
                    sw16.WriteLine(" ++KRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}", NZAEL3.ToString().PadLeft(5),KAUSL3.ToString().PadLeft(5),K1.ToString().PadLeft(5),GENTW.ToString("0.00000E+0").PadLeft(13),GLTG[K1].ToString("0.00000E+0").PadLeft(13),GTURB.ToString("0.00000E+0").PadLeft(13),SUMGAB.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13),E1T[I+1,1].ToString("0.00000E+0").PadLeft(13));
                GLTG[K1]= GENTW;
                GTURB = GTURB - GENTW;
                
            label115:
                GTURB = GTURB - SUMGAB + SUMGZU;
                XG[I+1] = GTURB;
                
                for(K1 = 1; K1 <= 10; K1++)     //DO 169 K1=1,10
                {
                    K2 = LABT[K1];
                    if (K2 == 0) goto label110;
                    if (K2 < 41 || K2 > 46) goto label1006;
                    GLTG[K2] = GTURB + GLTG[K2];
                    
                label1006:
                    if (K2 == NRMFIE[JJ]) GMFIXI = GTURB;
                }   //169 CONTINUE
                goto label110;
                
            label111:
                for(K1 = 1; K1 <= 10; K1++)     //DO 1007 K1 = 1,10
                {
                    K2 = LZUT[K1];
                    if (K2 == 0) goto label119;
                    if (K2 >= 41 && K2 <= 46) goto label115;
                }   //1007 CONTINUE
                
            label119:
                IZ4 = IZ4 + 1;
                //goto label(120,121),
                if(IZ4 == 1)        goto label120;
                if(IZ4 == 2)        goto label121;
                
            label120:
                GMD1A[JJ] = GTURB;
                goto label122;
                
            label121:
                GMD2A[JJ] = GTURB;
                
            label122:
                if(JJ == 1) WAUFW = WAUFW + GTURB*(E2T[I,1]-E1T[I,1]);
                goto label115;

            label110:
                ;
            }   //110 CONTINUE
            ARBT = (QARB/B - VMECHE[JJ])*ETAGE[JJ];
            if (ANZTRB <= JJ) goto label112;
            if (NITRE[JJ+1] == 7) goto label112;
            if (NITRE[JJ+1] == 8 || NITRE[JJ+1] == 9 || LLTG[8] == 1)
                ARBT = ARBT + ARBTA[JJ+1];
            
        label112:
            GTURBA[JJ] = GTURB;
            ARBTA[JJ] = ARBT;
            if (ETAPKT[4,JJ] == 0.0 || TNPKT[4,JJ] == 0.0) goto label106;
            if (ETAGET[JJ] != 0.0) goto label106;
            if (ARBT < TNPKT[4,JJ]*0.5) ARBT = ARBT/ETAGE[JJ];
            
            for(K1 = 1; K1 <= 4; K1++)      //DO 105 K1 = 1,4
            {
                ANIND[K1] = TNPKT[K1,JJ];
                ZNIND[K1] = ANIND[K1] * (1.0 - ETAPKT[K1,JJ]);
            }   //105 CONTINUE
            X1INT = UH0077 ( ANIND,ZNIND, ref ARBT,4);
            ETAGE[JJ] = 1.0 - (X1INT/ARBT);
            
            if (ARBT >= ANIND[1]) 
                ETAGE[JJ] = ETAPKT[1,JJ];
            
        label106:
            if (ETAGET[JJ] != 0.0) ETAGE[JJ] = ETAGET[JJ];
            if (ANZTRB <= JJ) goto label104;
            if (NITRE[JJ+1] == 7) goto label104;
            if (NITRE[JJ+1] == 8 || NITRE[JJ+1] == 9 || LLTG[8] == 1)
                ETAGE[JJ+1] = ETAGE[JJ];
            
        label104:
            X1INT = X2INTA[JJ];
            G1INT = G2INTA[JJ];
            TLSTG = TLSTGE[JJ];
            GFD = GFDE [JJ];
            GMFIX = GMFIXE[JJ];
            GABD = GABDE[JJ];
            NITRA = NITRE[JJ];
            NRMVAR = NRMVAE[JJ];
            if (JJ == 1) goto label113;
            if (NITRA == 8) NITRA = 3;
            if (NITRA == 9) NITRA = 2;

        label113:
            //goto label (123,124,125,126,127,128,429,430),
            if(NITRA == 1)      goto label123;
            if(NITRA == 2)      goto label124;
            if(NITRA == 3)      goto label125;
            if(NITRA == 4)      goto label126;
            if(NITRA == 5)      goto label127;
            if(NITRA == 6)      goto label128;
            if(NITRA == 7)      goto label429;
            if(NITRA == 8)      goto label430;

        label430:
            A1 = 0.0;
            A2 = 0.0;
            A3 = WAUFW;
            IZ1 = IHENDE + 1;
            
        label10430:
            IZ1 = IZ1 - 1;
            
            if (NTYP[IZ1] != 7) 
                goto label11430;
            IZ2 = N2[IZ1];
            A1 = A1 + GLTG[IZ2];
            A2 = A2 + A1*(EWAUS[IZ1]-EWAUS[IZ1-1]);
            A3 = A3 - (GWAS[IZ1]+GLTG[IZ2])*(EWAUS[IZ1]-EWAUS[IZ1-1]);
            goto label10430;
            
        label11430:
            A4 = THERMN - A2/B - A3/B;
            GINT = A4*B/(E1T[1,1]-EWAUS[IZ1]);
            
            if (Math.Abs(GINT-GFD) > 0.001) KAUSL3 = 9;
            if (LIGHT[2] == 4 && KAUSL3 == 9 || LIGHT[9] == 7 && NZAEL3 > 45 && KAUSL3 == 9)
                sw16.WriteLine(" ++KRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}", NZAEL3.ToString().PadLeft(5),KAUSL3.ToString().PadLeft(5),NITRA.ToString().PadLeft(5),A2.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),A4.ToString("0.00000E+0").PadLeft(13),E1T[1,1].ToString("0.00000E+0").PadLeft(13),EWAUS[IZ1].ToString("0.00000E+0").PadLeft(13),GINT.ToString("0.00000E+0").PadLeft(13));
            GFD = GINT;
            goto label125;

        label429:
            TLSTG = PULEIS/B;
            TLSTGE[JJ]= TLSTG;

        label123:
            if (MITER == 1 && LITER < 3) goto label125;
            X2INT = TLSTG*1.0E-5;
            if (X2INT < 0.001) X2INT = 0.001;
            if(Math.Abs(TLSTG-ARBT) > X2INT) KAUSL3 = 9;
            X2INT = ARBT;
            XINT = TLSTG;
            
        label129:
            G2INT= GFD;
            
        label132:
            A2 = 0.0;
            A11 = G2INT - G1INT;
            A12 = X2INT - X1INT;
            if (Math.Abs(A12) > 1.0E-20) A2 = A11*(XINT - X2INT)/A12;
            if (NITRA != 1 && NITRA != 7) goto label816;
            if (A12 != 0.0) A12 = A11/A12;
            A11 = G2INT/X2INT;
            if (A12 < 0.0 || A12 > A11*1.5) A2 = 0.0;
            if (NITRA != 7) goto label816;
            if (A2 == 0.0 && GINT/XINT < 0.5) A2 = GTURB*XINT/X2INT - GTURB;
            
        label816:
            GINT = G2INT + A2;
            if((NITRA == 1 || NITRA == 7) && A2 == 0.0) GINT=G2INT*XINT/X2INT;
            if (NITRA == 6) goto label130;
            if (Math.Abs(A2) > G2INT*0.5 && A2 > 0.0) GINT = G2INT + G2INT*0.5;
            if (Math.Abs(A2) > G2INT*0.5 && A2 < 0.0) GINT = G2INT*0.5;
            if (GINT < 0.0) GINT = 0.0001;
            GFD = GINT;
            if (JJ > 1) goto label125;
            if (NITRE[JJ] != 2) goto label125;
            if (ANZTRB <= 1) goto label125;
            if (LIGHT[9] == 7) goto label125;
            
            for(L = 2; L <= ANZTRB; L++)    //DO 817 L=2,ANZTRB
            {
                if (NITRE[L] != 7) 
                    continue;
                if (ITABD == 0) Z5 = GFDE[L];
                A10 = GFD/GFDE[JJ];
                Z6 = Z5*A10;
                Z7 = Z5 - Z6;
                GFDE[L] = Z6;
                N = NRMVAE[L];
                if (ITABD == 0) Z8 = GLTG[N+100];
                if (ITABD == 0) Z9 = GTURB;
                GLTG[N] = Z6;
                GLTG[N+100] = Z8 + Z7;
                if (Math.Abs(Z7-Z7VOR) < 0.001) goto label125;
                Z7VOR = Z7;
                ITABD = ITABD + 1;
                if (ITABD > 20) sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", NZAEL3.ToString().PadLeft(3),JJ.ToString().PadLeft(3),
                    L.ToString().PadLeft(3), Math.Round(Z5,4).ToString().PadLeft(12),Math.Round(Z6,4).ToString().PadLeft(12),Math.Round(Z7,4).ToString().PadLeft(12),
                    Math.Round(GFD,4).ToString().PadLeft(12),Math.Round(GFDE[JJ],4).ToString().PadLeft(12),Math.Round(GTURB,4).ToString().PadLeft(12),
                    Math.Round(GABD,4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12));
                    //818 FORMAT(1H ,3I5,8F12.4)
                if (ITABD > 20) goto label125;
                GTURB = Z9 - Z7;
                GFD = GFDE[JJ];
                goto label124;
            }   //817 CONTINUE
            goto label125;

        label124:
            if (Math.Abs(GTURB - GABD) > 0.001) KAUSL3 = 9;
            X2INT = GTURB;
            XINT = GABD;
            A2 = GABD -GTURB;
            G2INT = GFD;
            if (NRMFIE[JJ] == 999) goto label816;
            if (NZAEL3 < 5) goto label816;
            if (Math.Abs(X2INT-X1INT) < 0.001) goto label816;
            goto label129;

        label125:
            GFDE[JJ] = GFD;
            X2INTA[JJ] = X2INT;
            G2INTA[JJ] = G2INT;
            if (LIGHT[2] == 4 && KAUSL3 == 9 || LIGHT[9] == 7 && NZAEL3 > 45 && KAUSL3 == 9)
                sw16.WriteLine(" ++KRLF++{0}{1}{2}{3}{4}{5}{6}{7}{8}", NZAEL3.ToString().PadLeft(5),KAUSL3.ToString().PadLeft(5),NITRA.ToString().PadLeft(5),XINT.ToString("0.00000E+0").PadLeft(13),X1INT.ToString("0.00000E+0").PadLeft(13),X2INT.ToString("0.00000E+0").PadLeft(13),GINT.ToString("0.00000E+0").PadLeft(13),G1INT.ToString("0.00000E+0").PadLeft(13),G2INT.ToString("0.00000E+0").PadLeft(13));
            if (JJ == 1) goto label402;
            I = NRMVAE[JJ];
            if (Math.Abs(GLTG[I+100]-GTURB) > 0.001) KAUSL3 = 9;
            if (LVAR[JJ] == 0) goto label10125;
            IX5 = LVAR[JJ];
            Z5 = GLTG[IX5] - GLTG[I];
            IX8 = I;
            L1 = IHENDE + 1;
            
        label11125:
            for(L = L1; L <= INENDE; L++)   //DO 12125 L=L1,INENDE
            {
                IX6 = NN2[L];
                IX7 = N2 [L];
                if (IX6 != IX8 && IX7 != IX8) continue;
                if (KRUECK[L] == 0) goto label10125;
                if (NN1[L] == IX5) goto label13125;
                IX8 = NN1[L];
                goto label11125;
            }   //12125 CONTINUE
            
        label13125:
            GLTG[IX5] = GFD + Z5;
            
        label10125:
            GLTG[I] = GFD;
            GLTG[I+100] = GTURB;
            II = IENDST[JJ];
            ELTG[I+100] = E2T[II,1];
            PLTG[I+100] = PT[II,1];
            
            if (NITRE[JJ] == 7 && PSPT > 0.0)
                PLTG[I+100] = PSPT;
            
        label402:
            if (JJ <= 1) goto label405;
            JJ = JJ - 1;
            goto label403;
            
        label405:
            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 407 JJ=1,ANZTRB
            {
                if (NITRE[JJ] != 9) 
                    continue;
                IZ1 = NRMVAE[JJ];
                if (IZ1 == 0) continue;
                UWA008("UNPACK", ILTG[IZ1],ref IX1, ref IX2, ref IX3, ref IX4);
                IZ1 = IZ1 + 100;
                if (ILTG[IZ1] != 0) continue;
                GABDE[JJ] = (GTURBA[IX2] + GABDE[JJ])*0.5;
            }   //407 CONTINUE
            if (KAUSL3 == 9) goto label64;
            goto label131;
            
        label126:
            if (Math.Abs(GMFIXI-GMFIX) > 0.001) KAUSL3 = 9;
            X2INT = GMFIXI;
            XINT = GMFIX;
            goto label129;
            
        label127:
            if (Math.Abs(GTURB) > 0.001) KAUSL3 = 9;
            X2INT = GTURB;
            XINT = 0.0;
            G2INT = GFD;
            if (X1INT != 0.0) goto label132;
            GFD = GFD - GTURB;
            goto label125;
            
        label128:
            A2 = Math.Abs(GABD-GTURB);
            if (GABD > 1.0) A2 = Math.Abs((GABD-GTURB)/GABD);
            if (A2 > 0.0010) KAUSL3 = 9;
            X2INT = GTURB;
            XINT = GABD;
            G2INT = GLTG[NRMVAR];
            if (NHEIZ == 1) GHEIZ = G2INT+(GTURB-GABD)*GHEIZ;
            A2 = (GTURB - GABD)*0.9;
            if (NZAEL3 < 5) goto label816;
            if (Math.Abs(X2INT-X1INT) < 0.001) goto label816;
            goto label132;
            
        label130:
            if (GINT < 0.0) GINT = 0.1;
            if (NHEIZ == 1) GINT = GHEIZ;
            if (NHEIZ == 1) G2INT = GHEIZ;
            if (LIGHT[9] != 7) GTURBA[JJ] = GABD;
            A2 = Math.Abs(X1INT - X2INT);
            if (Math.Abs(X2INT) < 0.001) goto label10129;
            A2 = Math.Abs((X1INT-X2INT)/X2INT);
            
        label10129:
            if (NHEIZ == 1 && A2 > 0.05) goto label125;
            GLTG[NRMVAR] = GINT;
            
            for(IZ5 = 2; IZ5 <= 4; IZ5++)       //DO 10130 IZ5 = 2,4
            {
                if (NRMVAR == LVAR[IZ5]) GFDE[IZ5] = GINT;
                if (NRMVAR == LVAR[IZ5]) NITRE[IZ5] = 3;
            }   //10130 CONTINUE
            
            if (NHEIZ != 1) goto label125;
            IX2 = IHENDE + 1;
            
            for(IX1 = IX2; IX1 <= INENDE; IX1++)    //DO 11130 IX1 = IX2,INENDE
            {
                if (NTYP[IX1] != 6) continue;
                if (NN2[IX1] != NRMVAR) continue;
                QBZWM[IX1] = GINT;
                goto label125;
            }   //11130 CONTINUE
            goto label125;
            
        label131:
            GZUW = GABDK - GTURBA[1];
            if (NZAEL3 <= 2) goto label64;
            if (Math.Abs(GZUW) < 0.001) goto label908;
            if (NZAEL3 >= 52)goto label908;
            NZUWA = NZUWA+1;
            if (NZUWA < 2) goto label64;
            
        label908:
            WAUFW = WAUFW + GFDE[1]*(E1T[1,1]-EWAUS[IHENDE]);
            QVERBR = WAUFW / ARBTA[1];
            JJ = 0;
            
        label406:
            JJ = JJ+1;
            
            if ((NITRA == 2 || NITRA == 6) && NZAEL3 < 52)
                GABDE[JJ] = GTURBA[JJ];
            
            if (NITRA != 2 && NITRA != 6) GABDE[JJ] = GTURBA[JJ];
            DVERBR[JJ] = GFDE[JJ]/ARBTA[JJ];
            if (JJ < ANZTRB) goto label406;
            
            for(I = 1; I <= INENDE; I++)    //DO 133 I=1,INENDE
            {
                N=NTYP[I]+1;
                //goto label(133,133,134,135,137,135,136,136,137,137,133,133,135,137,134,135,137,133,135,133,137,134,137,136),
                if(N == 1)      continue;
                if(N == 2)      continue;
                if(N == 3)      goto label134;
                if(N == 4)      goto label135;
                if(N == 5)      goto label137;
                if(N == 6)      goto label135;
                if(N == 7)      goto label136;
                if(N == 8)      goto label136;
                if(N == 9)      goto label137;
                if(N == 10)      goto label137;
                if(N == 11)      continue;
                if(N == 12)      continue;
                if(N == 13)      goto label135;
                if(N == 14)      goto label137;
                if(N == 15)      goto label134;
                if(N == 16)      goto label135;
                if(N == 17)      goto label137;
                if(N == 18)      continue;
                if(N == 19)      goto label135;
                if(N == 20)      continue;
                if(N == 21)      goto label137;
                if(N == 22)      goto label134;
                if(N == 23)      goto label137;
                if(N == 24)      goto label136;
                
            label136:
                if (TWAUS[I] != 0.0) continue;
                
            label137:
                if ((KKONDP == 1 && I < KKENTG) || KPW[I] == 1) goto label138;
                if (PW[I] != 0.0) TWAUS[I] = VISUM(PW[I],EWAUS[I],03);
                continue;
                
            label138:
                PW[I] = PSTR(EWAUS[I]);
                TWAUS[I] = UW0011(PW[I],1);
                EWAUS[I] = VISUM(PW[I],TWAUS[I],-21);
                continue;
                
            label135:
                if ((KKONDP == 1 && I < KKENTG) || KPW[I] == 1) goto label138;
                TWAUS[I] = VISUM(PW[I],EWAUS[I],03);
                continue;
                
            label134:
                if (N2[I] != 0) continue;
                DEKOND[I]=EWAUS[I];
                EWAUS[I]=QBZWM[I];
                QBZWM[I] = GWAS[I];
                K1 = NN1[I];
                EKONDW[I] = VISUM(PW[I],DEKOND[I],23);
                if (K1 == 0) goto label139;
                GWAS[I] = GLTG [K1];
                continue;
                
            label139:
                if(NTYP[I-1] != 2) goto label140;
                if(N2[I-1] == 0) goto label141;
                
            label140:
                GWAS[I] = GWAS[I-1];
                continue;
                
            label141:
                GWAS[I] = QBZWM[I-1];
            }   //133 CONTINUE

            for(L = 1; L <= INENDE; L++)    //DO 188 L=1,INENDE
            {
                if (NTYP[L] != 0)
                    continue;
                if (KATZE1[L] == 0) 
                    continue;
                
                for(N = 1; N <= INENDE; N++)    //DO 183 N=1,INENDE
                {
                    if (NTYP[N] != 3 && NTYP[N] != 15) 
                        continue;
                    if (N1[N] == 0) 
                        continue;
                    JJ = N2[N];
                    for(M = 1; M <= 8; M++)     //DO 182 M=1,8
                        if (NBLTG[L,M] == JJ)
                            goto label184;      //182 CONTINUE
                }   //183 CONTINUE
                continue;
                
            label184:
                A1 = PLTG[JJ];
                A2 = ELTG[JJ];
                A3 = GLTG[JJ];
                A4 = VISUM(A1,A2,03);
                A5 = VISUM(A1,A4,00);
                KK = KATZE1[L];
                if (KK == 2 || KK == 4) goto label185;
                A6 = QBZWM[L];
                if (KK == 3) A6 = PW[L]/(1.0-VERLP[L]/100.0) - PW[L];
                goto label186;
                
            label185:
                A6 = QBZWM[L];
                if (KK == 4) A6 = PW[L]/(1.0-VERLP[L]/100.0) - PW[L];
                if (K == 1 && A3 > 0.0) SSTEU[L] = A6/A3*A3/A5;
                if (K == 2) A6 = SSTEU[L]*A3*A3*A5;
                
            label186:
                PLTG[JJ] = PW[L] + A6;
                if (ANZTRB == 1) continue;
                
                for(IZ1 = 2; IZ1 <= ANZTRB; IZ1++)  //DO 187 IZ1 = 2,ANZTRB
                {
                    if (NITRE[IZ1] != 7) continue;
                    
                    if (JJ != NRMVAE[IZ1]+100) 
                        continue;
                    PKOND[IZ1] = PLTG[JJ];
                    IZ2 = NTTETB[IZ1];
                    PNE[IZ2] = PLTG[JJ];
                    PN4[IZ1] = PLTG[JJ];
                    break;
                }   //187 CONTINUE
            }   //188 CONTINUE

            for(IKOND = 1; IKOND <= ANZTRB; IKOND++)    //DO 256 IKOND = 1,ANZTRB
            {
                A1 = 0.0;
                A2 = 0.0;
                if (IKOND == 1) L = 1;
                if (IKOND == 1) goto label251;
                LL = IHENDE + 1;
                
                for(L = LL; L <= INENDE; L++)   //DO 250 L=LL,INENDE
                {
                    if (NTYP[L] != 0) 
                        continue;
                    JJ = NRMVAE[IKOND] + 100;
                
                    if (JJ != NN1[L]) 
                        continue;
                    goto label251;
                }   //250 CONTINUE
                goto label255;

            label251:
                for(M = 1; M <= 8; M++)     //DO 254 M=1,8
                {
                    if (NBLTG[L,M] != 100) 
                        goto label252;
                    
                    A1 = A1 + GLTG[100];
                    A2 = A2 + GLTG[100]*ELTG[100];
                    continue;
                    
                label252:
                    for(N = 1; N <= IHENDE; N++)    //DO 253 N=1,IHENDE
                    {
                        if (NTYP[N] != 3 && NTYP[N] != 15) 
                            continue;
                        if (N1[N] == 0) 
                            continue;
                        JJ = N2[N];
                        if (JJ != NBLTG[L,M]) 
                            continue;
                        A1 = A1 + GLTG[JJ];
                        A2 = A2 + GLTG[JJ]*ELTG[JJ];
                        break;
                    }   //253 CONTINUE
                }   //254 CONTINUE
                
                if (K == 1) GZUKOA[IKOND] = A1;
                if (K == 1) QZUKOA[IKOND] = A2;
                if (K == 2) GZUKOT[IKOND] = A1;
                if (K == 2) QZUKOT[IKOND] = A2;
                
            label255:
                if (NITRE[IKOND] != 7 || PSPT <= 0.0) 
                    continue;
                IZ8 = NTTETB[IKOND];
                
                if (PN4[IKOND] > 0.0)
                    PSPT = (PSPT+PN4[IKOND])*0.5;
                PN4[IKOND] = PSPT;
                PNE[IZ8] = PSPT;
                PKOND[IKOND] = PSPT;
            }   //256 CONTINUE

            if (ANZTRB <= 1)
                goto label193;
            
            for(N = 2; N <= ANZTRB; N++)    //DO 192 N=2,ANZTRB
            {
                IZ1 = NRMVAE[N];
                LVAR[N] = IZ1;
                UWA008("UNPACK", ILTG[IZ1],ref IX1,ref IX2,ref IX3,ref IX4);
                
                if (IX2 > 0) continue;
                if (IHENDE == INENDE) continue;
                IZ2 = IZ1;
                L1 = IHENDE + 1;
                
            label190:
                for(L = L1; L <= INENDE; L++)   //DO 191 L=L1,INENDE
                {
                    IZ3 = NN1[L];
                    IZ4 = NN2[L];
                    IZ5 = N2[L];
                    if (IZ2 != IZ4 && IZ2 != IZ5) continue;
                    if (IZ2 == IZ5) LVAR[N] = IZ3;
                    if (IZ2 == IZ4) LVAR[N] = IZ3;
                    if (IZ2 == IZ4) IZ2 = IZ3;
                    if (IZ2 == IZ5) IZ2 = IZ3;
                    if (IZ1 == IZ4) PVAR[N] = PLTG[IZ4];
                    if (IZ1 == IZ4) HVAR[N] = ELTG[IZ4];
                    if (IZ1 == IZ5) PVAR[N] = PLTG[IZ5];
                    if (IZ1 == IZ5) HVAR[N] = ELTG[IZ5];
                    UWA008("UNPACK", ILTG[IZ2],ref IX1,ref IX2,ref IX3,ref IX4);
                    if (IX2 != 0) break;
                    goto label190;
                }   //191 CONTINUE
            }   //192 CONTINUE
            
        label193:
            if (K == 1) return;
            if (IHENDE == INENDE) return;
            L1 = IHENDE + 1;
            
            for(L = L1; L <= INENDE; L++)   //DO 200 L=L1,INENDE
            {
                if (NTYP[L] != 22) 
                    continue;
                NX = L;
                
            label180:
                NX = NX - 1;
                if (NX <= IHENDE) continue;
                if (NTYP[NX] != 2 && NTYP[NX] != 21) goto label180;
                if (N1[NX] < 35 || N1[NX] > 39) goto label180;
                NHEIZ = 10;
            }   //200 CONTINUE
            
            if (NHEIZ == 10 && LIGHT[4] == 5) 
                sw16.WriteLine("0***KRLF***  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}", Math.Round(PLTG[35],4).ToString().PadLeft(12),Math.Round(GLTG[35],4).ToString().PadLeft(12),
                    Math.Round(PLTG[36],4).ToString().PadLeft(12),Math.Round(GLTG[36],4).ToString().PadLeft(12),Math.Round(PLTG[37],4).ToString().PadLeft(12), 
                    Math.Round(GLTG[37],4).ToString().PadLeft(12),Math.Round(PLTG[38],4).ToString().PadLeft(12),Math.Round(GLTG[38],4).ToString().PadLeft(12),
                    Math.Round(PLTG[39],4).ToString().PadLeft(12),Math.Round(GLTG[39],4).ToString().PadLeft(12));
                //210 FORMAT(1H0,"***KRLF***",2X,10F12.4) 
            return;
        }   //END
                
        
        static void UWA044(int IZ, int KZ)
        {
            //ENTRY TURBLT(IZ,KZ)
            //INCLUDE "KRAWAL80.COMMON"

            int IZR1 = IZ1, IZR2 = IZ2, IZR3 = IZ3, IZR7 = IZ7, KT5Z = UWA011(IZ,5);
            IZ2 = 0;
            IZ3 = 0;
            if (KZ != 1) goto label1;
            
            for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 2 IZ1 = 1,10
            {
                LABT[IZ1]=0;
                LZUT[IZ1]=0;
            }   //2 CONTINUE
            SUMGZU = 0.0;
            SUMQZU = 0.0;
            SUMGAB = 0.0;
            SUMQAB = 0.0;
            if (KT5Z < 1 || KT5Z > 35) goto label3;
            
            for(IZ1 = 1; IZ1 <= 12; IZ1++)      //DO 4 IZ1 = 1,12
            {
                IZ7 = LTGSAM[IZ1,KT5Z];
                if(IZ7 < 0)
                    goto label5;
                if(IZ7 == 0)
                    goto label3;
                if(IZ7 > 0)
                    goto label7;
                
            label5:
                IZ2 = IZ2 + 1;
                if (IZ2 > 10) goto label100;
                IZ7 = -IZ7;
                LABT[IZ2] = IZ7;
                GABT[IZ2] = GLTG[IZ7];
                EABT[IZ2] = ELTG[IZ7];
                PABT[IZ2] = PLTG[IZ7];
                
                if (IZ7 > 46 && IZ7 < 70) continue;
                SUMGAB = SUMGAB + GABT[IZ2];
                SUMQAB = SUMQAB + GABT[IZ2]* EABT[IZ2];
                continue;
                
            label100:
                sw16.WriteLine(" MEHR ALS 10 ABGEHENDE LEITUNGEN BA/LOG.STUFE{0}{1}", KT6.ToString().PadLeft(4),
                    IZ.ToString().PadLeft(4));
                //103 FORMAT(" ","MEHR ALS 10 ABGEHENDE LEITUNGEN BA/LOG.STUFE",2I4) UWA044
                continue;
                
            label7:
                IZ3 = IZ3 + 1;
                if (IZ3 > 10) goto label101;
                LZUT [IZ3] = IZ7;
                GZUT [IZ3] = GLTG[IZ7];
                EZUT [IZ3] = ELTG[IZ7];
                PZUT [IZ3] = PLTG[IZ7];
                SUMGZU = SUMGZU + GZUT[IZ3];
                SUMQZU = SUMQZU + GZUT[IZ3] * EZUT[IZ3];
                continue;
                
            label101:
                sw16.WriteLine(" MEHR ALS 10 ZUGEHENDE LEITUNGEN BA/LOG.STUFE{0}{1} ", KT6.ToString().PadLeft(4),IZ.ToString().PadLeft(4));
                //102 FORMAT(" ","MEHR ALS 10 ZUGEHENDE LEITUNGEN BA/LOG.STUFE",2I4) UWA044
            }   //4 CONTINUE
            goto label3;

        label1:
            if (KT5Z < 1 || KT5Z > 35) goto label3;
            
            for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 8 IZ1 = 1,10
            {
                IZ7 = LABT[IZ1];
                if (IZ7 == 0) continue;
                IZ2 = IZ2 + 1;
                LTGSAM[IZ2,KT5Z] =-IZ7;
                GLTG[IZ7] = GABT[IZ1];
                ELTG[IZ7] = EABT[IZ1];
                PLTG[IZ7] = PABT[IZ1];
            }   //8 CONTINUE
            
            for(IZ1 = 1; IZ1 <= 10; IZ1++)      //DO 9 IZ1 = 1,10
            {
                IZ7 = LZUT[IZ1];
                
                if (IZ7 == 0) 
                    continue;
                IZ2 = IZ2 + 1;

                if (IZ2 > 12) sw16.WriteLine(" MEHR ALS 12 LEITUNGEN BA/LOG.{0}{1} LTG {2} WIRD NICHT ANGEKNOTET",
                    KT6.ToString().PadLeft(4),IZ.ToString().PadLeft(4),IZ7.ToString().PadLeft(4));
                //104 FORMAT(1H ,"MEHR ALS 12 LEITUNGEN BA/LOG.",2I4," LTG ",I4," WIRD NICHT ANGEKNOTET")
                
                if (IZ2 > 12) goto label3;
                LTGSAM[IZ2,KT5Z] = IZ7;
                GLTG[IZ7] = GZUT[IZ1];
                ELTG[IZ7] = EZUT[IZ1];
                PLTG[IZ7] = PZUT[IZ1];
            }   //9 CONTINUE
            IZ2 = IZ2 +1;
            if (IZ2 > 12) goto label3;
            
            for(IZ1 = IZ2; IZ1 <= 12; IZ1++)    //DO 11 IZ1 = IZ2,12
                LTGSAM[IZ1,KT5Z] = 0;   //11 CONTINUE
            
        label3:
            IZ1 = IZR1;
            IZ2 = IZR2;
            IZ3 = IZR3;
            IZ7 = IZR7;
            return;
        }   //END
        

        static void UWA048 (int INDD2)
        {
            //ENTRY NBLTGF(INDD2)
            //INCLUDE "KRAWAL80.COMMON"
            double SUGL = 0.0, SUQL = 0.0;
            int N;
            
            for(K3 = 1; K3 <= 8; K3++)  //DO 1 K3 = 1,8
            {
                N= NBLTG[INDD2,K3];
                if (N == 0) 
                    continue;
                SUGL = SUGL + GLTG[N];
                SUQL = SUQL + GLTG[N]*ELTG[N];
            }   //1 CONTINUE
            if (SUGL < 0.0)     SUQL = 0.0;
            if (SUGL < 0.0)     SUGL = 0.0;
            return;
        }   //END
                       
        
        static void UWA086(ref int J1, ref int I1)
        {   /*
            //ENTRY LESDRU     (J1,I1)
            string FELD = "", TYP1 = "", TYP2 = "", TYP3 = "";
            bool QVENT,QV,QT;
            int[,,] EPSREG = new int[5,5,6];
            int[,] DEINST = new int[5,5], ZEINST = new int[5,5], GMIN = new int[5,5];
            double[] DEPOT = new double[21], VAR = new double[21], IT = new double[5], IBER = new double[5], KZ = new double[5],
                KD = new double[5], L2ENDE = new double[5], L4ENDE = new double[5], FELD14 = new double[81],
                ZWSP1 = new double[21],ZWSP2 = new double[21], 
                KART = new double[81], KART2 = new double[5], KART3 = new double[41],
                KART4 = new double[41];
            int[] IKART = new int[4];
            double[,] FELDS = new double[81,21], FELDV = new double[8,21], FELDT = new double[61,21], FELDZ = new double[61,21], DPMECH = new double[5,5],
                IEINST = new double[5,5], NBEAUF = new double[5,5];
            string STXT2, STXT4, ASCHALT, STXT3, NDZAE1, NDZAE2, DREHZ, AA1, AA2, TYPE, S, ZWSP1;
            StringBuilder STXT1, enc;
            string[] TURTYP = new string[5], DATEI = new string[5];
            string[,] TURBIN = new string[5,5];

            int L1 = 0, L2 = 0, L3 = 0, L4 = 0, L1END = 0, L2END = 0, L3END = 0, L4END = 0, NRHD = 0,  NRMD = 0, NDZAEL = 0, KZ3 = 0, KZ1 = 0,
                LL = 0, IFLUT = 0, NORMND = 0, NDTYP = 0, L = 0, NRND = 0, KENNZ = 0, LL1 = 0, I13 = 0;

            //EQUIVALENCE (FELD14,IFELD) ;

            string NULL = "0   ", NEUN = "9   ", BL = "    ", IC = "C  ", TD = "D  ", TH = "H  ", TK = "K  ", TN = "N  ", TQ = "Q  ", TR = "R  ",
                TT = "T  ", TV = "V  ", TZ = "Z  ", T11K = "T11", T12K = "T12", T13K = "T13", T21K = "T21", T22K = "T22", T23K = "T23",
                T24K = "T24", T25K = "T25", T26K = "T26", T30K = "T30", A01K = "A01", T3KA = "T3  ", T4KA = "T4  ", T5KA = "T5  ", T6KA = "T6  ",
                T7KA = "T7  ", T8KA = "T8  ", T901 = "901.", TZZZ = "ZZZ ", KBLNK = "    ", T99 = "T99";                                       
            
            //open(unit=13,file="k85.13",status="unknown",form="unformatted",access="direct",recl=84)
            sr13 = new StreamReader("k85.13");

            if (KZ2 == 1) goto label6000;
            if (KZ2 == 2) goto label7800;

        label10:
            if (MVAR == 2) 
                goto label8100;
            
            //READ(15,20,END=10000) FELD
            //20 FORMAT(20A4)
            try {
                FELD = sr15.ReadLine();
            }
            catch {
                goto label10000;
            }
            //FELD = sr15.ReadLine();
            Console.WriteLine("{0}", FELD);
            //WRITE (*,"(20A4)") FELD

            //15 FORMAT (1H ,20A4)

            //DECODE(1,30,FELD) TYP1
            //30 FORMAT(A1)
            TYP1 = FELD.Substring(0,1);

            //DECODE(2,40,FELD) TYP2
            //40 FORMAT(A2)
            TYP2 = FELD.Substring(0,2);

            //DECODE(3,50,FELD) TYP3
            //50 FORMAT(A3);
            TYP3 = FELD.Substring(0,3);

            if (NLESEN > 0) goto label70;

            NLESEN = 1;
            
            for(I = 1; I <= 60; I++)    //DO 60 I = 1,60
            {
                for(J = 1; J <= 20; J++)    //DO 60 J = 1,20
                {
                    FELDT[I,J] = 0.0;
                    FELDZ[I,J] = 0.0;
                    if (I > 4) goto label60;
                    FELDV[I,J] = 0.0;
                }   //60 CONTINUE
            }
            
        label70:
            KZ3 = 0;
            if (MVAR == 1) KZ3 = 2;
            if (KVAR > 0) goto label8000;

        label100:
            if (TYP1 != TT) goto label5000;
            if (TYP3 != T11K) goto label200;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            
            for(J = 1; J <= 20; J++)    //DO 110 J=1,20
                FELDT[L3,J] = FELD[J];      //110 CONTINUE
            
            goto label10;

        label200:
            if (TYP3 != T12K) goto label300;
            JJ = JJ + 1;
            IBER[JJ] = 0;
            L2ENDE[JJ] = 0;
            L4ENDE[JJ] = 0;
            KZ1 = 0;
            KZ[JJ] = KZ1;

            //DECODE(75,210,FELD) (ZWSP1[L],L=1,4)
            //210 FORMAT(3X,4(12X,F6.0))
            //ZWSP1[1] = FELD.Substring(15,6);
            //ZWSP1[2] = FELD.Substring(33,6);
            //ZWSP1[3] = FELD.Substring(51,6);
            //ZWSP1[4] = FELD.Substring(69,6);

            for(J = 1; J <= 4; J++)     //DO 220 J=1,4
            {
                if (ZWSP1[J] == 0.0) 
                    continue;
                IBER[JJ] = IBER[JJ] + 1;
            }   //220 CONTINUE

            L3 = L3 + 1;
            KART3[L3] = KZ3;
            
            for(J = 1; J <= 20; J++)    //DO 230 J=1,20
                FELDT[L3,J] = FELD[J];  //230 CONTINUE

            for(J = 1; J <= 4; J++)     //DO 240 J=1,4
            {
                DPMECH[JJ,J] = 0.0;
                IEINST[JJ,J] = 0;
                DEINST[JJ,J] = 0;
                ZEINST[JJ,J] = 0;
                GMIN[JJ,J] = 0;
                NBEAUF[JJ,J] = 0;
                EPSREG[JJ,J,1] = 0;
                EPSREG[JJ,J,2] = 0;
                EPSREG[JJ,J,3] = 0;
                EPSREG[JJ,J,4] = 0;
                EPSREG[JJ,J,5] = 0;
                KD[J] = 0;
                DATEI[J] = " ";
                TURTYP[J] = " ";
                TURBIN[JJ,J] = " ";
            }   //240 CONTINUE
            goto label10;
            
        label300:
            if (TYP3 != T13K) goto label400;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            
            for(J = 1; J <= 20; J++)    //DO 310 J=1,20
                FELDT[L3,J] = FELD[J];      //310 CONTINUE
            goto label10;

        label400:
            if (TYP3 != T21K)
                goto label500;

            //DECODE( 4,410,FELD(20)) IT[JJ]
            //410 FORMAT(3X,I1)
            IT[JJ] = Convert.ToInt32(FELD.Substring(78,1));
            
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            
            for(J = 1; J <= 20; J++)    //DO 420 J=1,20
                FELDT[L3,J] = FELD[J];      //420 CONTINUE
            goto label10;

        label500:
            if (TYP3 != T22K) goto label4000;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            //WRITE (STXT1,20) FELD;
            STXT1 = new StringBuilder(FELD);

            if (STXT1.ToString().Substring(76,1) == "A")   //STXT1(77:77) = "1";
            {
                STXT1.Remove(76,1);
                STXT1.Insert(76,"A");
            }
            if (STXT1.ToString().Substring(76, 1) == "B") //STXT1(77:77) = "0";
            {
                STXT1.Remove(76,1);
                STXT1.Insert(76,"0");
            }
            if (STXT1.ToString().Substring(76, 1) == "C") //STXT1(77:77) = "2";
            {
                STXT1.Remove(76,1);
                STXT1.Insert(76,"2");
            }
            if (STXT1.ToString().Substring(76, 1) == "D") //STXT1(77:77) = "4";
            {
                STXT1.Remove(76,1);
                STXT1.Insert(76,"4");
            }
            
            //READ (STXT1,20) FELD
            FELD = STXT1.ToString();
            
            for(J = 1; J <= 20; J++)    //DO 510 J=1,20
                FELDT[L3,J] = FELD[J];   //510 CONTINUE
            
            //DECODE(80,520,FELD) DATEI[1],TURTYP[1],KD[1],DATEI[2],TURTYP[2],DATEI[3],TURTYP[3],KD[3],DATEI(4),TYPE, DREHZ,IFLUT,NORMND,NDTYP,KD(4)
            //520 FORMAT(37X,A1,A9,I1,A1,A8 ,A1,A9,I1,2A1,A2,I1,I3,I1,2X,I1)
            DATEI[1] = FELD.Substring(37,1);
            TURTYP[1] = FELD.Substring(38,9);
            KD[1] = Convert.ToInt32(FELD.Substring(47,1));
            DATEI[2] = FELD.Substring(48,1);
            TURTYP[2] = FELD.Substring(49,8);
            DATEI[3] = FELD.Substring(57,1);
            TURTYP[3] = FELD.Substring(58,9);
            KD[3] = Convert.ToInt32(FELD.Substring(67,1));
            DATEI[4] = FELD.Substring(68,1);
            TYPE = FELD.Substring(69,1);
            DREHZ = FELD.Substring(70,2);
            IFLUT = Convert.ToInt32(FELD.Substring(72,1));
            NORMND = Convert.ToInt32(FELD.Substring(73,3));
            NDTYP = Convert.ToInt32(FELD.Substring(76,1));
            KD[4] = Convert.ToInt32(FELD.Substring(79,1));

            for(L = 1; L <= 3; L++)     //DO 524 L=1,3
            {
                if (L == 2) //DECODE(8,523,TURTYP[L]) A1,IKART[L]
                {
                    A1 = Convert.ToDouble(TURTYP[L].Substring(0,1));
                    IKART[L] = Convert.ToInt32(TURTYP[L].Substring(5,3));
                }
                if (L != 2)     //DECODE(9,522,TURTYP[L]) A1,IKART[L]
                {
                    A1 = Convert.ToDouble(TURTYP[L].Substring(0,1));
                    IKART[L] = Convert.ToInt32(TURTYP[L].Substring(6,3));
                }
                
                //522 FORMAT(A1,5X,I3)
                //523 FORMAT(A1,4X,I3)
                
                if (A1 == TV)
                    TURTYP[L] = "V";

                if (L == 1 && (A1 == TK || A1 == TQ))
                    TURTYP[3] = TURTYP[1];
            }       //524 CONTINUE

            TURTYP[4] = " ";
            if (NDTYP > 6) TURTYP[4] = "V";
            if (NORMND == 0) TURTYP[4] = " ";
            //DECODE(44,530,FELD) TURBM(JJ,1)(1:6)
            //530 FORMAT(38X,A )
            //DECODE(55,540,FELD) TURBM(JJ,2)(1:6)
            //540 FORMAT(49X,A )
            //DECODE(64,550,FELD) TURBM(JJ,3)(1:6)
            //550 FORMAT(58X,A )
            //DECODE(77,560,FELD) TURBM(JJ,4)(1:7)
            //560 FORMAT(70X,A )
            
            StringBuilder ss;
            for(J = 1; J <= 4; J++)     //DO 565 J=1,4
            {
                TURBIN[JJ,J] = TURTYP[J];
                if (TURBM[JJ,J].Substring(0,3) == "   ")
                {
                    TURBM[JJ,J] = "SONDERMOD.";
                }
            }   //565 CONTINUE
            
            if ((TURTYP[1] == " " || TURTYP[1] == "V") && (TURTYP[3] == " " || TURTYP[3] == "V") && (TURTYP[4] == " " || TURTYP[4] == "V"))
                goto label10;
            if (TURTYP[1] != " " && TURTYP[3] != " " && NORMND != 0)
                KENNZ = 1;
            if (TURTYP[1] != " " && TURTYP[3] == " " && NORMND != 0)
                KENNZ = 2;
            if (TURTYP[1] != " " && TURTYP[3] != " " && NORMND == 0)
                KENNZ = 3;
            if (TURTYP[1] == " " && TURTYP[3] != " " && NORMND != 0)
                KENNZ = 4;
            if (TURTYP[1] != " " && TURTYP[3] == " " && NORMND == 0)
                KENNZ = 5;
            if (TURTYP[1] == " " && TURTYP[3] != " " && NORMND == 0)
                KENNZ = 6;
            if (TURTYP[1] == " " && TURTYP[3] == " " && NORMND != 0)
                KENNZ = 7;
            
            KZ1 = 1;
            KZ[JJ] = KZ1;
            KZ3 = 1;
            NRND = 0;
            
            if (TURTYP[1] == "V")   NRHD = 1;
            if (TURTYP[3] == "V")   NRMD = 1;
            if (TURTYP[4] == "V")   NRND = 1;

            //DECODE(1,30,TURTYP[1]) TYP;
            string TYP = TURTYP[1].Substring(0,1);

            if (TYP == TK || TYP == TQ)
                TURTYP[2] = "T";
            if (NORMND == 0) goto label600;
            if (TURTYP[4] == "V") goto label600;
            AA1= "N";
            K2 = 2*1000;
            if (DREHZ == "10") K2 = 1*1000;
            K1 = K2 + NORMND;
            
            ss = new StringBuilder(TURTYP[4]);
            //WRITE(TURTYP(4)(4:7),"(I4)")K1;
            ss.Remove(3,4);
            ss.Insert(3,K1.ToString().PadLeft(4));
            //TURTYP(4)(1:1) = AA1;
            ss.Remove(0,1);
            ss.Insert(0,AA1);
            //TURTYP(4)(2:3) = DREHZ;
            ss.Remove(1,1);
            ss.Insert(1,DREHZ);
            //WRITE (TURTYP(4)(8:8),"[I1]") NDTYP;
            ss.Remove(7,1);
            ss.Insert(7,NDTYP);
            TURTYP[4] = ss.ToString();
            
            //WRITE(*,"(A,A)") "Turtyp(4) = ",turtyp(4);
            Console.WriteLine("Turtyp(4) = {0}",TURTYP[4]);
            
        label600:
            //REWIND 14;
            
        label620:
            //READ (14,end=800) FELD14;
            try{
                FELD14 = sr14.ReadLine();
            }
            catch{
                goto label800;
            }
            
        label621:
            for(LL = 1; LL <= 20; LL++)     //DO 720 LL = 1,20
            {
                LL1 = (LL-1)*4 + 1;
                //WRITE (STXT3 ,622) (FELD14[I],I=LL1,LL1+3);
                //622 FORMAT (4A4)
                
                if (TURTYP[1].Substring(0,1) == "V") goto label630;
                if (TURTYP[1] == STXT3.Substring(0,9) && DATEI[1] == STXT3.Substring(10,1))
                    goto label660;
                
            label630:
                if (TURTYP[3].Substring(0,1) == "V")
                    goto label640;
                if (TURTYP[3] == STXT3.Substring(0,9) && DATEI[3] == STXT3.Substring(10,1))
                    goto label690;
                
            label640:
                if (TURTYP[4].Substring(0,1) == "V") goto label700;
                if (TURTYP[4].Substring(0,1) == " ") goto label700;
                if (TURTYP[4] != STXT3.Substring(0,9) || DATEI[4] != STXT3.Substring(10,1))
                    goto label700;
                
                NRND = IFELD[LL1+3];
                I13 = NRND;
                
                //READ (13"I13) ZWSP1;
                ZWSP1 = sr13.ReadLine();
                I13= I13 + 1;
                NRND = NRND + 1;
                
                //DECODE(62,650,ZWSP1) A1,A2,A3,IEINST(JJ,4),DEINST(JJ,4),ZEINST(JJ,4);
                //650 FORMAT(38X,3F5.0,I1,2I4);
                A1 = Convert.ToDouble(ZWSP1.Substring(38,5));
                A2 = Convert.ToDouble(ZWSP1.Substring(43,5));
                A3 = Convert.ToDouble(ZWSP1.Substring(48,5));
                IEINST[JJ,4] = Convert.ToInt32(ZWSP1.Substring(53,1));
                DEINST[JJ,4] = Convert.ToInt32(ZWSP1.Substring(54,4));
                ZEINST[JJ,4] = Convert.ToInt32(ZWSP1.Substring(58,4));
                IEINST[JJ,4] = IEINST[JJ,4]/2*IFLUT;
                if (IFLUT <= 2) DPMECH[JJ,4] = A1;
                if (IFLUT == 4) DPMECH[JJ,4] = A2;
                if (IFLUT == 6) DPMECH[JJ,4] = A3;
                goto label700;
                
            label660:
                if (JJ > 1 && (IT[JJ] == 8 || IT[JJ] == 9)) goto label700;
                NRHD = IFELD[LL1+3];
                I13 = NRHD;
                //READ (13'I13) ZWSP1;
                ZWSP1 = sr13.ReadLine();
                I13= I13 + 1;
                //DECODE(71,670,ZWSP1) DPMECH(JJ,1),IEINST(JJ,1),DEINST(JJ,1), ZEINST(JJ,1)
                //670 FORMAT(48X,F5.0,2(I1,2I4))
                DPMECH[JJ,1] = Convert.ToDouble(ZWSP1.Substring(48,5));
                IEINST[JJ,1] = Convert.ToInt32(ZWSP1.Substring(53,1));
                DEINST[JJ,1] = Convert.ToInt32(ZWSP1.Substring(54,2));
                ZEINST[JJ,1] = Convert.ToInt32(ZWSP1.Substring(56,2));
                
                //DECODE(1,30,ZWSP1) TYP
                TYP = ZWSP1.Substring(0,1);
                NRHD = NRHD + 1;
                
                if (TYP != TR && TYP != TQ) 
                    goto label685;
                
                //DECODE(26,680,ZWSP1)
                GMIN[JJ,1] = Convert.ToInt32(ZWSP1.Substring(10,3));
                NBEAUF[JJ,1] = Convert.ToInt32(ZWSP1.Substring(13,1));
                EPSREG[JJ,1,1] = Convert.ToInt32(ZWSP1.Substring(14,3));
                EPSREG[JJ,1,2] = Convert.ToInt32(ZWSP1.Substring(17,3));
                EPSREG[JJ,1,3] = Convert.ToInt32(ZWSP1.Substring(20,3));
                EPSREG[JJ,1,4] = Convert.ToInt32(ZWSP1.Substring(23,3));
                //,J=1,4)
                //680 FORMAT(10X,I3,I1,4I3)
                
            label685:
                if (TYP == TK || TYP == TQ) goto label630;
                goto label700;
                
            label690:
                if (JJ > 1 && (IT[JJ] == 8 || IT[JJ] == 9)) goto label700;
                NRMD = IFELD[LL1+3];
                I13 = NRMD;
                //READ (13"I13) ZWSP1;
                ZWSP1 = sr13.ReadLine();
                I13= I13 + 1;
                
                //DECODE(1,30,ZWSP1) TYP;
                TYP = ZWSP1.Substring(0,1);
                
                if (TYP == TK || TYP == TQ)
                    goto label692;
                
                //DECODE(62,670,ZWSP1)
                DPMECH[JJ,3] = Convert.ToDouble(ZWSP1.Substring(48,5));
                IEINST[JJ,3] = Convert.ToInt32(ZWSP1.Substring(53,1));
                DEINST[JJ,3] = Convert.ToInt32(ZWSP1.Substring(54,2));
                ZEINST[JJ,3] = Convert.ToInt32(ZWSP1.Substring(56,2));
                NRMD = NRMD + 1;
                goto label695;
                
            label692:
                //DECODE(71,693,ZWSP1)
                IEINST[JJ,3] = Convert.ToInt32(ZWSP1.Substring(62,1));
                DEINST[JJ,3] = Convert.ToInt32(ZWSP1.Substring(63,4));
                ZEINST[JJ,3] = Convert.ToInt32(ZWSP1.Substring(67,4));
                //693 FORMAT(62X,I1,2I4)
                
                DPMECH[JJ,3] = 0.0;
                NRMD = NRMD + 6;

                if (TYP == TQ) 
                    NRMD = NRMD + 1;

            label695:
                if (TYP != TR) 
                    goto label700;
                //DECODE(26,680,ZWSP1)GMIN[JJ,3],NBEAUF[JJ,3],EPSREG[JJ,3,J),J=1,4)
                GMIN[JJ,3] = Convert.ToInt32(ZWSP1.Substring(10,3));
                NBEAUF[JJ,3] = Convert.ToInt32(ZWSP1.Substring(13,1));
                EPSREG[JJ,3,1] = Convert.ToInt32(ZWSP1.Substring(14,3));
                EPSREG[JJ,3,2] = Convert.ToInt32(ZWSP1.Substring(17,3));
                EPSREG[JJ,3,3] = Convert.ToInt32(ZWSP1.Substring(20,3));
                EPSREG[JJ,3,4] = Convert.ToInt32(ZWSP1.Substring(23,3));

            label700:
                if (KENNZ == 1 && NRHD > 0 && NRMD > 0 && NRND > 0) goto label800;
                if (KENNZ == 2 && NRHD > 0 && NRND > 0) goto label800;
                if (KENNZ == 3 && NRHD > 0 && NRMD > 0) goto label800;
                if (KENNZ == 4 && NRMD > 0 && NRND > 0) goto label800;
                if (KENNZ == 5 && NRHD > 0) goto label800;
                if (KENNZ == 6 && NRMD > 0) goto label800;
                if (KENNZ == 7 && NRND > 0) goto label800;
                if (FELD14[LL1] != TZ) goto label720;

                sw16.WriteLine("0*** MODELL NICHT VORHANDEN ***{0}  {1}{2}{3}  {4}{5}{6}  {7}{8}{9} ", KENNZ.ToString().PadLeft(5),
                    DATEI[1].PadLeft(2),TURTYP[1].PadLeft(9),KD[1].ToString().PadLeft(9),DATEI[3].PadLeft(2),TURTYP[3].PadLeft(9),
                    KD[3].ToString().PadLeft(9),DATEI[4].PadLeft(2),TURTYP[4].PadLeft(9),KD[4].ToString().PadLeft(9));
                //710 FORMAT(1H0,"*** MODELL NICHT VORHANDEN ***", I5, 3(2X,A2,A9,I2))
                Console.WriteLine("MODELL NICHT VORHANDEN");
                Console.ReadKey();
                Environment.Exit(0);
            }   //720 CONTINUE
            goto label620;

        label800:
            //REWIND 14;

            //goto label(1000,1000,1000,1200,1000,1200,1300),
            if(KENNZ == 1)      goto label1000;
            if(KENNZ == 2)      goto label1000;
            if(KENNZ == 3)      goto label1000;
            if(KENNZ == 4)      goto label1200;
            if(KENNZ == 5)      goto label1000;
            if(KENNZ == 6)      goto label1200;
            if(KENNZ == 7)      goto label1300;

        label1000:
            if (TURTYP[1].Substring(0,1) == "V") 
                goto label1150;
            
        label1010:
            I13 = NRHD;
            //READ (13"I13) 
            ZWSP1 = sr13.ReadLine();
            I13 = I13 + 1;
            
            //DECODE(2,40,ZWSP1) 
            TYP = ZWSP1.Substring(0,2);
            
            if (TYP != T3KA) 
                goto label1150;
            
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            NRHD = NRHD + 1;
            
            for(J = 1; J <= 20; J++)    //DO 1020 J = 1,20
                FELDT[L3,J] = ZWSP1[J];     //1020 CONTINUE
            
            if (KD[1] == 0) goto label1010;

            //WRITE (STXT1,20) 
            ZWSP1 = STXT1.ToString();

            //READ (STXT1,"(6X,I3)") 
            J = Convert.ToInt32(STXT1.ToString().Substring(6,3));
            
            if (Math.Abs(J) > 15) 
                goto label1072;

            //STXT1(60:61) = STXT1( 8: 9);
            STXT1.Remove(59,1);
            STXT1.Insert(59,STXT1.ToString().Substring(7,1));

            //STXT1( 7:59) = " ";
            STXT1.Remove(6,53);
            STXT1.Insert(6, " ", 53);

            //STXT1(62:73) = " ";
            STXT1.Remove(61,12);
            STXT1.Insert(61, " ", 12);
            goto label1076;
            
        label1072:
            //STXT1(42:44) = STXT1( 7: 9);
            STXT1.Remove(41,3);
            STXT1.Insert(41, STXT1.ToString().Substring(6,3));

            //STXT1( 7:41) = " ";
            STXT1.Remove(6,35);
            STXT1.Insert(6, " ", 35);

            //STXT1(45:73) = " ";
            STXT1.Remove(44,29);
            STXT1.Insert(44, " ", 29);
            
        label1076:
            //STXT1(78:78) = "D";
            STXT1.Remove(77,1);
            STXT1.Insert(77, "D");
            
            //READ (STXT1,20) (FELDT(L3,J),J=1,20)
            int i = 0;
            for(J = 1; J <= 20; J++)
            {
                FELDT[L3,J] = Convert.ToDouble(STXT1.ToString().Substring(i,4));
                i = i + 4;
            }

            L3 = L3 + 1;
            KART3[L3] = KZ3;
            //WRITE (STXT1,20) ZWSP1;
            STXT1 = new StringBuilder(ZWSP1);
            
            //STXT1 ( 4: 9) = " ";
            STXT1.Remove(3,6);
            STXT1.Insert(3," ",6);
            
            //READ (STXT1,20) (FELDT(L3,J),J=1,20)
            i = 0;
            for(J = 1; J <= 20; J++)
            {
                FELDT[L3,J] = Convert.ToDouble(STXT1.ToString().Substring(i,4));
                i = i + 4;
            }
            goto label1010;

        label1150:
            if (KENNZ == 2) goto label1300;
            if (KENNZ != 5) goto label1200;
            goto label2000;

        label1200:
            if (TURTYP[3] == "V") goto label1290;
            
        label1210:
            I13 = NRMD;
            //READ (13"I13) ZWSP1
            ZWSP1 = sr13.ReadLine();

            I13= I13 + 1;
            
            //DECODE(2,40,ZWSP1) TYP;
            TYP = ZWSP1.Substring(0,2);
            
            if (TYP != T3KA) 
                goto label1290;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            NRMD = NRMD + 1;
            
            if (KENNZ != 4 && KENNZ != 6)
                goto label1230;
            
            //WRITE (STXT1,20) ZWSP1;
            STXT1 = new StringBuilder(ZWSP1);
            //STXT1 ( 1: 3) = "T30";
            STXT1.Remove(0,3);
            STXT1.Insert(0,"T30");
            
            //STXT1 (32:35) = "901.";
            STXT1.Remove(31,4);
            STXT1.Insert(31,"901.");

            //READ (STXT1,20) ZWSP1;
            ZWSP1 = STXT1.ToString();
            goto label1260;
            
        label1230:
            //DECODE( 4,1240,ZWSP1[1])  A1,J,A2;
            //1240 FORMAT(A1,I2,A1)
            A1 = ZWSP1.Substring(0,1);
            J = Convert.ToInt32(ZWSP1.Substring(1,2));
            A2 = ZWSP1.Substring(3,1);
            
            
            if (TURTYP[1].Substring(0,1) == "V")
                J = J + IKART[1] - 1;
            
            if (TURTYP[2].Substring(0,1) == "V")
                J = J + IKART[2];

            //ENCODE( 4,1240,ZWSP1[1]) A1,J,A2;
            enc = new StringBuilder(ZWSP1);
            enc.Remove(0,4);
            enc.Insert(0, A1.ToString().PadLeft(1) + J.ToString().PadLeft(2) + A2.ToString().PadLeft(1));
            ZWSP1 = enc.ToString();
                        
            //DECODE( 4,1250,ZWSP1(9)) A1,J,A2;
            //1250:FORMAT(A1,I1,A2);
            A1 = ZWSP1.Substring(72,1);
            J = Convert.ToInt32(73,1);
            A2 = ZWSP1.Substring(74,2);
            

            if (TURTYP[1].Substring(0,1) == "V") 
                J = J + IKART[1] - 1;
            if (TURTYP[2].Substring(0,1) == "V")
                J = J + IKART[2];
            
            //ENCODE( 4,1250,ZWSP1(9)) A1,J,A2;
            enc = new StringBuilder(ZWSP1);
            enc.Remove(72,4);
            enc.Insert(72, A1.ToString().PadLeft(1) + J.ToString().PadLeft(1) + A2.ToString().PadLeft(2));
            ZWSP1 = enc.ToString();

        label1260:
            if (KD[3] == 0) 
                goto label1270;
            //WRITE (STXT1,20) ZWSP1;
            STXT1 = ZWSP1;
            
            //READ (STXT1,"(6X,I3)") 
            J = STXT1.ToString().Substring(6,3);
            
            if (Math.Abs[J] > 15)
                goto label1264;
            //STXT1(60:61) = STXT1( 8: 9);
            STXT1.Remove(59,2);
            STXT1.Insert(59,STXT1.ToString().Substring(7,2));
            
            //STXT1( 7:59) = " ";
            STXT1.Remove(6,53);
            STXT1.Insert(6, " ", 53);

            //STXT1(62:73) = " ";
            STXT1.Remove(61,12);
            STXT1.Insert(61, " ",12);
            goto label1266;
            
        label1264:
            //STXT1(42:44) = STXT1( 7: 9);
            STXT1.Remove(41,3);
            STXT1.Insert(41, STXT1.ToString().Substring(6,3));
            //STXT1( 7:41) = " ";
            STXT1.Remove(6,35);
            STXT1.Insert(6, " ",35);
            //STXT1(45:73) = " ";
            STXT1.Remove(44,29);
            STXT1.Insert(44, " ",29);
            
        label1266:
            //STXT1(78:78) = "D";
            STXT1.Remove(77,1);
            STXT1.Insert(77, "D");
            
            //READ (STXT1,20) (FELDT(L3,J),J=1,20);
            i = 0;
            for(J = 1; J <= 20; J++)
            {
                FELDT[L3,J] = Convert.ToDouble(STXT1.ToString().Substring(i,4));
                i = i + 4;
            }
            
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            //WRITE (STXT1,20) ZWSP1;
            STXT1 = ZWSP1;
            //STXT1 ( 4: 9) = " ";
            STXT1.Remove(4,6);
            STXT1.Insert(4, " ", 6);
            
            //READ (STXT1,20) ZWSP1;
            ZWSP1 = STXT1.ToString();

        label1270:
            for(J = 1; J <= 20; J++)    //DO 1280 J=1,20
                FELDT[L3,J] = ZWSP1[J];     //1280 CONTINUE
            goto label1210;

        label1290:
            if (KENNZ != 3 && KENNZ != 6) goto label1300;
            if (KENNZ == 6) goto label2100;
            goto label2000;

        label1300:
            if (TURTYP[4] == "V") goto label1380;
            I1 = 29 + IBER[JJ];
            if (TURTYP[1].Substring(0,1) == "V") I1 = I1 + IKART[1] - 1;
            if (TURTYP[2].Substring(0,1) == "V") I1 = I1 + IKART[2] - 1;
            if (TURTYP[3].Substring(0,1) == "V") I1 = I1 + IKART[3] - 1;

            //ENCODE(3,1310,ZWSP1[1]) TT,I1;
            //1310 FORMAT(A1,I2)
            enc = new StringBuilder(ZWSP1);
            enc.Remove(0,3);
            enc.Insert(0,TT.PadLeft(1) + I1.ToString().PadLeft(2));
            ZWSP1 = enc.ToString();

            //WRITE (STXT1,20) ZWSP1
            STXT1 = ZWSP1;
            //STXT1(4:30) = " ";
            STXT1.Remove(3,27);
            STXT1.Insert(3," ",27);

            //STXT1 (36:60) = " ";
            STXT1.Remove(35,25);
            STXT1.Insert(35," ",25);
            
            A1 = 900.0 + IBER[JJ] + 0.005;
            //WRITE (S,"(I3)") IFIX(A1);
            S = A1.ToString().PadLeft(3);

            //STXT1 (32:34) = S;
            STXT1.Remove(31,3);
            STXT1.Insert(31,S);
            
            //STXT1 (35:35) = ".";
            STXT1.Remove(34,1);
            STXT1.Insert(34,".");
            J = 6;
            if (KENNZ == 7) J = 1;
            if (KENNZ == 4) J = 3;
            
            //WRITE(STXT1(61:61),1330) J;
            //1330 FORMAT[I1];
            STXT1.Remove(60,1);
            STXT1.Insert(60,J);
            
            //STXT1 (62:80) = " ";
            STXT1.Remove(61,19);
            STXT1.Insert(61," ",19);
            
            //READ (STXT1,20) ZWSP1
            ZWSP1 = STXT1.ToString();
            
            if (KD[4] == 0)     
                goto label1360;

            L3 = L3 + 1;
            KART3[L3] = KZ3;
            //WRITE (STXT1,20) ZWSP1;
            STXT1 = ZWSP1;
            //STXT1 (31:40) = " ";
            STXT1.Remove(30,10);
            STXT1.Insert(30," ",10);

            //STXT1 (61:70) = " ";
            STXT1.Remove(60,10);
            STXT1.Insert(60," ",10);
            
            //STXT1 (78:78) = "D";
            STXT1.Remove(77,1);
            STXT1.Insert(77,"D");
            
            //READ (STXT1,20) (FELDT(L3,J),J=1,20);
            i = 0;
            for(J = 1; J <= 20; J++)
            {
                FELDT[L3,J] = Convert.ToDouble(STXT1.ToString().Substring(i,4));
                i = i + 4;
            }

        label1360:
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            
            for(J = 1; J <= 20; J++)    //DO 1370 J=1,20
                FELDT[L3,J] = ZWSP1[J];     //1370 CONTINUE

        label1380:
            if (KENNZ == 4) goto label2100;
            if (KENNZ != 7) goto label2000;
            goto label3200;

        label2000:
            if (TURTYP[1] == "V") goto label2030;
            
        label2010:
            I13 = NRHD;
            //READ (13"I13) ZWSP1
            ZWSP1 = sr13.ReadLine();
            I13= I13 + 1;
            //DECODE(2,40,ZWSP1) TYP
            TYP = ZWSP1.Substring(0,2);
            
            if (TYP != T5KA) goto label2030;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            NRHD = NRHD + 1;
            
            for(J = 1; J <= 20; J++)    //DO 2020 J = 1,20
                FELDT[L3,J] = ZWSP1[J];  //2020 CONTINUE
            goto label2010;
            
        label2030:
            if (KENNZ == 1 || KENNZ == 3)   goto label2100;
            goto label3000;

        label2100:
            if (TURTYP[3] == "V")   goto label2160;
            
        label2110:
            I13 = NRMD;
            //READ (13"I13) ZWSP1
            ZWSP1 = sr13.ReadLine();
            I13= I13 + 1;
            
            //DECODE(2,40,ZWSP1) TYP;
            TYP = ZWSP1.Substring(0,2);
            
            if (TYP != T5KA) 
                goto label2160;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            NRMD = NRMD + 1;
            
            //DECODE( 4,2120,ZWSP1) A1,J,A2;
            //2120 FORMAT(A1,I2,A1)
            A1 = ZWSP1.Substring(0,1);
            I2 = Convert.ToInt32(ZWSP1.Substring(1,2));
            A2 = ZWSP1.Substring(3,1);

            if (TURTYP[1].Substring(0,1) == "V") J = J + IKART[1] - 1;
            if (TURTYP[2].Substring(0,1) == "V") J = J + IKART[2];
            if ((KENNZ == 4 || KENNZ == 6) && (JJ == 1 || JJ > 1 && IT[JJ] < 8))
                J = J - 1;

            //ENCODE( 4,2120,ZWSP1[1]) A1,J,A2;
            enc = new StringBuilder(ZWSP1);
            enc.Remove(0,4);
            enc.Insert(0, A1.ToString().PadLeft(1) + J.ToString().PadLeft(2) + A2.ToString().PadLeft(1));
            ZWSP1 = enc.ToString();
            
            for(J = 1; J <= 20; J++)    //DO 2150 J=1,20
                FELDT[L3,J] = ZWSP1[J];         //2150 CONTINUE
            goto label2110;
            
        label2160:
            if (KENNZ == 4 || KENNZ == 6) goto label3100;

        label3000:
            if (TURTYP[1] == "V") 
                goto label3030;
            
        label3010:
            I13 = NRHD;
            //READ (13"I13) ZWSP1;
            ZWSP1 = sr13.ReadLine();
            I13= I13 + 1;
            //DECODE(2,40,ZWSP1) TYP
            TYP = ZWSP1.Substring(0,2);
            
            if (TYP != T7KA) goto label3030;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            NRHD = NRHD + 1;
            
            for(J = 1; J <= 20; J++)    //DO 3020 J = 1,20
                FELDT[L3,J] = ZWSP1[J];         //3020 CONTINUE
            goto label3010;
            
        label3030:
            if (KENNZ == 5) goto label3500;
            if (KENNZ == 2) goto label3200;

        label3100:
            if (TURTYP[3] == "V") goto label3130;
            
        label3110:
            I13 = NRMD;
            //READ (13"I13) ZWSP1
            ZWSP1 = sr13.ReadLine();
            I13= I13 + 1;
            //DECODE(2,40,ZWSP1) TYP
            TYP = ZWSP1.Substring(0,2);
            
            if (TYP != T7KA) 
                goto label3130;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            NRMD = NRMD + 1;
            
            for(J = 1; J <= 20; J++)    //DO 3120 J = 1,20
                FELDT[L3,J] = ZWSP1[J];     //3120 CONTINUE
            goto label3110;
            
        label3130:
            if (KENNZ == 3 || KENNZ == 6) goto label3500;

        label3200:
            if (TURTYP[4] == "V") 
                goto label3500;
            
        label3210:
            I13 = NRND;
            //READ (13"I13) ZWSP1
            ZWSP1 = sr13.ReadLine();
            I13= I13 + 1;
            
            //DECODE(2,40,ZWSP1) TYP
            TYP = ZWSP1.Substring(0,2);

            if (TYP != T7KA) goto label3500;
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            NRND = NRND + 1;
            
            //WRITE (STXT1,20) ZWSP1;
            STXT1 = ZWSP1;
            //STXT1 ( 3: 3) = "6";
            STXT1.Remove(2,1);
            STXT1.Insert(2,"6");
            
            if (KENNZ == 7) //STXT1( 3: 3) = "1";
            {
                STXT1.Remove(2,1);
                STXT1.Insert(2,"1");
            }
            if (KENNZ == 4) //STXT1( 3: 3) = "3";
            {
                STXT1.Remove(2,1);
                STXT1.Insert(2,"3");
            }
            //READ (STXT1,20) ZWSP1;
            ZWSP1 = STXT1.ToString();
            NDZAEL = NDZAEL + 1;

            //goto label(3280,3230,3240,3280),
            if(NDZAEL == 1)     goto label3280;
            if(NDZAEL == 2)     goto label3230;
            if(NDZAEL == 3)     goto label3240;
            if(NDZAEL == 4)     goto label3280;
            
        label3230:
            NDZAE1 = "81";
            NDZAE2 = "82";
            goto label3250;
            
        label3240:
            NDZAE1 = "83";
            NDZAE2 = "84";
            
        label3250:
            //WRITE (STXT1,20) ZWSP1;
            STXT1 = ZWSP1;
            //STXT1 (25:26) = NDZAE1;
            STXT1.Remove(24,2);
            STXT1.Insert(24,NDZAE1);
            //STXT1 (47:48) = NDZAE2;
            STXT1.Remove(46,2);
            STXT1.Insert(46,NDZAE2);
            //READ (STXT1,20) ZWSP1;
            ZWSP1 = STXT1.ToString().Substring(0,2);
            
        label3280:
            for(J = 1; J <= 20; J++)    //DO 3290 J = 1,20
                FELDT[L3,J] = ZWSP1[J];     //3290 CONTINUE
            goto label3210;

        label3500:
            L3END = L3;
            goto label10;

        label4000:
            if (TYP3 != T23K && TYP3 != T24K && TYP3 != T25K && TYP3 != T26K) goto label4100;
            if (KZ1 == 0) goto label4300;
            L2 = L2 + 1;
            KART2[L2] = KZ3;
            L2END = L2;
            L2ENDE[JJ] = L2;
            
            for(J = 1; J <= 20; J++)    //DO 4010 J=1,20
                FELDV[L2,J] = FELD[J];  //4010 CONTINUE
            goto label10;


        label4100:
            if (TYP2 != T3KA && TYP2 != T4KA && TYP2 != T5KA && TYP2 != T6KA && TYP2 != T7KA && TYP2 != T8KA)
                goto label4200;
            
            if (KZ1 == 0) goto label4300;
            L4 = L4 + 1;
            KART4[L4] = KZ3;
            L4END = L4;
            L4ENDE[JJ] = L4;
            
            for(J = 1; J <= 20; J++)    //DO 4110 J=1,20
                FELDZ[L4,J] = FELD[J];      ///4110 CONTINUE
            
            if (TYP2 == T7KA || TYP2 == T8KA)   goto label10;
            //DECODE(3,4120,FELD) J
            //4120 FORMAT(2X,I1)
            
            J = J + 1;
            if (J > 4) goto label10;
            TURBM[JJ,J].Substring(9,1) = "*";
            goto label10;

        label4200:
            sw16.WriteLine("0*** FALSCHER KARTENTYP ***{0}", TYP2.PadLeft(4));
            //4210 FORMAT(1H0,"*** FALSCHER KARTENTYP ***",A4)
            Console.WriteLine("FALSCHER KARTENTYP");
            Console.ReadKey();
            Environment.Exit(0);

        label4300:
            L3 = L3 + 1;
            KART3[L3] = KZ3;
            
            for(J = 1; J <= 20; J++)    //DO 4310 J=1,20
                FELDT[L3,J] = FELD[J];      //4310 CONTINUE
            
            L2ENDE[JJ] = L2;
            L4ENDE[JJ] = L4;
            L3END = L3;
            goto label10;

        label5000:
            if (TYP3 != A01K) goto label7000;
            
            for(J = 1; J <= 20; J++)    //DO 5010 J = 1,20
                DEPOT[J] = FELD[J];     //5010 CONTINUE

            JJEND = JJ;
            JJ = 0;
            L1 = 0;
            L2 = 0;
            L3 = 0;
            L4 = 0;

        label5100:
            L3 = L3 + 1;
            if (L3 > L3END) goto label5850;
            
            for(J = 1; J <= 20; J++)    //DO 5110 J=1,20
                ZWSP1[J] = FELDT[L3,J];         //5110 CONTINUE

            KZ3 = KART3[L3];

            //DECODE(4,5120,ZWSP1[1]) A1,I1
            //5120 FORMAT(A1,I2)
            A1 = ZWSP1.Substring(0,1);
            I1 = Convert.ToInt32(ZWSP1.Substring(1,2));

            if (I1 != 12) goto label5200;
            JJ = JJ + 1;
            if (JJ > 1 && LL > 0 && NN <= LL) goto label5140;
            LL = 0;
            MM = 0;
            NN = 0;
            KZ1 = 0;
            QV = false;
            QT = false;
            
            for(J = 1; J <= 4; J++)     //DO 5130 J=1,4
                QVENT[J] = false;   //5130 CONTINUE
            goto label5800;

        label5140:
            L3 = L3 - 1;
            JJ = JJ - 1;
            ZWSP1[1] = T99;
            I1 = 99;
            goto label5600;

        label5200:
            if (I1 != 21) goto label5300;
            if (JJ > 1 && (IT[JJ] == 8 || IT[JJ] == 9)) goto label5800;
            
            //DECODE(48,5210,ZWSP1[1]) A2
            //5210 FORMAT(42X,F6.0)
            A2 = Convert.ToDouble(ZWSP1.Substring(42,6));
            
            if (A2 > 0.0) goto label5800;
            //WRITE (STXT1,20) ZWSP1
            STXT1 = ZWSP1;
            A2 = 0.0;
            L = JJ - 1;
            
        label5220:
            L = L + 1;
            if (L > JJEND) goto label5240;
            if (L > JJ && IT[L] != 8 && IT[L] != 9) goto label5240;
            
            for(J = 1; J <= 4; J++)     //DO 5230 J=1,4
                A2 = A2 + DPMECH[L,J];      //5230 CONTINUE
            
            goto label5220;
        
        label5240:
            //WRITE(S,"(F6.0)") A2
            S = Math.Round(A2,0).ToString().PadLeft(6);
            
            //STXT1 (43:48) = S;
            STXT1.Remove(42,6);
            STXT1.Insert(42,S);
            
            //READ (STXT1,20) ZWSP1;
            ZWSP1 = STXT1.ToString();
            goto label5800;

        label5300:
            if (I1 != 22) goto label5400;
            KZ1 = KZ[JJ];
            M = 0;
            
            for(L = 1; L <= 3; L++)     //DO 5320 L=1,3
            {
                if (TURTYP[L].Substring(0,1) != " ") M = M + 1;
                if (NBEAUF(JJ,L) == 0) goto label5320;
                
                //DECODE(21,5310,ZWSP1) A1,(IFELD[J],J=1,6);
                //5310 FORMAT(A3,6I3);
                A1 = ZWSP1.Substring(0,3);
                IFELD[1] = Convert.ToInt32(ZWSP1.Substring(3,3));
                IFELD[2] = Convert.ToInt32(ZWSP1.Substring(6,3));
                IFELD[3] = Convert.ToInt32(ZWSP1.Substring(9,3));
                IFELD[4] = Convert.ToInt32(ZWSP1.Substring(12,3));
                IFELD[5] = Convert.ToInt32(ZWSP1.Substring(15,3));
                IFELD[6] = Convert.ToInt32(ZWSP1.Substring(18,3));
                
                if (IFELD[M*2] > 0) 
                    goto label5320;
                IFELD[M*2] = GMIN[JJ,L];
                
                //ENCODE(21,5310,ZWSP1) A1,(IFELD[J],J=1,6);
                enc = new StringBuilder(ZWSP1);
                enc.Remove(0,21);
                enc.Insert(0, A1.ToString().PadLeft(3) + IFELD[1].ToString().PadLeft(3) + IFELD[2].ToString().PadLeft(3) + IFELD[3].ToString().PadLeft(3) + 
                    IFELD[4].ToString().PadLeft(3) + IFELD[5].ToString().PadLeft(3) + IFELD[6].ToString().PadLeft(3));
                ZWSP1 = enc.ToString();
                
                goto label5800;
            }   //5320 CONTINUE
            goto label5800;

        label5400:
            if (I1 < 30) goto label5800;
            if (KZ1 == 0) goto label5800;

            if (QV) goto label5600;
            M1 = IBER[JJ];
            LL = L2ENDE[JJ];
            if (JJ > 1) LL = L2ENDE[JJ] - L2ENDE[JJ-1];

            M2 = 0;
            
            for(M = 1; M <= 4; M++)     //DO 5550 M=1,4
            {
                if (TURBIN[JJ,M].Substring(0,1) == " ") 
                    continue;
                M2 = M2 + 1;
                if (M2 > M1) continue;
                if (LL == 0) continue;

                if (QV) goto label5420;
                MM = MM + 1;
                if (MM > LL) continue;
                QV = true;
                L2 = L2 + 1;
                
                for(J= 1; J <= 20; J++) //DO 5410 J=1,20
                    ZWSP2[J] = FELDV[L2,J];     //5410 CONTINUE
                //DECODE(3,5415,ZWSP2) I2;
                //5415 FORMAT(1X,I2)
                I2 = Convert.ToInt32(ZWSP2.Substring(1,2));
                
            label5420:
                if (I2 > 23 && ! QVENT[1]) 
                    goto label5500;
                if (I2 > 24 && ! QVENT[2])
                    goto label5500;
                if (I2 > 25 && ! QVENT[3]) 
                    goto label5500;
                
                QVENT[M2] = true;
                QV = false;
                KZ3 = KART2[L2];

                //WRITE (STXT1,20) ZWSP2
                STXT1 = ZWSP2;
                
                //READ (STXT1,5430) A1
                //5430 FORMAT(58X,F4.0)
                A1 = Convert.ToDouble(STXT1.ToString().Substring(57,4));
                
                if (A1 != 0.0) 
                    goto label5470;
                
                //WRITE(S,"[I1]") IEINST(JJ,M)
                S = IEINST[JJ,M].ToString();
                
                //STXT1 (58:58) = S
                STXT1.Remove(57,1);
                STXT1.Insert(57,S);
                
                //WRITE(S,"(I4)") DEINST(JJ,M)
                S = DEINST[JJ,M].ToString().PadLeft(4);
                
                //STXT1 (59:62) = S
                STXT1.Remove(58,4);
                STXT1.Insert(58,S);
                
                //WRITE(S,"(I4)") ZEINST(JJ,M)
                S = ZEINST[JJ,M].ToString().PadLeft(4);
                //STXT1 (63:66) = S
                STXT1.Remove(62,4);
                STXT1.Insert(62,S);
                
                //READ (STXT1,20) ZWSP2
                ZWSP2 = STXT1;
                
            label5470:
                //DECODE(1,30,TURTYP[M]) TYP
                TYP = TURTYP[M];
                
                if (TYP != TR && TYP != TQ) 
                    goto label5480;
                
                //DECODE(2,5472,ZWSP2[11]) 
                A1 = ZWSP12.Substring(80,1);
                J = Convert.ToInt32(ZWSP12.Substring(81,1));

                //5472 FORMAT(A1,I1)
                if (J > 0)  goto label5480;

                //WRITE(S,"[I1]") NBEAUF(JJ,M)
                S = NBEAUF[JJ,M].ToString().PadLeft(1);
                //STXT1 (42:42) = S
                STXT1.Remove(41,1);
                STXT1.Insert(41,S);

                //WRITE(S,"(I3)") EPSREG(JJ,M,1)
                S = EPSREG[JJ,M,1].ToString().PadLeft(3);
                //STXT1 (43:45) = S
                STXT1.Remove(42,4);
                STXT1.Insert(42,S);

                //WRITE(S,"(I3)") EPSREG(JJ,M,2)
                S = EPSREG[JJ,M,2].ToString().PadLeft(3);
                //STXT1 (46:48) = S
                STXT1.Remove(45,3);
                STXT1.Insert(45,S);

                //WRITE(S,"(I3)") EPSREG(JJ,M,3)
                S = EPSREG[JJ,M,3].ToString().PadLeft(3);
                //STXT1 (49:51) = S
                STXT1.Remove(48,3);
                STXT1.Insert(48,S);

                //WRITE(S,"(I3)") EPSREG(JJ,M,4)
                S = EPSREG[JJ,M,4].ToString().PadLeft(3);
                //STXT1 (52:54) = S
                STXT1.Remove(51,3);
                STXT1.Insert(51,S);

                //READ (STXT1,20) ZWSP2
                ZWSP2 = STXT1;

            label5480:
                L1 = L1 + 1;
                L1END = L1;
                
                if (L1 > 80) 
                {
                    Console.WriteLine("ZU VIELE T-KARTEN");
                    Console.ReadKey();
                    Environment.Exit(0);
                }
                KART[L1] = KZ3;
                
                for(J = 1; J <= 20; J++)    //DO 5490 J=1,20
                    FELDS[L1,J] = ZWSP2[J];     //5490 CONTINUE
                
                goto label5550;

            label5500:
                QVENT[M2] = true;
                KZ3 = 1;
                I5 = M2 + 22;
                STXT1 = "                                                                                                               ";
                //STXT1 ( 1: 1) = "T";
                STXT1.Remove(0,1);
                STXT1.Insert(0, "T");
                //WRITE (S,"(I2)") I5;
                S = I5.ToString().PadLeft(2);

                //STXT1 ( 2: 3) = S;
                STXT1.Remove(1,2);
                STXT1.Insert(1,S);

                //WRITE (S,"[I1]") IEINST(JJ,M);
                S = IEINST[JJ,M].ToString().PadLeft(1);
                //STXT1 (58:58) = S;
                STXT1.Remove(57,1);
                STXT1.Insert(57,S);
                
                //WRITE (S,"(I4)") DEINST(JJ,M);
                S = DEINST[JJ,M].ToString().PadLeft(4);
                //STXT1 (59:62) = S;
                STXT1.Remove(58,4);
                STXT1.Insert(58,S);
                
                //WRITE (S,"(I4)") ZEINST(JJ,M);
                S = ZEINST[JJ,M].ToString().PadLeft(4);
                //STXT1 (63:66) = S;
                STXT1.Remove(62,4);
                STXT1.Insert(62,S);

                //READ (STXT1,20) FELD;
                FELD = STXT1.ToString();

                //DECODE(1,30,TURTYP[M]) TYP;
                TYP = TURTYP[M];
                
                if (TYP != TR && TYP != TQ) 
                    goto label5520;

                //WRITE (S,"[I1]") NBEAUF(JJ,M)
                S = NBEAUF[JJ,M].ToString().PadLeft(1);

                //STXT1 (42:42) = S
                STXT1.Remove(41,1);
                STXT1.Insert(41,S);
                
                //WRITE (S,"(I3)") 
                S = EPSREG[JJ,M,1].ToString().PadLeft(3);
                
                //STXT1 (43:45) = S
                STXT1.Remove(42,3);
                STXT1.Insert(42,S);
                
                //WRITE (S,"(I3)") EPSREG(JJ,M,2)
                S = EPSREG[JJ,M,2].ToString().PadLeft(3);
                
                //STXT1 (46:48) = S
                STXT1.Remove(45,3);
                STXT1.Insert(45,S);

                //WRITE (S,"(I3)") EPSREG(JJ,M,3)
                S = EPSREG[JJ,M,3].ToString().PadLeft(3);
                
                //STXT1 (49:51) = S
                STXT1.Remove(48,3);
                STXT1.Insert(48,S);

                //WRITE (S,"(I3)") EPSREG(JJ,M,4)
                S = EPSREG[JJ,M,4].ToString().PadLeft(3);
                
                //STXT1 (52:54) = S
                STXT1.Remove(51,3);
                STXT1.Insert(51,S);

                //READ (STXT1,20) FELD
                FELD = STXT1;

            label5520:
                L1 = L1 + 1;
                L1END = L1;
                
                if (L1 > 80)
                {
                    Console.WriteLine("ZU VIELE T-KARTEN");
                    Console.ReadKey();
                    Environment.Exit(0);
                }
                KART[L1] = KZ3;
                
                for(J = 1; J <= 20; J++)    //DO 5530 J=1,20
                    FELDS[L1,J] = FELD[J];      //5530 CONTINUE
            }   //5550 CONTINUE
            QV = true;
            LL = L4ENDE[JJ];
            if (JJ > 1) 
                LL = L4ENDE[JJ] - L4ENDE[JJ-1];

        label5600:
            KZ3 = 1;
            if (LL == 0) goto label5800;

            if (QT) goto label5640;
            
        label5610:
            NN = NN + 1;
            if (NN > LL && L3 > L3END) goto label5900;
            if (NN > LL && I1 == 99) goto label5820;
            if (NN > LL) goto label5800;
            QT = true;
            L4 = L4 + 1;
            
            for(J = 1; J <= 20; J++)    //DO 5620 J=1,20
                ZWSP2[J] = FELDZ[L4,J];         //5620 CONTINUE
            I4 = 0;
            
            //DECODE(3,5625,ZWSP2) I2
            //5625 FORMAT(1X,I2)
            I2 = Convert.ToInt32(ZWSP2.ToString().Substring(1,2));  //ZWSP2 could be a string
            
            if (I2 < 50) 
                goto label5640;
            
            //DECODE(4,5630,ZWSP2) I2,I4
            //5630 FORMAT(1X,I2,I1)
            I2 = Convert.ToInt32(ZWSP2.ToString().Substring(1,2));  //ZWSP2 could be a string
            I4 = Convert.ToInt32(ZWSP2.ToString().Substring(3,1));

        label5640:
            I3 = 0;
            //DECODE(3,5625,ZWSP1) I1
            I2 = Convert.ToInt32(ZWSP2.ToString().Substring(1,2));  //ZWSP2 could be a string
            
            if (I1 < 50) goto label5645;
            //DECODE(4,5630,ZWSP1) I1,I3
            I1 = Convert.ToInt32(ZWSP2.ToString().Substring(1,2));  //ZWSP2 could be a string
            I3 = Convert.ToInt32(ZWSP2.ToString().Substring(3,1));
            
        label5645:
            if (I1 < I2) goto label5800;
            if (I1 == I2 && I3 > 0 && I4 > 0 && I3 < I4) goto label5800;
            if (I1 == I2 && I3 > 0 && I3 < 9 && I4 == 0) goto label5100;
            QT = false;
            KZ3 = KART4[L4];
            if (I1 == I2 && I3 == I4) goto label5700;
            if (I1 == I2 && I3 == 9 && I4 == 0) goto label5700;
            if (I1 == I2 && I3 == 0 && I4 == 9) goto label5700;

        label5650:
            L1 = L1 + 1;
            L1END = L1;
            
            if (L1 > 80) 
            {
                Console.WriteLine("ZU VIELE T-KARTEN");
                Console.ReadKey();
                Environment.Exit(0);
            }
            KART[L1] = KZ3;
            
            for(J = 1; J <= 20; J++)    //DO 5660 J=1,20
                FELDS[L1,J] = ZWSP2[J];     //5660 CONTINUE
            
            KZ3 = 1;
            goto label5610;
            
        label5700:
            J = I2/10;
            
            if (J != 3 && J != 4) 
                goto label5720;

            //DECODE(4,5710,ZWSP1(20)) AA1
            AA1 = ZWSP1.Substring(79,1);
            //DECODE(4,5710,ZWSP2(20)) AA2
            AA2 = ZWSP2.Substring(79,1);
            //5710 FORMAT(3X,A1)

            AA1 = ZWSP1[20];
            AA2 = ZWSP2[20];
            
            if (AA1 == AA2) goto label5720;
            if (AA2 == "D" || AA2 == "R") goto label5650;
            QT = true;
            KZ3 = 1;
            goto label5800;

        label5720:
            for(J = 1; J <= 20; J++)    //DO 5730 J=1,20
                ZWSP1[J] = ZWSP2[J];    //5730 CONTINUE
            
        label5800:
            L1 = L1 + 1;
            L1END = L1;
            
            if (L1 > 80) 
            {
                Console.WriteLine("ZU VIELE T-KARTEN");
                Console.ReadKey();
                Environment.Exit(0);
            }
            KART[L1] = KZ3;
            
            for(J = 1; J <= 20; J++)    //DO 5810 J = 1,20
                FELDS[L1,J] = ZWSP1[J];     //5810 CONTINUE
            
            goto label5100;
        
        label5820:
            LL = 0;
            NN = 0;
            goto label5100;

        label5850:
            if (LL == 0) goto label5900;
            if (NN > LL) goto label5900;
            ZWSP1[1] = T99;
            goto label5600;

        label5900:
            L1 = 0;
            KZ2 = 1;

        label6000:
            L1 = L1 + 1;
            if (L1 > L1END) goto label6100;
            KZ3 = KART[L1];
            
            for(J = 1; J <= 20; J++)    //DO 6010 J = 1,20
                FELD[J] = FELDS[L1,J];      //6010 CONTINUE
            
            goto label9000;

        label6100:
            for(J = 1; J <= 20; J++)    //DO 6110 J = 1,20
                FELD[J] = DEPOT[J];     //6110 CONTINUE
            KZ1 = 0;
            KZ2 = 0;
            KZ3 = 0;
            
            if (KVAR > 0)
                goto label9000;

            //DECODE(80,6120,FELD ) 
            ASCHALT = FELD.Substring(70);
            //6120 FORMAT(70X,A)
            
            if (ASCHALT == " ")
                goto label9000;

            //open(unit=8,file="k85.8",status="unknown",form="unformatted", access="direct",recl=84)
            sr8 = new StreamReader("k85.8");
            KZ1 = 2;
            goto label9000;

        label7000:
            if (TYP1 != TH && TYP1 != TN) goto label9000;
            if (KZ1 != 2) goto label9000;
            if (KZ2 == 2) goto label7200;
            KZ2 = 2;
            L4 = 0;
            //REWIND 9;
        
        label7010:
            //READ (9) FELD14;
            FELD14 = sr9.ReadLine();
            for(LL = 1; LL <= 20; LL++)     //DO 7030 LL=1,20
            {
                LL1 = (LL-1)*4 + 1;
                //WRITE (STXT3,622) (FELD14[I],I=LL1,LL1+3)
                if (ASCHALT == STXT3.Substring(0,10)) 
                    goto label7050;
                if (FELD14[LL1] != TZ) 
                    continue;

                //sw16.WriteLine("",7020) ASCHALT
                //7020 FORMAT(1H0,"*** FALSCHE KENNUNG DER SCHALTUNG ***",2X,A)
                Console.WriteLine("FALSCHE SCHALTUNGSKENNUNG");
                Console.ReadKey();
                Environment.Exit(0);
            }   //7030 CONTINUE
            goto label7010;

        label7050:
            L2 = IFELD[LL1+2] + 1;
            I8 = L2;
            L3 = 0;
            
        label7100:
            //READ (8'I8) 
            FELD14 = sr8.ReadLine();
            I8 = I8 + 1;
            //DECODE(1,7110,ZWSP1) TYP;
            //7110 FORMAT(A1)
            TYP = ZWSP1.Substring(0,1);
            
            if (TYP != TH && TYP != TN)     goto label7200;
            L3 = L3 + 1;
            L3END = L3;
            
            if (L3 > 40)
            {
                Console.WriteLine("ZU VIELE H-KARTEN VON PLATTE");
                Console.ReadKey();
                Environment.Exit(0);
            }
            
            for(J = 1; J <= 20; J++)    //DO 7120 J=1,20
                FELDT[L3,J] = ZWSP1[J];     //7120 CONTINUE
            
            L2 = L2 + 1;
            goto label7100;

        label7200:
            L4 = L4 + 1;
            L4END = L4;
            
            if (L4 > 30)
            {
                Console.WriteLine("ZU VIELE H-KARTEN VORGEGEBEN");
                Console.ReadKey();
                Environment.Exit(0);
            }
            
            for(J = 1; J <= 20; J++)    //DO 7210 J=1,20
                FELDZ[L4,J] = FELD[J];  //7210 CONTINUE

            //DECODE(3,7220,FELD) I2
            //7220 FORMAT(1X,I2)
            I2 = Convert.ToInt32(FELD.Substring(1,2));
            
            if (I2 < 99) goto label10;

            QT = false;
            QV = false;
            L1 = 0;
            L2 = 0;
            L3 = 0;
            L4 = 0;
            
        label7400:
            if (QT)
                goto label7500;

            L3 = L3 + 1;
            if (L3 > L3END) I1 = 100;
            if (L3 > L3END) goto label7500;
            
            for(J = 1; J <= 20; J++)    //)DO 7410 J=1,20
                ZWSP1[J] = FELDT[L3,J];         //7410 CONTINUE
            //DECODE(3,7420,ZWSP1) I1
            //7420 FORMAT(1X,I2)
            I1 = Convert.ToInt32(ZWSP1.Substring(1,2));

            QT = true;
            
        label7500:
            if (QV) goto label7520;
            L4 = L4 + 1;
            if (L4 > L4END) goto label7700;
            
            for(J = 1; J <= 20; J++)    //DO 7510 J=1,20
                ZWSP2[J] = FELDZ[L4,J];         //7510 CONTINUE
            //DECODE(5,7515,ZWSP2) I2,I3
            //7515 FORMAT(1X,2I2)
            I2 = Convert.ToInt32(ZWSP2.Substring(1,2));
            I3 = Convert.ToInt32(ZWSP2.Substring(3,2));

            QV = true;
            
        label7520:
            if (I1 < I2) goto label7540;
            QV = false;
            
            if (I1 == I2) QT = false;
            if (I1 == I2 && I3 == 99)
                goto label7400;
            KZ3 = 0;
            
            for(J = 1; J <= 20; J++)    //DO 7530 J=1,20
                FELD[J] = ZWSP2[J];         //7530 CONTINUE
            goto label7600;
            
        label7540:
            QT = false;
            KZ3 = 1;
            
            for(J = 1; J <= 20; J++)    //DO 7550 J=1,20
                FELD[J] = ZWSP1[J];     //7550 CONTINUE

        label7600:
            L1 = L1 + 1;
            L1END = L1;
            if (L1 > 60) 
            {
                Console.WriteLine("ZU VIELE H-KARTEN");
                Console.ReadKey();
                Environment.Exit(0);
            }
            KART[L1] = KZ3;
            //DECODE( 4,7610,FELD) A1,I3,A2
            //7610 FORMAT(A1,I2,A1)
            A1 = FELD.Substring(0,1);
            I2 = Convert.ToInt32(FELD.Substring(1,2));
            A2 = FELD.Substring(3,1);
            
            if (I3 != 99) 
            {
                //ENCODE(10,7610,FELD) A1,L1,A2
            }
            
            for(J = 1; J <= 20; J++)    //DO 7620 J=1,20
                FELDS[L1,J] = FELD[J];  //7620 CONTINUE
            
            goto label7400;

        label7700:
            L1 = 0;

        label7800:
            L1 = L1 + 1;
            
            if (L1 > L1END) goto label7900;
            
            for(J = 1; J <= 20; J++)    //DO 7810 J=1,20
                FELD[J] = FELDS[L1,J];      //7810 CONTINUE
            KZ3 = KART[L1];
            goto label9000;

        label7900:
            KZ1 = 0;
            KZ2 = 0;
            KZ3 = 0;
            goto label10;

        label8000:
            for(J = 1; J <= 20; J++)    //DO 8010 J=1,20
                VAR[J] = FELD[J];   //8010 CONTINUE
            
            //DECODE(3,50,VAR) TYPVAR
            TYPVAR = VAR.Substring(0,3);
            
        label8100:
            //WRITE (STXT4,20) (KARV[II],II=JVAR,JVAR+19)

            //READ (STXT4,20) FELD
            JVAR = JVAR + 20;
            //DECODE(1,30,FELD) TYP1
            //DECODE(2,40,FELD) TYP2
            //DECODE(3,50,FELD) TYP3

            if (TYPVAR == TYP3) goto label8200;
            MVAR = 2;
            KZ3 = 0;
            goto label100;

            for(J = 1; J <= 20; J++)    //)8200 DO 8210 J=1,20
                FELD[J] = VAR[J];       //8210 CONTINUE

            MVAR = 1;
            KZ3 = 2;
            //DECODE(1,30,FELD) 
            TYP1 = FELD.Substring(0,1);
            //DECODE(2,40,FELD) TYP2
            TYP2 = FELD.Substring(0,2);
            //DECODE(3,50,FELD) TYP3
            TYP3 = FELD.Substring(0,3);
            goto label100;

        label9000:
            if (KZ3 == 0)   //WRITE(33,9010) FELD
                sw33.WriteLine("           {0}", FELD);
            if (KZ3 == 1)   //WRITE(33,9020) FELD
                sw33.WriteLine("         * {0}", FELD);
            if (KZ3 == 2)   //WRITE(33,9030) FELD
                sw33.WriteLine("         > {0}", FELD);
            //9010 FORMAT(11X,20A4)
            //9020 FORMAT(9X,2H* ,20A4)
            //9030 FORMAT(9X,2H> ,20A4)

            //DECODE(1,30,FELD) 
            ITYP1 = FELD;   //format: A1
            
            UWA087 (ITYP1,KZ3,FELD);

            if (KZ3 == 1)   goto label9105;
            if (KVAR == 1)  goto label9100;

            //WRITE (STXT4,20) FELD
            STXT4 = FELD;
            //READ(STXT4,20) (KARV[II],II=IVAR,IVAR+19)

        label9100:
            IVAR = IVAR + 20;

        label9105:
            //DECODE(80,20,FELD) CORE
            CORE = FELD;
            //DECODE(3,50,FELD) 
            TYP = FELD.Substring(0,3);

            if (TYP == TZZZ) 
            {
                KVAR = 0;
                MVAR = 0;
            }   //endif
            
            //DECODE(3,9110,FELD) 
            J1 = FELD.Substring(0,1);
            I2 = FELD.Substring(1,1);
            I3 = FELD.Substring(2,1);
            //9110 FORMAT(3A1)
            
            if (J1 == IC) goto label10;

            I1 = 0;
            if (I2 < NULL || I2 > NEUN) I1 = 1;
            if (I3 < NULL || I2 > NEUN) I1 = 1;
            
            return;

        label10000:
            //close(unit=15)
            //close(unit=16)
            //close(unit=10)
            //close(unit=11)
            //close(unit=30,status="delete")
            //close(unit=33,status="delete")
            
            Console.WriteLine("KRAWALENDE");
            Console.ReadKey();
            Environment.Exit(0);

            */
        }   //END
        
        
        static void UWA027(int L)
        {
            //ENTRY KUEHLP(L)
            string s = "";
            int M, IB35 = 0, N = 0, NMAX = 0;
            double[] B1 = new double[12],B2 = new double[12],B3 = new double[12],B4 = new double[12],B5 = new double[12],B6 = new double[12],
                B7 = new double[12],B8 = new double[12],B9 = new double[12],B10 = new double[12],B11 = new double[12],B12 = new double[12],
                B13 = new double[12],B14 = new double[12], B15 = new double[12],B16 = new double[12],B17 = new double[12],B18 = new double[12],
                B19 = new double[12],B20 = new double[12],B21 = new double[12], B22 = new double[12],B23 = new double[12],B24 = new double[12],
                B25 = new double[12],B26 = new double[12],B27 = new double[12],B28 = new double[12],B29 = new double[12],B30 = new double[12],
                B31 = new double[12],B32 = new double[12],B33 = new double[12],B34 = new double[12], B35 = new double[12];
            //INCLUDE 'KRAWAL80.COMMON'
            //int L;
            if (L == 1) goto label100;
            
            if (LKUEHL > 0) goto label2;
            
            for(L = 1; L <= 11; L++)    //DO 1 L=1,11
            {
                B1 [L] = 0.0;
                B2 [L] = 0.0;
                B3 [L] = 0.0;
                B4 [L] = 0.0;
                B5 [L] = 0.0;
                B6 [L] = 0.0;
                B7 [L] = 0.0;
                B8 [L] = 0.0;
                B9 [L] = 0.0;
                B10[L] = 0.0;
                B11[L] = 0.0;
                B12[L] = 0.0;
                B13[L] = 0.0;
                B14[L] = 0.0;
                B15[L] = 0.0;
                B16[L] = 0.0;
                B17[L] = 0.0;
                B18[L] = 0.0;
                B19[L] = 0.0;
                B20[L] = 0.0;
                B21[L] = 0.0;
                B22[L] = 0.0;
                B23[L] = 0.0;
                B24[L] = 0.0;
                B25[L] = 0.0;
                B26[L] = 0.0;
                B27[L] = 0.0;
                B28[L] = 0.0;
                B29[L] = 0.0;
                B30[L] = 0.0;
                B31[L] = 0.0;
                B32[L] = 0.0;
                B33[L] = 0.0;
                B34[L] = 0.0;
                B35[L] = 0.0;
            }   //1 CONTINUE
            
        label2:
            M = LKUEHL + 1;
            B1[M] = GFDE[1];
            
            if (NITRE[1] == 1) B1[M] = TLSTGE[1];
            if (NITRE[1] == 8) B1[M] = THERMN;
            if (M == 1)        IB35 = NITRE[1];
            if (MKUEHL == 0 || MKUEHL == 3) B2[M] = PN4[1];
            if (MKUEHL == 1 || MKUEHL == 4) B2[M] = TKONDT[1];
            if (MKUEHL == 2 || MKUEHL == 5) B2[M] = GKONDT[1];
            B3[M] = PKONDT[1];
            if (MKUEHL == 1 || MKUEHL == 4) B34[M] = GKONDT[1];
            if (MKUEHL == 2 || MKUEHL == 5) B34[M] = TKONDT[1];
            B4[M] = ARBTA[1];
            B5[M] = GFDE[1];
            B6[M] = GABDE[1];
            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            
            for(L = 1; L <= 11; L++)    //DO 21 L=1,11
            {
                IX1 = Math.Abs(LTGWT1[L]);
                IX2 = Math.Abs(LTGWT2[L]);
                if (IX1 == 0 || IX2 == 0) goto label20;
                if (LTGWT1[L] > 0) A1 = A1 + GLTG[IX1]*(ELTG[IX1]-ELTG[IX2]);
                if (LTGWT1[L] < 0) A2 = A2 + GLTG[IX1]*(ELTG[IX1]-ELTG[IX2]);
                
            label20:
                IX3 = Math.Abs(LTGWT3[L]);
                IX4 = Math.Abs(LTGWT4[L]);
                if (IX3 == 0 || IX4 == 0) continue;
                if (LTGWT3[L] > 0)
                    A3 = A3 + GLTG[IX3]*(ELTG[IX3] - ELTG[IX4])/859.845;
                if (LTGWT3[L] < 0)
                    A3 = A3 - GLTG[IX3]*(ELTG[IX3] - ELTG[IX4])/859.845;
            }   //21 CONTINUE
            A4 = (WAUFW + A1 - A2)/(ARBTA[1] + A3);
            A5 = PULEIS / 859.845;

            if (JKUEHL == 1)
                A4 = (WAUFW + A1 - A2)/(ARBTA[1] + A3 + A5);
            
            B7[M] = A4;
            if (M == 1) B8[M] = 0.0;
            if (M == 1) B29[M] = 0.0;
            if (M != 1 && MKUEHL <= 2) B8[M] = (B7[M]-B7[1])/B7[1]*100.0;
            if (M != 1 && MKUEHL > 2) B8[M] = (B7[M]-B7[1])/B7[M]*100.0;
            if (M != 1 && MKUEHL <= 2) B29[M] = (B4[M]-B4[1])/B4[1]*100.0;
            if (M != 1 && MKUEHL > 2) B29[M] = (B4[M]-B4[1])/B4[M]*100.0;
            if (PLTG[1] != 0.0) B9[M] = PLTG[1];
            if (PLTG[1] != 0.0) B10[M] = GLTG[1];
            if (PLTG[2] != 0.0) B11[M] = PLTG[2];
            if (PLTG[2] != 0.0) B12[M] = GLTG[2];
            J = NTTETB[1];
            
            UWA006("RDISC", 59,J);
            UWA006("RDISC", 52,J);
            I = ITTEND[J];
            if ((MKUEHL == 0 || MKUEHL == 3) && B2[M] == 0.0) B2[M] = PT[I,K];
            if (MKUEHL == 0 || MKUEHL == 3) B3[M] = PT[I,K];
            B17[M] = E2T[I,K];
            UWA010(I,1);
            
            if (KT7 == 6) I = I - 1;
            if (KT7 == 6) UWA010(I,1);
            if (KT1 != 3) return;
            if (KT7 != 4 && KT7 != 9) return;
            UWA006("RDISC", 53,KT9);
            UWA006("RDISC", 56,KT9);
            if (TAFDP[KT14+1] == 0.0)   TAFDP[KT14+1] = 1.0;
            if (TSTFMX[I] == 0.0)       TSTFMX[I] = 1.0;
            A2 = Math.Pow(C2GES[I,K],2.0)/8.37225E+03;
            A1 = E2T[I,K] - A2;
            A3 = (A2*TAFDP[KT14+1]-A2)*TSTFMX[I];
            A1 = A1 - A3;
            A4 = PT[I,K];
            if (PHI[75] != 0.0) A4 = PHI[75];
            A1 = VISUM(A4,A1,13);
            A5 = VISUM(A4,A1,10);
            B13[M] = G[I,K]*A5/3.6/((STFDI[I]+LS[I])*LS[I]*3.1416E-06)/FLUT;
            B14[M] = A2*TSTFMX[I];
            B30[M] = PT[I,K];
            B15[M] = E2T[I,K];
            B16[M] = B15[M]-B14[M];
            N = 0;
            
            for(I = 1; I <= IHENDE; I++)    //DO 3 I=1,IHENDE
            {
                if (NTYP[I] != 3) continue;
                if (N2[I] == 0) continue;
                if (N > 2) continue;
                N = N + 1;
                JJ = N2[I];
                if (N == 1) B20[M] = GLTG[JJ];
                if (N == 1) B21[M] = ELTG[JJ];
                if (N == 1) B31[M] = PLTG[JJ];
                if (N == 1) B33[M] = PULEIS/859.845;
                if (N == 1) IZ1 = JJ;
                if (N == 2) B23[M] = GLTG[JJ];
                if (N == 2) B24[M] = ELTG[JJ];
                if (N == 2) B32[M] = PLTG[JJ];
                if (N == 2) IZ2 = JJ;
            }   //3 CONTINUE
            A1 = 0.0;
            A2 = 0.0;
            
            for(J = 1; J <= 8; J++)     //DO 4 J=1,8
            {
                II = NBLTG[1,J];
                if (II == 0) continue;
                if (II == IZ1 || II == IZ2) continue;
                A1 = A1 + GLTG[II];
                A2 = A2 + GLTG[II]*ELTG[II];
            }   //4 CONTINUE
            
            if (A1 > 0.0) B27[M] = A2/A1;
            B26[M] = A1;
            B18[M] = EWAUS[1];
            B35[M] = TWAUS[1] - 273.15;
            B19[M] = B6[M]*(B17[M]-B18[M]);
            B22[M] = B20[M]*(B21[M]-B18[M]);
            B25[M] = B23[M]*(B24[M]-B18[M]);
            B28[M] = B26[M]*(B27[M]-B18[M]);
            UWA006("RDISC", 52,1);
            UWA006("RDISC", 53,1);
            UWA006("RDISC", 56,1);
            UWA006("RDISC", 59,1);
            return;

        label100:
            double KDR = KDRKR;
            if (KDR > 99) goto label101;
            if (KDR > 9) goto label102;
            TX0 = 1.0;
            TX1 = 1.0;
            TX2 = 1.0;
            TX3 = 1.0;
            TX4 = 1.0;
            TX5 = 0.0;
            TX15 = 1.0;
            TX17 = 1.0;
            IWR = 3;
            goto label103;
            
        label101:
            TX0 = 1.0;
            TX1 = 4.1868;
            TX2 = 0.980665;
            TX3 = 1.0/3.6;
            TX4 = 4.1868/3.6;
            TX5 = 0.0;
            TX15 = 1.0;
            TX17 = 0.980665;
            IWR = 1;
            goto label103;
            
        label102:
            TX0 = 1.8;
            TX1 = 1.8;
            TX2 = 14.223315;
            TX3 = 2.204622;
            TX4 = 3.9683;
            TX5 = 32.0;
            TX15 = 3.28084;
            TX17 = 28.958647;
            IWR = 2;
            
        label103:
            UWA043(2);
            if (MKUEHL == 0 || MKUEHL == 3) 
                sw16.WriteLine("0                                                 UMRECHNUNG DES KONDENSATORDRUCKES");

            if (MKUEHL == 1 || MKUEHL == 4) 
                sw16.WriteLine("0                                          UMRECHNUNG DER KUEHLWASSEREINTRITTSTEMPERATUR");

            if (MKUEHL == 2 || MKUEHL == 5) 
                sw16.WriteLine("0                                              UMRECHNUNG DES KUEHLWASSERMASSENSTROMES");
            int NITRA = IB35;
            A1 = B1[1];

            if (NITRA != 1 && NITRA != 8) A1 = B1[1]*TX3;
            
            sw16.WriteLine("0                                   ITERATIONSKRITERIUM DES BEZUGSPUNKTES {0}", NITRA.ToString().PadLeft(3));
            //107 FORMAT(1H0,35X,38HITERATIONSKRITERIUM DES BEZUGSPUNKTES ,I3);
            
            if (NITRA == 1) 
                sw16.WriteLine("+                                                                                P KL ={0} MW", Math.Round(A1,3).ToString().PadLeft(8));

            if (NITRA == 8) 
                sw16.WriteLine("+                                                                                P THERM DE ={0} MW",  Math.Round(A1,3).ToString().PadLeft(8));

            if (NITRA == 1 || NITRA == 8) goto label116;
            //goto label(110,112,114),
            if(IWR == 1)    goto label110;
            if(IWR == 2)    goto label112;
            if(IWR == 3)    goto label114;
            
        label110:
            sw16.WriteLine("+                                                                                M FD ={0} KG/S",  Math.Round(A1,3).ToString().PadLeft(11));
            goto label116;
            
        label112:
            sw16.WriteLine("+                                                                                M FD ={0} *1000LBS/HR",  Math.Round(A1,3).ToString().PadLeft(11));
            goto label116;
            
        label114:
            sw16.WriteLine("+                                                                                M FD ={0} T/H",  Math.Round(A1,3).ToString().PadLeft(11));
            
        label116:
            if (MKUEHL <= 2)
                sw16.WriteLine("0                                   D WT UND D P KL SIND BEZOGEN AUF DEN BEZUGSLASTPUNKT");

            if (MKUEHL > 2)
                sw16.WriteLine("0                               D WT UND D P KL SIND BEZOGEN AUF DEN UMGERECHNETEN LASTPUNKT");
            //1116 FORMAT(1H0,35X,52HD WT UND D P KL SIND BEZOGEN AUF DEN BEZUGSLASTPUNKT/);
            //2116 FORMAT(1H0,31X,60HD WT UND D P KL SIND BEZOGEN AUF DEN UMGERECHNETEN LASTPUNKT/);
            
            //goto label(117,121,119),
            if(IWR == 1)        goto label117;
            if(IWR == 2)        goto label121;
            if(IWR == 3)        goto label119;

        label117:
            sw16.WriteLine("0                                   AUSDRUCK IM I N T E R N A T I O N A L E N MASSYSTEM");
            goto label123;

        label119:
            sw16.WriteLine("0                                   AUSDRUCK IM T E C H N I S C H E N MASSYSTEM");
            goto label123;
            
        label121:
            sw16.WriteLine("0                                   AUSDRUCK IM E N G L I S C H E N MASSYSTEM");
            
            
        label123:
            //goto label(124,126,128),
            if(IWR == 1)     goto label124;
            if(IWR == 2)     goto label126;
            if(IWR == 3)     goto label128;
            
        label124:
            sw16.WriteLine("0           M..KG/S, P..BAR, H..KJ/KG, T..GRD C, Q..MJ/S, WT..KJ/KWH, C..M/S, P KL..MW, P DE..MW, D WT...D P KL..%");
            goto label130;
            
        label126:
            sw16.WriteLine("0          M..1000LBS/HR, P..PSIA/IN.HG, H..BTU/LB, T..GRD F, Q..*1000BTU/HR, WT..BTU/KW HR, C..FT/S, P KL..MW, P DE..MW/60X,16HD WT...D P KL..%");
            goto label130;
            
        label128:
            sw16.WriteLine("0        M..T/H, P..AT, H..KCAL/KG, T..GRD C, Q..GCAL/H, WT..KCAL/KWH, C..M/S, P KL..MW, P DE..MW, D WT...D P KL..%");
            
        label130:
            NMAX = 1;
            
            for(J = 1; J <= 10; J++)    //DO 131 J=1,10
            {
                if (TKUEHL[J] == 0.0) 
                    continue;
                NMAX = NMAX + 1;
            }   //131 CONTINUE
            
            if (MKUEHL != 0 && MKUEHL != 3) goto label134;
            
            for(M = 1; M <= NMAX; M++)  //DO 132 M=1,NMAX
                B2[M] = B2[M]*TX17;     //132 CONTINUE
            
            s = "";
            for(M = 1; M <= NMAX; M++)
                s = s + Math.Round(B2[M],4).ToString().PadLeft(11);
            sw16.WriteLine("0 P KOND  {0} ", s);
            //133 FORMAT(1H0,1X,8HP KOND ,11F11.4)
            goto label140;
            
        label134:
            if (MKUEHL != 1 && MKUEHL != 4) goto label137;
            for(M = 1; M <= NMAX; M++)      //DO 135 M=1,NMAX
                B2[M] = B2[M]*TX0+TX5;      //135 CONTINUE
            
            s = "";
            for(M = 1; M <= NMAX; M++)
                s = s + Math.Round(B2[M],2).ToString().PadLeft(11);
            sw16.WriteLine("0 T KW    {0}", s);
            goto label140;
            
        label137:
            for(M = 1; M <= NMAX; M++)  //DO 138 M=1,NMAX
                B2[M] = B2[M]*TX3;      //138 CONTINUE
            
            s = "";
            for(M = 1; M <= NMAX; M++)
                s = s + Math.Round(B2[M],2).ToString().PadLeft(11);
            sw16.WriteLine("0 M KW    {0}", s);
            //sw16.WriteLine("",139) (B2[M],M=1,NMAX)
            //139 FORMAT(1H0,1X,8HM KW ,11F11.2)
            
        label140:
            for(M = 1; M <= NMAX; M++)      //DO 141 M=1,NMAX
            {
                B3[M] = B3[M]*TX17;
                B5[M] = B5[M]*TX3;
                B6[M] = B6[M]*TX3;
                B7[M] = B7[M]*TX4;
                if (IWR == 1) B7[M] = B7[M]*3.6;
                B9[M] = B9[M]*TX2;
                B10[M] = B10[M]*TX3;
                B11[M] = B11[M]*TX2;
                B12[M] = B12[M]*TX3;
                B13[M] = B13[M]*TX15;
                B14[M] = B14[M]*TX1;
                B15[M] = B15[M]*TX1;
                B16[M] = B16[M]*TX1;
                B17[M] = B17[M]*TX1;
                B18[M] = B18[M]*TX1;
                B19[M] = B19[M]*TX4/1000.0;
                B20[M] = B20[M]*TX3;
                B21[M] = B21[M]*TX1;
                B22[M] = B22[M]*TX4/1000.0;
                B23[M] = B23[M]*TX3;
                B24[M] = B24[M]*TX1;
                B25[M] = B25[M]*TX4/1000.0;
                B26[M] = B26[M]*TX3;
                B27[M] = B27[M]*TX1;
                B28[M] = B28[M]*TX4/1000.0;
                B30[M] = B30[M]*TX17;
                B31[M] = B31[M]*TX2;
                B32[M] = B32[M]*TX2;
                
                if (MKUEHL == 2 || MKUEHL == 5) B34[M] = B34[M]*TX0+TX5;
                if (MKUEHL == 1 || MKUEHL == 4) B34[M] = B34[M]*TX3;
                B35[M] = B35[M]*TX0 + TX5;
            }   //141 CONTINUE

            string b7 = "",b8 = "",b4 = "",b29 = "",b33 = "",b5 = "",b12 = "",b11 = "",b10 = "",b9 = "",b30 = "",b15 = "",
                b16 = "",b13 = "",b14 = "",b3 = "",b6 = "",b17 = "",b18 = "",b35 = "",b19 = "";

            for(M = 1; M <= NMAX; M++)
            {
                b7 = b7 + Math.Round(B7[M],2).ToString().PadLeft(11);
                b8 = b8 + Math.Round(B8[M],4).ToString().PadLeft(11);
                b4 = b4 + Math.Round(B4[M],3).ToString().PadLeft(11);
                b29 = b29 + Math.Round(B29[M],4).ToString().PadLeft(11);
                b33 = b33 + Math.Round(B33[M],3).ToString().PadLeft(11);
                b5 = b5 + Math.Round(B5[M],3).ToString().PadLeft(11);
                b12 = b12 + Math.Round(B12[M],3).ToString().PadLeft(11);
                b11 = b11 + Math.Round(B11[M],3).ToString().PadLeft(11);
                b10 = b10 + Math.Round(B10[M],3).ToString().PadLeft(11);
                b9 = b9 + Math.Round(B9[M],3).ToString().PadLeft(11);
                b30 = b30 + Math.Round(B30[M],4).ToString().PadLeft(11);
                b15 = b15 + Math.Round(B15[M],2).ToString().PadLeft(11);
                b16 = b16 + Math.Round(B16[M],2).ToString().PadLeft(11);
                b13 = b13 + Math.Round(B13[M],2).ToString().PadLeft(11);
                b14 = b14 + Math.Round(B14[M],2).ToString().PadLeft(11);
                b3 = b3 + Math.Round(B3[M],4).ToString().PadLeft(11);
                b6 = b6 + Math.Round(B6[M],3).ToString().PadLeft(11);
                b17 = b17 + Math.Round(B17[M],2).ToString().PadLeft(11);
                b18 = b18 + Math.Round(B18[M],2).ToString().PadLeft(11);
                b35 = b35 + Math.Round(B35[M],2).ToString().PadLeft(11);
                b19 = b19 + Math.Round(B19[M],3).ToString().PadLeft(11);
            }

            sw16.WriteLine("0 WT      {0} ", b7);
            sw16.WriteLine("0 D WT    {0} ", b8);
            sw16.WriteLine("0 P KL    {0} ", b4);
            sw16.WriteLine("0 D P KL  {0} ", b29);

            if (B33[1] != 0.0)
                sw16.WriteLine("0 P EL SPT{0} ", b33);

            sw16.WriteLine("0 HM FD   {0} ", b5);
            sw16.WriteLine("0 M A2    {0} ", b12);
            sw16.WriteLine("0 HP A2   {0} ", b11);
            sw16.WriteLine("0 M A1    {0} ", b10);
            sw16.WriteLine("0 P A1    {0} ", b9);
            sw16.WriteLine("0 P ABD   {0} ", b30);
            sw16.WriteLine("0 H UEEP  {0} ", b15);
            sw16.WriteLine("0 H ELEP  {0} ", b16);
            sw16.WriteLine("0 C2AX    {0} ", b13);
            sw16.WriteLine("0 H AB    {0} ", b14);
            sw16.WriteLine("0 P KOND  {0} ", b3);
            sw16.WriteLine("0 M KOND  {0} ", b6);
            sw16.WriteLine("0 H KOND  {0} ", b17);
            sw16.WriteLine("0 H SKOND {0} ", b18);
            sw16.WriteLine("0 T SKOND {0} ", b35);
            sw16.WriteLine("0 Q KOND  {0} ", b19);
            
            string b34 = "", b20 = "",b31 = "",b21 = "",b22 = "",b23 = "",b32 = "",b24 = "",b25 = "",b26 = "",b27 = "",b28 = "";
            for(M = 1; M <= NMAX; M++)
            {
                b34 = b34 + Math.Round(B34[M],3).ToString().PadLeft(11);
                b20 = b20 + Math.Round(B20[M],3).ToString().PadLeft(11);
                b31 = b31 + Math.Round(B31[M],4).ToString().PadLeft(11);
                b21 = b21 + Math.Round(B21[M],2).ToString().PadLeft(11);
                b22 = b22 + Math.Round(B22[M],3).ToString().PadLeft(11);
                b23 = b23 + Math.Round(B23[M],3).ToString().PadLeft(11);
                b32 = b32 + Math.Round(B32[M],4).ToString().PadLeft(11);
                b24 = b24 + Math.Round(B24[M],2).ToString().PadLeft(11);
                b25 = b25 + Math.Round(B25[M],3).ToString().PadLeft(11);
                b26 = b26 + Math.Round(B26[M],3).ToString().PadLeft(11);
                b27 = b27 + Math.Round(B27[M],2).ToString().PadLeft(11);
                b28 = b28 + Math.Round(B28[M],3).ToString().PadLeft(11);
            }

            if (MKUEHL == 1 || MKUEHL == 4)
                sw16.WriteLine("0 M KUEHLW{0}", b34);

            if (MKUEHL == 2 || MKUEHL == 5)
                sw16.WriteLine("0 T KUEHLW{0}", b34);

            if (B20[1] != 0.0)
                sw16.WriteLine("0 M SPT 1 {0}", b20);

            if (B20[1] != 0.0) 
                sw16.WriteLine("0 P SPT 1 {0}", b31);

            if (B20[1] != 0.0) 
                sw16.WriteLine("0 H SPT 1 {0}", b21);

            if (B20[1] != 0.0) 
                sw16.WriteLine("0 Q SPT 1 {0}", b22);

            if (B23[1] != 0.0) 
                sw16.WriteLine("0 M SPT 2 {0}", b23);

            if (B23[1] != 0.0) 
                sw16.WriteLine("0 P SPT 2 {0}", b32);

            if (B23[1] != 0.0) 
                sw16.WriteLine("0 H SPT 2 {0}", b24);

            if (B23[1] != 0.0) 
                sw16.WriteLine("0 Q SPT 2 {0}", b25);

            if (B26[1] != 0.0) 
                sw16.WriteLine("0 M ZU K  {0}", b26);

            if (B26[1] != 0.0)
                sw16.WriteLine("0 H ZU K  {0}", b27);

            if (B26[1] != 0.0) 
                sw16.WriteLine("0 Q ZU K  {0}", b28);

            sw16.WriteLine("1");
            //200 FORMAT(1H1)
            NKUEHL = 0;
            return;
        }   //END                    
        
        
        static void UWA028()
        {
            //ENTRY PLOTTI         
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /PRINT/ IWR, TX0, TX13, TX14, TX15, TX16, TX17, TX18
            //COMMON /STATEI/ LPMAX, NRMAX, NVW
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /PLOTYP/ LTYP(60)
            int N = 0, M = 0, M1 = 0;
            if (K == 1)
                LPMAX = 0;
            
            LPMAX = LPMAX + 1;
            double LP = LPMAX, T = 0, P = 0, E = 0;
            NVW = 0;
            int NR = 0, L = 0, L1 = 0;
            double PD = THERMN;
            double PE = ARBTA[1];
            
            for(I = 1; I <= INENDE; I++)    //DO 10 I = 1,INENDE
            {
                N = LTYP[I];

                if (N != 1 && N != 2 && N != 4 && N != 5 && N != 12 && N != 19 && N != 21 && N != 23)
                    continue;

                JJ = N2[I];
                if (N == 4 && PLTG[JJ] != PST905) continue;
                if (I > IHENDE && N != 19 && N != 23) continue;
                NR = NR + 1;
                if (N == 2 || N == 21) NVW = NVW + 1;
                
                double P1 = 0.0, P2 = 0.0, P3 = 0.0, P4 = 0.0, P5 = 0.0, P6 = 0.0, P7 = 0.0, P8 = 0.0, T1 = 0.0, T2 = 0.0, T3 = 0.0,
                    T4 = 0.0, T5 = 0.0, T6 = 0.0, T7 = 0.0, T8 = 0.0, G1 = 0.0,  G2 = 0.0, G3 = 0.0, G4 = 0.0, G5 = 0.0, G6 = 0.0,
                    G7 = 0.0;
                II = N1[I];
                JJ = N2[I];
                
                if (I > IHENDE) goto label1;
                P1 = PW[I-1]*TX2;
                P2 = PW[I]*TX2;
                P3 = P1 - P2;
                
                if (N == 1) P4 = (PW[I]+DTK[I])*TX2;
                T1 = (TWAUS[I-1]-273.15)*TX0 + TX5;
                if ((LTYP[I-1] == 2 || LTYP[I-1] == 21) && N2[I-1] == 0)
                    T1 = (EKONDW[I-1]-273.15)*TX0+TX5;
                T2 = (TWAUS[I]-273.15)*TX0 + TX5;
                G1 = GWAS[I-1]*TX3;
                if ((LTYP[I-1] == 2 || LTYP[I-1] == 21) && N2[I-1] == 0)
                    G1 = QBZWM[I-1]*TX3;
                G2 = GWAS[I]*TX3;
                goto label2;
                
            label1:
                K1 = NN1[I];
                K2 = NN2[I];
                P1 = PLTG[K1]*TX2;
                P2 = PLTG[K2]*TX2;
                P3 = P1 - P2;
                G1 = GLTG[K1]*TX3;
                G2 = GLTG[K2]*TX3;
                T = VISUM(PLTG[K1],ELTG[K1],03);
                
                if (T > 0.0) T1 = (T-273.15)*TX0 + TX5;
                if (T < 0.0) T1 = 100.0+100.0*T;
                T = VISUM(PLTG[K2],ELTG[K2],03);
                if (T > 0.0) T2 = (T-273.15)*TX0 + TX5;
                if (T < 0.0) T2 = 100.0+100.0*T;
                T3 = (UW0011(PLTG[K1],1)-273.15)*TX0+TX5;
                
            label2:
                if (II == 0) goto label3;
                G3 = GLTG[II]*TX3;
                P = PLTG[II]-DPLTG[II];
                if (N == 1 && EKONDW[I] != 0.0) P = PW[I] + DTK[I];
                if (N == 1) P = P + 0.375*DPLTG[II];
                if (N == 19) P = PLTG[II];
                P5 = P*TX2;
                E = ELTG[II]-DELTG[II];
                if (P == 0.0 || E == 0.0) goto label3;
                T = VISUM(P,E,03);
                if (T > 0.0) T4 = (T-273.15)*TX0+TX5;
                if (T < 0.0) T4 = 100.0+100.0*T;
                T5 = (UW0011(P,1)-273.15)*TX0+TX5;
                
            label3:
                if (JJ == 0) goto label4;
                P7 = PLTG[JJ]*TX2;
                if (N == 19) P7 = DPLTG[II]*TX2;
                G5 = GLTG[JJ]*TX3;
                if (PLTG[JJ] == 0.0 || ELTG[JJ] == 0.0) goto label4;
                if (N != 5) T7 = (VISUM(PLTG[JJ],ELTG[JJ],23)-273.15)*TX0+TX5;
                if (N == 5) T7 = (VISUM(PLTG[JJ],ELTG[JJ],03)-273.15)*TX0+TX5;
                
            label4:
                for(L = 1; L <= 8; L++)     //DO 9 L=1,8
                {
                    if (NBLTG[I,L] == 0) continue;
                    L1 = NBLTG[I,L];
                    if (L1 > 48 && L1 < 70) goto label7;
                    if (L == 1) goto label8;
                    M1 = IHENDE + 1;
                    
                    for(M = M1; M <= INENDE; M++)   //DO 5 M=M1,INENDE
                        if (N == 1 && N2[M] == L1 && LTYP[M] == 19) 
                            goto label6;    //5 CONTINUE
                    continue;
                    
                label6:
                    P8 = PLTG[L1]*TX2;
                    G6 = GLTG[L1]*TX3;
                    if (PLTG[L1] == 0.0 || ELTG[L1] == 0.0) continue;
                    T8 = (VISUM(PLTG[L1],ELTG[L1],23)-273.15)*TX0+TX5;
                    continue;
                    
                label7:
                    G7 = G7 + GLTG[L1]*TX3;
                    continue;
                    
                label8:
                    P6 = PLTG[L1]*TX2;
                    G4 = GLTG[L1]*TX3;
                    if (PLTG[L1] == 0) continue;
                    if (N == 4) T5 = (UW0011(PLTG[L1],1)-273.15)*TX0+TX5;
                    if (ELTG[L1] == 0) continue;
                    if (N == 4 || N == 5) T = VISUM(PLTG[L1],ELTG[L1],03);
                    if (N != 4 && N != 5) T = VISUM(PLTG[L1],ELTG[L1],23);
                    if (T > 0.0) T6 = (T-273.15)*TX0+TX5;
                    if (T <= 0.0) T6 = 100.0+100.0*T;
                }   //9 CONTINUE
                
                if (N == 1) P7=0.0;
                if (N == 1)     //then
                {
                    T3 =0.0;
                    T5 =0.0;
                    T7 =0.0;
                }   //endif
                
                if (N == 1) //then
                {
                    G5 =0.0;
                    G7 =0.0;
                }   //endif
                if (N == 02 || N == 21) //then
                {
                    P4 =0.0;
                    P8 =0.0;
                }   //endif
                if (N == 02 || N == 21) //then
                {
                    T3 =0.0;
                    T8 =0.0;
                }   //endif
                if (N == 02 || N == 21) //then
                {
                    G2 =0.0;
                    G6 =0.0;
                }   //endif
                if (N == 4) //then
                {
                    P4 =0.0;
                    P5 =0.0;
                    P7 =0.0;
                    P8 =0.0;
                }   //endif
                if (N == 4) //then
                {
                    T3 =0.0;
                    T4 =0.0;
                    T8 =0.0;
                }   //endif
                if (N == 4) //then
                {
                    G2 =0.0;
                    G3 =0.0;
                    G4 =0.0;
                    G6 =0.0;
                    G7 =0.0;
                }   //endif
                if (N == 12) //then
                {
                    P4 =0.0;
                    P5 =0.0;
                    P6 =0.0;
                    P8 =0.0;
                }   //endif
                if (N == 12) //then
                {
                    T3 =0.0;
                    T4 =0.0;
                    T5 =0.0;
                    T8 =0.0;
                }   //endif
                if (N == 12) //then
                {
                    G2 =0.0;
                    G3 =0.0;
                    G4 =0.0;
                    G6 =0.0;
                    G7 =0.0;
                }   //endif
                if (N == 19) //then
                {
                    P4 =0.0;
                    P6 =0.0;
                    P8 =0.0;
                }   //endif
                if (N == 19) //then
                {
                    T6 =0.0;
                    T8 =0.0;
                }   //endif
                if (N == 19) //then
                {
                    G2 =0.0;
                    G4 =0.0;
                    G5 =0.0;
                    G6 =0.0;
                    G7 =0.0;
                }   //endif
                if (N == 23) //then
                {
                    P4 =0.0;
                    P5 =0.0;
                    P6 =0.0;
                    P7 =0.0;
                    P8 =0.0;
                }   //endif
                if (N == 23) //then
                {
                    T3 =0.0;
                    T4 =0.0;
                    T6 =0.0;
                    T8 =0.0;
                }   //endif
                if (N == 23) //then
                {
                    G3 =0.0;
                    G4 =0.0;
                    G6 =0.0;
                    G7 =0.0;
                }   //endif
                //WRITE(30) LP,NR,N,P1,P2,P3,P4,P5,P6,P7,P8,PD,PE,T1,T2,T3,T4,T5,T6,T7,T8,G1,G2,G3,G4,G5,G6,G7
                sw30.WriteLine(LP + " " + NR + " " + N + " " + P1 + " " + P2 + " " + P3 + " " + P4 + " " + P5 + " " + P6 + " " + P7 + " " + P8 + " " + PD + " " + PE + " " + T1 + " " + T2 + " " + T3 + " " + T4 + " " + T5 + " " + T6 + " " + T7 + " " + T8 + " " + G1 + " " + G2 + " " + G3 + " " + G4 + " " + G5 + " " + G6 + " " + G7);
            }   //10 CONTINUE
            NRMAX = NR;
            return;
        }   //END
        
        
        static void UWA029()
        {   
            //ENTRY PLOTTA
            double[] T1 = new double[28],T2 = new double[28],T3 = new double[28],T4 = new double[28],T5 = new double[28],T6 = new double[28],T7 = new double[28],T8 = new double[28],
            P1 = new double[28],P2 = new double[28],P3 = new double[28],P4 = new double[28],P5 = new double[28],P6 = new double[28],P7 = new double[28],P8 = new double[28],
            G1 = new double[28], G2 = new double[28], G3 = new double[28], G4 = new double[28], G5 = new double[28], G6 = new double[28], G7 = new double[28], G8 = new double[28],
            PD = new double[28],PE = new double[28];

            int[] MTYP = new int[26];
            
            int M = 1, L = 0, LP = 0, NR = 0, N = 0;
            IZ1 = 0;
            IEND = LPMAX*NRMAX;
            
        label1:
            I = 1;
            //REWIND 30
            sr30 = new StreamReader(file30);
            for(L = 1; L <= IEND; L++)      //DO 2 L=1,IEND
            {
                string s = sr30.ReadLine();
                string[] ss = s.Split(' ');
                //READ(30)
                LP = Convert.ToInt32(ss[0]);
                NR = Convert.ToInt32(ss[1]);
                MTYP[I] = Convert.ToInt32(ss[2]);
                P1[I] = Convert.ToDouble(ss[3]);
                P2[I] = Convert.ToDouble(ss[4]);
                P3[I] = Convert.ToDouble(ss[5]);
                P4[I] = Convert.ToDouble(ss[6]);
                P5[I] = Convert.ToDouble(ss[7]);
                P6[I] = Convert.ToDouble(ss[8]);
                P7[I] = Convert.ToDouble(ss[9]);
                P8[I] = Convert.ToDouble(ss[10]);
                PD[I] = Convert.ToDouble(ss[11]);
                PE[I] = Convert.ToDouble(ss[12]);
                T1[I] = Convert.ToDouble(ss[13]);
                T2[I] = Convert.ToDouble(ss[14]);
                T3[I] = Convert.ToDouble(ss[15]);
                T4[I] = Convert.ToDouble(ss[16]);
                T5[I] = Convert.ToDouble(ss[17]);
                T6[I] = Convert.ToDouble(ss[18]);
                T7[I] = Convert.ToDouble(ss[19]);
                T8[I] = Convert.ToDouble(ss[20]);
                G1[I] = Convert.ToDouble(ss[21]);
                G2[I] = Convert.ToDouble(ss[22]);
                G3[I] = Convert.ToDouble(ss[23]);
                G4[I] = Convert.ToDouble(ss[24]);
                G5[I] = Convert.ToDouble(ss[25]);
                G6[I] = Convert.ToDouble(ss[26]);
                G7[I] = Convert.ToDouble(ss[27]);
                
                if (NR != M) continue;
                I = I + 1;
            }   //2 CONTINUE

            M = M + 1;
            if (N == 2 || N == 21) IZ1 = IZ1 + 1;
            sw16.WriteLine("1                         AUSGABE DER UWA131 UM DIE APPARATE FUER STATIONAERES TEILLASTVERHALTEN\n");
            sw16.WriteLine("0   LP  TYP      D          PE           P1          P2          P3          P4          P5          P6          P7          P8 \n");
            
            for(I = 1; I <= LPMAX; I++)     //DO 3 I=1,LPMAX
            {
                N = MTYP[I];
                sw16.WriteLine("   {0}  {1} {2}{3} {4}{5}{6}{7}{8}{9}{10}{11} ", I.ToString().PadLeft(3),N.ToString().PadLeft(3),
                    Math.Round(PD[I],3).ToString().PadLeft(12),Math.Round(PE[I],3).ToString().PadLeft(12),Math.Round(P1[I],3).ToString().PadLeft(12),
                    Math.Round(P2[I],3).ToString().PadLeft(12),Math.Round(P3[I],3).ToString().PadLeft(12),Math.Round(P4[I],3).ToString().PadLeft(12),
                    Math.Round(P5[I],3).ToString().PadLeft(12),Math.Round(P6[I],3).ToString().PadLeft(12),Math.Round(P7[I],3).ToString().PadLeft(12),
                    Math.Round(P8[I],3).ToString().PadLeft(12));
            }   //3 CONTINUE

            //1002 FORMAT(1H ,2X,I3,2X,I3,1X,2F12.3,1X,8F12.3)
            sw16.WriteLine("1                         AUSGABE DER UWA131 UM DIE APPARATE FUER STATIONAERES TEILLASTVERHALTEN\n");
            sw16.WriteLine("0   LP       TYP      PD          PE           T1          T2          T3          T4          T5          T6          T7          T8 ");

            for(I = 1; I <= LPMAX; I++)     //DO 4 I=1,LPMAX
            {
                N = MTYP[I];
                //sw16.WriteLine("",1002)I,N,PD[I],PE[I],T1[I],T2[I],T3[I],T4[I],T5[I],T6[I],T7[I],T8[I]
                sw16.WriteLine("   {0}  {1} {2}{3} {4}{5}{6}{7}{8}{9}{10}{11} ", I.ToString().PadLeft(3),N.ToString().PadLeft(3),
                    Math.Round(PD[I],3).ToString().PadLeft(12),Math.Round(PE[I],3).ToString().PadLeft(12),Math.Round(T1[I],3).ToString().PadLeft(12),
                    Math.Round(T2[I],3).ToString().PadLeft(12),Math.Round(T3[I],3).ToString().PadLeft(12),Math.Round(T4[I],3).ToString().PadLeft(12),
                    Math.Round(T5[I],3).ToString().PadLeft(12),Math.Round(T6[I],3).ToString().PadLeft(12),Math.Round(T7[I],3).ToString().PadLeft(12),
                    Math.Round(T8[I],3).ToString().PadLeft(12));
            }   //4 CONTINUE

            sw16.WriteLine("1                         AUSGABE DER UWA131 UM DIE APPARATE FUER STATIONAERES TEILLASTVERHALTEN\n");
            sw16.WriteLine("0   LP       TYP      PD          PE           G1          G2          G3          G4          G5          G6          G7 ");
            
            for(I = 1; I <= LPMAX; I++)     //DO 5 I=1,LPMAX
            {
                N = MTYP[I];
                //sw16.WriteLine("",1002)I,N,PD[I],PE[I],G1[I],G2[I],G3[I],G4[I],G5[I],G6[I],G7[I]
                sw16.WriteLine("   {0}  {1} {2}{3} {4}{5}{6}{7}{8}{9}{10}{11} ", I.ToString().PadLeft(3),N.ToString().PadLeft(3),
                    Math.Round(PD[I],3).ToString().PadLeft(12),Math.Round(PE[I],3).ToString().PadLeft(12),Math.Round(G1[I],3).ToString().PadLeft(12),
                    Math.Round(G2[I],3).ToString().PadLeft(12),Math.Round(G3[I],3).ToString().PadLeft(12),Math.Round(G4[I],3).ToString().PadLeft(12),
                    Math.Round(G5[I],3).ToString().PadLeft(12),Math.Round(G6[I],3).ToString().PadLeft(12),Math.Round(G7[I],3).ToString().PadLeft(12),
                    Math.Round(G8[I],3).ToString().PadLeft(12));
            }   //5 CONTINUE

            if (M <= NRMAX) goto label1;
            return;
        }   //END
        
        
        static void UWA031()
        {   
            //ENTRY STOBUP
            bool QSTOBU;
            double EVOR, Z0;
            double[] GASTB = new double[7], ENAST = new double[7], PZWNAS = new double[7];
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /STOBU/ GSTOB[2], QSTOB[2],GSTOZU,GSTOAB,QSTOZU
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //25 FORMAT(' ','++STOBUP++',/,2I4,9E13.5,/,8X,9E13.5/);
            int LSTBVO = 0, LTGSTB = 0;
            UWA044(I,1);
            INDSTB = KT2;
            int IREIHE = 1, I1;
            
        label4:
            IZ1 = INDSTB;
            I1 = 0;
            UWA008("PACK", ISTOBU[IZ1], ref I1, ref KT10, ref KT6, ref I);
            UWA006("RDISC",54,IZ1);
            
        label6:
            Z1 = PT[I,K];
            Z7 = E2T[I,K];

            for(IZ1 = 1; IZ1 <= 6; IZ1++)   //DO 1 IZ1= 1,6
            {
                LSTBVO = LTGSTB;
                QSTOBU = false;
                EVOR = 0.0;
                LTGSTB = LTGAB[IZ1,INDSTB];

                for(IZ2 = 1; IZ2 <= 10; IZ2++)  //DO 9 IZ2 =1,10
                {
                    IZ3 = LZUT[IZ2];
                    if (IZ3 != LTGSTB) continue;
                    
                    for(IZ4 = 1; IZ4 <= 10; IZ4++)      //DO 16 IZ4=1,10
                    {
                        if (LABT[IZ4] != 0) continue;
                        LABT[IZ4] = IZ3;
                        goto label17;
                    }   //16 CONTINUE
                    
                label17:
                    LZUT[IZ2] = 0;
                }  //9 CONTINUE

                Z2 = PNAST[IZ1];
                if (Z2 == 0.0) Z2 = PLTG[LTGSTB];
                if ( Z2 > 899.0) Z2 = UWA013(Z2);
                if (Z2 <= 0.0) Z2 = 0.5*Z1;
                PZWNAS[IZ1] = Z2;
                Z0 = Z1;
                if (Z1 >= Z2) goto label23;
                Z7 = ELTG[LTGSTB];
                
                if(Z7 < 500.0) Z7 = E2T[I,K];
                Z0 = Z2;
                
            label23:
                EVOR = Z7;
                
            label22:
                ENAST[IZ1] = Z7;
                Z5 = VISUM (Z0,Z7,13);
                Z3 = VISUM(Z0,Z5,10);
                Z4 = Z1 - Z2;
                Z5 = FASTB[IZ1];
                Z9 = 2.36;
                if (Z5 < 0.0) Z9 = 2.0;
                if (Z5 < 0.0) Z5 = -Z5;
                if (KT6 == NTTETB[KT10] && STZNDT[KT10] > 0) Z5 = Z5*FLUT;
                if (Z4 < 0.0) Z5 = -Z5;
                Z8 = Z2;
                if (Z4 < 0.0) Z8 = Z1;
                Z4 = Z5 * Math.Sqrt(1.0E05*Z0/Z3 * (1.0-Math.Pow((Z8/Z0),Z9) ));
                
                //' ','++STOBUP++',/,2I4,9E13.5,/,8X,9E13.5/
                if (LIGHT[2] == 5)
                {
                    sw16.WriteLine(" ++STOBUP++");
                    sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", IZ1.ToString().PadLeft(4),LTGSTB.ToString().PadLeft(4),Z0.ToString("0.00000E+0").PadLeft(13),
                        Z1.ToString("0.00000E+0").PadLeft(13),Z2.ToString("0.00000E+0").PadLeft(13),Z3.ToString("0.00000E+0").PadLeft(13),Z4.ToString("0.00000E+0").PadLeft(13),
                        Z5.ToString("0.00000E+0").PadLeft(13),Z6.ToString("0.00000E+0").PadLeft(13),PNAST[IZ1].ToString("0.00000E+0").PadLeft(13),ENAST[IZ1].ToString("0.00000E+0").PadLeft(13));
                    sw16.WriteLine("        {0}{1}{2} ",PLTG[LTGSTB].ToString("0.00000E+0").PadLeft(13),PZWNAS[IZ1].ToString("0.00000E+0").PadLeft(13),EVOR.ToString("0.00000E+0").PadLeft(13));
                }
                if (IZ1 == 1) goto label2;
                if (Z1 <= Z2 || Z4 < Z6 || Z6 < 0.0) goto label26;
                if (QSTOBU) goto label26;
                if (ELTG[LSTBVO] > 0.0) ENAST[IZ1-1]= ELTG[LSTBVO];
                Z7 = (EVOR * Z6 + ENAST[IZ1-1]*(Z4-Z6))/ Z4;
                if (Math.Abs(Z7 - ENAST[IZ1]) > 0.05) goto label22;
                QSTOBU = true;
                goto label22;
                
            label26:
                GASTB[IZ1-1] = Z6 -Z4;
                if (GASTB[IZ1-1] > 1.0E-10 && Z6 >= 0.0)
                    ENAST[IZ1-1] = ((Z6*ENAST[IZ1-1])-(Z4*ENAST[IZ1]))/ (Z6-Z4);
                
                if (GASTB[IZ1-1] >= 0.0 && Z6 < 0.0) ENAST[IZ1-1] = ENAST[IZ1];
                
            label2:
                Z6 = Z4;
                Z1 = Z2;
                if(IZ1 == 6) goto label5;
                if (LTGAB[IZ1+1,INDSTB] != 0) continue;
                
            label5:
                GASTB[IZ1] = Z4;
                goto label7;
            }   //1 CONTINUE
            
        label7:
            for(IZ1 = 1; IZ1 <= 6; IZ1++)   //DO 8 IZ1 = 1,6
            {
                LTGSTB = LTGAB[IZ1,INDSTB];
                if (LTGSTB == 0) goto label10;
                for(IZ2 = 1; IZ2 <= 10; IZ2++)      //DO 13 IZ2 = 1,10
                {
                    if (LABT[IZ2] != LTGSTB) continue;
                    
                    if (GASTB[IZ1] <= 0)    goto label11;
                    if (GASTB[IZ1] > 0)    goto label12;
                    
                label12:
                    GABT[IZ2] = GASTB[IZ1];
                    PABT[IZ2] = PZWNAS[IZ1];
                    EABT[IZ2] = ENAST[IZ1];
                    GSTOB[IREIHE] = GSTOB[IREIHE] + GABT[IZ2];
                    QSTOB[IREIHE] = QSTOB[IREIHE] + GABT[IZ2] * EABT[IZ2];
                    ILTG [LTGSTB] = ISTOBU[INDSTB];
                    GSTOAB = GSTOAB + GABT[IZ2];
                    if (PABT[IZ2] != PST906 && PABT[IZ2] != PST908) continue;
                    
                    for(IZ3 = 1; IZ3 <= 10; IZ3++)      //DO 18 IZ3 = 1,10
                    {
                        if(NSPZU[IZ3] == 0 || NSPZU[IZ3] == LTGSTB) goto label19;
                        continue;
                        
                    label19:
                        NSPZU[IZ3] = LTGSTB;
                        goto label8;
                    }   //18 CONTINUE
                    
                label11:
                    LABT[IZ2] = 0;
                    goto label14;
                }   //13 CONTINUE
                
            label14:
                for(IZ2 = 1; IZ2 <= 10; IZ2++)      //DO 15 IZ2 = 1,10
                {
                    if(LZUT[IZ2] != 0) continue;
                    LZUT[IZ2] = LTGSTB;
                    GZUT[IZ2] = -GASTB[IZ1];
                    PZUT[IZ2] = PZWNAS[IZ1];
                    EZUT[IZ2] = ENAST[IZ1];
                    GSTOB[IREIHE] = GSTOB[IREIHE] - GZUT[IZ2];
                    QSTOB[IREIHE] = QSTOB[IREIHE] - GZUT[IZ2] * EZUT[IZ2];
                    ILTG [LTGSTB] = ISTOBU[INDSTB] + 10000;
                    GSTOZU = GSTOZU + GZUT[IZ2];
                    QSTOZU = QSTOZU + GZUT[IZ2]*EZUT[IZ2];
                    if (PZUT[IZ2] != PST906 && PZUT[IZ2] != PST908) goto label8;
                    
                    for(IZ3 = 1; IZ3 <= 10; IZ3++)  //DO 20 IZ3= 1,10
                    {
                        if (NSPAB[IZ3] == 0 || NSPAB[IZ3] == LTGSTB) 
                            goto label21;
                        continue;
                        
                    label21:
                        NSPAB[IZ3]= LTGSTB;
                        goto label8;
                    }   //20 CONTINUE
                }   //15 CONTINUE
            label8:
                ;
            }
            
        label10:
            if (KT3 == 0 || INDSTB == KT3) goto label3;
            INDSTB = KT3;
            IREIHE = 2;
            goto label4;
            
        label3:
            UWA044(I,2);
            return;
        }   //END
        
                
        static void UWA032()
        {
            //ENTRY      RSTFUP                                      
            bool QKR, QDRUVE, QFEST = false, QEBS11 = false;
            double LMAX = 0,  PVDUES = 0, ZSEGV = 0, GV = 0, DSUM = 0, BEAUFV = 0, DPGES = 0, DIVOR = 0, S1 = 0, T2 = 0, E2 = 0, 
                V2 = 0, H0VOR = 0, HSCH = 0, BSCH = 0, DM = 0, KRZ = 0, SINALF = 0, EPS = 0, C0VOR = 0, EREAKT = 0, P2REAK = 0,
                E2REAK = 0, EPSREA, ALFAX = 0, PSI1 = 0, P11MAX = 0, H0REAK = 0, ALFAM = 0, Z = 0, HPOL = 0, P11MIN = 0, 
                ALFAMI = 0, HAD = 0, F1 = 0, F2 = 0, ZSEG = 0, BEAUF1 = 0, BEAUF2 = 0, FSPALT = 0, FRAND = 0, FKS = 0, 
                FSUM = 0, C0UOPT = 0, ETAU = 0, FC0 = 0, ETASUM = 0, ETAUX = 0, HIVOR = 0, E2VOR = 0, T2VOR = 0, V2VOR = 0,
                C2VOR = 0, ZGES = 0, BEAGES = 0, EOMEGA = 0, ZSTR = 0, ABD = 0, HI = 0;
            int INVENT = 0, NAA = 0, IZW = 0, NN = 0, MM = 0, ISEGV = 0;
            //INCLUDE 'KRAWAL80.COMMON'
            
            if (EPSMAX <= 0.0) 
                EPSMAX = 0.75001;

            int NRVEGE = 0;
            double SUMG = 0.0;
            double SUMGP = 0.0;
            double DPSTL = 0.0;
            double DPSSV = 0.0;
            double VA = 0.0;
            double VR = 0.0;
            double AVR = 0.0;
            double ETAVOR = 0.0;
            double FNASS = 1.0;
            QKR = false;
            QDRUVE = false;
            double GMALE1 = 0.0;
            double GMALE2 = 0.0;
            double GMALE3 = 0.0;
            double G1 = 0.0;
            double G2 = 0.0;
            double G3 = 0.0;
            double G2X = 0.0;
            int KSTEU = 0;
            double A = BRTLE[I - 1];
            double B = BRTLA[I - 1];
            double BEAUFT = STFDI[I - 1];
            double ZAUFV = 0.0;
            int FLUT0 = FLUT;

            if (PSTFMX[I] > 0.0) 
                FLUT = (int)PSTFMX[I];

            double T1 = T1T[I];
            double E1 = E1T[I, K];
            double P0 = PT[I - 2, K];
            double P1 = PT[I - 1, K];
            double P2 = PT[I, K];
            double GG = G[I, K];
            double T0 = T1T[I - 2];
            double V0 = VISUM(P0, T0, 00);
            double V1 = VISUM(P1, T1, 00);
            double CKR = 333.0 * Math.Sqrt(P1 * V1);
            
            for(IZ1 = 1; IZ1 <= 5; IZ1++)   //DO 316 IZ1 = 1,5
            {
                GVENT [IZ1] = 0.0;
                DELTAP[IZ1] = 0.0;
                CVENT [IZ1] = 0.0;
            }   //316 CONTINUE

            if (LIGHT[2] == 6)
            {
                sw16.WriteLine(" ++RSTFUP++{0}{1}{2}{3}{4}{5}{6}{7}{8} ", T1.ToString("0.00000E+0").PadLeft(13),E1.ToString("0.00000E+0").PadLeft(13),P0.ToString("0.00000E+0").PadLeft(13),P1.ToString("0.00000E+0").PadLeft(13),
                    P2.ToString("0.00000E+0").PadLeft(13), GG.ToString("0.00000E+0").PadLeft(13), VENDUR[1].ToString("0.00000E+0").PadLeft(13), VENDUR[2].ToString("0.00000E+0").PadLeft(13), VENDUR[3].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", VENDUR[4].ToString("0.00000E+0").PadLeft(13), VENDUR[5].ToString("0.00000E+0").PadLeft(13), VENDUR[6].ToString("0.00000E+0").PadLeft(13),
                    BEAUFG[1].ToString("0.00000E+0").PadLeft(13), BEAUFG[2].ToString("0.00000E+0").PadLeft(13), BEAUFG[3].ToString("0.00000E+0").PadLeft(13), BEAUFG[4].ToString("0.00000E+0").PadLeft(13),
                    BEAUFG[5].ToString("0.00000E+0").PadLeft(13), BEAUFG[6].ToString("0.00000E+0").PadLeft(13),TNPROZ[1].ToString("0.00000E+0").PadLeft(13));
                
                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", TNPROZ[2].ToString("0.00000E+0").PadLeft(13),TNPROZ[3].ToString("0.00000E+0").PadLeft(13),
                    TNPROZ[4].ToString("0.00000E+0").PadLeft(13), TNPROZ[5].ToString("0.00000E+0").PadLeft(13), TNPROZ[6].ToString("0.00000E+0").PadLeft(13),
                    UPM[K].ToString("0.00000E+0").PadLeft(13),STFDI[I].ToString("0.00000E+0").PadLeft(13),LS[I].ToString("0.00000E+0").PadLeft(13),BRTLA[I].ToString("0.00000E+0").PadLeft(13),
                    GMAXG1.ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", EPS11.ToString().PadLeft(5), EPSMAX.ToString().PadLeft(5), VBEZ.ToString().PadLeft(5), NADUES.ToString().PadLeft(5), KRZEIN[JJ].ToString().PadLeft(5),
                    JJ.ToString().PadLeft(5), K.ToString().PadLeft(5), I.ToString().PadLeft(5), NVENT[JJ].ToString().PadLeft(5));
                
                //70 FORMAT(' ','++RSTFUP++',9E13.5,/,10E13.5,/,10E13.5,/,10I5/)
            }
            INVENT = 0;
            IZ10 = (int)NVENT[JJ];

            if (IZ10 == 10)
                NVENT[JJ] = 0;

            if (NVENT[JJ] >= 0) 
                goto label25;

            PVDUES = P1;
            INVENT = -NVENT[JJ];
            NVENT[JJ] = 0;
            
        label25:
            if (K == 2) 
                goto label3;

            GV = GG;
            EPSMIN = BEAUFG[1];
            NAA = (int)NADUES;
            ZSEGV = NAA;
            if (NAA == 0) ZSEGV = 4.0;
            if (NADUES == 0) goto label1;
            EPS11 = BEAUFG[NAA];
            if (GMING1 >= 1.0) EPSMIN = EPS11;
            
        label105:
            IZ1 = NAA + 1;
            
        label303:
            IZ1 = IZ1 - 1;
            
            DSUM = Math.Pow(VENDUR[IZ1],2);
            
            if(BEAUFG[IZ1] <= 0)    goto label304;
            if(BEAUFG[IZ1] > 0)     goto label307;
            
        label307:
            if ((IZ1-1) < 0)    goto label304;
            if ((IZ1-1) == 0)    goto label305;
            if ((IZ1-1) > 0)    goto label306;
            
        label305:
            BEAUFV = BEAUFG[IZ1];
            goto label308;
            
        label306:
            BEAUFV = BEAUFG[IZ1]-BEAUFG[IZ1-1];
            
            if (BEAUFG[IZ1-1] < 0)      goto label345;
            if (BEAUFG[IZ1-1] == 0)      goto label345;
            if (BEAUFG[IZ1-1] > 0)      goto label308;
            
        label345:
            DSUM = 0.0;
            
            for(IZ2 = 1; IZ2 <= IZ1; IZ2++)     //DO 318 IZ2=1,IZ1
                DSUM = DSUM + Math.Pow(VENDUR[IZ2],2);      //318 CONTINUE
            
        label308:
            GVENT[IZ1] = GV*BEAUFV/BEAUFG[NAA];
            
        label325:
            CVENT[IZ1] = GVENT[IZ1]*V0*0.354E+06/DSUM;
            DELTAP[IZ1] = Math.Pow(CVENT[IZ1],2)*ZETAV/V0/19.62E+04;
            if (KSTEU == 5) goto label327;
            SUMG = SUMG + GVENT[IZ1];
            SUMGP = GVENT[IZ1]*DELTAP[IZ1]+SUMGP;

            if (IZ1 != NAA || KSTEU != 2) goto label303;
            A2 = Math.Pow(VENDUR[NAA+1], 2);
            if (A2 == 0.0) goto label303;
            A2 = G2X * V0 * 0.354E+06 / A2;
            A2 = A2*A2 * ZETAV / V0 / 19.62E+04;
            A1 = GG - GV;
            SUMG = SUMG + A1;
            SUMGP = SUMGP + A1*A2;
            goto label303;
            
        label304:
            DPSTL = SUMGP/SUMG;
            
        label1:
            DPSSV = DPBEZ*P0;
            if (VBEZ == 0.0) goto label2;
            if (KSTEU == 2) GV = GG;
            DPSSV = DPBEZ*GV*GV*V0/VBEZ;
            
        label2:
            DPGES = DPSTL + DPSSV;
            if (DPGES == 0.0) goto label106;
            DIVOR = DI[I-1];
            DI[I-1] = (P0-DPGES)/P0;
            DI[I-1] = (DI[I-1]*2.0+DIVOR)/3.0;

        label106:
            if (K == 2) goto label107;
            T1 = VISUM (P1,E1,03);
            
        label3:
            S1=VISUM(P1,T1,02);
            T2= VISUM(P2,S1,04);
            E2=VISUM(P2,T2,01);
            V2 = VISUM(P2,T2,00);
            H0VOR = E1 - E2;
            if (T2 > 0.0) goto label500;
            A1 = E1 - 0.4*H0VOR;
            A2 = VISUM(S1,A1,05);
            if (A1 > 0.0) goto label500;
            FNASS = 1.0 - 0.87*(1.0+A1);
            
        label500:
            H0[I,K] = H0VOR;
            HSCH = LS[I] - 4.0;
            BSCH = BRTLA[I];
            DM = STFDI[I]+LS[I];
            DREHZ = UPM[K];
            KRZ = 1;
            if (KRZEIN[JJ] == 2 || KRZEIN[JJ] == 4) KRZ = 2;
            KRANZZ[JJ]=KRZ;
            QFEST = true;
            if (KRZEIN[JJ] > 2) QFEST= false;
            SINALF = OEFFNG[I];
            if (K == 2 || SINALF != 0.0) goto label600;
            SINALF = 0.24254;
            if (KRZ == 2) SINALF = 0.28736;
            
        label600:
            EPS = P2/P1;
            PHI[I] = 1748000.0*Math.Sqrt (H0VOR)/DM/DREHZ;
            C0VOR = PHI[I];

            if (K == 2) goto label700;

            if (NADUES == 1 || NADUES == 2 || NADUES == 3) goto label701;
            EREAKT = 0.15;
            A = 0.047 + 0.0345*(C0VOR-2.0) - 0.12*(EPS-0.84);
            A = 0.15 - 2.0*(0.15-A);
            B = 0.15 - A;
            goto label702;
            
        label701:
            EREAKT = 0.06;
            A = 0.009*(C0VOR-2.5) - 0.06*(EPS-0.76);
            A = 0.06 - 2.0*(0.06-A);
            B = 0.06 - A;

        label702:
            BRTLE[I-1] = A;
            BRTLA[I-1] = B;
            goto label720;

        label700:
            EREAKT = BEAUFT/BEPS[1];

            if (BEAUFT == 0.0) EREAKT = YG[I]/XG[I];
            EREAKT = A + B*EREAKT;
            if (EREAKT < 0.0) EREAKT = 0.0;

        label720:
            E2REAK = E1 - H0VOR*(1.0 - EREAKT);
            P2REAK = VISUM(S1,E2REAK,15);
            EPSREA = P2REAK/P1;
            UWA026(ref P1, ref E1, EPSREA, ref ALFAX, ref PSI1);
            A1 = DM*3.141592*SINALF*FLUT;
            F = GG/ALFAX*1000.0;
            Z5 = F/A1;
            if (LIGHT[2] != 6) goto label723;

            sw16.WriteLine(" ++RSTFUP++{0}{1}{2}{3}{4}{5}{6}{7}{8} ", EREAKT.ToString("0.00000E+0").PadLeft(13),XG[I].ToString("0.00000E+0").PadLeft(13),YG[I].ToString("0.00000E+0").PadLeft(13),Z5.ToString("0.00000E+0").PadLeft(13),
                HSCH.ToString("0.00000E+0").PadLeft(13),EPSREA.ToString("0.00000E+0").PadLeft(13),P2REAK.ToString("0.00000E+0").PadLeft(13),P1.ToString("0.00000E+0").PadLeft(13),ALFAX.ToString("0.00000E+0").PadLeft(13));
            
            sw16.WriteLine("{0}{1}{2}{3} ", BRTLE[I-1].ToString("0.00000E+0").PadLeft(13),BRTLA[I-1].ToString("0.00000E+0").PadLeft(13),STFDI[I-1].ToString("0.00000E+0").PadLeft(13),DI[I-1].ToString("0.00000E+0").PadLeft(13));
                
        label723:
            if (K == 2) goto label6;
            QEBS11 = false;
            if (EPS11 == 0.0) goto label4;
            QEBS11 = true;
            Z1 = EPS11;
            goto label5;
            
        label4:
            P11MAX = P2*GMAXG1;

            if (P11MAX > (0.975*P1)) P11MAX = 0.975*P1;
            T2 = VISUM(P11MAX,S1,04);
            E2 = VISUM(P11MAX,T2,01);
            H0REAK = E1 - E2;
            if (BEAUFT != 0.0) goto label730;
            EREAKT = GMAXG1;
            goto label740;

        label730:
            EREAKT = EPSMAX/BEAUFT;
            
        label740:
            EREAKT = A + B*EREAKT;
            E2REAK = E1 - H0REAK*(1.0 - EREAKT);
            P2REAK = VISUM(S1,E2REAK,15);
            Z4 = P2REAK/P1;
            if (Z4 > 0.975) Z4 = 0.975;
            UWA026(ref P1, ref E1, Z4, ref ALFAM, ref Z);
            Z1 = EPSMAX;
            LMAX = 999.9;
            if (!QFEST) goto label16;
            Z4 = ALFAM/ALFAX/GMAXG1;
            if (Z4 >= 0.7 && EPSMAX < 0.9) Z1 = EPSMAX* Z4;
            if (Z1 == EPSMAX && Z1 != 0.75001) QEBS11 = true;
            
        label5:
            LMAX = 500.0/Math.Pow(P1,0.33);
            
        label16:
            HSCH = Z5/Z1;
            if (QEBS11) goto label7;
            if (HSCH < 10.0) HSCH =10.0;
            if (HSCH < LMAX) goto label7;
            if (SINALF >= 0.33035) goto label8;
            if(SINALF > 0.28) goto label10;
            SINALF = 0.28736;
            goto label9;
            
        label10:
            SINALF = 0.33035;
            
        label9:
            Z5 = F/(DM*3.14*SINALF);
            goto label16;

        label8:
            HSCH = Z5/EPSMAX;
            Z1 = EPSMAX;
            if (HSCH <= LMAX) goto label7;
            HSCH = LMAX;
            SINALF = Z5* SINALF/(LMAX*EPSMAX);
            QEBS11 = true;
            
        label7:
            Z1 = Z5/HSCH;
            LS[I] = HSCH + 4.0;
            BEPS[1] = Z1;
            BEAUFV = Z1;
            STFDI[I-1] = Z1;
            if (LIGHT[2] == 6)
            {
                sw16.WriteLine(" ++RSTFUP++{0}{1}{2}{3}{4}{5}{6}{7}{8} ", HSCH.ToString("0.00000E+0").PadLeft(13), Z1.ToString("0.00000E+0").PadLeft(13), SINALF.ToString("0.00000E+0").PadLeft(13), LMAX.ToString("0.00000E+0").PadLeft(13),
                    ALFAM.ToString("0.00000E+0").PadLeft(13), ALFAX.ToString("0.00000E+0").PadLeft(13),P11MAX.ToString("0.00000E+0").PadLeft(13),Z4.ToString("0.00000E+0").PadLeft(13),
                    Z5.ToString("0.00000E+0").PadLeft(13));
                    
                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", GVENT[1].ToString("0.00000E+0").PadLeft(13), GVENT[2].ToString("0.00000E+0").PadLeft(13), GVENT[3].ToString("0.00000E+0").PadLeft(13),
                    GVENT[4].ToString("0.00000E+0").PadLeft(13), GVENT[5].ToString("0.00000E+0").PadLeft(13), GVENT[6].ToString("0.00000E+0").PadLeft(13),
                    CVENT[1].ToString("0.00000E+0").PadLeft(13), CVENT[2].ToString("0.00000E+0").PadLeft(13), CVENT[3].ToString("0.00000E+0").PadLeft(13), CVENT[4].ToString("0.00000E+0").PadLeft(13));


                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", CVENT[5].ToString("0.00000E+0").PadLeft(13), CVENT[6].ToString("0.00000E+0").PadLeft(13), DELTAP[1].ToString("0.00000E+0").PadLeft(13),
                    DELTAP[2].ToString("0.00000E+0").PadLeft(13), DELTAP[3].ToString("0.00000E+0").PadLeft(13), DELTAP[4].ToString("0.00000E+0").PadLeft(13), DELTAP[5].ToString("0.00000E+0").PadLeft(13), DELTAP[6].ToString("0.00000E+0").PadLeft(13),
                    ZETAV.ToString("0.00000E+0").PadLeft(13));
            }
            OEFFNG[I] = SINALF;

            if (ETAIOP[I] <= 0.0) ETAIOP[I] = 0.80;
            if (BRTLE[I] == 0.0) goto label620;

            BSCH = BRTLE[I];
            BRTLA[I] = BSCH;
            goto label14;
            
        label620:
            HPOL = H0VOR*ETAIOP[I];
            TX1 = 2.27E+06*GG*HPOL/DM/FLUT/DREHZ/Z1;
            if (!QFEST) goto label12;
            P11MIN = P2*GMING1;
            Z4 = P11MIN/P1;
            UWA026(ref P1, ref E1, Z4, ref ALFAMI, ref Z);
            if (BEAUFG[1] <= 0.0) EPSMIN = BEAUFV*ALFAX*GMING1/ALFAMI;
            HAD = VISUM(P11MIN,S1,04);
            HAD = E1 - VISUM(P11MIN,HAD,01);
            TX2 = 2.15;
            if (KRZ == 2) TX2 = TX2*1.65;
            F1 = TX2/C0VOR;
            F1 = 1.0- ACR4 * Math.Pow(Math.Abs(F1-1.0),ACR5);
            F2 = C0VOR *Math.Sqrt(HAD/XH0[I]);
            F2 = TX2/F2;
            F2 = 1.0 - ACR4* Math.Pow(Math.Abs(F2-1.0),ACR5);
            F1 = F2/F1;
            TX1 = TX1*HAD/XH0[I]*Z1/EPSMIN*F1*P11MIN/P2;
            F2 = 1.0;
            
        label13:
            F1 = ACR10;
            if (KRZ == 2) F1 = F1/1.414;
            BSCH = F1*Math.Sqrt(TX1*F2*(HSCH +4.0)/DM);
            if (LIGHT[2] == 6)
                sw16.WriteLine(" ++RSTFUP++{0}{1}{2}{3}{4}{5}{6}{7}{8} ", BSCH.ToString("0.00000E+0").PadLeft(13), EPSMIN.ToString("0.00000E+0").PadLeft(13),HAD.ToString("0.00000E+0").PadLeft(13),
                    XH0[I].ToString("0.00000E+0").PadLeft(13),P11MIN.ToString("0.00000E+0").PadLeft(13),ACR3.ToString("0.00000E+0").PadLeft(13),ACR5.ToString("0.00000E+0").PadLeft(13));
            
            if (BSCH < 20.0) BSCH = 20.0;
            BRTLA[I] =BSCH;
            goto label14;
            
        label12:
            F2 = GMAXG1;
            EPSMIN = BEAUFV;
            goto label13;

        label6:
            BEAUFT = Z5/HSCH;
            EPS11 = BEPS[1];
            if (GMING1 >= 1.0) EPSMIN = EPS11;
            if(NADUES == 0)goto label100;
            if((BEAUFG[NADUES+1] + BEAUFG[NADUES-1]) == 0.0) goto label100;
            if (NVENT[JJ] != 0) goto label100;

            ZSEG= 0.0;
            IZW = 0;
            IZ1 = NADUES;
            if (GMING1 >= 1.0 && EPSMIN > BEAUFT) goto label121;
            
            for(IZ1 = 1; IZ1 <= 5; IZ1++)   //DO 103 IZ1 = 1,5
            {
                if (BEAUFG[IZ1] == 0.0 && IZ1 > NADUES)
                    continue;
                BEAUF1 = BEAUFG[IZ1];
                
                if (BEAUF1 > BEAUFT) goto label104;
                ZSEG = ZSEG + 1.0;
                if (BEAUFG[IZ1] != 0.0) IZW = IZ1;
            }   //103 CONTINUE

            KSTEU = 1;
            BEAUF2 = 0.0;
            
        label18:
            F1 = A1*BEAUF1*HSCH;
            G1 = F1*ALFAX/1000.0;
            GV = G1;
            NAA = IZW;
            goto label105;
            
        label104:
            if (IZW > 0) goto label115;

            BEAUF2 = BEAUFG[IZ1];
            NRVEGE = IZ1;
            
        label119:
            KSTEU = 3;
            ZSEGV = IZ1;
            BEAUF1 = 0.0;
            G1 = 0.0;
            G2 = GG;
            DSUM = 0.0;

            for(K3 = 1; K3 <= IZ1; K3++)    //DO 20 K3 = 1,IZ1
                DSUM = DSUM + Math.Pow(VENDUR[K3],2);       //20 CONTINUE
            
            if (DSUM == 0.0) goto label117;
            GV = GG;
            DPSTL = GV*V0*0.354E+06/DSUM;
            DPSTL = DPSTL*DPSTL*ZETAV/V0/19.62E+04;
            goto label117;
            
        label115:
            BEAUF1 = BEAUFG[IZ1-1];
            KSTEU = 2;
            BEAUF2 = BEAUFG[IZ1] - BEAUF1;
            NRVEGE = IZ1;
            
        label117:
            F2 = A1*BEAUF2*HSCH;
            G2X = F2*ALFAX/1000.0;
            if (QDRUVE) goto label107;
            if (KSTEU == 3) goto label1;
            goto label18;

        label100:
            BEAUF1 = BEAUFT;
            ZSEG = (NADUES);
            
            if (NADUES == 0) ZSEG = 4.0;
            ZSEG = ZSEG*BEAUF1/EPS11;
            if (ZSEG < 1.0) ZSEG = 1.0;
            if (ZSEG > 5.0) ZSEG = 5.0;
            if (NVENT[JJ] != 0) goto label118;
            if (EPSMIN < BEAUFT) goto label118;
            QDRUVE =true;
            IZ1 = 1;
            
        label121:
            BEAUF2 = EPSMIN;
            goto label119;
            
        label118:
            G1 = GG;
            BEAUF2 = 0.0;
            
            if (EPSMAX < BEAUFT && NVENT[JJ] == 0) goto label120;
            KSTEU = 4;
            if (NVENT[JJ] == 0) goto label107;
            GV = GG;
            NAA = NVENT[JJ];
            BEAUFG[NAA] = BEAUFT;
            if (NAA == 1) EPSMIN = BEAUFT;
            ZSEG = (NAA);
            goto label105;
            
        label120:
            BEAUF1 = EPSMAX;
            G1 = GG*EPSMAX/BEAUFT;
            
        label49:
            G3 = GG - G1;
            GG = GG - G3;

            if(KT5 != 0) goto label82;
            
            for(NN = 1; NN <= 35; NN++)     //DO 83 NN = 1,35
                if (LTGSAM[1,NN] == 0)
                    goto label84;   //83 CONTINUE
            goto label99;
            
        label84:
            KT5 = NN;
            LTGSAM[1,NN] = 1;
            UWA010(I,2);
            
        label82:
            UWA010 (I-2,1);
            if (KT5 != 0) goto label85;
            
            for(NN = 1; NN <= 35; NN++)     //DO 86 NN = 1,35
                if (LTGSAM[1,NN] == 0) goto label87;    //86 CONTINUE
            UWA010(I,1);
            goto label99;
            
        label87:
            KT5 = NN;
            UWA010(I-2,2);
            
        label85:
            UWA010(I,1);
            for(NN = 1; NN <= 10; NN++)     //DO 88 NN = 1,10
            {
                if (LZUT[NN] == 0) goto label89;
                if (LZUT[NN] >= 93 && LZUT[NN] <= 98) goto label90;
            }   //88 CONTINUE
            goto label99;
            
        label90:
            NN = LZUT[NN];
            GLTG[NN] = G3;
            GURSTF[NN-92] = G3;
            
            if (LIGHT[4] == 5)
                sw16.WriteLine(" *** RSTF UL ***{0}{1} ", NN.ToString().PadLeft(4), Math.Round(G3,4).ToString().PadLeft(9));
                //180 FORMAT(1H ,'*** RSTF UL ***',I4,F9.4)
            
        label96:
            G[I,K] = G[I,K] - G3;
            G[I-1,K] = G[I-1,K] - G3;
            goto label91;

        label89:
            for(MM = 93; MM <= 98; MM++)    //DO 92 MM = 93,98
                if (ILTG[MM] == 0) goto label93;        //92 CONTINUE
            goto label99;
            
        label93:
            LZUT[NN] = MM;
            int i = 1;
            UWA008("PACK", ILTG[MM], ref i, ref KT10, ref KT6, ref I);
            UWA044(I,2);
            UWA044(I-2,1);
            
            for(NN= 1; NN <= 10; NN++)  //DO 94 NN = 1,10
                if (LABT[NN] == 0) 
                    goto label95;   //94 CONTINUE
            UWA044(I,1);
            goto label99;
            
        label95:
            LABT[NN] = MM;
            GABT[NN] = G3;
            GURSTF[MM-92] = G3;

            if (LIGHT[4] == 5)
                sw16.WriteLine(" *** RSTF UL ***{0}{1} ", MM.ToString().PadLeft(4), Math.Round(G3,4).ToString().PadLeft(9));
            PABT[NN] = PT[I-2,K];
            EABT[NN] = E1T[I-2,K];
            UWA044(I-2,2);
            UWA044(I,1);
            goto label96;
            
        label99:
            sw16.WriteLine(" FEHLER RSTF");
        label91:
            G2 = 0.0;
            DSUM = 0.0;
            IZ1 = NADUES;
            
        label330:
            IZ1 = IZ1 +1;
            if (IZ1 == 6) goto label328;
            if (VENDUR[IZ1] == 0.0) goto label330;
            if (BEAUFG[IZ1] != 0.0) goto label330;
            DSUM = VENDUR[IZ1];
            IZ2 = IZ1;
            goto label330;
            
        label328:
            if (DSUM == 0.0) goto label327;
            DSUM = DSUM*DSUM;
            IZ1 = IZ2;
            KSTEU = 5;
            GVENT[IZ1] = G3;
            goto label325;
            
        label327:
            KSTEU = 1;
            
        label46:
            BEAUFV = BEAUF1;
            ZSEGV = ZSEG;
            GV = G1;
            H0VOR = H0[I,K];
            C0VOR = PHI[I];
            P1= PT[I-1,K];
            P2= PT[I,K];
            goto label14;
            
        label107:
            if (KSTEU == 1) goto label49;
            if (KSTEU == 4) goto label46;
            if (KSTEU == 2) G2 = GG - G1;
            GV = G2;
            BEAUFV = BEAUF2;

            P1 = DRUCKT(P1,E1,P2,G2X,E1,P2,G2,1.0);
            if (NRVEGE == 0) goto label80;
            DELTAP[NRVEGE] = P1;
            GVENT[NRVEGE] = G2;
            
        label80:
            T1 = VISUM (P1,E1,03);
            S1 = VISUM (P1,T1,02);
            T2 = VISUM (P2,S1,04);
            E2 = VISUM (P2,T2,01);
            H0VOR = E1 -E2;
            FNASS = 1.0;
            if (T2 > 0.0) goto label510;
            A1 = E1 - 0.4*H0VOR;
            A2 = VISUM(S1,A1,05);
            if (A1 > 0.0) goto label510;
            FNASS = 1.0 - 0.87*(1.0+A1);
            
        label510:
            if (H0VOR < 0.1) H0VOR = 0.1;
            C0VOR = PHI[I]*Math.Sqrt(H0VOR/H0[I,K]);
            if (KSTEU != 3) goto label14;
            PT[I-1,K] = P1;
            PHI[I] = C0VOR;
            H0[I,K] = H0VOR;

        label14:
            FSPALT = DM*ACR1;
            FSPALT = 1.0-(FSPALT/(LS[I]+FSPALT));
            FRAND = 1.0/(ACR11*Math.Pow((BSCH/LS[I]),0.67) + 1.0);
            FKS = 1.0/Math.Pow((0.234 - 0.202*Math.Log10(ACRKS/BSCH)),2.5);
            FKS = (1.0+Math.Sqrt(0.9517-0.045*FKS)*1.063)/2.0111;
            
            if ((FKS-1.01) <= 0)    goto label363;
            if ((FKS-1.01) > 0)    goto label364;
            
        label364:
            FKS = 1.01;
            
        label363:
            FSUM = FSPALT * FRAND * FKS;
            C0UOPT = ACR9/(Math.Pow(FSUM,ACR2));
            ETAU = ETA01;
            
            if ((KRZ-1) <= 0)   goto label30;
            if ((KRZ-1) > 0)   goto label31;
            
        label31:
            C0UOPT = ACR3/(Math.Pow(FSUM,ACR2));
            ETAU = ETA02;
            
        label30:
            FC0 = C0UOPT/C0VOR;
            ETASUM = ETAU * FSUM;
            ETAUOP[I] = ETASUM;
            
            if ((FC0 - 0.2) < 0)    goto label32;
            if ((FC0 - 0.2) >= 0)    goto label33;
            
        label33:
            FC0 =1.0-ACR4* Math.Pow(Math.Abs(FC0-1.0),ACR5);
            goto label34;
            
        label32:
            A1 = 1.0 - ACR4*Math.Pow(0.8,ACR5);
            A1 = Math.Log(1.0/(1.0-A1));
            A1 = A1/0.2235;
            FC0 = 1.0- Math.Pow(Math.Abs(FC0-1.0),A1);
            
        label34:
            if (FETAE[KT6] >= 0.0)
                ETAUX = ETASUM * FC0 * FNASS * DETA * FETAE[KT6];
            if (FETAR[KT6] == 0.0) FETAR[KT6] = 1.0;
            if (FETAR[KT6] != 1.0 || FETAE[KT6] < 0.0)
                ETAUX = ETASUM*FC0*FNASS*FETAR[KT6];
            
            if (ETAUX <= 0)     goto label35;
            if (ETAUX > 0)     goto label36;
            
        label35:
            ETAUX = 0.0;
            HIVOR = 0.0;
            VA = 0.0;
            AVR = 0.0;
            if (KSTEU == 2) goto label402;
            goto label37;
            
        label36:
            HIVOR = H0VOR * ETAUX;
            E2VOR = E1 - HIVOR;
            T2VOR = VISUM(P2,E2VOR,03);
            V2VOR = VISUM (P2,T2VOR,00);
            C2VOR = GV*V2VOR*88500.0/DM/LS[I]/BEAUFV/FLUT;
            
            if ((KRZ-2) < 0)    goto label60;
            if ((KRZ-2) == 0)    goto label61;
            if ((KRZ-2) > 0)    goto label60;
            
        label61:
            C2VOR = C2VOR/1.6;
        label60:
            if ((C2VOR-CKR) <= 0)       goto label38;
            if ((C2VOR-CKR) > 0)       goto label39;
            
        label39:
            if (QKR) goto label38;
            P2= P2/CKR*C2VOR;
            T2= VISUM(P2,S1,04);
            E2=VISUM(P2,T2,01);
            V2 = VISUM(P2,T2,00);
            H0VOR = E1 - E2;
            if (H0VOR < 0.1) H0VOR = 0.1;
            C0VOR = 1748000.0*Math.Sqrt(H0VOR)/DM/DREHZ;
            QKR = true;
            goto label30;
            
        label38:
            AVR= Math.Pow((C2VOR/91.5),2);
            AVR = AVR*ETAUX*ACR8;
            ISEGV = NADUES;
            if (NADUES == 0) ISEGV = 4;
            if (BEAUFG[ISEGV+1] != 0.0) ISEGV = ISEGV + 1;
            if (BEAUFG[ISEGV+1] == 0.0 && GMAXG1 > 1.0 && EPSMAX > 1.01*BEPS[1]) ISEGV = ISEGV + 1;
            if (ISEGV > 5) ISEGV = 5;
            ZGES = ISEGV;
            BEAGES = BEPS[1];
            if (NADUES == ISEGV) goto label404;
            if (BEAUFG[ISEGV] != 0.0) BEAGES = BEAUFG[ISEGV];
            if (BEAUFG[ISEGV] == 0.0 && GMAXG1 > 1.0 && EPSMAX > 1.01*BEPS[1]) BEAGES = EPSMAX;
            
        label404:
            EOMEGA = (1.0-BEAGES )*3.1416*DM/ZGES/BSCH;
            if (LIGHT[2] == 6)
            {
                sw16.WriteLine(" ++RSTFUP++       {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", ISEGV.ToString().PadLeft(5),NADUES.ToString().PadLeft(5),BEAUFG[ISEGV+1].ToString("0.00000E+0").PadLeft(13),GMAXG1.ToString("0.00000E+0").PadLeft(13),
                EPSMAX.ToString("0.00000E+0").PadLeft(13),BEPS[1].ToString("0.00000E+0").PadLeft(13),BEAGES.ToString("0.00000E+0").PadLeft(13),DM.ToString("0.00000E+0").PadLeft(13),
                ZGES.ToString("0.00000E+0").PadLeft(13),BSCH.ToString("0.00000E+0").PadLeft(13));
                
                sw16.WriteLine(" (AUFFUELLVERLUST)     {0}{1}{2}{3}{4}{5}{6}{7}{8} ", KSTEU.ToString().PadLeft(5),EOMEGA.ToString("0.00000E+0").PadLeft(13),ZSEGV.ToString("0.00000E+0").PadLeft(13),
                ZAUFV.ToString("0.00000E+0").PadLeft(13),EPSMIN.ToString("0.00000E+0").PadLeft(13),BEAUFT.ToString("0.00000E+0").PadLeft(13),BEAUF1.ToString("0.00000E+0").PadLeft(13),
                BEAUF2.ToString("0.00000E+0").PadLeft(13),ZSEG.ToString("0.00000E+0").PadLeft(13));
                //405 FORMAT(1H ,10H++RSTFUP++,7X,2I5,8E13.5/,1X,17H(AUFFUELLVERLUST),5X,I5,8E13.5)
            }
            if (KSTEU != 2) goto label400;
            
        label402:
            ZAUFV = (NRVEGE-1) + (BEAUFT-BEAUF1)/(BEAUFG[NRVEGE] - BEAUFG[NRVEGE-1]);
            if (ETAUX == 0.0) goto label37;
            
        label400:
            if (ZAUFV != 0.0 && K == 2) goto label401;
            ZAUFV = ZSEGV;
            
        label401:
            if (EOMEGA < ACR12) goto label410;
            EOMEGA = ACR12;
            ZSTR = 0.0;
            goto label403;
            
        label410:
            //goto label(411,412,413,414,415), 
            if(ISEGV == 1)      goto label411;
            if(ISEGV == 2)      goto label412;
            if(ISEGV == 3)      goto label413;
            if(ISEGV == 4)      goto label414;
            if(ISEGV == 5)      goto label415;
            
        label411:
            ZSTR = 0.0;
            goto label403;
            
        label412:
            ZSTR = 2.0 - ZAUFV;
            goto label403;
            
        label413:
            ZSTR = 3.0 - ZAUFV;
            
            if (ZAUFV < 2.0) ZSTR = 1.0;
            goto label403;
            
        label414:
            ZSTR = 4.0 - ZAUFV;
            if (ZAUFV < 2.0) ZSTR = ZAUFV;
            goto label403;
            
        label415:
            ZSTR = 5.0 - ZAUFV;
            if (ZAUFV < 3.0) ZSTR = 2.0;
            if (ZAUFV < 2.0) ZSTR = ZAUFV;
            
        label403:
            BEAGES = BEAUFV;
            if (K == 2 && KSTEU != 1 && KSTEU != 3) BEAGES = BEAUFT;
            VA = ACR6*BSCH*H0VOR/DM/BEAGES/C0VOR;
            VA = VA*((1.0-EOMEGA/ACR12)*ZSTR + EOMEGA/ACR12*ZAUFV);
            
            if (LIGHT[2] == 6)
            {
                sw16.WriteLine(" ++RSTFUP++(AUFFUELLVERLUST){0}{1}{2}{3}", ZSTR.ToString("0.00000E+0").PadLeft(13),ZAUFV.ToString("0.00000E+0").PadLeft(13),BEAUFV.ToString("0.00000E+0").PadLeft(13),BEAUFT.ToString("0.00000E+0").PadLeft(13));
                
                sw16.WriteLine("                           {0}{1}{2}{3}{4}{5} ", BSCH.ToString("0.00000E+0").PadLeft(13),H0VOR.ToString("0.00000E+0").PadLeft(13),DM.ToString("0.00000E+0").PadLeft(13),BEAGES.ToString("0.00000E+0").PadLeft(13),C0VOR.ToString("0.00000E+0").PadLeft(13),VA.ToString("0.00000E+0").PadLeft(13));
                //406 FORMAT(1H ,10H++RSTFUP++,17H(AUFFUELLVERLUST),4E13.5//27X,6E13.5)
            }
            
        label37:
            E2 = E1 - HIVOR+AVR+VA;
            if (K == 2) STFDI[I-1] = BEAUFT;
            if (INVENT == 0 && KSTEU == 1) STFDI[I-1] = BEAUFV;
            if (LIGHT[2] != 6) goto label15;
            
            sw16.WriteLine(" ++RSTFUP++{0}{1}{2}{3}{4}{5}{6}{7}{8}", P1.ToString("0.00000E+0").PadLeft(13),E1.ToString("0.00000E+0").PadLeft(13),P2.ToString("0.00000E+0").PadLeft(13),GV.ToString("0.00000E+0").PadLeft(13),
                BEAGES.ToString("0.00000E+0").PadLeft(13),H0VOR.ToString("0.00000E+0").PadLeft(13),HIVOR.ToString("0.00000E+0").PadLeft(13),VR.ToString("0.00000E+0").PadLeft(13),ETAUX.ToString("0.00000E+0").PadLeft(13));
            
            sw16.WriteLine("          {0}{1}{2}{3}{4}{5}{6}{7}{8} ", E2.ToString("0.00000E+0").PadLeft(13),AVR.ToString("0.00000E+0").PadLeft(13),VA.ToString("0.00000E+0").PadLeft(13),FSPALT.ToString("0.00000E+0").PadLeft(13),FRAND.ToString("0.00000E+0").PadLeft(13),
                FKS.ToString("0.00000E+0").PadLeft(13),FC0.ToString("0.00000E+0").PadLeft(13),C0UOPT.ToString("0.00000E+0").PadLeft(13),C0VOR.ToString("0.00000E+0").PadLeft(13));
            //42 FORMAT(' ','++RSTFUP++',9E13.5,/,10X,9E13.5/)
            
        label15:
            if (K != 2) goto label133;
            if (KSTEU == 2 || KSTEU == 3) goto label131;
            GMALE1 = GV * E2;
            
        label132:
            E2 = (GMALE1+GMALE2+GMALE3)/GG;
            BEPS[2] = BEAUF1 + BEAUF2;
            if (G2X != 0.0) BEAUF2 = G2/G2X*BEAUF2;
            BEAUFV = BEAUF1 + BEAUF2;
            GV = G1 + G2;
            goto label133;
            
        label131:
            GMALE2 = GV * E2;
            if ( KSTEU == 3) goto label132;
            KSTEU = 5;
            goto label46;
            
        label133:
            A2 =LS[I]/DM;
            A1 = 0.52*A2 +0.04;
            A2 =Math.Pow((0.125-A2),2)*1.1+0.019;
            A3 = DM*DREHZ/19100.0;
            T2 = VISUM(P2,E2,03);
            V2 = VISUM (P2,T2,00);
            A3 = Math.Pow(A3,3)*DM*LS[I]*1.5708E-09/V2;
            ABD = 0.8 - EPSMAX;
            
            if (ABD < 0)    goto label53;
            if (ABD >= 0)    goto label54;
            
        label53:
            ABD = 0.0;
            
        label54:
            A1 = (1.0- ABD - BEAUFV)*A1;
            A2 =ABD*A2;
            VR =(A2+A1)*A3*0.86/GV*ACR7*FLUT;
            
            if((KRZ-2) < 0)     goto label55;
            if((KRZ-2) == 0)     goto label56;
            if((KRZ-2) > 0)     goto label55;
            
        label56:
            VR = VR*1.7;
            
        label55:
            HI = E1-E2;
            HI = HI-VR;
            if (FETAR[KT6] < 0.0) HI = -FETAR[KT6] * H0[I,K];
            ETAIOP[I] = HI/H0[I,K];
            E2 = E1-HI;
            if (LIGHT[2] != 6) goto label19;

            sw16.WriteLine(" ++RSTFUP++{0}{1}{2}{3}{4}{5}{6}{7}{8} ", P1.ToString("0.00000E+0").PadLeft(13),E1.ToString("0.00000E+0").PadLeft(13),P2.ToString("0.00000E+0").PadLeft(13),
                G[I,K].ToString("0.00000E+0").PadLeft(13),BEPS[K].ToString("0.00000E+0").PadLeft(13),H0[I,K].ToString("0.00000E+0").PadLeft(13),
                HI.ToString("0.00000E+0").PadLeft(13),VR.ToString("0.00000E+0").PadLeft(13),ETAIOP[I].ToString("0.00000E+0").PadLeft(13));
            
            sw16.WriteLine("          {0}{1}{2} " ,E2.ToString("0.00000E+0").PadLeft(13),DPSTL.ToString("0.00000E+0").PadLeft(13),DPSSV.ToString("0.00000E+0").PadLeft(13));
            //367 FORMAT(' ','++RSTFUP++',9E13.5,/,10X,3E13.5/)

            sw16.WriteLine(" ++RSTFUP++");
            sw16.WriteLine("    G-1     C-1   DP-1    G-2     C-2   DP-2    G-3     C-3   DP-3    G-4     C-4   DP-4    G-5     C-5   DP-5    G-6     C-6   DP-6");

            string s = "";
            for(IZ1 = 1; IZ1 <= 5; IZ1++)
                s = s + " " + Math.Round(GVENT[IZ1],2).ToString().PadLeft(8) + "  " + Math.Round(CVENT[IZ1],1).ToString().PadLeft(5) + " " + Math.Round(DELTAP[IZ1],2).ToString().PadLeft(5);
            
            sw16.WriteLine("{0}", s);       //(GVENT[IZ1],CVENT[IZ1],DELTAP[IZ1], IZ1 = 1,5)
            //332 FORMAT(6(1X,F8.2,2X,F5.1,1X,F5.2))
            
        label19:
            if (K == 2) goto label134;
            if (QEBS11) goto label17;
            if (ETAIOP[I] < ETAVOR) goto label17;
            if (HSCH*1.01 > LMAX) goto label17;
            HSCH = HSCH*1.01;
            ETAVOR = ETAIOP[I];
            QKR = false;
            goto label7;
            
        label17:
            OEFFNG[I] = SINALF;
            
        label134:
            E2T[I,K] = E2;

            if (INVENT == 0) goto label21;
            IZ1 = 0;
            A1 = GG +G3;
            A2 = BEAUFT;
            A3 = A1*BEAUFG[INVENT]/A2;
            
        label23:
            P2 = P2REAK * A3/(GG+G3);
            
            if (P2 > (0.975*PVDUES)) P2 = 0.975*PVDUES;
            EPSREA = P2/PVDUES;
            UWA026(ref PVDUES, ref E1, EPSREA, ref ALFAM, ref Z);
            F = A3/ALFAM*1000.0;
            A4 = F/(DM*3.141592*SINALF*FLUT)/HSCH;
            if (A2-A4 == 0.0) goto label24;
            A5 = A1 + (BEAUFG[INVENT]-A2)/(A2-A4)*(A1-A3);
            
        label24:
            if (Math.Abs((A5-A3)/A3) < 0.0001) goto label22;
            IZ1 = IZ1 + 1;
            if (IZ1 > 50) goto label22;
            A1 = A3;
            A2 = A4;
            A3 = A5;
            goto label23;

        label22:
            A1 = A5 - GG - G3;
            TNPROZ[KT10] = (G[I-2,K]+A1)/G[I-2,K];
            A7 = TNPROZ[KT10] - 1.0;
            if (LAUFEN <= 2) A7 = 0.5*A7;
            if (LAUFEN > 2) A7 = 0.9*A7;
            TNPROZ[KT10] = 1.0 + A7;
            NVENT[JJ] = -INVENT;
            sw16.WriteLine(" +++RSTF++{0}{1} ", TNPROZ[KT10].ToString("0.000000E+0").PadLeft(13),EREAKT.ToString("0.000000E+0").PadLeft(13));
            //602 FORMAT(1X,9H+++RSTF++,2E13.6)
            if (LIGHT[2] != 6) goto label21;
            
            sw16.WriteLine(" ++RSTFUP++{0}{1}{2}{3}{4}{5}{6}{7}{8} ", P2REAK.ToString("0.00000E+0").PadLeft(13), PVDUES.ToString("0.00000E+0").PadLeft(13),E1.ToString("0.00000E+0").PadLeft(13),
                P2.ToString("0.00000E+0").PadLeft(13),ALFAM.ToString("0.00000E+0").PadLeft(13),PT[I-1,K].ToString("0.00000E+0").PadLeft(13),BEAUFG[INVENT].ToString("0.00000E+0").PadLeft(13),
                BEAUFT.ToString("0.00000E+0").PadLeft(13),A1.ToString("0.00000E+0").PadLeft(13));
            
            sw16.WriteLine("{0}{1}{2}{3} ", A2.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),A4.ToString("0.00000E+0").PadLeft(13),A5.ToString("0.00000E+0").PadLeft(13));
            
                
        label21:
            for(IZ1 = 1; IZ1 <= 5; IZ1++)   //DO 81 IZ1 = 1,5
            {
                if (DELTAP[IZ1] != 0.0 && IZ1 != NRVEGE) DELTAP[IZ1] = PT[I-1,K];
                if (IZ1 == NRVEGE && KSTEU == 3) 
                    DELTAP[IZ1]=DELTAP[IZ1]*1.00001;
            }   //81 CONTINUE
            FLUT = FLUT0;
            NVENT[JJ] = IZ10;
            return;
        }      //END                                                    


        static void UWA033()
        {
            //ENTRY DELTAT
            bool QWEICH;
            double M = 0, LAMDAX = 0, EWEINE = 0, TWEINE = 0, GWEINE = 0, EWAUSE = 0, TWAUSE = 0, AZW1= 0, AZW = 0, V1 = 0, V2 = 0, 
                VX = 0, CEWE = 0, TX = 0, VXX = 0, TSS = 0, VX2 = 0, ETAX = 0, R10 = 0, AZW2 = 0, CX7 = 0, C = 0, CEDE = 0, TYPS = 0,
                ZWAUE1 = 0, ZWAUE2 = 0, TIXS = 0, C6 = 0, Z = 0, C10 = 0, A = 0, F1C = 0, AA = 0, BB = 0;
            //INCLUDE 'KRAWAL80.COMMON'
            //300 FORMAT (5X,2I5,5X,'GRAED-WARNING')
            //"     {0}{1}     GRAED-WARNING"
            int KZWI = K;
            int IZWI = 0, KRET = 0, N = 0;
            
            if (K != 3)
                goto label102;

            IZWI = I;
            K = 1;
            
        label102:
            KRET = K;
            
            for(I = 1; I <= INENDE; I++)    //DO 101 I=1,INENDE
            {
                if (LLTG[15] == 1 && NTYP[I] != 19) continue;
                K = KRET;
                QWEICH = false;
                if (IZWI == 0) goto label103;

                if ((I - IZWI) < 0) continue;
                if ((I-IZWI) == 0)   goto label103;
                if ((I-IZWI) > 0)   goto label104;
                
            label103:
                II = NTYP[I];
                N = II;
                if (II == 2)    goto label357;
                if (II == 5)    goto label357;
                if (II == 11)   goto label357;
                if (II == 12)   goto label357;
                if (II == 19)   goto label357;
                if (II == 21)   goto label357;
                continue;
                
            label357:
                if (INDDT[I] == 0) continue;
                II = INDDT[I];
                if (II < 0 && IZWI == 0) K = 2;
                II = Math.Abs(II);
                K2 = 0;
                K1 = 0;
                if (NTYP[I] == 12) goto label30;
                if (I > IHENDE && IZWI == 0) goto label201;
                EWEINE = EWAUS[I-1];
                TWEINE = TWAUS[I-1];
                GWEINE = GWAS[I-1];
                if (K != 1) goto label358;
                PENULL[II] = PW[I-1];
                PANULL[II] = PW[I];
                TANULL[II] = TWAUS[I];
                
            label358:
                if (KZWI == 3) goto label200;
                if (NTYP[I-1] != 2 && NTYP[I-1] != 21) goto label200;
                if (N2[I-1] != 0) goto label200;
                EWEINE = DEKOND[I-1];
                TWEINE = EKONDW[I-1];
                GWEINE = QBZWM[I-1];
                
            label200:
                EWAUSE = EWAUS[I];
                TWAUSE = TWAUS[I];
                if (I > IHENDE && IZWI > 0) goto label1201;
                goto label202;
                
            label201:
                IZ7 = NN1[I];
                IZ6 = NN2[I];
                EWAUSE = ELTG[IZ6];
                EWEINE = ELTG[IZ7];
                TWAUSE = VISUM (PLTG[IZ6],ELTG[IZ6],03);
                TWEINE = VISUM (PLTG[IZ7],ELTG[IZ7],03);
                GWEINE = GLTG[IZ7];
                if (K != 1) goto label1201;
                PENULL[II] = PLTG[IZ7];
                PANULL[II] = PLTG[IZ6];
                TANULL[II] = TWAUS[I];
                
            label1201:
                IZ7 = NN1[I];
                IZ6 = NN2[I];
                if (NTYP[I] == 11) goto label23;
                if ((N == 2 || N == 21) && N2[I] == 0) goto label200;
                if (TWAUSE < 0.0) TWAUSE = UW0011(PLTG[IZ6],1);
                if(NTYP[I] != 19) goto label21;
                AZW1 = TWEINE;
                AZW = EWEINE;
                V1 = VISUM(PLTG[IZ7],TWEINE,10);
                V2 = VISUM(PLTG[IZ6],TWAUSE,10);
                VX = (V2+V1)*0.5;
                if(TWEINE > 0) goto label22;
                AZW = VISUM(PLTG[IZ7],TWEINE,-11);
                
            label22:
                CEWE = (EWAUSE-AZW)/(TWAUSE-TWEINE);
                TX = (TWAUSE + TWEINE)*0.5;
                VXX = VX;
                TSS = TX;
                VX2 = VISUM(PLTG[IZ7],TSS,-10);
                if(VXX > VX2) goto label500;
                VXX = VX2;
                
            label500:
                ETAX = UW0019(TSS,VXX);
                LAMDAX = UW0018(TSS,VXX);
                TX4 = VISUM(PLTG[IZ7],TX5,-21);
                TX6 = VISUM(PLTG[IZ7],TX5,-11);
                R10 = TX6 - TX4;
                AZW2 = TX6;
                if(NTYP[I] == 19) goto label1023;
                
            label21:
                if (TWEINE < 0.0) TWEINE = UW0011(PLTG[IZ7],1);
                
            label202:
                AZW = TWAUSE - TWEINE;
                CEWE = 1.0;
                if (GWEINE <= 0.0) continue;
                if (AZW > 0.0) CEWE = (EWAUSE-EWEINE) / AZW;
                if (NTYP[I] == 12) CEWE = 1.0;
                
            label1023:
                IZ7 = N1[I];
                if(IZ7 == 0)  IZ7=NBLTG[I,1];
                if (AZW <= 0.0) continue;
                IZ6 = N2[I];
                CX7 = ELTG[IZ7]-VERLE[I];
                
                if (KATZE2[I] == 2)  CX7 = ELTG[IZ7]*VERLE[I];
                C = PLTG[IZ7];
                
                if (NTYP[I] != 12 && IZ7 > 40) 
                {
                    sw16.WriteLine(" ***IM ELEMENT{0}  IST DIE LEITUNGSNUMMER{1}  GROESSER 40***", I.ToString().PadLeft(4),IZ7.ToString().PadLeft(4));
                    //1024 FORMAT(' ','***IM ELEMENT',I4,2X,'IST DIE LEITUNGSNUMMER',I4,2X,'GROESSER 40***')
                }
                if (NTYP[I] != 12 && IZ7 <= 40) C = C - DPLTG[IZ7];
                TX3 = UW0011(C,1);
                TX7 = VISUM (C,CX7,03);
                if (TX7 < 0.0) TX7 = TX3;
                
                if (IZ6 <= 0)   goto label71;
                if (IZ6 > 0)   goto label70;
                
            label71:
                TX6 = TX3;
                goto label72;
                
            label70:
                TX6 = VISUM (PLTG[IZ6],ELTG[IZ6],03);
                if(TX6 < 0.0) TX6=TX3;
                
            label72:
                if (NTYP[I] == 11) goto label203;
                if (NTYP[I] == 19) goto label203;
                if (NTYP[I] == 2) goto label2;
                if (NTYP[I] == 21) goto label3;

                AZW = TX7 - TX6;
                CEDE = 1.0;
                if (AZW > 0.0) CEDE = (CX7 - ELTG[IZ6])/AZW;
                if (NTYP[I] == 12) CEDE = 1.0;
                if (GLTG[IZ7] == 0.0) continue;
                TX5 = GWEINE *CEWE/GLTG[IZ7]/CEDE;
                if (K != 1) goto label1;
                TX4 = (TX7 - TWAUSE )/DTS[I];
                IZ4 = 1;
                if (TX4 < 0.0) sw16.WriteLine("     {0}{1}     GRAED-WARNING", IZ4.ToString().PadLeft(5),I.ToString().PadLeft(5));
                OMEGA0[II] = Math.Log(Math.Abs(TX4))/(TX5-1.0);
                GWNULL[II] = GWEINE;
                GKNULL[II] = GWEINE *CEWE;
                GDNULL[II] = GLTG[IZ7];
                TDNULL[II] = TX7;
                TENULL[II] = TWEINE;
                PDNULL[II] = C;
                DTNULL[II] = DTS[I];
                continue;

            label203:
                TYPS = TWEINE;
                if(NTYP[I] != 19) goto label23;
                ZWAUE1 = 0;
                if(AZW1 > 0) goto label24;
                ZWAUE1 = (1+AZW1) * R10 /(TX3 - TWEINE);
                
            label24:
                if(K != 1) goto label23;
                ZWAUE2 = (TWAUSE-TYPS)/Math.Log(Math.Abs((TX3-TYPS)/(TX3-TWAUSE)));
                ZWAUE2 = ZWAUE2 / (EWAUSE - AZW2);
                
            label23:
                if(K != 1) goto label14;
            if (DEKOND[I] == 0.0) continue;
                TIXS = TWAUSE;
                if (NTYP[I] != 11) goto label7;
                AZW = (EWAUSE - EWEINE)*GWEINE;
                if (AZW != 0.0) OMEGA0[II] = DEKOND[I]/AZW;
                GWNULL[II] = GWEINE;
                continue;

            label3:
                K1=1;

            label2:
                if (DTK[I] == 0.0) goto label4;
                if (GLTG[IZ6] <= 0.05 && K == 2) DTK[I] = 0.01;
                if (GLTG[IZ6] <= 0.05) continue;
                TX5 = GWEINE /GLTG[IZ6];
                TX8 = SIEDI(C);
                TX9 = VISUM(C,TX6,01);
                TX8 = EWEINE + (TX8-TX9)/TX5;
                TYPS = VISUM(PW[I],TX8,03);
                if (K != 1) goto label10;
                TSNULL[II] = TX3;
                TKNULL[II] = TX6;
                TX4 = (TX3-TYPS)/DTK[I];
                IZ4 = 2;
                if (TX4 < 0.0) sw16.WriteLine("     {0}{1}     GRAED-WARNING", IZ4.ToString().PadLeft(5),I.ToString().PadLeft(5));
                OMEGA0[II] = Math.Log(Math.Abs(TX4))/(TX5-1.0);
                GKNULL[II] = GLTG[IZ6];
                goto label5;
                
            label4:
                TYPS = TWEINE;
                if (K != 1) goto label14;
                
            label5:
                if (K1 == 1) goto label6;
                if (DTS[I] < 1.5) goto label90;
                TIXS = TWAUSE;
                goto label7;
                
            label90:
                NTYP[I] = 21;
                LTYP[I] = 21;
                NTYP0[I]= 21;
                K1 = 1;
                goto label6;
                
            label6:
                TX1 = VISUM (C,C6,-11);
                TX0 = SIEDI (C);
                TIXS= TWAUSE -GLTG[IZ7]/GWEINE *(CX7-TX1);
                if (TX7 > TX3) goto label8;
                IZ4 = 6;
                sw16.WriteLine("     {0}{1}     GRAED-WARNING", IZ4.ToString().PadLeft(5),I.ToString().PadLeft(5));
                continue;
                
            label8:
                CEDE =(CX7 -TX1)/(TX7-TX3);
                if (GLTG[IZ7] <= 0.05) DTS[I] = 0.01;
                if (GLTG[IZ7] <= 0.05) continue;
                TX5 = GWEINE * CEWE /GLTG[IZ7]/CEDE;
                if (K != 1) goto label16;
                TX4 = (TX7 - TWAUSE )/(TX3-TIXS);
                IZ4 = 3;
                if (TX4 < 0.0) sw16.WriteLine("     {0}{1}     GRAED-WARNING", IZ4.ToString().PadLeft(5),I.ToString().PadLeft(5));
                TX4 = Math.Log(Math.Abs(TX4))/(TX5-1.0);
                
            label7:
                TX2 = (TX3-TYPS)/(TX3-TIXS);
                IZ4 = 4;
                if (TX2 < 0.0) sw16.WriteLine("     {0}{1}     GRAED-WARNING", IZ4.ToString().PadLeft(5),I.ToString().PadLeft(5));
                OMEGAR[II] = Math.Log(Math.Abs(TX2));
                GWNULL[II] = GWEINE;
                if(NTYP[I] != 19) goto label25;
                OMEGA0[II] = ETAX;
                GKNULL[II] = LAMDAX;
                TSNULL[II] = VX;
                GDNULL[II] = CEWE;
                TDNULL[II] = ZWAUE1;
                TENULL[II] = ZWAUE2;
                continue;
                
            label25:
                TSNULL[II] = TX3;
                TENULL[II] = TYPS;
                GDNULL[II] = GLTG[IZ7];
                TDNULL[II] = TX7;
                PDNULL[II] = C;
                DTNULL[II] = DTS[I];
                if (K1 != 1) continue;
                OMEGAR[II] = TX4 + OMEGAR[II]*0.1875;
                QWEICH = true;
                K = 2;
                goto label103;

            label1:
                A3 = TWEINE;
                A4 = TDNULL[II];
                A5 = TX7;
                A6 = GDNULL[II];
                A7 = GLTG[IZ7];
                if (A6 <= 0.05 || A7 <= 0.05 || GWNULL[II] <= 0.05) DTS[I] = 0.01;
                if (A6 <= 0.05 || A7 <= 0.05 || GWNULL[II] <= 0.05) continue;
                Z7 = TENULL[II];
                if (CEWE == 0.0) CEWE = 1.0;
                TX4 = GWEINE *CEWE/GKNULL[II];
                
            label12:
                A2 = 0.11E-02;
                if (NTYP[I] == 5) A2 = 0.33E-02;
                
            label17:
                A1 = 0.77E-04;
                TX1 =(A1+A2)/(((A1*Math.Pow(((Z7-263.15)/(A3-263.15)),0.27)) * Math.Pow((GWNULL[II]/GWEINE ), 0.65))+((A2* Math.Pow((A4/A5),0.5))*Math.Pow((A6/A7),0.7)));
                
                if (K2 == 3) goto label18;
                if (TX4 == 0.0) continue;
                TX2 = OMEGA0[II]/TX4*TX1*(TX5-1.0);
                if (K2 == 2) goto label13;
                DTS[I] = (TX7 - TWAUSE )/Math.Exp(TX2);
                TX2 = 1.0/Math.Exp(TX2);
                TWAUSE = (A5*(TX2-1.0) + TWEINE*(1.0-TX5))/(TX2-TX5);
                TX4 = A5 - TX5*(TWAUSE-TWEINE);
                DTS[I] = TX4 - TWEINE;
                
                if (LIGHT[4] != 6)
                    continue;

                sw16.WriteLine(" ++DELTAT++");
                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", DTS[I].ToString("0.00000E+0").PadLeft(13),TX1.ToString("0.00000E+0").PadLeft(13),TX2.ToString("0.00000E+0").PadLeft(13),
                    TX4.ToString("0.00000E+0").PadLeft(13),TX5.ToString("0.00000E+0").PadLeft(13),TX7.ToString("0.00000E+0").PadLeft(13),CEWE.ToString("0.00000E+0").PadLeft(13),
                    CEDE.ToString("0.00000E+0").PadLeft(13),TWAUSE.ToString("0.00000E+0").PadLeft(13),OMEGA0[II].ToString("0.00000E+0").PadLeft(13));
                //9 FORMAT(' ','++DELTAT++',/,10E13.5/)
                
                if(DTS[I] > 100.0)
                    FORERR();
                continue;

            label10:
                A3 = TYPS;
                A4 = TSNULL[II];
                A5 = TX3;
                A6 = GKNULL[II];
                A7 = GLTG [IZ6];
                if (A6 <= 0.05 || A7 <= 0.05 || GWNULL[II] <= 0.05) DTK[I] = 0.01;
                if (A6 <= 0.05 || A7 <= 0.05 || GWNULL[II] <= 0.05) continue;
                Z7 = TENULL[II];
                K2 = 2;
                TX4 = GWEINE /GWNULL[II];
                goto label12;
                
            label13:
                if (QWEICH)goto label14;
                DTK[I] = (TX3 - TYPS)/Math.Exp(TX2);
                TX2 = 1.0/Math.Exp(TX2);
                TWAUSE = (A5*(TX2-1.0) + TWEINE*(1.0-TX5))/(TX2-TX5);
                TX4 = A5 - TX5*(TWAUSE-TWEINE);
                DTK[I] = TX4 - TWEINE;

            label14:
                if (GWNULL[II] == 0.0) continue;
                TX4 = GWEINE /GWNULL[II];
                A3 = TX3;
                if (NTYP[I] == 11) goto label205;
                if (NTYP[I] == 19) goto label204;
                
                if ((K1-1) < 0)     goto label18;
                if ((K1-1) == 0)     goto label6;
                if ((K1-1) > 0)     goto label18;
                
            label16:
                Z = (TX5-1.0)*(TX7-TX3)/TX5/(TX3-TYPS);
                A2 = 0.33E-02;
                A4 = TDNULL[II];
                A5 = TX7;
                A6 = GDNULL[II];
                A7 = GLTG[IZ7];
                if (A6 <= 0.05 || A7 <= 0.05) DTS[I] = 0.01;
                if (A6 <= 0.05 || A7 <= 0.05) continue;
                Z7 = TSNULL[II];
                K2 = 3;
                goto label17;
                
            label18:
                TX2 = (Math.Pow(TX4,0.5))* Math.Pow(((TYPS-263.15)/(TENULL[II]-263.15)),0.27);
                if (K1 != 1) goto label15;
                IZ4 = 5;
                if ( Z < 0.0) sw16.WriteLine("     {0}{1}     GRAED-WARNING", IZ4.ToString().PadLeft(5),I.ToString().PadLeft(5));
                A2 = TX1 *(TX5 - 1.0);
                TX1 = Math.Log(Math.Abs(Z));
                TX1 = ((OMEGAR[II]/TX4)-(TX1/A2))/(1.0/A2 +0.1875/TX2);
                TX1 = TX1 - 1.0/(Z*Math.Exp(TX1)*(1.0+0.1875*A2/TX2));
                TX1 = Math.Exp(-TX1);
                TX1 = (TX3 - TYPS)*TX1 - ((TX7-TX3)/TX5);
                if (QWEICH) goto label105;
                DTS[I] = TX1 + DTTKOR [II];
                continue;
                
            label105:
                K = 1;
                DTTKOR [II] = DTS[I] - TX1;
                continue;

            label204:
                if (OMEGAR[II] == 0.0) continue;
                TX4 = TX4 * CEWE / GDNULL[II];

                M = 0.625;
                C10 = 3.49E-03;
                A = 0.4;
                goto label28;

            label28:
                F1C = 0.9;
                TX2 = (Math.Pow((OMEGA0[II] * TSNULL[II]),M) / GKNULL[II] + F1C * C10)/((Math.Pow((ETAX * TSNULL[II]),M) / LAMDAX) * Math.Pow((GWNULL[II]/GWEINE),M) +F1C * C10);
                TX2 = TX2 * (1+TENULL[II]*(TDNULL[II]-1.0/TX2* GWEINE/GWNULL[II]*ZWAUE1));
                TX2 = TX2 * (1 - A* Math.Pow((1-GWEINE/GWNULL[II]),6));
                goto label15;
                
            label205:
                AZW = (EWAUSE - EWEINE)*GWEINE;
            if (AZW == 0.0) continue;
                DTS[I] = OMEGA0[II]*AZW;
                DEKOND[I] = DTS[I];
                continue;
                
            label15:
                TX1 = TX2/TX4*OMEGAR[II];
                TX1 = Math.Exp(-TX1);
                DTS[I]= (TX3 - TYPS)*TX1;
                if (NTYP[I] == 19) DEKOND[I] = DTS[I];
                continue;

            label30:
                UWA048(I);
                if (I <= IHENDE) goto label31;
                IX1 = NN1[I];
                A1 = VISUM(PLTG[IX1],ELTG[IX1],23);
                A2 = ELTG[IX1];
                A3 = GLTG[IX1];
                Z1 = TWAUS[I];
                Z2 = EWAUS[I];
                goto label32;
                
            label31:
                A1 = TWAUS[I-1];
                A2 = EWAUS[I-1];
                A3 = GWAS[I-1];
                Z1 = TWAUS[I];
                Z2 = EWAUS[I];
                
            label32:
                K1 = NBLTG[I,1];
                Z6 = 0.01;
                if (SUGL <= 0.05 && K == 2) goto label39;
                if (SUGL <= 0.05) continue;
                A5 = SUQL/SUGL;
                A4 = VISUM(PLTG[K1],A5,23);
                A6 = SUGL;
                K2 = N2[I];
                Z4 = VISUM(PLTG[K2],ELTG[K2],23);
                Z5 = ELTG[K2];
                if (Z1 == A1) continue;
                if (K == 2) goto label33;
                if (A3 <= 0.05) goto label39;
                A7 = (A4-Z1-Z4+A1)/Math.Log((A4-Z1)/(Z4-A1));
                if (A4-Z1 < Z4-A1) A7 = (Z4-A1-A4+Z1)/Math.Log((Z4-A1)/(A4-Z1));
                A8 = (Z2-A2)/(Z1-A1);
                OMEGA0[II] = A7/A3/A8/(Z1-A1);
                GWNULL[II] = A3;
                GKNULL[II] = A3*A8;
                GDNULL[II] = A6;
                TDNULL[II] = A4;
                TENULL[II] = A1;
                continue;

            label33:
                IX10 = 0;
                Z6 = DTS[I] - 1.0;
                if (Z6 < 0.01) Z6 = 0.01;
                if (A3 <= 0.05 || A6 <= 0.05) goto label39;
                
            label34:
                Z4 = A1 + Z6;
                if (Z4 >= A4) Z6 = 0.01;
                if (Z4 >= A4) goto label39;
                Z5 = VISUM(PLTG[K2],Z4,21);
                Z2 = A2 + A6*(A5-Z5)/A3;
                Z1 = VISUM(PW[I],Z2,03);
                if (Z1 > A4) Z6 = Z6 + 1.0;
                if (Z1 > A4) goto label34;
                Z7 = 0.0;
                Z8 = 0.0;
                Z9 = 0.0;
                Z10= 0.0;
                IX1 = 0;
                AA = 0.000077;
                BB = 0.0011;
                Z3 = (AA+BB)/(AA*Math.Pow(((TENULL[II]-263.15)/(A1-263.15)),0.27)* Math.Pow((GWNULL[II]/A3),0.65) + BB* Math.Pow((TDNULL[II]/A4),0.5)*Math.Pow((GDNULL[II]/A6),0.7));
                
            label35:
                Z4 = A1 + Z6;
                if (Z4 >= A4) Z6 = 0.01;
                if (Z4 >= A4) goto label39;
                Z5 = VISUM(PLTG[K2],Z4,21);
                Z2 = A2 + A6*(A5-Z5)/A3;
                Z1 = VISUM(PW[I],Z2,23);
                A7 = (A5-Z5)/(A4-Z4);
                A8 = (Z2-A2)/(Z1-A1);
                if (A4-Z1 > Z4-A1) goto label36;
                A9 = (1.0-A3*A8/A6/A7)/A3/A8/OMEGA0[II]*Z3;
                A10 = Z1 + Z6/Math.Exp(A9);
                goto label37;
                
            label36:
                A9 = (A3*A8/A6/A7-1.0)/A3/A8/OMEGA0[II]*Z3;
                A10 = Z1 + Z6*Math.Exp(A9);
                
            label37:
                if (Math.Abs(A4-A10) < 0.01) goto label39;
                IX10 = IX10 + 1;
                if (IX10 > 95 || LIGHT[4] == 6)
                {
                    sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", IX10.ToString().PadLeft(4),I.ToString().PadLeft(4),(A4-273.15).ToString("0.00000E+0").PadLeft(13),(A10-273.15).ToString("0.00000E+0").PadLeft(13),
                        Z6.ToString("0.00000E+0").PadLeft(13),(Z1-273.15).ToString("0.00000E+0").PadLeft(13),(A1-273.15).ToString("0.00000E+0").PadLeft(13),
                        (Z4-273.15).ToString("0.00000E+0").PadLeft(13),Z2.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13));
                    
                    sw16.WriteLine("         {0}{1}{2}{3}{4}{5}{6}{7} ", A5.ToString("0.00000E+0").PadLeft(13),Z5.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),
                        A6.ToString("0.00000E+0").PadLeft(13),Z3.ToString("0.00000E+0").PadLeft(13),A9.ToString("0.00000E+0").PadLeft(13),A8.ToString("0.00000E+0").PadLeft(13),
                        A7.ToString("0.00000E+0").PadLeft(13));
                    //38 FORMAT(1H0,2I4,8E13.5,/,9X,8E13.5)
                }
                REGULA(ref A4, ref Z6, ref A10, ref Z7, ref Z8, ref Z9, ref Z10, ref IX1);
                if (IX10 > 100) goto label39;
                goto label35;
                
            label39:
                DTS[I] = Z6;
            }   //101 CONTINUE
            
        label104:
            I = IZWI;
            K = KZWI;
            return;
        }   //END
        
                                        
        static void UWA034()
        {
            //ENTRY LINK2
            bool QAUSL,QEND,QWAERM,QHEIZ,QNDAUS;
            double[] TFELD = new double[6], XGLTG = new double[6], XGFDE = new double[5], XGABDE = new double[5];
            //INCLUDE 'KRAWAL80.COMMON'
            double Y1 = 0.0, Y2 = 0.0, WT1 = 0.0, WT2 = 0.0, FBEW = 0;
            //EQUIVALENCE (NVENT(7),IZAEL)
            int L = 0, IZHEIZ = 0, IZMAX = 0;
            IZAEL = 0;
            
            if (LIGHT[9] == 7)      LIGHT[9] = 5;
            QAUSL = false;
            QEND = false;
            QWAERM = false;
            
            if (WTSOLL <= 0.0) QWAERM = true;
            
            UWA006("WDISC", 62,1);
            
            if (XYZXYZ != 99.0)
                UWA006("RDISC", 55,1);

            for(L = 1; L <= 4; L++)     //DO 100 L = 1,4
            {
                XGLTG[L] = 0.0;
                XGFDE[L] = 0.0;
                XGABDE[L] = 0.0;
                TFELD[L] = 0.0;
                IGENND[L] = 0;
            }   //100 CONTINUE
            TFELD[5] = 0.0;
            XGLTG[5] = 0.0;

            Y = 0.0;            
            LAUFEN = 1;
            
        label200:
            LIGHT[10] = 0;
            UWA016();
            LAUFEN = 2;
            IZHEIZ = 0;
            
        label300:
            IZHEIZ = IZHEIZ + 1;
            UWA014();
            LIGHT[10] = 1;
            UWA006("RDISC", 50,1);
            UWA006("RDISC", 51,1);

            if (LIGHT[2] == 1) 
                UWA012();

            UWA073();       // WASDRU();
            UWA030();

            if (LIGHT[2] == 1)      UWA012();
            UWA033();
            UWA006("WDISC", 50,1);
            QHEIZ = true;
            
            for(L = 1; L <= 5; L++)     //DO 500 L = 1,5
            {
                A1 = GLTG[L+34];
                if (A1 < 0.1) continue;
                
                A2 = Math.Abs(A1 - TFELD[L])/A1;
                
                if (LIGHT[2] == 2)      
                    sw16.WriteLine(" *** LINK2 ***{0}{1}{2}{3}{4}{5}", L.ToString().PadLeft(6),TFELD[L].ToString("0.00000E+0").PadLeft(13),
                        A1.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13),DPHEIZ[L].ToString("0.00000E+0").PadLeft(13),
                        PLTG[L+34].ToString("0.00000E+0").PadLeft(13));
                    //400 FORMAT(' ','*** LINK2 ***',I6,5E13.5)
                
                if (DPHEIZ[L] == 0.0) continue;
                if (A2 > ABKRIT)    QHEIZ = false;
                TFELD[L] = A1;
            }   //500 CONTINUE
            
            if (QHEIZ) goto label600;
            if (IZAEL == 0) goto label600;
            if (IZHEIZ < 10) goto label300;
            
        label600:
            UWA006("WDISC", 50,1);
            QNDAUS = true;
            KK = 0;

            for(L = 1; L <= ANZTRB; L++)    //DO 900 L = 1,ANZTRB
            {
                if (STZNDT[L] != 0 && IGENND[L] == 0) QNDAUS = false;
                if (GFDE[L] == 0.0) goto label700;
                A1 = Math.Abs((GFDE[L]-XGFDE[L])/GFDE[L]);
                A3 = Math.Abs(GABDE[L]-XGABDE[L]);
                if (GABDE[L] > 0.0) A2 = A3/GABDE[L];
                if (A3 < 0.05) A2 = ABKRIT;
                if (Math.Abs(GFDE[L]-XGFDE[L]) < 0.05) A1 = ABKRIT;
                if (A1 > ABKRIT || A2 > ABKRIT) KK = 1;
                
            label700:
                if (LIGHT[2] == 4 && KK == 1 || IZAEL > IZMAXA-3)   
                    sw16.WriteLine(" *** LINK2 ***{0}{1}{2}{3}   {4}{5}{6}   {7}{8}{9} ", IZAEL.ToString().PadLeft(3),L.ToString().PadLeft(3),KK.ToString().PadLeft(3),
                        Math.Round(ABKRIT,5).ToString().PadLeft(8),Math.Round(GFDE[L],4).ToString().PadLeft(12),Math.Round(XGFDE[L],4).ToString().PadLeft(12),
                        Math.Round(A1,5).ToString().PadLeft(8),Math.Round(GABDE[L],4).ToString().PadLeft(12),Math.Round(XGABDE[L],4).ToString().PadLeft(12),
                        Math.Round(A2,5).ToString().PadLeft(8));
                    //800 FORMAT(1H ,'*** LINK2 ***',3I3,F8.5,2(3X,2F12.4,F8.5))

                XGFDE[L] = GFDE[L];
                XGABDE[L] = GABDE[L];
            }   //900 CONTINUE

            for(L = 1; L <= 5; L++)     //DO 1100 L = 1,5
            {
                A4 = 0.0;
                if (GLTG[L+34] == 0.0) goto label1000;
                A4 = Math.Abs((GLTG[L+34]-XGLTG[L])/GLTG[L+34]);
                if (Math.Abs(GLTG[L+34]-XGLTG[L]) < 0.05) A4 = ABKRIT;
                if (A4 > ABKRIT) KK = 1;
                
            label1000:
                if (LIGHT[2] == 4 && KK == 1 || IZAEL > IZMAXA-3)
                    sw16.WriteLine(" *** LINK2 ***{0}{1}{2}{3}   {4}{5}{6}", IZAEL.ToString().PadLeft(3),L.ToString().PadLeft(3),KK.ToString().PadLeft(3),
                        Math.Round(ABKRIT,4).ToString().PadLeft(8),Math.Round(GLTG[L+34],4).ToString().PadLeft(12),Math.Round(XGLTG[L],4).ToString().PadLeft(12),
                        Math.Round(A4,5).ToString().PadLeft(8));

                XGLTG[L] = GLTG[L+34];
            }   //1100 CONTINUE

            IZAEL = IZAEL + 1;
            sw16.WriteLine(" *** LINK 2 ***{0}{1} ", IZAEL.ToString().PadLeft(4),LIGHT[9].ToString().PadLeft(4));
            //1200 FORMAT(1H ,'*** LINK 2 ***',2I4);

            if (QWAERM) goto label3000;
            if (IZAEL <= 1) goto label3000;
            WT2 = WT1;
            WT1 = QVERBR;
            if (IDEFW == 0) goto label1500;

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            
            for(L = 1; L <= 11; L++)    //DO 1400 L=1,11
            {
                IX1 = Math.Abs(LTGWT1[L]);
                IX2 = Math.Abs(LTGWT2[L]);
                if (IX1 == 0 || IX2 == 0) goto label1300;
                if (LTGWT1[L] > 0) A1 = A1 + GLTG[IX1]*(ELTG[IX1]-ELTG[IX2]);
                if (LTGWT1[L] < 0) A2 = A2 + GLTG[IX1]*(ELTG[IX1]-ELTG[IX2]);
                
            label1300:
                IX3 = Math.Abs(LTGWT3[L]);
                IX4 = Math.Abs(LTGWT4[L]);
                if (IX3 == 0 || IX4 == 0)       continue;
                if (LTGWT3[L] > 0)
                    A3 = A3 + GLTG[IX3]*(ELTG[IX3] - ELTG[IX4])/859.845;
                if (LTGWT3[L] < 0)
                    A3 = A3 - GLTG[IX3]*(ELTG[IX3] - ELTG[IX4])/859.845;
            }   //1400 CONTINUE
            
            if (IDEFW == 1) WT1 = (WAUFW + A1 - A2)/ARBTA[1];
            if (IDEFW == 2) WT1 = WAUFW/(ARBTA[1] + A3);
            if (IDEFW == 3) WT1 = (WAUFW + A1 - A2)/(ARBTA[1]+A3);

        label1500:
            Y2 = Y1;
            Y1 = Y;
            
            for(L = 1; L <= ANZDTT; L++)    //DO 1600 L = 1,ANZDTT
                if (MREGEL[L] == 1) 
                    goto label2100;     //1600 CONTINUE
            QWAERM = true;
            
            if (Math.Abs(WTSOLL-WT1) <= 0.1) goto label3000;
            QWAERM = false;
            KK = 1;
            if (IZAEL <= 2) goto label1700;
            if (Y2 == 0.0) goto label1700;
            if (WT1 == WT2) goto label1650;
            Y = Y1 + ((Y1-Y2)/(WT1-WT2))*(WTSOLL- WT1);
            
        label1650:
            if (Math.Abs(WT1 - WT2) <= 0.1) Y = Y1;
            goto label1900;
            
        label1700:
            FBEW = 0.0;
            
            for(L = 1; L <= ANZDTT; L++)    //DO 1800 L = 1,ANZDTT
            {
                FBEW = FBEW + FBEWE[L];
                if (FBEWE[L] == 0.0) FBEW = FBEW + 1.0;
            }   //1800 CONTINUE
            
            FBEW = FBEW/ANZDTT;
            Y = WT1/WTSOLL;
            Y = (Y-1.0)/0.7;
            Y = Y/FBEW;
            
        label1900:
            if (LIGHT[2] == 2)      
                sw16.WriteLine("   {0}{1}{2}{3}{4}{5}{6} ", IZAEL.ToString().PadLeft(5),Math.Round(WT1,2).ToString().PadLeft(12),Math.Round(WT2,2).ToString().PadLeft(12),Math.Round(Y1,5).ToString().PadLeft(12),
                    Math.Round(Y2,5).ToString().PadLeft(12),Math.Round(Y,5).ToString().PadLeft(12),Math.Round(FBEW,5).ToString().PadLeft(12));
            
            for(L = 1; L <= ANZDTT; L++)    //DO 2000 L = 1,ANZDTT
                FETAE[L] = FETAE[L]* (1.0+(Y-Y1)*FBEWE[L]);     //2000 CONTINUE

            if (LIGHT[2] == 2)
                sw16.WriteLine("   {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", IZAEL.ToString().PadLeft(5), Math.Round(WTSOLL, 2).ToString().PadLeft(12), Math.Round(WT1, 2).ToString().PadLeft(12), Math.Round(FETAE[1], 5).ToString().PadLeft(12), Math.Round(FETAE[2], 5).ToString().PadLeft(12),
                    Math.Round(FETAE[3], 5).ToString().PadLeft(12), Math.Round(FETAE[4], 5).ToString().PadLeft(12), Math.Round(FETAE[5], 5).ToString().PadLeft(12), Math.Round(FETAE[6], 5).ToString().PadLeft(12),
                    Math.Round(FETAE[7], 5).ToString().PadLeft(12), Math.Round(FETAE[8], 5).ToString().PadLeft(12));
            goto label3000;

        label2100:
            QWAERM = true;
            if (Math.Abs(WTSOLL-WT1) <= 0.1) goto label3000;
            QWAERM = false;
            KK = 1;
            if (LIGHT[2] == 2) 
                sw16.WriteLine("   {0}{1}{2}{3}{4} ", IZAEL.ToString().PadLeft(5),Math.Round(WT1,2).ToString().PadLeft(12),Math.Round(WT2,2).ToString().PadLeft(12),Math.Round(Y1,5).ToString().PadLeft(12),Math.Round(Y2,5).ToString().PadLeft(12));
            if (IZAEL > 2) goto label2200;
            Y = WT1/WTSOLL;
            Y = (Y-1.0)/0.7;
            goto label2300;
            
        label2200:
            if (WT1 == WT2) goto label2250;
            Y = Y1 + ((Y1-Y2)/(WT1-WT2))*(WTSOLL-WT1);
            
        label2250:
            if (Math.Abs(WT1 - WT2) <= 0.1) Y = Y1;
            
        label2300:
            for(L = 1; L <= ANZDTT; L++)    //DO 2400 L = 1,ANZDTT
            {
                if (MREGEL[L] != 1) continue;
                FETAR[L] = FETAR[L]*(1.0+(Y-Y1));
            }   //2400 CONTINUE
            sw16.WriteLine("   {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", IZAEL.ToString().PadLeft(5),Math.Round(WTSOLL,2).ToString().PadLeft(12),Math.Round(WT1,2).ToString().PadLeft(12),Math.Round(FETAR[1],5).ToString().PadLeft(12),Math.Round(FETAR[2],5).ToString().PadLeft(12),
                Math.Round(FETAR[3],5).ToString().PadLeft(12),Math.Round(FETAR[4],5).ToString().PadLeft(12),Math.Round(FETAR[5],5).ToString().PadLeft(12),Math.Round(FETAR[6],5).ToString().PadLeft(12),
                Math.Round(FETAR[7],5).ToString().PadLeft(12),Math.Round(FETAR[8],5).ToString().PadLeft(12));
            //2500 FORMAT(1H ,2X,I5,2F12.2,7F12.5);

        label3000:
            if (IZAEL < IZMINA) goto label3200;
            IZMAX = IZMAXA;
            if (IZMAX < IZMINA+2) IZMAX = IZMINA + 2;
            if (IZAEL >= IZMAX) goto label3300;
            if (!QNDAUS) goto label3200;
            if (STWRT2 == 0) goto label3600;
            if (IZAEL >= (IZMAX-1) && !QAUSL) goto label3100;
            if (QEND) goto label3300;
            if (QAUSL) goto label3100;
            if (KK == 0) QAUSL = true;
            if (QAUSL && LIGHT[9] != 6) LIGHT[9] = 7;
            goto label3200;

        label3100:
            QEND = true;

        label3200:
            if (LLTG[18] == 1) 
                UWA019();
            goto label200;

        label3300:
            if (KK != 0)
                sw16.WriteLine(" ITERATION IM L I N K 2 NICHT BENDET");
            //3400 FORMAT (1X,'ITERATION IM L I N K 2 NICHT BENDET');

            UWA030();

            if (STWRT2 != 0) 
                UWA045();

            I = IHENDE + 1;
            JJ = 0;
            
        label3500:
            I = I - 1;
            if (I == 1) goto label3600;
            if (NTYP[I] != 3) goto label3500;
            JJ = JJ + 1;
            if (GPMIN[JJ] == 0.0) GPMIN[JJ] = 0.25;
            if (GPMIN[JJ] <= 1.0) GPMIN[JJ] = GPMIN[JJ]*GWAS[I]/IPUMP[I];
            goto label3500;
            
        label3600:
            UWA006("WDISC", 50,1);
            UWA006("WDISC", 51,1);
            IZAEL = 0;
            if (STWRT2 == 0) goto label3800;
            if (STZMDT[1] == 99) goto label3700;
            
            
            UWA077("PRINTF1");      // ! 1 added by kiran
            if (IX9 == 999) 
                UWA022();
            UWA056();
            goto label3800;
            
        label3700:
            UWA022();
            UWA056();

        label3800:
            IFALL = 1;

            if (LIBEDI > 0 && STWRT2 != 0.0) 
                UWA058();

            return;
        }   //END
                      
        
        static void UWA035()
        {
            //ENTRY LINK4;
            //INCLUDE 'KRAWAL80.COMMON'
            int NITRA = 0;
            if (IFALL > 1) goto label2;
            IFALL = 1;
            K = 2;
            UWA006("WDISC", 55,1);
            
            for(K1 = 1; K1 <= 4; K1++)      //DO 1 K1 = 1,4
                GFDRET[K1] = GFDE[K1];      //1 CONTINUE
            
        label2:
            UWA006("RDISC", 55,1);
            
        label20:
            UWA024();
            if (IFALL == 1 && LIGHT[7] == 1) 
                UWA029();
            if (IFALL == 1)     return;
            
            for(K1 = 1; K1 <= 4; K1++)      //DO 3 K1 = 1,4
                if (GFDE[K1] == 999999.0)   
                    GFDE[K1] = GFDRET[K1];      //3 CONTINUE
            
            UWA023();
            if (IKUEHL == 1) goto label40;
            if (STZMDT[1] == 99) goto label4;
            UWA045();
            UWA077("PRINTF1");  // ! 1 added by kiran
            if (IX9 == 999) 
                UWA022();
            UWA056();
            if (LIBEDI > 0) 
                UWA058();
            goto label5;
            
        label4:
            UWA045();
            UWA022();
            UWA056();
            
            if (LIBEDI > 0) 
                UWA058();
            goto label5;
            
        label40:
            if (LIGHT[7] == 2) UWA045();
            if (LIGHT[7] == 2) UWA077("PRINTF1");  // PRINTF1
            
            UWA027(0);
            UWA006("WDISC", 55,IFALL);
            NITRA = NITRE[1];
            if (NITRA == 1) AKUEHL = TLSTGE[1];
            if (NITRA == 2) AKUEHL = GABDE[1];
            if (NITRA == 3) AKUEHL = GFDE[1];
            if (NITRA == 4) AKUEHL = GMFIXE[1];
            if (NITRA == 8) AKUEHL = THERMN;
            if (NITRA == 1 && JKUEHL == 1) AKUEHL = GFDE[1];
            if (NITRA == 1 && JKUEHL == 1) NITRA = 3;
            KNITRA = NITRA;
            
            for(K1 = 1; K1 <= 4; K1++)      //DO 41 K1 = 1,4
                GFDRET[K1] = GFDE[K1];      //41 CONTINUE
            UWA006("RDISC", 55,1);
            goto label20;
            
        label5:
            if (NABHI != 1) goto label51;
            I = IHENDE + 1;
            
        label50:
            I = I - 1;
            if (I == 1) goto label51;
            if (NTYP[I] == 7) goto label50;
            sw16.WriteLine("{0}{1}{2}{3}",Math.Round(PABHI1,2).ToString().PadLeft(6),Math.Round(PABHI2,3).ToString().PadLeft(6),
                Math.Round(TWAUS[I]-273.15,2).ToString().PadLeft(6),Math.Round(ARBTA[1],3).ToString().PadLeft(8));
            //1000 FORMAT(F6.2,F6.3,F6.2,F8.3)
            
        label51:
            UWA006("WDISC", 55,IFALL);
            for(K1 = 1; K1 <= 4; K1++)      //DO 6 K1 = 1,4
                GFDRET[K1] = GFDE[K1];  //6 CONTINUE
            return;
        }   //END

                
        static void UWA036()
        {
            //ENTRY LINK3
            UWA060();
            return;
        }   //END
        
        
        static void UWA037()
        {
            //ENTRY LINK6
            UWA060();
            return;
        }   //END

                
        static void UWA040()
        {
            //ENTRY KOND
            double KNULL = 0, KC18 = 0, KC19 = 0, KE = 0, VVERWL = 0, RTWK = 0, RWKEFF = 0, WKEFF = 0, RWKZUK = 0,
                RVROR = 0, RLROR = 0, RDAROR = 0, RDSROR = 0, RKULFL = 0, RSPZRZ = 0, RBKNDM = 0, RTHOR = 0,
                RTVER = 0, RKOKE = 0, RHVOR = 0, RFLUTE = 0, RKONDE = 0, RFWERK = 0, RFTEMP = 0, GABD = 0, RPKOND = 0,
                RENTH = 0, RGABD = 0, KTFAK = 0, IKONDH = 0, RABDLG = 0.0, RABDBR = 0.0, RFLUT = 0, IAFGWE = 0,
                IWASKE = 0, B1 = 0, B2 = 0, B3 = 0, B4 = 0, B5 = 0, B6 = 0, B7 = 0, B8 = 0, B9 = 0, B10 = 0, A11 = 0.0, Z11 = 0.0,
                HKONDM = 0.0, DIROHR = 0, TKOND = 0, DTW = 0, TA = 0, GRDK = 0, DMM = 0, FZUW = 0, TX = 0, VKOKE = 0, A12 = 0, 
                Z12 = 0, ZSTUTZ = 0, C = 0, C6 = 0, C7 = 0, HWK = 0, ROHRZ = 0, ABDVOL = 0, FXYROR = 0, QRB = 0, HWASKX = 0, 
                Z = 0, CFREI = 0, FFREI = 0, ZL0 = 0, BRWASK = 0, ZUNTEN = 0, ZOBEN = 0, ROHRFL = 0, BKNDM1 = 0, CRFEI2 = 0, 
                BKNDM2 = 0, HRORFD = 0, CFREI2 = 0, QMT = 0, QHOTW = 0, ABHOTW = 0, VHOTW = 0, FLAECE = 0, HKOND = 0;
            
            int IKOND = 0, NKWEIC = 0, KONDZL = 0, K5VOR = 0, K9VOR = 0, KROHRK = 0, NKPARR = 0 ;
            string KENN;
            double[] FAKTXY = {0, 0.3365,0.3585,0.3690,0.3765,0.3845},
                XMITT = {0, 1.022,0.955,0.940,0.953,0.945},
                YMITT = {0, 1.753,1.629,1.621,1.604,1.583};
            string TEXTKO = "  CUZN28  CUZN20  CUNI10  CUNI30  CSTAHL  CRNI    TITAN   CRNIMO";
            
            UWA006("RDISC", 58,1);
            
            if (DMJEKW < 3.0)   DMJEKW = DMJEKW * QVERBR;
            IKOND = 0;
            
        label100:
            IKOND = IKOND + 1;
            if (IKOND > 4) return;
            NKWEIC = 0;
            VVERWL = 0.0;
            IZ1 = IENDST[IKOND];
            if (IZ1 <= 0) return;
            UWA010(IZ1,1);
            if (KT7 != 6) goto label100;
            if (ETVER[KT10] == 0.0) goto label100;
            KT1 = KT10;
            RTWK = ETWK [KT1];
            RWKEFF = EWKEFF[KT1];
            WKEFF = RWKEFF;
            RWKZUK = EWKZUK[KT1];
            RVROR = EVROR [KT1];
            RLROR = ELROR [KT1];
            RDAROR = EDAROR[KT1];
            RDSROR = EDSROR[KT1];
            RKULFL = EKULF [KT1];
            RSPZRZ = ESPZRZ[KT1];
            RBKNDM = EBKNDM[KT1];
            RTHOR = ETHOR [KT1];
            RTVER = ETVER [KT1];
            RKOKE = EKOKE [KT1];
            RHVOR = EHVOR [KT1];
            RFLUTE = ZFLUTE[KT1];
            RKONDE = ZKONDE[KT1];
            RFWERK = FWERST[KT1];
            if (RTWK < 36.0) goto label120;
            if (KTFAC[KT1] == 0) goto label110;
            RFTEMP = (-0.1478E-4*RTWK + 0.41792E-2)*RTWK + 0.94966E+00;
            goto label150;
            
        label110:
            RFTEMP = (-0.1478E-4*RTWK + 0.41792E-2)*RTWK + 0.968822E+00;
            goto label150;
            
        label120:
            if (KTFAC[KT1] == 0) goto label140;
            if (RTWK >= 12.0) goto label130;
            RFTEMP = 0.023375*RTWK + 0.58;
            goto label150;
            
        label130:
            RFTEMP = (-0.37874625E-03*RTWK + 0.27363886E-01)*RTWK + 0.58671128E+00;
            goto label150;
            
        label140:
            RFTEMP = (((-0.393765E-06*RTWK+ 0.3559265E-04)*RTWK -0.121798E-02) * RTWK + 0.259529E-01)*RTWK +0.7450794E+00;
            
        label150:
            RGABD = G[IZ1,1];
            RPKOND = PT [IZ1,1];
            RENTH = E1T [IZ1,1];
            A3 = RGABD + GZUKOA[KT10];
            A4 = (RGABD*RENTH + QZUKOA[KT10])/A3;
            RGABD = A3;
            RENTH = A4;
            KTFAK=KTFAC[KT1];
            IKONDH=IKONDR[KT1];
            NKPARR = NKPARA[KT1];
            RABDLG = 0.0;
            RABDBR = 0.0;
            UWA006("RDISC",53,KT9);
            RFLUT = FLUT;
            IAFGWE = MAFGWE[KT1];
            IWASKE = NWASKE[KT1];
            if (NOPTKO == 1) goto label410;
            if (NOPTKO == 2) goto label410;
            UWA043(2);
            if (ITKW > 0 && IKOND == 1) TKWEIN = RTWK;
            if (IMKW > 0 && IKOND == 1) GKWEIN = RWKEFF;
            if (IMKW > 0 && IKOND == 1 && GKWEIN == 0.0) GKWEIN = RWKZUK* RGABD;
            GKONDA[IKOND] = RWKEFF;
            
            if (RWKEFF <= 0.0) GKONDA[IKOND] = RWKZUK*RGABD;
            TKONDA[IKOND] = RTWK;
            B1 = RTWK*TX0 + TX5;
            B2 = RWKEFF*TX3;
            B3 = RVROR*TX15;
            B4 = RLROR*TX14;
            B5 = RDAROR*TX16;
            B6 = RDSROR*TX16;
            B7 = RKULFL*Math.Pow(TX15,2.0);
            B8 = RSPZRZ/Math.Pow(TX15,2.0);
            B9 = RBKNDM*TX14;
            B10 = RHVOR*TX14;
            
            sw16.WriteLine("                      BERECHNUNG DER KONDENSATIONSANLAGE\n");
            sw16.WriteLine("{0}.KONDENSATOR EINGABE-WERTE\n", IKOND.ToString().PadLeft(2));
            sw16.WriteLine("  T-E         W      W/G   V-R  ROHR-L  D-A    S        F     Z/QM  MTL.BR K4/KE H-VORH N-K W-FL AFGW WK.GET WT-F K-H K-P");

            //goto label(170,190,210),IWR
            if(IWR == 1) goto label170;
            if(IWR == 2) goto label190;
            if(IWR == 3) goto label210;

        label170:
            sw16.WriteLine("   C        KG/S           M/S    M      MM    MM      M2     1/M2     M            M");
            goto label230;
            
        label190:
            sw16.WriteLine("   F        LBS/H         FT/S  INCH    INCH  INCH     FT2    1/FT2  INCH         INCH");
            sw16.WriteLine("            *1000");
            goto label230;
            
        label210:
            sw16.WriteLine("   C         T/H           M/S    M      MM   MM      M2     1/M2     M            M");

        label230:
            sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11} {12} {13}    {14}   {15}     {16}  {17}  {18} ",
                Math.Round(B1,1).ToString().PadLeft(5),Math.Round(B2,3).ToString().PadLeft(12),Math.Round(RWKZUK,2).ToString().PadLeft(7),
                Math.Round(B3,2).ToString().PadLeft(6),Math.Round(B4,2).ToString().PadLeft(7),Math.Round(B5,3).ToString().PadLeft(7),
                Math.Round(B6,4).ToString().PadLeft(7),Math.Round(B7,0).ToString().PadLeft(8),Math.Round(B8,0).ToString().PadLeft(7),
                Math.Round(B9,2).ToString().PadLeft(7),Math.Round(RKOKE,3).ToString().PadLeft(6),Math.Round(B10,2).ToString().PadLeft(7),
                Math.Round(RKONDE,0).ToString().PadLeft(3),Math.Round(RFLUTE,0).ToString().PadLeft(3),IAFGWE.ToString().PadLeft(2),
                IWASKE.ToString().PadLeft(2),KTFAK.ToString().PadLeft(2),IKONDH.ToString().PadLeft(2),NKPARR.ToString().PadLeft(2));
            //240 FORMAT(' ',F5.1,F12.3,F7.2,F6.2,F7.2,F7.3,F7.4,F8.0,F7.0,F7.2,F6.3,F7.2,2(1X,F3.0),4X,I2,3X,I2,5X,I2,2(2X,I2)/)

            sw16.WriteLine("    ROHRWERK  F(WERK)  GRDK.MIN  F(RADIO) G(VERW) T(VERW) OPT       G      I-4     P-4   ABDST-L  ABDST-BR  ABD-FL");
            
            //goto label(260,280,300),IWR
            if(IWR == 1)    goto label260;
            if(IWR == 2)    goto label280;
            if(IWR == 3)    goto label300;

        label260:
            sw16.WriteLine("                          C                 KG/S    MIN           KG/S    KJ/KG    BAR ");
            goto label320;
            
        label280:
            sw16.WriteLine("                          F                LBS/H    MIN          LBS/H    BTU/LB  IN.HG ");
            sw16.WriteLine("                                           *1000                 *1000");
            goto label320;
            
        label300:
            sw16.WriteLine("                          C                  T/H    MIN            T/H   KCAL/KG   AT");
            
        label320:
            IZ5 = (int)NTYPKO * 8;
            IZ4 = IZ5 - 7;
            B1 = DELTKO*TX0;
            B2 = GVERWL*TX3;
            B3 = RGABD*TX3;
            B4 = RENTH*TX1;
            B5 = RPKOND*TX17;
            
            sw16.WriteLine("   {0}   {1}    {2}    {3}   {4}  {5}    {6}  {7}{8}{9}  {10}     {11}     {12} ",
                TEXTKO.Substring(IZ4-1,IZ5-IZ4), Math.Round(RFWERK,4).ToString().PadLeft(6),Math.Round(B1,2).ToString().PadLeft(5),
                Math.Round(FRADIO,2).ToString().PadLeft(5),Math.Round(B2,2).ToString().PadLeft(8),Math.Round(TVERWL,1).ToString().PadLeft(4),
                NOPTKO.ToString().PadLeft(1),Math.Round(B3,3).ToString().PadLeft(10),Math.Round(B4,2).ToString().PadLeft(8),Math.Round(B5,4).ToString().PadLeft(8),
                Math.Round(RABDLG,2).ToString().PadLeft(5),Math.Round(RABDBR,2).ToString().PadLeft(5),Math.Round(RFLUT,0).ToString().PadLeft(2));
            //330 FORMAT(' ',2X, A ,3X,F6.4,4X,F5.2,4X,F5.2,3X,F8.2,2X,F4.1,4X,I1,2X,F10.3,F8.2,F8.4,2X,F5.2,5X,F5.2,5X,F2.0/)
            
            if (NOPTKO == 0) goto label410;
            
            sw16.WriteLine("    W-MIN    H-K    H-P  ETA-P  ETA-M  H-BY  ETA-BYP  ETA-BYM  TBEN/TNI  C-KEL");
            sw16.WriteLine("   {0}  {1}  {2}  {3}   {4}   {5}   {6}     {7}     {8}    {9} ", Math.Round(WKMIN,0).ToString().PadLeft(7),
                Math.Round(HKMUSS,2).ToString().PadLeft(5),Math.Round(WHO,1).ToString().PadLeft(4),Math.Round(ETAP,1).ToString().PadLeft(4),
                Math.Round(ETAM,1).ToString().PadLeft(4),Math.Round(WHOBY,1).ToString().PadLeft(4),Math.Round(ETAPBY,1).ToString().PadLeft(4),
                Math.Round(ETAMBY,1).ToString().PadLeft(4),Math.Round(TBENU,2).ToString().PadLeft(5),Math.Round(CKELER,0).ToString().PadLeft(4));
            //350 FORMAT (3X,F7.0,2X,F5.2,2X,F4.1,2X,3(F4.1,3X),2(F4.1,5X),F5.2,4X,F4.0/)
            
            sw16.WriteLine("   PREISKONSTANTE FUER KONDENSATOR");
            sw16.WriteLine("    {0}   {1}   {2}   {3}   {4}   {5}   ", KC21.ToString("0.0000E+0").PadLeft(11),KC1.ToString("0.0000E+0").PadLeft(11),
                KC50.ToString("0.0000E+0").PadLeft(11),KC23.ToString("0.0000E+0").PadLeft(11),KC24.ToString("0.0000E+0").PadLeft(11),KC25.ToString("0.0000E+0").PadLeft(11));
            //370 FORMAT (4X,6(E11.4,3X)/)
            
            sw16.WriteLine("   PREISKONSTANTE FUER ROHRLEITUNG ");
            sw16.WriteLine("    {0}   {1}   {2}   ", RC2.ToString("0.0000E+0").PadLeft(11),RC3.ToString("0.0000E+0").PadLeft(11),RC4.ToString("0.0000E+0").PadLeft(11));
            sw16.WriteLine("   PREISKONSTANTE FUER BYPASS UND PUMPEN");
            sw16.WriteLine("    {0}   {1}   {2}   {3}   {4}   {5} ", PC27.ToString("0.0000E+0").PadLeft(11),PC5.ToString("0.0000E+0").PadLeft(11),PC6.ToString("0.0000E+0").PadLeft(11),
                PC7.ToString("0.0000E+0").PadLeft(11),PC8.ToString("0.0000E+0").PadLeft(11),PC9.ToString("0.0000E+0").PadLeft(11));
            sw16.WriteLine("   PREISKONSTANTE FUER EINLAUFBAUWERK");
            sw16.WriteLine("    {0}   {1}   {2}   ", WC20.ToString("0.0000E+0").PadLeft(11),WC21.ToString("0.0000E+0").PadLeft(11),WC22.ToString("0.0000E+0").PadLeft(11));
            
        label410:
            if (RWKZUK != 0.0) RWKEFF = RWKZUK*RGABD;
            KONDZL = 0;
            K5VOR = 0;
            K9VOR = 0;
            A11 = 0.0;
            Z11 = 0.0;
            HKONDM = 0.0;

            if (RVROR == 0.0) goto label420;
            KONDZL = 1;
            EWKEFF[KT10] = 0.0;
            goto label460;
            
        label420:
            if (RWKEFF == 0.0) goto label430;
            KONDZL = 2;
            
        label430:
            if (RKULFL == 0.0) goto label450;
            if (KONDZL == 2) goto label440;
            KONDZL = 3;
            goto label460;
            
        label440:
            KONDZL = 5;
            if (RPKOND != 0.0) KONDZL = 4;
            goto label460;
            
        label450:
            if (KONDZL == 2) goto label460;
            KONDZL = 1;
            RVROR = 2.0;
            
        label460:
            DIROHR = RDAROR - RDSROR*2.0;
            if (RKOKE == 0.0) RKOKE = 0.85;
            TKOND = RTWK + 15.0;
            if (RPKOND == 0.0) goto label480;
            TKOND = UW0011(RPKOND,1) - 273.15;
            
            if (TKOND > (RTWK+DELTKO))
                goto label480;
            KFELER = 20;
            sw16.WriteLine(" FEHLER-MELDUNG{0}", KFELER.ToString().PadLeft(4));
            //470 FORMAT(' ','FEHLER-MELDUNG',I4)
            goto label100;
            
        label480:
            KC18 = 2361.3;
            if(RDAROR > 20.5) KC18 = 2325.9;
            if(RDAROR > 26.5) KC18 = 2290.5;
            KC18 = KC18 * RFWERK * RFTEMP * FRADIO;
            KC19 = RFLUTE*RLROR*RDAROR/0.9/DIROHR/DIROHR;
            
            if ((KONDZL-2) < 0)     goto label520;
            if ((KONDZL-2) == 0)     goto label490;
            if ((KONDZL-2) > 0)     goto label550;
            
        label490:
            DTW = (RENTH-TKOND)*RGABD/RWKEFF;
            TA = RTWK + DTW;
            GRDK = TKOND - TA;
            if (GRDK > DELTKO) goto label510;
            
        label500:
            GRDK = DELTKO;
            TA = TKOND - GRDK;
            DTW = TA - RTWK;
            RWKEFF = (RENTH-TKOND)*RGABD/DTW;
            if (WKEFF == 0.0) goto label510;
            if (WKEFF > RWKEFF) goto label510;
            WKEFF = RWKEFF;
            
        label510:
            DMM = DTW/Math.Log((TKOND-RTWK)/GRDK);
            if (KONDZL > 2) goto label570;
            RVROR = RKOKE*RWKEFF*KC19*DMM*KC18/RGABD/(RENTH-TKOND)*0.001;
            RVROR = RVROR*RVROR;
            
        label520:
            FZUW = KC19/RVROR;
            KE = KC18* Math.Sqrt(RVROR);
            KNULL = KE*RKOKE;
            X = FZUW*KNULL*0.001;
            X = Math.Pow(2.71828,X);
            TX = X/(X-1.0);
            DTW = (TKOND-RTWK)/TX;
            TA = RTWK + DTW;
            GRDK = TKOND - TA;
            if (KONDZL == 2) goto label540;
            if (GRDK > DELTKO) goto label530;
            KONDZL = 2;
            goto label500;
            
        label530:
            RWKEFF = (RENTH-TKOND)*RGABD/DTW;
            if (WKEFF == 0.0) goto label540;
            if (WKEFF > RWKEFF) goto label540;
            RWKEFF = WKEFF;
            KONDZL = 2;
            goto label490;
            
        label540:
            RKULFL = FZUW*RWKEFF;
            goto label640;
            
        label550:
            if ((KONDZL-4) < 0)     goto label560;
            if ((KONDZL-4) == 0)     goto label490;
            if ((KONDZL-4) > 0)     goto label570;
            
        label560:
            RWKEFF =60.0*RGABD;
            goto label490;
            
        label570:
            RVROR = KC19*RWKEFF/RKULFL;
            KE = KC18 * Math.Sqrt(RVROR);
            if (KONDZL == 5) goto label600;
            KNULL =RGABD*(RENTH-TKOND)/RKULFL/DMM*1000.0;
            VKOKE = KNULL/KE;
            if (KONDZL == 3) goto label580;
            RKOKE = VKOKE;
            goto label640;
            
        label580:
            if (Math.Abs(RKOKE-VKOKE) < 0.005) goto label640;
            K5VOR = K5VOR + 1;
            if (K5VOR == 20) goto label640;
            A12 = A11;
            A11 = RWKEFF;
            Z12 = Z11;
            Z11 = VKOKE;
            if (K5VOR == 1) goto label590;
            if (Math.Abs(Z12-Z11) < 0.005) goto label590;
            RWKEFF = A12 - ((A12-A11)*(Z12-RKOKE)/(Z12-Z11));
            goto label490;
            
        label590:
            RWKEFF =RWKEFF*Math.Sqrt(VKOKE/RKOKE);
            goto label490;
            
        label600:
            KNULL = RKOKE * KE;
            X = RKULFL/RWKEFF*KNULL*0.001;
            X = Math.Pow(2.71828,X);
            TX = X/(X-1.0);
            
        label610:
            DTW = (RENTH-TKOND)*RGABD/RWKEFF;
            TKOND = RTWK+TX*DTW;
            K5VOR = K5VOR + 1;
            if (K5VOR == 1) goto label610;
            K5VOR = 0;
            TA = RTWK + DTW;
            GRDK = TKOND - TA;
            if (GRDK > DELTKO) goto label630;
            
        label620:
            GRDK = DELTKO;
            TKOND = GRDK + TA;
            DTW = (RENTH-TKOND)*RGABD/RWKEFF;
            TA = RTWK + DTW;
            K5VOR = K5VOR +1;
            if (K5VOR < 3) goto label620;
            DMM = DTW/Math.Log((TKOND-RTWK)/GRDK);
            KNULL = RGABD*(RENTH-TKOND)/RKULFL/DMM*1000.0;
            RKOKE = KNULL/KE;
            
        label630:
            RPKOND = TKOND + 273.15;
            RPKOND = UW0011(RPKOND,2);
            
        label640:
            ZSTUTZ = 1.0;
            X = RKULFL/RWKEFF*KNULL*0.001;
            X = Math.Pow(2.71828,X);
            TX = X/(X-1.0);
            if(IWASKE != 0) ZSTUTZ = 2.0;
            C = 0.001;
            if (RTWK > 10.0) C = 0.001+Math.Pow((RTWK-10.0),1.3)*1.0E-07;
            C = Math.Sqrt(RWKEFF/RKONDE*C*0.35386E+06/2.4 /ZSTUTZ);
            if (C <= 800.0)goto label660;
            if (ZSTUTZ == 2.0)goto label650;
            ZSTUTZ = 2.0;
            C = C*0.70711;
            
        label650:
            if (C <= 1600.0) 
                goto label660;
            ZSTUTZ = 4.0;
            C = C*0.70711;

        label660:
            C6 = 2.4;
            UWA049 (ref C, ref C6, 1);
            C7 = 2.0;
            if (IAFGWE != 0) C7 = 1.1;
            Z = (0.10720E-03*RTWK-0.96411E-02)*RTWK+1.1520;
            C7 = ((2.868*RLROR*RFLUTE/ Math.Pow(DIROHR, 1.246)* Math.Pow(RVROR, 1.754))+(C7*RFLUTE/ 19.62* Math.Pow(RVROR,2.0)))*Z;
            HWK = 1.3;
            if (RFLUTE > 1.0) HWK = 1.0+ 0.25*RFLUTE;
            HWK = C7 + HWK*C6*C6/19.62*Z;
            ROHRZ = RKULFL/RKONDE/(RLROR*RDAROR*0.0031416);
            ABDVOL = VISUM (RPKOND,RENTH,13);
            ABDVOL = VISUM (RPKOND,ABDVOL,10);
            ABDVOL = ABDVOL * RGABD;
            KROHRK = 0;
            if(IKONDH != 0) goto label670;
            if (RBKNDM < 0.1) goto label720;
            if (RSPZRZ != 0.0) goto label670;
            KROHRK=1;
            if(RDAROR >= 23.0) KROHRK=2;
            if(RDAROR >= 25.4) KROHRK=3;
            if(RDAROR >= 28.0) KROHRK=4;
            if(RDAROR >= 32.0) KROHRK=5;

            FXYROR=DIROHR*DIROHR*3.1416/1000000.0/4.0 * ROHRZ;
            QRB=FXYROR/FAKTXY[KROHRK];
            HWASKX=QRB/(RBKNDM-YMITT[KROHRK]) + XMITT[KROHRK];
            goto label730;

        label670:
            if (RBKNDM < 0.1) goto label720;
            if (RSPZRZ == 0.0) goto label680;
            HKONDM = ROHRZ/RSPZRZ/RBKNDM;
            goto label710;
            
        label680:
            Z = 0.5*RFLUT*RABDLG*RABDBR;
            CFREI = 87.0;
            if (Z < 0.1) goto label690;
            CFREI = ABDVOL/3.6/Z;
            if (CFREI > 100.0) CFREI=100.0;
            if (CFREI < 75.0) CFREI= 75.0;
            
        label690:
            FFREI = ABDVOL/RKONDE/3.6/CFREI;
            Z =0.055*RDAROR;
            if (RLROR > 8.0) Z=0.05*RDAROR;
            Z = RLROR/Z;
            ZL0 = Z*0.02 + 0.06;
            if (RLROR > 5.0) ZL0 = Z*0.025 + 0.07;
            ZL0 = RLROR - ZL0;
            ZL0 = FFREI/ZL0;
            BRWASK = 0.0625*ZL0;
            ZUNTEN = BRWASK;
            
            if (BRWASK < 0.25) ZUNTEN = 0.25;
            ZOBEN = 2.0*(ZUNTEN+BRWASK );
            BRWASK = RBKNDM - 2.0* ZUNTEN;
            ZUNTEN = (RBKNDM-ZOBEN)*1000.0/(RTHOR+RDAROR);
            ZOBEN = (RBKNDM - ZL0 )*1000.0/RDAROR;
            if (ZOBEN > ZUNTEN) ZOBEN = ZUNTEN;
            if (ZOBEN >= (.2*ZUNTEN)) goto label700;
            if (NKWEIC > 0) goto label700;
            NKWEIC = 1;
            ROHRFL = 0.2*ZUNTEN*RDAROR/1000.0;
            BKNDM1 = ROHRFL + ZL0;
            CFREI2 = 100.0;
            BKNDM2 = ROHRFL + ZL0*CFREI/100.0;
            if (BKNDM2 >= RBKNDM) goto label700;
            BKNDM2 = RBKNDM;
            CFREI2 = CFREI*ZL0/(RBKNDM-ROHRFL);
            
        label700:
            HRORFD =(ROHRZ/(ZUNTEN+ZOBEN)*2.0)*(RTVER+RDAROR)/1000.0;
            ZL0 = RFLUTE - 2.0;
            if (ZL0 <= 0.0) ZL0 = 0.0;
            ZL0 =(-0.00666*ZL0+0.16666)*ZL0+0.24;
            HKONDM = 1.05*(HRORFD+ZL0+0.35);
            QRB = BRWASK * HKONDM;
            
        label710:
            QMT = RBKNDM * HKONDM;
            QHOTW = Math.Pow(RBKNDM,2.0)*0.2408;
            ABHOTW =RBKNDM*1.2778*RLROR;
            goto label740;
            
        label720:
            if (RSPZRZ < 1.0) RSPZRZ = 550.0;
            QRB =ROHRZ/RSPZRZ;
            QMT = QRB * 1.2;
            HRORFD = Math.Sqrt(QRB *1.273);
            HKONDM = HRORFD *1.095;
            FFREI= 0.0;
            CFREI= 0.0;
            ZOBEN= 0.0;
            ZUNTEN=0.0;
            BRWASK=0.0;

        label730:
            QHOTW = Math.Pow(HKONDM,2.0)*0.09816;
            ABHOTW =0.7852*HKONDM*RLROR;
            
        label740:
            VHOTW = QHOTW *RLROR;
            
            if (FRADIO >= 1.0)  goto label750;
            QHOTW = QHOTW*0.473;
            ABHOTW = ABHOTW*0.84;
            VHOTW = VHOTW*0.473;
            VVERWL = GVERWL*TVERWL*4.0/60.0/RKONDE;
            
        label750:
            if (RHVOR == 0.0) goto label760;
            if (Math.Abs(RHVOR-HKONDM) < 0.05) goto label760;
            K9VOR = K9VOR + 1;
            if (K9VOR >= 10) goto label760;
            RKULFL = RKULFL*RHVOR/HKONDM;
            KONDZL = 3;
            K5VOR = 0;
            goto label460;
            
        label760:
            WKEFF = RWKEFF;
            FLAECE = RKULFL;
            EWKZUK[KT10] = RWKEFF/RGABD;
            HKOND = HKONDM;
            if (NOPTKO == 1) return;
            if (NKWEIC > 1) goto label1090;
            if (KROHRK == 0) goto label870;
            sw16.WriteLine("0                      ERGEBNIS-WERTE {0}FLUTIGE WASSERFUEHRUNG", Math.Round(RFLUTE,0).ToString().PadLeft(2));
            //770 FORMAT('0',22X,'ERGEBNIS-WERTE ',F2.0,'FLUTIGE WASSERFUEHRUNG')
            
            B1 = RGABD*TX3;
            B2 = RPKOND*TX17;
            B3 = RKULFL*Math.Pow(TX15,2.0);
            B4 = RWKEFF*TX3;
            sw16.WriteLine("0    AUSLEGUNGSDATEN      G       P-4       F          W ");
            
            //goto label(790,810,830),
            if(IWR == 1)    goto label790;
            if(IWR == 2)    goto label810;
            if(IWR == 3)    goto label830;
            
        label790:
            sw16.WriteLine("                         KG/S     BAR      M2         KG/S");
            goto label850;
            
        label810:
            sw16.WriteLine("                        LBS/H    IN.HG     FT2       LBS/H ");
            sw16.WriteLine("                       *1000                         *1000");
            goto label850;
            
        label830:
            sw16.WriteLine("                         T/H      AT       M2         T/H ");
            
        label850:
            sw16.WriteLine("                  {0}{1}{2}{3} ", Math.Round(B1,3).ToString().PadLeft(11),Math.Round(B2,4).ToString().PadLeft(9),
                Math.Round(B3,0).ToString().PadLeft(10),Math.Round(B4,3).ToString().PadLeft(12));
            //860 FORMAT(' ',17X,F11.3,F9.4,F10.0,F12.3)
            goto label970;
            
        label870:
            sw16.WriteLine("                       ERGEBNIS-WERTE    {0}FLUTIGE WASSERFUEHRUNG\n", Math.Round(RFLUTE,0).ToString().PadLeft(2));
            sw16.WriteLine("     AUSLEGUNGSDATEN      G       P-4       F          W        H-W    H-WK   N-K");
            //goto label(890,910,930),
            if(IWR == 1)    goto label890;
            if(IWR == 2)    goto label910;
            if(IWR == 3)    goto label930;
            
        label890:
            sw16.WriteLine("                        KG/S     BAR      M2         KG/S       M       M   ");
            goto label950;
            
        label910:
            sw16.WriteLine("                        LBS/H   IN.HG     FT2       LBS/H     INCH    INCH  ");
            sw16.WriteLine("                        *1000                        *1000");
            goto label950;
            
        label930:
            sw16.WriteLine("                        T/H    AT       M2        T/H        M       M  ");
            
        label950:
            B1 = RGABD*TX3;
            B2 = RPKOND*TX17;
            B3 = RKULFL*TX15*TX15;
            B4 = RWKEFF*TX3;
            B5 = C7*TX14;
            B6 = HWK*TX14;
            
            sw16.WriteLine("                  {0}{1}{2}{3}{4}{5}{6}     ", Math.Round(B1,3).ToString().PadLeft(11),Math.Round(B2,4).ToString().PadLeft(9),
                Math.Round(B3,0).ToString().PadLeft(10),Math.Round(B4,3).ToString().PadLeft(12),Math.Round(B5,2).ToString().PadLeft(8),
                Math.Round(B6,2).ToString().PadLeft(7),Math.Round(RKONDE,0).ToString().PadLeft(4));
            //960 FORMAT(' ',17X,F11.3,F9.4,F10.0,F12.3,F8.2,F7.2,F4.0)
            
        label970:
            GKONDA[KT1] = RWKEFF;
            PKONDA[KT1] = RPKOND;
            DKONDA[KT1] = RGABD;
            if (KTFAK == 0) goto label980;
            KENN = "-HEI";
            goto label990;
            
        label980:
            KENN = "-KWU";
            
        label990:
            sw16.WriteLine("0    UWA131 JE KOND.                                            T-4    T-A    DT       K4      KE   K4/KE V-R F(T-E){0}", KENN.PadLeft(4));
            //1000 FORMAT("0",4X,"UWA131 JE KOND.",44X,"T-4",4X,"T-A",4X,"DT",7X,"K4",6X,"KE",3X,"K4/KE V-R F(T-E)",A4)
            
            //goto label(1010,1030,1050),
            if(IWR == 1)    goto label1010;
            if(IWR == 2)    goto label1030;
            if(IWR == 3)    goto label1050;
            
        label1010:
            sw16.WriteLine("                         KG/S     BAR      M2         KG/S      C      C     C         J/M2 S C           M/S");
            goto label1070;
            
        label1030:
            sw16.WriteLine("                        LBS/H    IN.HG     FT2       LBS/H      F      F     F        BTU/FT2 H F         FT/S");
            sw16.WriteLine("                        *1000                        *1000");
            goto label1070;
            
        label1050:
            sw16.WriteLine("                         T/H      AT       M2         T/H       C      C     C        KCAL/M2 H C         M/S");
            
        label1070:
            C7 = RGABD/RKONDE;
            Z = RKULFL/RKONDE;
            FKOND[KT1] = Z;
            ZL0= RWKEFF/RKONDE;
            VKOKE = KNULL/KE;
            FVERSCH[KT1] = VKOKE;
            B1 = C7*TX3;
            B2 = RPKOND*TX17;
            B3 = Z*TX15*TX15;
            B4 = ZL0*TX3;
            B5 = TKOND*TX0 + TX5;
            B6 = TA*TX0 + TX5;
            if (ITKW == 2 && IKOND == 1) TKWAUS = TA;
            B7 = GRDK*TX0;
            B8 = KNULL*TX13;
            B9 = KE*TX13;
            B10 = RVROR*TX15;
            CKOND [KT1] = RVROR;
            TKONDA[KT1] = RTWK;
            TKONAA[KT1] = TA;
            DTKONA[KT1] = GRDK;
            sw16.WriteLine("                  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11} ",
                Math.Round(B1,3).ToString().PadLeft(11),Math.Round(B2,4).ToString().PadLeft(9),Math.Round(B3,0).ToString().PadLeft(10),
                Math.Round(B4,3).ToString().PadLeft(12),Math.Round(B5,2).ToString().PadLeft(7),Math.Round(B6,2).ToString().PadLeft(7),
                Math.Round(B7,2).ToString().PadLeft(6),Math.Round(B8,2).ToString().PadLeft(10),Math.Round(B9,2).ToString().PadLeft(8),
                Math.Round(VKOKE,3).ToString().PadLeft(6),Math.Round(B10,2).ToString().PadLeft(6),Math.Round(RFTEMP,4).ToString().PadLeft(8));
            //1080 FORMAT(" ",17X,F11.3,F9.4,F10.0,F12.3,2F7.2,F6.2,F10.2,F8.2,F6.3,F6.2,F8.4/)
            
            if (NKPARR > 0) ETWK[NKPARR] = TA;
            
        label1090:
            C7 = ABDVOL/RKONDE/1000.0;
            B1 = RDAROR*TX16;
            B2 = RDSROR*TX16;
            B3 = RLROR*TX14;
            B4 = VISUM(RPKOND,RENTH,13);
            B4 = VISUM(RPKOND,B4,10)*TX18;
            IZ5 = (int)NTYPKO * 8;
            IZ4 = IZ5 - 7;
            if(KROHRK == 0) goto label1170;
            sw16.WriteLine("0                                  R O H R F E L D                    MANTEL   WASSERK   KUEHLWASSER-STUTZEN");
            sw16.WriteLine("                          Z     D-A    S     L-R  ROHRWERK  VABD         BR       H         N    D      V-E");
            //goto label(1110,1130,1110),
            if(IWR == 1)    goto label1110;
            if(IWR == 2)    goto label1130;
            if(IWR == 3)    goto label1110;
            
        label1110:
            sw16.WriteLine("                                 MM     MM     M             M3/KG        M       M              M      M/S");
            goto label1150;
            
        label1130:
            sw16.WriteLine("                                INCH  INCH   INCH           FT3/LB      INCH     INCH           INCH   FT/S");
            
        label1150:
            B5 = RBKNDM*TX14;
            B6 = HWASKX*TX14;
            B7 = C*TX14;
            B8 = C6*TX15;
            RZAHL[KT1] = ROHRZ;
            sw16.WriteLine("                       {0}{1}{2}{3}{4}{5}    {6}  {7}    {8} {9}{10}",
                Math.Round(ROHRZ,0).ToString().PadLeft(7),Math.Round(B1,2).ToString().PadLeft(7),Math.Round(B2,3).ToString().PadLeft(6),
                Math.Round(B3,2).ToString().PadLeft(7),TEXTKO.Substring(IZ4-1,IZ5-IZ4),Math.Round(B4,3).ToString().PadLeft(8),
                Math.Round(B5,2).ToString().PadLeft(7),Math.Round(B6,2).ToString().PadLeft(7),Math.Round(ZSTUTZ,0).ToString().PadLeft(4),
                Math.Round(B7,0).ToString().PadLeft(6),Math.Round(B8,2).ToString().PadLeft(7));
            //1160 FORMAT(" ",22X,F7.0,F7.2,F6.3,F7.2, A ,F8.3,4X,F7.2,2X,F7.2,4X,F4.0,1X,F6.0,F7.2)
            goto label1250;
            
        label1170:
            sw16.WriteLine("0                                                      R O H R F E L D                                         M A N T E L");
            sw16.WriteLine("                           Z     D-A   S      L-R ROHRWERK V-ABD F-FREI C-FREI Z-O Z-U H1            BR      Q");
            //goto label(1190,1210,1190),
            if(IWR == 1)    goto label1190;
            if(IWR == 2)    goto label1210;
            if(IWR == 3)    goto label1190;
            
        label1190:
            sw16.WriteLine("                                 MM   MM       M             M3/KG    M2      M/S                 M             M      M2");
            goto label1230;
            
        label1210:
            sw16.WriteLine("                                 INCH INCH    INCH          FT3/LB   FT2     FT/S                INCH          INCH    FT2");
            
        label1230:
            B5 = FFREI*Math.Pow(TX15,2.0);
            B6 = CFREI*TX15;
            B7 = HRORFD*TX14;
            B8 = RBKNDM*TX14;
            B9 = QMT*TX15*TX15;
            
            sw16.WriteLine("                       {0}{1}{2}{3}{4}{5}{6}{7}  {8}  {9}{10}       {11}{12} ",
                Math.Round(ROHRZ,0).ToString().PadLeft(7),Math.Round(B1,2).ToString().PadLeft(7),Math.Round(B2,3).ToString().PadLeft(6),
                Math.Round(B3,2).ToString().PadLeft(7),TEXTKO.Substring(IZ4-1,IZ5-IZ4), Math.Round(B4,3).ToString().PadLeft(8),
                Math.Round(B5,2).ToString().PadLeft(8),Math.Round(B6,2).ToString().PadLeft(8),Math.Round(ZOBEN,0).ToString().PadLeft(4),
                Math.Round(ZUNTEN,0).ToString().PadLeft(4),Math.Round(B7,2).ToString().PadLeft(7),Math.Round(B8,2).ToString().PadLeft(7),Math.Round(B9,2).ToString().PadLeft(8));

            //1240 FORMAT(" ",22X,F7.0,F7.2,F6.3,F7.2, A ,F8.3,2F8.2,2(2X,F4.0),F7.2,7X,F7.2,F8.2)
            C7 = ROHRZ*0.7853E-4*RDAROR*RDAROR/QRB;
            
        label1250:
            if (NKWEIC != 1) goto label1260;
            RBKNDM = BKNDM1;
            NKWEIC = 2;
            goto label1270;
            
        label1260:
            if (NKWEIC != 2) goto label100;
            RBKNDM = BKNDM2;
            CFREI = CFREI2;
            NKWEIC = 3;
            
        label1270:
            goto label690;
        }   //END
        
        
        static void UWA041()
        {
            //ENTRY HAIZEN
            bool QVORL, QANST1, QANST2, QGESCH;
            bool[] QSCHL = new bool[6];
            double[] DPM = new double[6], GAB = new double[5];
            int[] N06 = new int[6], N02 = new int[6], K22 = new int[6], N22 = new int[6],
                N08 = new int[6];
            int[,] I22 = new int[6,6];
            double[,] PMERK = new double[6,4];
            int L = 0, L4 = LIGHT[4], L10 = LIGHT[10], NZMAX = 20, L1 = 0, NHZ = 0, N = 0, NZ = 0, NZAEL = 0,
                KAUSL = 0, M = 0, L2 = 0, IKKW = 0, MM = 0, M1 = 0, JJEND = 0, IZ11 = 0, KT7VOR = 0, NKPARR = 0,
                LL = 0, J22 = 0;

            double geschw = 0, WPT = 0.0, GKD = 0.0, PM1 = 0.0, PM2 = 0.0, PM3 = 0.0, GFDVOR = GFDE[1], GW = 0, GN1 = 0,
                DPSPT = 0, GAUS = 0, GT = 0, GK = 0, UG = 0, VG = 0, UE1T = 0, VE1T = 0, UE2T = 0, VE2T = 0,
                UPT = 0, VPT = 0, DSUM = 0, TWKA = 0, WZUKA = 0, TWKT = 0, WZUKT = 0;
            
            
            if (LAUFEN < 9) 
                NZMAX = 40;

            if (IZMAXT > 30) 
                IZMAXT = 30;
            
            if (LAUFEN > IZMAXT-3) 
                LIGHT[4] = 5;
            
            QANST1 = false;
            QANST2 = false;
            
            
            for(L = 1; L <= 5; L++)    //DO 10 L=1,5
            {
                GMERK[L,1] = 0.0;
                GMERK[L,2] = 0.0;
                GMERK[L,3] = 0.0;
                PMERK[L,1] = 0.0;
                PMERK[L,2] = 0.0;
                PMERK[L,3] = 0.0;
                QSCHL[L] = false;
                N02[L] = 0;
                N06[L] = 0;
                N22[L] = 0;
                DPM[L] = 0.0;
            }   //10 CONTINUE

            NHZ = 0;
            L1 = IHENDE + 1;
            
            for(LL = L1; LL <= INENDE; LL++)    //DO 80 LL=L1,INENDE
            {
                N = NTYP[LL];
                if (N != 6)     continue;

                if (KATZE2[LL] == 1 || KATZE2[LL] == 2) LHEIZ = KATZE2[LL];
                if (VERLE[LL] > 0.0) GKD = VERLE[LL];
                IX1 = 0;
                IX2 = 0;
                IX6 = LL;
                KK = NN2[LL];
                L = LL;
                
            label20:
                L = L + 1;
                if (L > INENDE) goto label40;
                N = NTYP[L];
                if (N == 17) goto label20;
                if (NN1[L] == 0) goto label20;
                if (NN1[L] != KK) goto label40;
                if (NTYP[L] != 8) goto label25;
                if (N2[L] == 0) goto label30;
                K2 = N2[L];
                IX3 = L;
                
            label21:
                IX3 = IX3 + 1;
                if (IX3 > INENDE) goto label30;
                if (K2 == N1[IX3]) goto label30;
                
                for(IX4 = 1; IX4 <= 8; IX4++)   //DO 22 IX4=1,8
                {
                    if (K2 == NBLTG[IX3,IX4]) goto label30;
                }   //22 CONTINUE
                if (K2 != NN1[IX3]) goto label21;
                IX2 = IX2 + 1;
                N08[IX2] = IX3;
                goto label30;
                
            label25:
                if (N != 22) goto label30;
                if (IX1 == 0) NHZ = NHZ + 1;
                IX1 = IX1 + 1;
                I22[NHZ,IX1] = L;
                KK = NN2[L];
                if (VERLP[L] > 0.0) geschw = VERLP[L];
                if (KATZE2[L] == 8) NZMAX = 40;
                goto label20;
                
            label30:
                KK = NN2[L];
                II = N1[L];
                if ((N == 2 || N == 21) && (II < 35 || II > 39)) goto label20;
                if (N == 2 || N == 21) N02[II-34] = L;
                goto label20;

            label40:
                if (IX1 == 0) goto label50;
                N06[NHZ] = IX6;
                N22[NHZ] = I22[NHZ,IX1];
                K22[NHZ] = IX1;

            label50:
                if (IX2 == 0) continue;
                L = (int)N08[IX2];
                IX6 = L;
                KK = NN1[L];
                IX2 = IX2 - 1;
                L = L - 1;
                IX1 = 0;
                goto label20;
            }   //80 CONTINUE
            
            if (NHZ == 0) return;
            if (LIGHT[4] == 5) 
                sw16.WriteLine(" ***HAIZEN***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", NHZ.ToString().PadLeft(5),N06[1].ToString().PadLeft(5),N22[1].ToString().PadLeft(5),K22[1].ToString().PadLeft(5), 
                    N06[2].ToString().PadLeft(5),N22[2].ToString().PadLeft(5),K22[2].ToString().PadLeft(5),N06[3].ToString().PadLeft(5),N22[3].ToString().PadLeft(5),K22[3].ToString().PadLeft(5));
            //90 FORMAT(1H ,"***HAIZEN***",12I5)

            if (NHZ > 1) NZMAX = 30;
            NZ = 0;
            
        label100:
            NZ = NZ + 1;
            QVORL = false;
            QGESCH = false;
            if (NZ > NZMAX) goto label8000;
            NZAEL = 0;

        label1000:
            KAUSL = 0;
            LIGHT[10] = 1;
            NZAEL = NZAEL + 1;
            if (NZAEL > 20) goto label2000;

            for(L1 = 1; L1 <= NHZ; L1++)    //DO 1900 L1 = 1,NHZ
                L = (int)N06[L1];

            IZ1 = NN2[L];
            K2 = IZ1;
            GW = GLTG[IZ1];
            GN1 = 0.0;
            I = L;
            
        label1100:
            I = I + 1;
            //9000 FORMAT(1H0,2X,3I5,9F12.4)
            if (NZAEL > 18 && LIGHT[4] == 5)
                sw16.WriteLine("0  {0}{1}{2}{3}{4}{5} ", NZAEL.ToString().PadLeft(5),(I-1).ToString().PadLeft(5),NTYP[I-1].ToString().PadLeft(5),
                    Math.Round(GLTG[K2],4).ToString().PadLeft(12),Math.Round(ELTG[K2],4).ToString().PadLeft(12),Math.Round(GN1,4).ToString().PadLeft(12));
            
            N = NTYP[I];
            if (N == 17) goto label1600;
            II = N1[I];
            JJ = N2[I];
            K1 = NN1[I];
            K2 = NN2[I];
            A1 = PLTG[K1];
            A2 = ELTG[K1];
            
            UWA048(I);
            if (N != 8) goto label1200;

            ELTG[K2] = A2;
            if (SUGL > 0.0 && GW > 0.0) ELTG[K2] = (GW*A2+SUQL)/(GW+SUGL);
            if (SUGL > 0.0 && GW <= 0.0) ELTG[K2] = SUQL/SUGL;
            GW = GW + SUGL;
            GLTG[K2] = GW;
            if (JJ == 0) goto label1100;
            ELTG[JJ] = ELTG[K2];
            if (KATZE2[I] > 0) GLTG[JJ] = GW - QBZWM[I];
            if (KATZE2[I] > 0 && KATZE1[I] == 1)
                GLTG[JJ] = GW - GFDE[1]*VERLP[I]/100.0;
            if (GLTG[JJ] < 0.0) GLTG[JJ] = 0.0001;
            if (GLTG[JJ] >= GW && GLTG[JJ]*0.5 < GW) GLTG[JJ] = GLTG[JJ]*.5;
            GW = GW - GLTG[JJ];
            GLTG[K2] = GW;
            goto label1100;

        label1200:
            if (N != 2 && N != 21) goto label1400;
            UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
            if (NZ == 1 && NZAEL == 1 && IX2 > 0 && II > 34 && II < 40)
                PLTG[II] = PLTG[II] - DPHEIZ[II-34];
            UWA046(0);
            A6 = VISUM(A3,A5,-21);
            A4 = VISUM(A1,A2,23);
            if (DTK[I] == 0.0) goto label1210;

            A5 = A4 + DTK[I];
            A6 = VISUM(A3,A5,21);
            
        label1210:
            A7 = ELTG[II];
            Z1 = A7 - A6 - VERLE[I];
            if (KATZE2[I] == 2) Z1 = (A7 - A6)*VERLE[I];
            if (IPUMP[I] == 1) goto label1320;
            TWAUS[I] = TWAUS[I] - DTS[I];
            Z2 = VISUM(PLTG[K2],TWAUS[I],21);
            if (TWAUS[I] < A4) Z2 = A2;
            if (TWAUS[I] < A4) TWAUS[I] = A4;
            Z3 = Z2 - A2;
            Z4 = SUQL - SUGL*A6;
            GN1 = (GW*Z3-Z4)/Z1;
            if (GN1 >= 0.0) goto label1230;

            GN1 = 0.0001;
            if (DTK[I] != 0.0) goto label1220;
            Z5 = (GW*(A2+DTS[I])+SUQL)/(GW+SUGL);
            if (Z5 <= 0.0) Z5 = A6;
            Z6 = SIEDI(PW[I]);
            if (Z5 > Z6) Z5 = Z6 - 5.0;
            A3 = PSTR(Z5);
            Z2 = Z5 - DTS[I];
            TWAUS[I] = VISUM(PW[I],Z2,23);
            goto label1230;
            
        label1220:
            if (GW > 0.0) Z2 = (SUQL-SUGL*A6+GW*A2)/GW;
            if (Z2 < A2) Z2 = A2;
            TWAUS[I] = VISUM(PW[I],Z2,23);
            Z5 = Z2+DTS[I];
            A3 = PSTR(Z5);
            
        label1230:
            A7 = Math.Abs(GN1-GLTG[II]);
            if (GN1 > 0.0) A7 = A7/GN1;
            if (GN1 < 0.01) A7 = 0.00001;
            if (A7 > 0.001) KAUSL = 1;
            if (A7 > 0.01) GN1 = (GLTG[II]+GN1)*0.5;
            GLTG[II] = GN1;
            if (A7 > 0.01) 
                UWA046(0);
            ELTG[K2] = Z2;
            GLTG[K2] = GW;
            if (JJ == 0) goto label1240;
            GLTG[JJ] = GN1 + SUGL;
            ELTG[JJ] = A6;
            PLTG[JJ] = A3;
            goto label1250;
            
        label1240:
            ELTG[K2] = (GW*Z2+(SUGL+GN1)*A6)/(GW+SUGL+GN1);
            GW = GW + SUGL + GN1;
            GLTG[K2] = GW;
            
        label1250:
            UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
            if (II < 35 || II > 39) goto label1100;
            IM[II-34] = II;
            if (IPUMP[I] == 1) goto label1100;
            if (IX2 != 0) goto label1100;

            IZ3 = II - 34;
            IZ4 = II;
            L2 = IHENDE + 1;
            
        label1260:
            for(M = L2; M <= INENDE; M++)   //DO 1290 M=L2,INENDE
            {
                IZ1 = NN1[M];
                IZ2 = NN2[M];
                JJ = N2[M];
                II = N1[M];
                if (IZ2 != IZ4 && JJ != IZ4) continue;
                if (IZ1 > 40 && IZ1 < 47) goto label1300;
                if (NZ == 1 && NZAEL == 1) DPM[IZ3] = DPM[IZ3] + PLTG[IZ1] - PLTG[IZ2];
                UWA048(M);
                if (KRUECK[M] == 1) goto label1270;
                if (IZ4 == JJ) GLTG[IZ2] = GLTG[IZ1]-GLTG[JJ]+SUGL;
                goto label1280;
                
            label1270:
                if (IZ4 == JJ) GLTG[IZ1] = GLTG[IZ2]+GLTG[JJ]-SUGL;
                if (IZ4 == IZ2) GLTG[IZ1] = GLTG[IZ2]-SUGL;
                if (IZ4 == IZ2 && JJ > 0) GLTG[IZ1] = GLTG[IZ2]+GLTG[JJ];
                if (NTYP[M] == 22 && II > 0) GLTG[IZ1] = GLTG[IZ1]-GLTG[II];
                if (NTYP[M] == 8 && VERLE[M] != 0.0)
                    GLTG[IZ1] = GLTG[IZ2]*(100.0-VERLE[M])/100.0;
                if (NTYP[M] == 8 && VERLE[M] != 0.0 && JJ > 0)
                    GLTG[IZ1] = GLTG[IZ1] + GLTG[JJ];
                
            label1280:
                IZ4 = IZ1;
                UWA008("UNPACK", ILTG[IZ4], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 == 0) goto label1260;
                IM[IZ3] = IZ4;
                if (NZ == 1 && NZAEL == 1) DPM[IZ3] = DPM[IZ3] - DPHEIZ[IZ3];
                goto label1100;
            }   //1290 CONTINUE
            goto label1100;

        label1300:
            for(M = L2; M <= INENDE; M++)       //DO 1310 M=L2,INENDE
            {
                IZ1 = NN1[M];
                IZ2 = NN2[M];
                JJ = N2[M];
                if (IZ4 != IZ1 && IZ4 != JJ) continue;
                if (NZ == 1 && NZAEL == 1 && IZ4 != JJ)
                    DPM[IZ3] = DPM[IZ3] + PLTG[IZ2] - PLTG[IZ1];
                GLTG[IZ2] = GLTG[IZ1];
                if (JJ > 0 && (NTYP[M] == 8 || NTYP[M] == 23))
                    GLTG[IZ2] = GLTG[IZ2] - GLTG[JJ];
                IZ4 = IZ2;
                goto label1300;
            }   //1310 CONTINUE
            goto label1100;

        label1320:
            Z4 = SUQL - SUGL*A6;
            if (KATZE2[I] == 2) Z4 = Z4*VERLE[I];
            GN1 = GLTG[II];
            Z2 = (GN1*Z1+Z4)/GW + A2;
            if (JJ == 0 && KRUECK[I] == 1) Z2 = (GN1*Z1+Z4)/(GW-SUGL-GN1)+A2;
            Z3 = VISUM(PW[I],Z2,03);
            TWAUS[I] = Z3;
            A4 = UW0011(Z3+DTS[I],2) + DPLTG[II];
            A4 = (A4+PLTG[II])*0.5;

            IZ1 = II;
            IZ3 = IHENDE + 1;
            if (NZ == 1) 
                DPSPT = 0.0;
            
            for(M = IZ3; M <= INENDE; M++)      //DO 1340 M=IZ3,INENDE
            {
                IZ2 = NN2[M];
                if (IZ2 == 0) continue;
                if (IZ2 != IZ1) continue;
                IZ1 = NN1[M];
                if (NZ == 1) DPSPT = DPSPT + PLTG[IZ1] - PLTG[IZ2];
                
                for(IZ4 = 1; IZ4 <= INENDE; IZ4++)  //DO 1330 IZ4 = 1,IHENDE
                {
                    if (NTYP[IZ4] != 3 && NTYP[IZ4] != 15) continue;
                    if (IZ1 == N2[IZ4]) goto label1350;
                }   //1330 CONTINUE
            }   //1340 CONTINUE
            
            Console.WriteLine("SPT NICHT GEFUNDEN EINGABE UEBERPRUEFEN");
            Console.ReadKey();
            Environment.Exit(0);
            
        label1350:
            PLTG[IZ1] = A4 + DPSPT;
            PLTG[II] = A4;
            goto label1230;

        label1400:
            if (N != 22) goto label1500;
            if (KATZE1[I] > 1) IHEIZ = KATZE1[I];
            if (KATZE2[I] > 0) JHEIZ = KATZE2[I];
            if (II == 0) goto label1420;
            A3 = GW + SUGL;
            A4 = A2;
            if (A3 > 0.0) A4 = (GW*A2+SUQL)/A3;
            A5 = GLTG[II];
            A6 = ELTG[II];
            GW = A3+A5;
            GN1 = 0.0;
            if (A4 < DTS[I] || A6 >= DTS[I]) ELTG[K2] = A4;
            if (A4 < DTS[I]) goto label1410;
            if (A6 >= DTS[I]) goto label1405;
            GN1 = GW*(A4-DTS[I])/(A4-A6);
            goto label1410;
            
        label1405:
            J = I;
            
        label1406:
            J = J - 1;
            if (J <= IHENDE) goto label1410;
            if (NTYP[J] != 8) goto label1406;
            if (N2[J] != II) goto label1406;
            IX1 = NN1[J];
            GN1 = GLTG[IX1] - 0.001;
            
        label1410:
            A7 = Math.Abs(GN1-GLTG[II]);
            if (GN1 > 0.0) A7 = A7/GN1;
            if (Math.Abs(GN1) < 0.1) A7 = 0.001;
            if (A7 > 0.001) KAUSL = 1;
            if (A7 > 0.01) GN1 = (GN1+GLTG[II])*0.5;
            GLTG[K2] = GW;
            if (NZAEL > 18 && LIGHT[4] == 5)
                sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", NZAEL.ToString().PadLeft(5),I.ToString().PadLeft(5),NTYP[I].ToString().PadLeft(5),Math.Round(GLTG[K2],4).ToString().PadLeft(12),Math.Round(DTS[I],4).ToString().PadLeft(12),Math.Round(ELTG[K1],4).ToString().PadLeft(12),Math.Round(GN1,4).ToString().PadLeft(12),Math.Round(A4,4).ToString().PadLeft(12),Math.Round(A7,4).ToString().PadLeft(12),Math.Round(GLTG[II],4).ToString().PadLeft(12));
            GLTG[II] = GN1;
            
        label1420:
            if (KATZE1[I] == 0 && KATZE2[L] == 0 && KATZE2[I] == 0)goto label1440;
            if (KATZE2[I] == 8) goto label1440;
            if ((KATZE2[L] == 8 || KATZE2[L] == 9) && KATZE1[I] == 0)
                goto label1440;
            J = I;
            
        label1430:
            J = J - 1;
            if (J <= L) goto label1440;
            if (NTYP[J] != 2 && NTYP[J] != 21) goto label1450;
            II = N1[J];
            M = II - 34;
            IZ1 = IM[M];
            UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
            if (NZ == 1) goto label1440;
            if (QANST2) goto label1440;
            if (QANST1) goto label1440;
            K2 = NN2[J];
            A10 = A4 - ELTG[K2];
            if (Math.Abs(A4-DTS[I]) < 0.02) goto label1440;
            KAUSL = 1;
            Z4 = DTS[I] - A10;
            Z1 = VISUM(PW[J],Z4,03) + DTS[J];
            Z2 = UW0011(Z1,2) + DPLTG[II];
            PLTG[II] = Z2;
            if (NTYP[J-1] == 17 && KATZE1[I] == 1) PW[J-1] = Z2;
            if (NTYP[J-1] == 17 && (KATZE2[L] == 1 || KATZE2[L] == 2))
                PW[J-1] = Z2;
            
        label1440:
            IX1 = N22[L1];
            if (I == IX1) goto label1900;
            goto label1100;
            
        label1450:
            IX5 = NN1[J];
            IX6 = NN2[J];
            A10 = A10 + ELTG[IX6] - ELTG[IX5];
            goto label1430;

        label1500:
            if (N != 20) goto label1700;
            ELTG[K2] = A2;
            GLTG[K2] = GW;
            goto label1100;

        label1600:
            for(KK =1; KK <= 8; KK++)   //DO 1610 KK=1,8
            {
                IX1 = NBLTG[I,KK];
                if (IX1 == 0) continue;
                PLTG[IX1] = PW[I];
                if (IX1 < 35 || IX1 > 39) continue;
                M = IX1 - 34;
                DPM[M] = 0.0;
            }   //1610 CONTINUE
            goto label1100;

        label1700:
            if (N != 13) goto label1800;
            if (DTS[I] != 0.0) goto label1710;

            A3 = PLTG[K2];
            A4 = VISUM(A1,A2,03);
            A4 = A4 + DTK[I];
            A5 = VISUM(A3,A4,01);
            goto label1720;

        label1710:
            A5 = A2 + DTS[I];

        label1720:
            ELTG[K2] = A5;
            GLTG[K2] = GW;
            J = I;
            
        label1730:
            J = J + 1;
            if (J > INENDE) goto label1100;
            if (NTYP[J] == 2 || NTYP[J] == 21) goto label1100;
            if (NTYP[J] != 22) goto label1730;
            A10 = A10 + (A5-A2);
            goto label1100;

        label1800:
            GLTG[K2] = GW;
            goto label1100;
            
        label1900:
            if (KAUSL == 1) goto label1000;

            for(L = 1; L <= 5; L++)     //DO 1920 L=1,5
            {
                if (GLTG[L+34] <= 0.0) continue;
                if (Math.Abs(GLTG[L+34]-GMERK[L,3])/GLTG[L+34] <= 0.0050) goto label1910;
                QVORL = true;
                if (GMERK[L,1] == 0.0) goto label1910;

                if (GLTG[L+34] > GMERK[L,3] && GMERK[L,3] > GMERK[L,2] && GMERK[L,2] > GMERK[L,1]) 
                    goto label1910;
                if (GLTG[L+34] < GMERK[L,3] && GMERK[L,3] < GMERK[L,2] && GMERK[L,2] < GMERK[L,1])
                    goto label1910;
                GLTG[L+34] = (GLTG[L+34]+GMERK[L,3]+GMERK[L,2]+GMERK[L,1])*0.25;
                
                if (Math.Abs(GLTG[L+34]-GMERK[L,2])/GLTG[L+34] < 0.005 && Math.Abs(GMERK[L,3]-GMERK[L,1])/GMERK[L,3] < 0.005)
                    GLTG[L+34] = (GLTG[L+34] + GMERK[L,3])*0.5;
                
            label1910:
                GMERK[L,1] = GMERK[L,2];
                GMERK[L,2] = GMERK[L,3];
                GMERK[L,3] = GLTG[L+34];
            }   //1920 CONTINUE
            if (LIGHT[4] == 5)
                sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),KAUSL.ToString().PadLeft(5),Math.Round(GLTG[35],4).ToString().PadLeft(12),Math.Round(GLTG[36],4).ToString().PadLeft(12),Math.Round(GLTG[37],4).ToString().PadLeft(12),Math.Round(GLTG[38],4).ToString().PadLeft(12),Math.Round(GLTG[39],4).ToString().PadLeft(12));

        label2000:
            GAUS = GFDE[1];
            IKKW = 0;
            JJ = ANZTRB + 1;
            
        label2010:
            JJ = JJ - 1;
            if (JJ == 0) goto label3000;
            if (JJ == 1) goto label2015;

            IX4 = NRMVAE[JJ];
            GAUS = GLTG[IX4];
            if (NITRE[JJ] != 8) goto label2015;

            IZ4 = NTTETB[JJ-1] + 1;
            UWA006("RDISC", 52, IZ4);   //RDISC(52, IZ4);
            A1 = GMFIXE[JJ];
            A2 = P0E[IZ4];
            A3 = GMFIXE[JJ];
            if (A1 != 1.0) A3 = A1*(A2+A1*(YPT[1]-A2))/YPT[1];
            IZ1 = LVAR[JJ];
            if (IZ1 == 0) goto label2015;
            UWA008("UNPACK", ILTG[IZ1], ref IZ2, ref IZ3, ref IZ4, ref IZ5);
            UWA006("RDISC", 52,IZ4);
            GAUS = (G[IZ5+1,K]+GLTG[IX4])*A3;
            GLTG[IX4] = GAUS;

        label2015:
            IZ1 = NTTETB[JJ];
            L = 1;
            if (JJ > 1) L = NTTETB[JJ-1] + 1;
            
            for(MM = L; MM <= IZ1; MM++)    //DO 2080 MM=L,IZ1
            {
                J = MM;
                UWA006("RDISC", 52,J);
                UWA006("RDISC", 53,J);
                UWA006("RDISC", 59,J);
                IZ3 = ITTEND[J];
                
                for(N = 1; N <= IZ3; N++)   //DO 2040 N=1,IZ3
                {
                    I = N;
                    UWA010(I,1);
                    if (J == 1 && I == 1) G[I,K] = GFDE[1];
                    if (J > 1 && I == 1) G[I,K] = GAUS;
                    GT = G[I,K];
                    if (KT5 == 0) goto label2030;
                    UWA044(I,1);
                    
                    for(M1 = 1; M1 <= 10; M1++)     //DO 2020 M1=1,10
                    {
                        IZ4 = LABT[M1];
                        if (IZ4 == 0) continue;
                        if (IZ4 > 40 && IZ4 < 47) IKKW = IZ4;
                        if (IZ4 > 48 && IZ4 < 70) SUMGAB = SUMGAB + GLTG[IZ4];
                    }   //2020 CONTINUE
                    GT = GT + SUMGZU - SUMGAB;
                    
                label2030:
                    if (I != IZ3) goto label2035;
                    if (J != IZ1) goto label2035;
                    GAB[JJ] = GT;
                    if (LHEIZ == 1 || LHEIZ == 2) goto label2035;
                    IX1 = I - 1;
                    UWA010(IX1,1);
                    if (KT5 == 0) goto label2035;
                    UWA044(IX1,1);
                    GAB[JJ] = GT - SUMGZU + SUMGAB;
                    
                label2035:
                    if (I != IZ3) G[I+1,K] = GT;
                    if (I == IZ3) GAUS = GT;
                    if (JJ > 1 && J == IZ1 && I == IZ3) GLTG[IX4+100] = GT;
                }   //2040 CONTINUE
                UWA006("WDISC", 52,J);

                if (IKKW == 0) continue;
                IZ4 = IKKW;
                L1 = IHENDE + 1;
                
            label2050:
                for(M = L1; M <= INENDE; M++)   //DO 2070 M=L1,INENDE
                {
                    IZ3 = NN1[M];
                    if (IZ3 != IZ4)     continue;
                    IZ4 = NN2[M];
                    N = NTYP[M];
                    IZ5 = N2[M];
                    GK = 0.0;
                    if (IZ5 != 0) GK = GLTG[IZ5];
                    if (N != 8) goto label2060;
                    UWA048(M);
                    GLTG[IZ4] = GLTG[IZ3] + SUGL - GK;
                    goto label2050;
                    
                label2060:
                    if (N == 23) GLTG[IZ4] = GLTG[IZ3] - GK;
                    if (N != 8 && N != 23) GLTG[IZ4] = GLTG[IZ3];
                    goto label2050;
                }   //2070 CONTINUE
                IKKW = 0;
            }   //2080 CONTINUE
            goto label2010;
            
        label3000:
            LIGHT[10] = 0;
            
            for(MM = 1; MM <= ANZTRB; MM++)     //DO 4300 MM = 1,ANZTRB
            {
                ITRB = MM;
                JJ=NTTETB[ITRB] + 1;
                JJEND = 1;
                
                if (ITRB > 1)
                    JJEND = NTTETB[ITRB - 1] + 1;
                
                JJANF = JJ - 1;
                
            label3100:
                JJ = JJ - 1;
                
                if (JJ >= JJEND) 
                    goto label3200;
                
                if (GMFIXE[ITRB] == 1.0) 
                    PN4[ITRB-1]= YPT[1];
                
                continue;   //goto label4300
                
            label3200:
                I = ITTEND[JJ] +1;
                
                if (JJ < ANZDTT && PSI[1] != 0.0) 
                    WPT = WPT / PSI[1];
                IZ1 = JJ;
                UWA006("RDISC",52,IZ1);
                UWA006("RDISC",59,IZ1);
                
                if (JJ != JJANF) YPT[I-1] = WPT;
                
            label3300:
                I = I-1;
                if (I > 1) 
                    goto label3400;
                IZ1 = JJ;
                UWA006("WDISC", 52,IZ1);
                UWA006("WDISC", 59,IZ1);
                goto label3100;

            label3400:
                UG = XG[I];
                
                if (YG[I] < GMINTT[MM]) YG[I] = GMINTT[MM];
                VG = YG[I];
                UE1T = XE1T[I];
                VE1T = YE1T[I];
                UE2T = XE2T[I];
                VE2T = YE2T[I];
                UPT = XPT[I];
                VPT = YPT[I];
                IZ11 = ITRB;
                
            label3500:
                IZ11 = IZ11 + 1;
                if (IZ11 > ANZTRB) goto label3600;
                IZ1=NRMVAE[IZ11] + 100;
                if (IZ1 <= 100) goto label3500;

                UWA008("UNPACK", ILTG[IZ1], ref IZ2, ref IZ3, ref IZ4, ref IZ5);
                if (IZ4 == JJ && IZ5 == I) 
                    PN4[IZ11] = VPT;
                goto label3500;
                
            label3600:
                KT7VOR = KT7;
                UWA010(I,1);
                //goto label(3700,3710,3800,3900,3300,4000,3300,3900,3900),
                if(KT7 == 1)    goto label3700;
                if(KT7 == 2)    goto label3710;
                if(KT7 == 3)    goto label3800;
                if(KT7 == 4)    goto label3900;
                if(KT7 == 5)    goto label3300;
                if(KT7 == 6)    goto label4000;
                if(KT7 == 7)    goto label3300;
                if(KT7 == 8)    goto label3900;
                if(KT7 == 9)    goto label3900;

            label3700:
                if (I <= 1) goto label3300;
                
                WPT = VPT/LS[1];
                if (YC2GES[1] != 0.0) WPT = YC2GES[1];
                goto label4100;

            label3710:
                A3 = 1.0;
                if (KT7VOR == 3) goto label3770;
                if (I > 3) goto label3760;
                DSUM = 0.0;
                
                for(N = 1; N <= 4; N++)     //DO 3720 N=1,4
                    DSUM = DSUM + Math.Pow(VENDUR[N],2);    //3720 CONTINUE
                A1 = 0.0;
                A4 = VISUM(YPT[I-1],T1T[I-1],10);
                if (DSUM == 0.0) goto label3730;
                A1 = YG[I]*A4*0.354E+06/DSUM;
                CVENT[1] = A1;
                A1 = A1*A1*ZETAV/A4/19.62E+04;
                
            label3730:
                if (VBEZ != 0.0) A1 = A1 + DPBEZ* Math.Pow(YG[I],2.0)*A4/VBEZ;
                A2 = YPT[I-1] - A1;
                if (A2 <= 0.0) A2 = YPT[I-1];
                if (STZMDT[ITRB] != 99) goto label3740;
                A3 = A2;
                goto label3750;
                
            label3740:
                A3 = VISUM(A2,YE1T[I],13);
                if (KT7VOR == 5) 
                    YC2GES[I] = YC2GES[I+1];
                A3 = VISUM(A2,A3,12);
                A4 = YE1T[I] - Math.Pow(YC2GES[I],2)/8.37225E+03;
                A3 = VISUM(A3,A4,15);
                TSTFMX[I] = A2/A3;
                
            label3750:
                A3 = A3/YPT[I-1];
                
            label3760:
                if (KT7VOR == 5) goto label3770;
                WPT = VPT/DI[I]/A3;
                goto label4100;
                
            label3770:
                if (KT7VOR == 3) TSTFMX[I] = 1.0;

                WPT = P0E[KT6];
                if (JJ == JHEIZ && PHZ1 <= 0.0) PHZ1 = WPT;
                if (JJ == IHEIZ && PHZ2 <= 0.0) PHZ2 = WPT;
                if (JJ == IHEIZ) WPT = PHZ2*PSI[1];
                if (JJ == IHEIZ) QANST2 = false;
                if (IHEIZ > 0 && JHEIZ > 2 && JJ == JHEIZ) WPT = PHZ1*PSI[1];
                if (IHEIZ > 0 && JHEIZ > 2 && JJ == JHEIZ) QANST1 = false;
                VPT = WPT*DI[I]*A3;
                A1 = YPT[I+1];
                if(KT7VOR == 3) A1=A1/0.97;
                if (A1 > VPT) goto label3780;
                YPT[I] =VPT;
                goto label4100;
                
            label3780:
                VPT = A1;
                WPT = VPT/DI[I]/A3;
                if (JJ == IHEIZ && PHZ2 <= 0.0) PHZ2 = WPT;
                if (JJ == JHEIZ && PHZ1 <= 0.0) PHZ1 = WPT;
                if (JJ == IHEIZ) QANST2 = true;
                if (IHEIZ > 0 && JHEIZ > 2 && JJ == JHEIZ) QANST1 = true;
                YPT[I] =VPT;
                goto label4100;

            label3800:
                A2 = YE2T[I] - Math.Pow(YC2GES[I],2)/8.37225E+03;
                A3 = VISUM(YPT[I],A2,13);
                A3 = VISUM(YPT[I],A3,12);
                A2 = YE2T[I];
                A3 = VISUM(A3,A2,15);
                TSTFMX[I] = A3/YPT[I];
                if (KRZEIN[KT6] <= 2) goto label3300;
                A1 = 1.0;
                WPT = DRUCKT(XPT[I-1],UE1T,UPT,UG,VE1T,VPT,VG,A1);
                goto label4100;
                
            label3900:
                A1 = 1.0;
                if (YDFAKT[I] != 0.0) A1 = XDFAKT[I] / YDFAKT[I];

                if (KT1 <= 1) goto label3905;
                if (LAUFEN == 1) goto label3905;
                if (XPT[75] == 0.0 || PSI[75] == 0.0) goto label3905;
                UPT = XPT[75];
                VPT = PSI[75] * VPT;
                
            label3905:
                if (A1 > 0.0) goto label3910;
                WPT = 1.001*VPT;
                goto label4100;
                
            label3910:
                WPT = DRUCKT(XPT[I-1],UE1T,UPT,UG,VE1T,VPT,VG,A1);
                goto label4100;

            label4000:
                if (PN4[KT10] == 0.0) goto label4010;
                VPT= PN4[KT10];
                goto label4030;

            label4010:
                TWKA = ETWKA[KT10];
                WZUKA = EWKZKA[KT10];
                if (WZUKA <= 0.0) goto label4020;
                TWKT = ETWK[KT10];
                WZUKT = EWKZUK[KT10];
                VPT = UWA025(ref UG, ref VG, ref UPT, ref VPT, ref UE2T, ref VE2T, ref TWKA, ref TWKT, ref WZUKA, ref WZUKT, ref KT10);
                NKPARR = NKPARA[KT10];
                if (NKPARR > 0) ETWK[NKPARR] = TKONAT[KT10];
                goto label4030;
                
            label4020:
                VPT = UPT;
                
            label4030:
                YPT[I] = VPT;
                A1 = VISUM (VPT,VE2T,13);
                A1 = VISUM (VPT,A1,10);
                UWA006("RDISC", 53,KT9);
                WPT = VPT + YDFAKT[I]*Math.Pow((VG *A1/FLUT),2) *VPT*1.0E-08;

            label4100:
                YPT[I-1] = WPT;
                if (KT7VOR != 5) goto label4110;
                TSTFMX[I+1] = TSTFMX[I];
                if (YPT[I] <= YPT[I+1]) goto label4110;
                YPT[I] = YPT[I] * TSTFMX[I];
                TSTFMX[I] = 1.0;
                
            label4110:
                if (KT7 != 3) goto label4200;
                P0E[KT6] = WPT/DI[I-1];

            label4200:
                if (KT5 == 0) goto label3300;
                A4 = 0.0;
                UWA044(I,1);
                
                for(M1 = 1; M1 <= 10; M1++)     //DO 4220 M1=1,10
                {
                    IZ4 = LABT[M1];
                    if (IZ4 == 0) continue;
                    if (IZ4 > 46) continue;
                    A4 = A4 + GLTG[IZ4];
                }   //4220 CONTINUE
                
                for(M1 = 1; M1 <= 10; M1++)     //DO 4280 M1=1,10
                {
                    IZ4 = LABT[M1];
                    if (IZ4 == 0) goto label3300;
                    
                    for(M = 1; M <= 5; M++)     //DO 4222 M=1,5
                    {
                        if (IZ4 == IM[M]) 
                            goto label4224;
                    }   //4222 CONTINUE
                    continue;

                label4224:
                    IX1 = IZ4;
                    UWA006("RDISC", 56,KT9);
                    A1 = VISUM(YPT[I],T2T[I],00);
                    A2 = 0.393E-06*Math.Pow((TAFDP[KT14]*A4),2.0)*A1;
                    A3 = 0.46*YPT[I];
                    if (A2 > A3) A2 = A3;
                    
                    for(M = 1; M <= 10; M++)    //DO 4226 M=1,10
                    {
                        IZ4 = LABT[M];
                        if (IZ4 == 0) continue;
                        if (IZ4 > 46) continue;
                        PLTG[IZ4] = YPT[I] - A2;
                    }   //4226 CONTINUE
                    
                    if (IX1 > 34 && IX1 < 40) goto label4250;
                    
                    for(M = 1; M <= 5; M++)     //DO 4230 M=1,5
                        if (IX1 == IM[M])   
                            goto label4240;     //4230 CONTINUE
                    
                    continue;
                    
                label4240:
                    PLTG[M+34] = PLTG[IX1] - DPM[M];
                    IX1 = M + 34;
                    
                label4250:
                    M = IX1 - 34;
                    if (LIGHT[4] == 5)
                        sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),IX1.ToString().PadLeft(5),Math.Round(YPT[I],4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12),Math.Round(PLTG[IX1],4).ToString().PadLeft(12),Math.Round(DPM[M],4).ToString().PadLeft(12),Math.Round(PLTG[M+34],4).ToString().PadLeft(12),Math.Round(G[I,K],4).ToString().PadLeft(12),Math.Round(SUMGZU,4).ToString().PadLeft(12),Math.Round(SUMGAB,4).ToString().PadLeft(12));
                    
                    M = IX1 - 34;
                    DPHEIZ[M] = A2;
                    L = N02[M];
                    Z1 = geschw;
                    if (Z1 <= 0.0) continue;
                    if (A4 <= 0.0) continue;

                    if (NTYP[L-1] != 8) continue;
                    IZ1 = N2[L-1];
                    if (IZ1 == 0) continue;
                    if (IZ1 != NBLTG[L+1,1]) continue;
                    Z2 = GLTG[IZ1];

                    if (KT14 == 1) Z9 = HS1MIN[6];
                    if (KT14 == 2) Z9 = HS1MAX[6];
                    if (KT14 == 3) Z9 = HSZMIN[6];
                    if (KT14 == 4) Z9 = HSZMAX[6];
                    if (KT14 == 5) Z9 = TAKF1 [6];
                    if (Z9 == 0.0) Z9 = 1.0;
                    Z4 = Z1/A1/TAFDP[KT14]*Math.Sqrt(Z9)*3.6;
                    if (Z2 <= 0.0 && Z4 > A4) continue;
                    if (Math.Abs(Z4-A4)/Z4 < 0.01) continue;
                    IZ2 = N1[L];
                    IZ3 = N2[L];
                    IZ4 = NN1[L];
                    IZ5 = NN2[L];
                    IZ6 = NN1[L-1];
                    A5 = A4 - GLTG[IZ2];
                    if (A5 > Z4) goto label4270;
                    Z3 = PLTG[IZ2]-DPLTG[IZ2];
                    if (Z3 <= 0.0) Z3 = PLTG[IZ2]*0.77;
                    if (IZ3 == 0) Z6 = VISUM(Z3,Z5,-21);
                    if (IZ3 > 0) Z6 = ELTG[IZ3];
                    Z5 = ELTG[IZ2] - DELTG[IZ2];
                    if (KATZE2[L] == 2) Z5 = Z5*VERLE[L];
                    Z7 = ELTG[IZ5]-ELTG[IZ4];
                    Z8 = (A4-Z4)*(Z5-Z6)/Z7*0.33;
                    if (QSCHL[M] && A4 > Z4 && GLTG[IZ1]+Z8 > GLTG[IZ1])    continue;
                    QSCHL[M] = true;
                    QGESCH = true;
                    GLTG[IZ1] = GLTG[IZ1] + Z8;
                    if (GLTG[IZ1] < 0.0) GLTG[IZ1] = 0.0;
                    if (GLTG[IZ1] >= GLTG[IZ6]) GLTG[IZ1] = GLTG[IZ6]*0.99;
                    if (LIGHT[4] == 5)
                        sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),IZ1.ToString().PadLeft(5),Math.Round(A4,4).ToString().PadLeft(12),Math.Round(Z4,4).ToString().PadLeft(12),Math.Round(Z8,4).ToString().PadLeft(12),Math.Round(GLTG[IZ1],4).ToString().PadLeft(12),Math.Round(QBZWM[L-1],4).ToString().PadLeft(12));
                    
                    QBZWM[L-1] = GLTG[IZ1];
                    continue;
                    
                label4270:
                    QBZWM[L-1] = GLTG[IZ6] - 0.0001;
                }   //4280 CONTINUE
                goto label3300;
            }   //4300 CONTINUE
            
            if (QGESCH) goto label100;
            
            for(L = 1; L <= 5; L++)     //DO 4500 L=1,5
                QSCHL[L] = false;       //4500 CONTINUE

            for(L = 1; L <= 5; L++)     //DO 4620 L=1,5
            {
                if (PLTG[L+34] <= 0.0) continue;
                if (Math.Abs(PLTG[L+34]-PMERK[L,3])/PLTG[L+34] < 0.0002) goto label4610;
                QVORL = true;
                if (PMERK[L,1] == 0.0) goto label4610;

                if (PLTG[L+34] > PMERK[L,3] && PMERK[L,3] > PMERK[L,2] && PMERK[L,2] > PMERK[L,1])
                    goto label4610;
                if (PLTG[L+34] < PMERK[L,3] && PMERK[L,3] < PMERK[L,2] && PMERK[L,2] < PMERK[L,1])
                    goto label4610;
                PLTG[L+34] = (PLTG[L+34]+PMERK[L,3]+PMERK[L,2]+PMERK[L,1])*0.25;
                if (Math.Abs(PLTG[L+34]-PMERK[L,2])/PLTG[L+34] < 0.005 && Math.Abs(PMERK[L,3]-PMERK[L,1])/PMERK[L,3] < 0.005)
                    PLTG[L+34] = (PLTG[L+34] + PMERK[L,3])*0.5;
            label4610:
                PMERK[L,1] = PMERK[L,2];
                PMERK[L,2] = PMERK[L,3];
                PMERK[L,3] = PLTG[L+34];
            }   //4620 CONTINUE
            if (LIGHT[4] == 5)
                sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),KAUSL.ToString().PadLeft(5),Math.Round(PLTG[35],4).ToString().PadLeft(12),Math.Round(PLTG[36],4).ToString().PadLeft(12),Math.Round(PLTG[37],4).ToString().PadLeft(12),Math.Round(PLTG[38],4).ToString().PadLeft(12),Math.Round(PLTG[39],4).ToString().PadLeft(12));

            LIGHT[10] = 1;
            
            for(LL = 1; LL <= NHZ; LL++)    //DO 7000 LL=1,NHZ
            {
                J22 = K22[LL];
                L = N06[LL];
                J = N22[LL];
                if (KATZE1[J] == 0 && KATZE2[J] == 0 && KATZE2[L] == 0)goto label6000;
                if ((KATZE2[L] == 8 || KATZE2[L] == 9) && KATZE1[J] == 0)
                    goto label6000;
                I = J;
                IX5 = NN1[I];
                A2 = ELTG[IX5];
                A4 = A2;
                UWA048(I);
                A3 = GLTG[IX5] + SUGL;
                
                if (A3 > 0.0) A4 = (GLTG[IX5]*A2+SUQL)/A3;
                A10 = A4 - A2;
                
            label5000:
                I = I - 1;
                if (NTYP[I] == 2 || NTYP[I] == 21) goto label5001;
                IX5 = NN1[I];
                IX6 = NN2[I];
                A10 = A10 + ELTG[IX6] - ELTG[IX5];
                goto label5000;
                
            label5001:
                II = N1[I];
                M = II - 34;
                IZ1 = IM[M];

                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX10, ref IX3, ref IX4);

                A4 = DTS[J] - A10;
                A1 = VISUM(PW[I],A4,03) + DTS[I];
                A2 = UW0011(A1,2) + DPLTG[II];
                Z7 = PLTG[II];
                if (NTYP[I-1] == 17 && KATZE1[J] == 1) PLTG[II] = PW[I-1];
                if (NTYP[I-1] == 17 && (KATZE2[L] == 1 || KATZE2[L] == 2))
                    PLTG[II] = PW[I-1];
                
                Z1 = PLTG[II] - DPLTG[II];
                if (Z1 <= 0.0) Z1 = PLTG[II]*0.77;
                Z3 = UW0011(Z1,1) - DTS[I];
                Z2 = VISUM(PW[I],Z3,21);
                Z2 = Z2 + A10;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(Z2,4).ToString().PadLeft(12),Math.Round(DTS[J],4).ToString().PadLeft(12),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12),Math.Round(GAB[IX10],4).ToString().PadLeft(12),Math.Round(GKD,4).ToString().PadLeft(12),Math.Round(PHZ2,4).ToString().PadLeft(12),Math.Round(PHZ1,4).ToString().PadLeft(12),Math.Round(A10,4).ToString().PadLeft(12));
                
                if (KATZE1[J] == 0 && KATZE2[L] > 2) goto label5600;
                if (KATZE1[J] > 0 || KATZE2[L] > 0) goto label5100;
                if (Math.Abs(Z2-DTS[J]) < 0.01) goto label6000;
                QVORL = true;

                if (KATZE2[J] > 1) goto label5010;

                A3 = PLTG[II]/A2;
                if (A3 > 1.3) A3 = 1.3;
                if (A3 < 0.7) A3 = 0.7;
                
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA044(IX4,1);
                A4 = G[IX4,K] - SUMGAB + SUMGZU;
                
                if (A4 < GMINTT[IX10]) A4 = GMINTT[IX10];

                A5 = A4 - A4*A3;
                JJ = N2[I];
                if (JJ == 0) A6 = VISUM(Z1,Z4,-21);
                if (JJ > 0) A6 = ELTG[JJ];
                K1 = NN1[I];
                A7 = ELTG[K1];
                A8 = A5*(ELTG[II]-A6)/(DTS[J]-A10-A7)*0.1;
                
                if (A10+A7 > DTS[J]) A8 = -A8;

                if (Math.Abs(A8) > QBZWM[L]*0.1 && A8 > 0.0) A8 = QBZWM[L]*0.1;
                if (Math.Abs(A8) > QBZWM[L]*0.1 && A8 < 0.0) A8 =-QBZWM[L]*0.1;
                QBZWM[L] = QBZWM[L] - A8;
                if (QBZWM[L] <= 0.0) QBZWM[L] = 0.0001;
                K2 = NN2[L];
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),K2.ToString().PadLeft(5),Math.Round(QBZWM[L],4).ToString().PadLeft(12),Math.Round(GLTG[K2],4).ToString().PadLeft(12),Math.Round(A8,4).ToString().PadLeft(12),Math.Round(Z2,4).ToString().PadLeft(12),Math.Round(DTS[J],4).ToString().PadLeft(12),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12),Math.Round(A3,4).ToString().PadLeft(12));
                
                if (A3 < 0.0) PLTG[II] = A2;
                if (A3 < 0.0) PLTG[IZ1] = A2 + DPM[M];
                GLTG[K2] = QBZWM[L];
                goto label6000;

            label5010:
                if (KATZE2[J] != 2) goto label6000;
                A3 = GFDE[1] - GFDE[1]*(1.0+A2/PLTG[II])*0.5;
                A3 = A3/3.0;

                GFDE[1] = GFDE[1] - A3;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(GFDVOR,4).ToString().PadLeft(12),Math.Round(GFDE[1],4).ToString().PadLeft(12),Math.Round(A3,4).ToString().PadLeft(12),Math.Round(Z2,4).ToString().PadLeft(12),Math.Round(DTS[J],4).ToString().PadLeft(12),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12));
                PLTG[II] = A2;
                goto label6000;

            label5100:
                if (NTYP[I-1] == 17 && A2 > Z7+0.0005)
                    sw16.WriteLine("      DROSSELUNG IN LEITUNG{0} UEBERPRUEFEN   PTURB={1}    PLTG({2}) ={3}", II.ToString().PadLeft(4),
                        Math.Round(Z7,4).ToString().PadLeft(10),II.ToString().PadLeft(3),Math.Round(A2,4).ToString().PadLeft(10));
                //9001 FORMAT(1H ,5X,"DROSSELUNG IN LEITUNG",I4," UEBERPRUEFEN ", "PTURB=",F10.4," PLTG(",I3,") =",F10.4)

                if (Math.Abs(Z2-DTS[J]) < 0.01) goto label5300;
                if (NTYP[I-1] != 17) goto label5200;

                if (LIGHT[4] == 5) 
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(PW[I-1],4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12),Math.Round(GLTG[II],4).ToString().PadLeft(12));
                PW[I-1] = A2;
                PLTG[II] = A2;
                goto label6000;

            label5200:
                A4 = (A2*3.0+PLTG[II])*0.25;
                if (ITTEND[IX3] == IX4 && (KATZE1[J]-1 == IX3 || KATZE2[J]-1 == IX3 || IX3 == NTTETB[IX10] && (KATZE2[L] == 1 || KATZE2[L] == 2))) 
                    goto label5270;

            label5220:
                I = I - 1;
                if (I == L) goto label6000;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5220;
                JJ = N1[I];
                M = JJ - 34;
                IZ1 = IM[M];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX8, ref IX9);
                if (IX2 != IX10) goto label5220;
                if (ITTEND[IX8] != IX9) goto label5220;
                if (KATZE1[J]-1 != IX8 && KATZE2[J]-1 != IX8 && (KATZE2[L] == 0.0 || KATZE2[L] > 2)) 
                    goto label5220;
                if (IX8 != NTTETB[IX2] && (KATZE2[L] == 1 || KATZE2[L] == 2))
                    goto label5220;
                if (KATZE2[L] == 1) goto label5230;
                if (A2 > PLTG[II]) goto label5230;
                if (IX8 == KATZE1[J]-1 && QANST2) goto label5300;
                if (IX8 == KATZE2[J]-1 && QANST1) goto label5300;
                
            label5230:
                A3 = PLTG[JJ]*(1.0+A2/PLTG[II])*0.5;
                A3 = A3 + DPM[M];
                if (IX8 == KATZE1[J]-1) PHZ2 = A3;
                if (IX8 == KATZE2[J]-1) PHZ1 = A3;
                if (KATZE2[L] == 1 || KATZE2[L] == 2) PN4[IX2] = A3;
                if (IX8 == KATZE1[J]-1 && QANST2) goto label5300;
                if (IX8 == KATZE2[J]-1 && QANST1) goto label5300;
                QVORL = true;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),JJ.ToString().PadLeft(5),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12),Math.Round(PLTG[JJ],4).ToString().PadLeft(12),Math.Round(A3,4).ToString().PadLeft(12),Math.Round(A4,4).ToString().PadLeft(12),Math.Round(GAB[IX2],4).ToString().PadLeft(12),Math.Round(PHZ2,4).ToString().PadLeft(12),Math.Round(PHZ1,4).ToString().PadLeft(12));
                PLTG[IZ1] = A3;
                PLTG[JJ] = A3-DPM[M];
                PLTG[II] = A4;
                if (KATZE2[L] == 2) goto label5300;
                if (Math.Abs(Z2-DTS[J]) < 0.05 || NZ > 5) goto label5300;
                goto label6000;

            label5270:
                A3 = A2 + DPHEIZ[M] + DPM[M];
                if (KATZE1[J]-1 == IX3) PHZ2 = A3;
                if (KATZE2[J]-1 == IX3) PHZ1 = A3;
                if (KATZE1[J]-1 == IX3 && QANST2) goto label5300;
                if (KATZE2[J]-1 == IX3 && QANST1) goto label5300;
                QVORL = true;
                if (LIGHT[4] == 5) sw16.WriteLine("0 {0}{1}{2}{3}{4}{5}{6}{7}{8} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12),Math.Round(A3,4).ToString().PadLeft(12),Math.Round(GLTG[II],4).ToString().PadLeft(12),Math.Round(PHZ2,4).ToString().PadLeft(12),Math.Round(PHZ1,4).ToString().PadLeft(12));
                if (KATZE2[L] == 1 || KATZE2[L] == 2) PN4[IX2] = A3;
                PLTG[II] = A2;
                
                if (Math.Abs(Z2-DTS[J]) >= 0.05 && NZ < 6) goto label6000;

            label5300:
                if (KATZE2[L] == 7 || KATZE2[L] == 8 || KATZE2[L] == 9) goto label5400;
                if (KATZE1[J] == 1) goto label6000;
                if (KATZE2[L] == 1 || KATZE2[L] == 2) goto label5400;
                if (KATZE2[J] == 0) goto label6000;

                I = J;
                
            label5310:
                I = I - 1;
                if (I == L) goto label6000;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5310;
                JJ = N1[I];
                M = JJ - 34;
                IZ1 = IM[M];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                
                if (IX2 != IX10) goto label5310;
                if (ITTEND[IX3] != IX4) goto label5310;
                if (KATZE1[J]-1 != IX3 && KATZE2[J]-1 != IX3) goto label5310;
                IX6 = I;
                I = J;
                
            label5320:
                I = I - 1;
                if (I == L) goto label6000;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5320;
                II = N1[I];
                M = II - 34;
                IZ1 = IM[M];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                if (ITTEND[IX3] != IX4) goto label5320;
                if (IX2 == IX10) goto label5320;
                if (KATZE1[J]-1 != IX3 && KATZE2[J]-1 != IX3) goto label5320;
                IX5 = I;
                if (VERLE[J] == 0.0) goto label5330;

                if (KATZE1[J]-1 == IX3 && PLTG[JJ] > PLTG[II])PHZ2=PHZ1/VERLE[J];
                if (KATZE1[J]-1 == IX3 && PLTG[JJ] < PLTG[II])PHZ2=PHZ1*VERLE[J];
                if (KATZE1[J]-1 == IX3 && QANST2) goto label6000;
                if (KATZE2[J]-1 == IX3 && PLTG[JJ] < PLTG[II])PHZ1=PHZ2*VERLE[J];
                if (KATZE2[J]-1 == IX3 && PLTG[JJ] > PLTG[II])PHZ1=PHZ2/VERLE[J];
                if (KATZE2[J]-1 == IX3 && QANST1) goto label6000;
                if (KATZE1[J]-1 == IX3) A6 = PHZ2 - DPM[M];
                if (KATZE2[J]-1 == IX3) A6 = PHZ1 - DPM[M];
                if (Math.Abs(A6-PLTG[II])/A6 < 0.0002) goto label6000;
                QVORL = true;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A6,4).ToString().PadLeft(12),Math.Round(VERLE[J],4).ToString().PadLeft(12));
                PLTG[II] = A6;
                goto label6000;

            label5330:
                I = I - 1;
                if (I == L) goto label5340;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5330;
                A2 = TWAUS[I];
                goto label5350;
                
            label5340:
                A2 = TWAUS[L];
                
            label5350:
                I = IX6;
                A3 = TWAUS[I];
                I = IX5;
                A4 = (A2+A3)*0.5 + DTS[I];
                A6 = UW0011(A4,2) + DPLTG[II];
                if (Math.Abs(A6-PLTG[II])/A6 < 0.0002) goto label6000;
                if (KATZE1[J]-1 == IX3) PHZ2 = A6 + DPM[M];
                if (KATZE2[J]-1 == IX3) PHZ1 = A6 + DPM[M];
                if (KATZE1[J]-1 == IX3 && QANST2 && A6 < PLTG[II]) goto label6000;
                if (KATZE2[J]-1 == IX3 && QANST1 && A6 < PLTG[II]) goto label6000;
                QVORL = true;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A6,4).ToString().PadLeft(12),Math.Round(PHZ2,4).ToString().PadLeft(12),Math.Round(PHZ1,4).ToString().PadLeft(12),Math.Round(A3,4).ToString().PadLeft(12),Math.Round(A4,4).ToString().PadLeft(12),Math.Round(A2,4).ToString().PadLeft(12),Math.Round(GLTG[II],4).ToString().PadLeft(12));
                PLTG[II] = A6;
                goto label6000;

            label5400:
                if (NTYP[I-1] != 17) goto label5500;
                if (KATZE2[L] != 1 && KATZE2[L] != 2) goto label5500;
                IX5 = I;
                I = L;
                
            label5410:
                I = I + 1;
                if (I == IX5) goto label5500;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5410;
                II = N1[I];
                M = II - 34;
                IZ1 = IM[M];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                
                if (IX3 != NTTETB[IX2] || IX4 != ITTEND[IX3]) goto label5410;
                UWA055(I);

                A6 = UW0011(A9,2) + DPLTG[II];
                A5 = A9 - DTS[I];
                K2 = NN2[I];
                ELTG[K2] = VISUM(PLTG[K2],A5,01);
                PN4[IX2] = A6 + DPM[M];

                if (Math.Abs(PLTG[II]-A6)/A6 >= 0.0002) QVORL = true;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A6,4).ToString().PadLeft(12),Math.Round(A9-273.15,4).ToString().PadLeft(12),Math.Round(A5-273.15,4).ToString().PadLeft(12),Math.Round(DTS[I],4).ToString().PadLeft(12),Math.Round(PN4[IX2],4).ToString().PadLeft(12),Math.Round(GLTG[II],4).ToString().PadLeft(12));
                PLTG[II] = A6;
                goto label5410;

            label5500:
                if (KATZE2[L] == 1) goto label5600;
                if (KATZE2[J] == 0 && KATZE2[L] != 2) goto label5600;
                Z1 = 0.0;
                I = J;
                
            label5510:
                I = I - 1;
                if (I == L) goto label5520;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5510;
                II = N1[I];
                M = II - 34;
                IZ1 = IM[M];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 != IX10) goto label5510;
                if (IX4 != ITTEND[IX3]) goto label5510;
                if (KATZE1[J]-1 != IX3 && KATZE2[J]-1 != IX3 && (KATZE2[L] == 0.0 || KATZE2[L] > 2)) goto label5510;
                if (IX3 != NTTETB[IX2] && (KATZE2[L] == 1 || KATZE2[L] == 2))
                    goto label5510;
                Z1 = GAB[IX2] - GKD;
                I = J;
                
                if (KATZE2[L] == 2 && Math.Abs(Z1) > 5.0) goto label5610;
                
            label5520:
                I = I - 1;
                if (I == L) goto label5600;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5520;
                II = N1[I];
                M = II - 34;
                IZ1 = IM[M];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 == IX10) goto label5520;
                if (IX4 != ITTEND[IX3]) goto label5520;
                if (KATZE1[J]-1 != IX3 && KATZE2[J]-1 != IX3 && (KATZE2[L] == 0.0 || KATZE2[L] > 2)) goto label5520;
                if (IX3 != NTTETB[IX2] && KATZE2[L] == 2) goto label5520;
                Z2 = GAB[IX2] - GKD;
                A1 = Z2 - Z1;
                if (Math.Abs(A1) < 0.030) goto label5600;
                QVORL = true;
                A2 = PLTG[II] - DPLTG[II];
                if (A2 <= 0.0) A2 = PLTG[II]*0.77;
                JJ = N2[I];
                if (JJ == 0) A3 = VISUM(A2,A4,-21);
                if (JJ > 0) A3 = ELTG[JJ];
                A2 = ELTG[II] - DELTG[II];
                if (KATZE2[I] == 2) A2 = A2*VERLE[I];
                K1 = NN1[I];
                K2 = NN2[I];
                A4 = GLTG[K2];
                A5 = 0.0;

                if (A4 > 0.0) A5 = A1*(A2-A3)/A4*0.5;
                A5 = A5*0.3;
                A2 = ELTG[K2] + A5;
                A3 = VISUM(PLTG[K2],A2,23) + DTS[I];
                A6 = UW0011(A3,2) + DPLTG[II];
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A6,4).ToString().PadLeft(12),Math.Round(Z1,4).ToString().PadLeft(12),Math.Round(Z2,4).ToString().PadLeft(12),Math.Round(A1,4).ToString().PadLeft(12),Math.Round(A5,4).ToString().PadLeft(12),Math.Round(ELTG[K2]-ELTG[K1],4).ToString().PadLeft(12),Math.Round(GLTG[II],4).ToString().PadLeft(12));
                
                if (Math.Abs(A6-PLTG[II]) < 0.002) QVORL = false;
                PLTG[II] = A6;
                if ((KATZE2[L] == 7 || KATZE2[L] == 8 || KATZE2[L] == 9) && IX3 == KATZE1[J]-1) PHZ2 = A6 + DPM[M];
                if ((KATZE2[L] == 7 || KATZE2[L] == 8 || KATZE2[L] == 9) && IX3 == KATZE2[J]-1) PHZ1 = A6 + DPM[M];
                if ((KATZE2[L] == 7 || KATZE2[L] == 8 || KATZE2[L] == 9) && QVORL) goto label6000;
                if (KATZE2[L] == 7 || KATZE2[L] == 8 || KATZE2[L] == 9) goto label5600;
                PN4[IX2] = A6 + DPM[M];
                if (KATZE2[L] != 2) goto label5600;
                if (KATZE2[J] != 9) goto label5600;

            label5530:
                I = I + 1;
                if (I == J) goto label5600;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5530;
                II = N1[I];
                M = II - 34;
                IZ1 = IM[M];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 != IX10) goto label5530;
                if (IX4 != ITTEND[IX3]) goto label5530;
                if (IX3 != NTTETB[IX2] && KATZE2[L] == 2) goto label5530;
                K2 = NN2[I];
                A2 = ELTG[K2] + A5;
                A3 = VISUM(PLTG[K2],A2,03) + DTS[I];
                A6 = UW0011(A3,2) + DPLTG[II];
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(PLTG[II],4).ToString().PadLeft(12),Math.Round(A6,4).ToString().PadLeft(12),Math.Round(A3,4).ToString().PadLeft(12),Math.Round(A5,4).ToString().PadLeft(12),Math.Round(DTS[I],4).ToString().PadLeft(12),Math.Round(GLTG[II],4).ToString().PadLeft(12));
                PLTG[II] = A6;
                PN4[IX2] = A6 + DPM[M];

            label5600:
                I = J;
            label5610:
                I = I - 1;
                if (I == L) goto label6000;
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label5610;
                II = N1[I];
                M = II - 34;
                IZ1 = IM[M];

                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 != IX10) goto label5610;
                if (IX4 != ITTEND[IX3]) goto label5610;
                if (KATZE1[J] <= 1 && KATZE2[L] > 2) goto label5615;
                if (KATZE1[J]-1 != IX3 && KATZE2[J]-1 != IX3 && (KATZE2[L] == 0.0 || KATZE2[L] > 2)) goto label5610;
                if (IX3 != NTTETB[IX2] && (KATZE2[L] == 1 || KATZE2[L] == 2))
                    goto label5610;
                if (KATZE2[L] == 1 && NITRE[IX2] == 2) goto label6000;
                
            label5615:
                if (NITRE[IX2] == 6) goto label6000;
                A1 = GAB[IX2] - GKD;
                if (KATZE1[J] > 0 && KATZE2[J] > 0 && KATZE2[L] == 9)
                    A1 = Z1 + Z2;
                if (Math.Abs(A1) < 0.030) goto label6000;
                QVORL = true;
                if (NITRE[IX2] == 2) goto label5630;
                if (KATZE2[L] == 9) goto label5630;
                A2 = PLTG[II] - DPLTG[II];
                if (A2 <= 0.0) A2 = PLTG[II]*0.77;
                JJ = N2[I];
                if (JJ == 0) A3 = VISUM(A2,A4,-21);
                if (JJ > 0) A3 = ELTG[JJ];
                A2 = ELTG[II] - DELTG[II];
                if (KATZE2[I] == 2) A2 = A2*VERLE[I];
                K1 = NN1[I];
                K2 = NN2[I];
                if ((KATZE2[L] == 1 || KATZE2[L] == 2) && KATZE2[J] == 8)
                    goto label5620;
                if (KATZE2[L] == 7) goto label5620;
                A4 = ELTG[K2];
                A5 = ELTG[K1];
                A6 = 0.0;
                if (A4-A5 > 0.0) A6 = A1*(A2-A3)/(A4-A5)*0.5;
                if (A6 > 0.0 && QBZWM[L] > 100.0 && Math.Abs(A6) > 0.3*QBZWM[L])
                    A6 = 0.3*QBZWM[L];
                if (A6 < 0.0 && QBZWM[L] > 100.0 && Math.Abs(A6) > 0.3*QBZWM[L])
                    A6 = -0.3*QBZWM[L];
                IZ1 = NN2[L];
                QBZWM[L] = QBZWM[L] + A6;
                if (QBZWM[L] <= 0.0) QBZWM[L] = 0.0001;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),IZ1.ToString().PadLeft(5),Math.Round(QBZWM[L],4).ToString().PadLeft(12),Math.Round(GLTG[IZ1],4).ToString().PadLeft(12),Math.Round(A6,4).ToString().PadLeft(12),Math.Round(A1,4).ToString().PadLeft(12),Math.Round(GKD,4).ToString().PadLeft(12),Math.Round(GLTG[II],4).ToString().PadLeft(12),Math.Round(A2-A3,4).ToString().PadLeft(12),Math.Round(A4-A5,4).ToString().PadLeft(12));
                GLTG[IZ1] = QBZWM[L];
                goto label6000;

            label5620:
                A6 = 0.0;
                PM1 = 0.0;
                PM2 = 0.0;
                PM3 = 0.0;
                A4 = GLTG[K1];
                if (A4 > 0.0) A6 = A1*(A2-A3)/A4;
                if (Math.Abs(A6) > 3.0 && A6 > 0.0) A6 = 3.0;
                if (Math.Abs(A6) > 3.0 && A6 < 0.0) A6 = -3.0;
                A5 = DTS[J] + A6;
                if (A5 < EWAUS[L]) A5 = EWAUS[L] + 0.001;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),II.ToString().PadLeft(5),Math.Round(DTS[J],4).ToString().PadLeft(12),Math.Round(A5,4).ToString().PadLeft(12),Math.Round(A6,4).ToString().PadLeft(12),Math.Round(A1,4).ToString().PadLeft(12),Math.Round(A4,4).ToString().PadLeft(12));
                DTS[J] = A5;
                DTK[J] = VISUM(PW[J],A5,03) - 273.15;
                goto label6000;

            label5630:
                if (KATZE2[L] == 9) NITRE[IX2] = 3;
                if (IX2 > 1) goto label5640;
                A1 = A1 * 0.3;
                GFDE[1] = GFDE[1] - A1;
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),IX2.ToString().PadLeft(5),Math.Round(GFDE[IX2],4).ToString().PadLeft(12),Math.Round(GFDVOR,4).ToString().PadLeft(12),Math.Round(A1,4).ToString().PadLeft(12));
                goto label6000;
                
            label5640:
                KK = NRMVAE[IX2];
                GLTG[KK] = GLTG[KK] - A1*0.5;
                TNPROZ[IX2] = GLTG[KK]/GFDE[IX2];
                
                if (LIGHT[4] == 5)
                    sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6} ", NZ.ToString().PadLeft(5),KK.ToString().PadLeft(5),IX2.ToString().PadLeft(5),Math.Round(GLTG[KK],4).ToString().PadLeft(12),Math.Round(GFDE[IX2],4).ToString().PadLeft(12),Math.Round(A1*0.5,4).ToString().PadLeft(12),Math.Round(TNPROZ[IX2],4).ToString().PadLeft(12));
                
            label6000:
                J22 = J22 - 1;
                if (J22 <= 0) continue;
                J = I22[LL,J22];
                if (LIGHT[4] == 5)
                    sw16.WriteLine(" ***HAIZEN***{0}{1}{2}{3}{4}{5}{6}{7} ", NHZ.ToString().PadLeft(5),LL.ToString().PadLeft(5),L.ToString().PadLeft(5),J22.ToString().PadLeft(5),
                        J.ToString().PadLeft(5),KATZE1[J].ToString().PadLeft(5),KATZE2[J].ToString().PadLeft(5),KATZE2[L].ToString().PadLeft(5));
                
                if (KATZE1[J] == 0 && KATZE2[J] == 0 && KATZE2[L] == 0) goto label6000;
                I = J;
                A10 = 0.0;
                goto label5000;
            }   //7000 CONTINUE
            
        label8000:
            if (QVORL) goto label100;

            if (PHZ1 == 0.0) goto label8100;
            PHZ1M[1] = PHZ1M[2];
            PHZ1M[2] = PHZ1M[3];
            PHZ1M[3] = PHZ1M[4];
            PHZ1M[4] = PHZ1;
            if (PHZ1M[1] <= 0.0) goto label8100;
            if (PHZ1M[1] > PHZ1M[2] && PHZ1M[2] > PHZ1M[3] && PHZ1M[3] > PHZ1M[4]) goto label8100;
            if (PHZ1M[1] < PHZ1M[2] && PHZ1M[2] < PHZ1M[3] && PHZ1M[3] < PHZ1M[4]) goto label8100;
            PHZ1 = (PHZ1M[3]+PHZ1M[4])*0.5;
            IX1 = 1;
            if (LIGHT[4] == 5)
                sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),IX1.ToString().PadLeft(5),
                    Math.Round(PHZ1M[1],4).ToString().PadLeft(12),Math.Round(PHZ1M[2],4).ToString().PadLeft(12),Math.Round(PHZ1M[3],4).ToString().PadLeft(12),
                    Math.Round(PHZ1M[4],4).ToString().PadLeft(12),Math.Round(PHZ1,4).ToString().PadLeft(12));
            PHZ1M[4] = PHZ1;
            
        label8100:
            if (PHZ2 == 0.0) goto label8200;
            PHZ2M[1] = PHZ2M[2];
            PHZ2M[2] = PHZ2M[3];
            PHZ2M[3] = PHZ2M[4];
            PHZ2M[4] = PHZ2;
            if (PHZ2M[1] <= 0.0) goto label8200;
            if (PHZ2M[1] > PHZ2M[2] && PHZ2M[2] > PHZ2M[3] && PHZ2M[3] > PHZ2M[4])      goto label8200;
            if (PHZ2M[1] < PHZ2M[2] && PHZ2M[2] < PHZ2M[3] && PHZ2M[3] < PHZ2M[4])      goto label8200;
            PHZ2 = (PHZ2M[3]+PHZ2M[4])*0.5;
            IX1 = 2;
            if (LIGHT[4] == 5)
                sw16.WriteLine("0  {0}{1}{2}{3}{4}{5}{6}{7} ", NZ.ToString().PadLeft(5),NZAEL.ToString().PadLeft(5),IX1.ToString().PadLeft(5),Math.Round(PHZ2M[1],4).ToString().PadLeft(12),
                    Math.Round(PHZ2M[2],4).ToString().PadLeft(12),Math.Round(PHZ2M[3],4).ToString().PadLeft(12),Math.Round(PHZ2M[4],4).ToString().PadLeft(12),Math.Round(PHZ2,4).ToString().PadLeft(12));
            PHZ2M[4] = PHZ2;

        label8200:
            LIGHT[10] = L10;
            LIGHT[4] = L4;
            if (GFDVOR <= 0.0) return;
            TNPROZ[1] = GFDE[1]/GFDVOR;
            GFDE[1] = GFDVOR;
            return;
            //9000 FORMAT(1H0,2X,3I5,9F12.4)
        }   //END
        
        
        static void UWA043(int INDD3)
        {
            //ENTRY RPRTXT (INDD3)
            double ICPU;
            int KSEITE = 0;
            string BLANK = " ";
            
            if (INDD3 == 3) goto label130;
            if (INDD3 == 4) goto label140;
            
            //RHTMOD (ITASK);
            ICPU = ITASK[6]/10000;
            if (INDD3 > 1) goto label150;

            //DECODE (60,100,CORE) KVAR
            //100 FORMAT (59X,I1)
            KVAR = Convert.ToInt32(CORE.Substring(59,1));

            ICPUTM = ICPU;
            //READ(15,110) TITEL
            TITEL = sr15.ReadLine();
            //110 FORMAT (A)
            
            Console.WriteLine("{0}", TITEL);
            //WRITE(33,"(11X,A)") TITEL
            sw33.WriteLine("           {0}", TITEL);
            
            //120 FORMAT (1H,A)
            TEXT = "                                                                                                                                                                              ";
            KSEITE = 1;
            
            sw16.WriteLine("0\n");
            sw16.Write(" {0}   KRAWAL 85F  TAG {1}{2} ZEIT {3}{4}  SEITE{5}.", TITEL, ITASK[11].ToString().PadLeft(4), ITASK[12].ToString().PadLeft(4), ITASK[14].ToString().PadLeft(4),
                ITASK[15].ToString().PadLeft(4), KSEITE.ToString().PadLeft(3));
            //125 FORMAT(1H0,//1X,A ,3X,11HKRAWAL 85F ,5H TAG ,2A4,6H ZEIT, 2A4,7H SEITE,I3,1H.)
            
            ICPU = ICPU - ICPUTM + 1;
            sw16.WriteLine("                                                                                    BS2000-FOR1-VERS VOM 31/08/90 CPU-ZEIT={0} SEC", ICPU.ToString().PadLeft(6));
            sw16.WriteLine("0 ");
            //170 FORMAT (1H0,1X)
            //160 FORMAT (1H ,80X,42H BS2000-FOR1-VERS VOM 31/08/90 CPU-ZEIT=,I6,4H SEC)

            if (KVAR == 0) //READ (15,110) NAME
                NAME = sr15.ReadLine();
            
            KURZ = NAME.Substring(38,3);     //KURZ(1:3) = NAME(39:41)
            sw16.WriteLine(" {0}", NAME);
            Console.WriteLine(" {0}", NAME);

            if (INDD3 == 0) 
                return;
            
        label150:
            KSEITE = KSEITE + 1;
            
            sw16.WriteLine("1\n");
            sw16.WriteLine(" {0}   KRAWAL 85F  TAG {1}{2} ZEIT {3}{4}  SEITE{5}.", TITEL, ITASK[11].ToString().PadLeft(4), ITASK[12].ToString().PadLeft(4), ITASK[14].ToString().PadLeft(4),
                ITASK[15].ToString().PadLeft(4), KSEITE.ToString().PadLeft(3));
            //155 FORMAT(1H1,//1X,A ,3X,11HKRAWAL 85F ,5H TAG ,2A4,6H ZEIT, 2A4,7H SEITE,I3,1H.)
            ICPU = ICPU - ICPUTM + 1;
            //sw16.WriteLine("",160) ICPU
            sw16.WriteLine("                                                                                    BS2000-FOR1-VERS VOM 31/08/90 CPU-ZEIT={0} SEC", ICPU.ToString().PadLeft(6));
            sw16.WriteLine(" {0}", TEXT);
            if (LNKNR == 6) 
                sw16.WriteLine(" ******* A C H T U N G !!!  BEI STUFENTEMPERATUREN UEBER 477 CEL WURDE ALS SCHAUFELWERKSTOFF  N I M O N I C 8 0 A  EINGESETZT *******");
            //180 FORMAT (1H ,132H******* A C H T U N G !!! BEI STUFENTEMPERATURENUEBER 477 CEL WURDE ALS SCHAUFELWERKSTOFF N I M O N I C 8 0 A EINGESETZT *******)
            
        label190:
            return;
            
        label130:
            //DECODE(80,200,CORE) TEXT(1:77)
            //200 FORMAT(3X,A)
            TEXT = CORE.Substring(3,77);
            goto label190;

        label140:
            //DECODE(53,200,CORE) TEXT(81:130)
            StringBuilder s = new StringBuilder(TEXT);
            s.Remove(80,50);
            s.Insert(80,CORE.Substring(3,50));
            TEXT = s.ToString();
            goto label190;
        }   //END
        
        
        static void UWA045()
        {
            //ENTRY PRINTK
            int[] LTNG = new int[161];
            string F10 = "     ", s = "";
            double B = 0, KDR = 0, TX11 = 0, TX12 = 0, GTURB = 0, GENTW = 0;
            int NITRA = 0, KKK = 0, KDRK = 0, KDRK1 = 0, N = 0, L = 0;
            //EQUIVALENCE (TXXT1(1:144),TXXT(1 :144)) ,
            //1 (TXXT2(1:156),TXXT(145:300))
            //DATA F10 /5H /
            string TEXT  = "DROSS   MISCH   FDMPF   EXT.APP ZWUE+EN ZWUE    ENTWABD VORWAERMSTRECKE.NEBENZWEIG      M1  M2 NR R KONDKESSEL  VOR TURBDRK.VERL";
            string TXXT1 = "KONDENSATOR ENTGASER    VORWAERMER  PUMPE       W.TAUSCHER ENTHITZER   ZUSTROEMUNG KESSELENTN. SAMMLER     WAERMEZUFUHRHEIZKOND.   VERDAMPFER  ";
            string TXXT2 = "KOND.KUEHLERENTH.ERH.   ENTSPANNER  VORW-KSP.TURENTN-KSP.TURDROSSELUNG  ENTN.PUMPE  DAMPFEUBERH.DUMMY-EL    VORWAE.M.ENTSOLLWERT    WASSERMath.AbsCH.NACH UMPUMP.";
            string TXXT = "KONDENSATOR ENTGASER    VORWAERMER  PUMPE       W.TAUSCHER ENTHITZER   ZUSTROEMUNG KESSELENTN. SAMMLER     WAERMEZUFUHRHEIZKOND.   VERDAMPFER  KOND.KUEHLERENTH.ERH.   ENTSPANNER  VORW-KSP.TURENTN-KSP.TURDROSSELUNG  ENTN.PUMPE  DAMPFEUBERH.DUMMY-EL    VORWAE.M.ENTSOLLWERT    WASSERMath.AbsCH.NACH UMPUMP.";
            string ZZUE  = "ZUE-", ZEINS = "EINS";

            B = 859.845;

            KDR = KDRKR;
            if (KDR == 0 )      KDR = 100;

        label10:
            if (KDR > 99)       goto label100;
            if (KDR > 9)        goto label200;
            if (KDR > 0)        goto label300;
            return;

        label100:
            KDR = KDR - (KDR/100)*100;
            TX0 = 1.0;
            TX1 = 4.1868;
            TX2 = 0.980665;
            TX3 = 1.0/3.6;
            TX4 = 4.1868/3.6;
            TX5 = 0.0;
            TX11 = 4.1868;
            TX12 = 1.0;
            TX13 = 4.1868/3.6;
            TX14 = 1.0;
            TX15 = 1.0;
            TX16 = 1.0;
            TX17 = 0.980665;
            TX18 = 1.0;
            IWR = 1;

            UWA043(2);

            sw16.WriteLine("0                         ERGEBNISSE DER KREISLAUFRECHNUNG IM   I N T E R N A T I O N A L E N   MASSYSTEM");
            sw16.WriteLine("0                         ===============================================================================");

            sw16.WriteLine("0 DRUCK  TEMPERATUR  ENTHALPIE  ENTROPIE  MASSENSTROM  LEISTUNG  WIRKUNGSGRAD  WAERMESTROM  WAERMEVERBRAUCH  DAMPFVERBRAUCH  GRAED.");
            //120 FORMAT(1H0," DRUCK TEMPERATUR ENTHALPIE ENTROPIE MASSENSTROM
            //1LEISTUNG WIRKUNGSGRAD WAERMESTROM WAERMEVERBRAUCH DAMPFVERBRAUCH GRAED.")

            sw16.WriteLine("   BAR       C        KJ/KG     KJ/KG K      KG/S         MW          %            MJ/S         KJ/KWH           KG/KWH        K");
            //130 FORMAT(1H ," BAR C KJ/KG KJ/KG K KG/S MW % MJ/S KJ/KWH KG/KWH K"//)

            if (LIGHT[7] == 1)
                UWA028();

            goto label400;

        label200:
            KDR = KDR - (KDR/10)*10;
            TX0 = 1.8;
            TX1 = 1.8;
            TX2 = 14.223315;
            TX3 = 2.204622;
            TX4 = 3.9683;
            TX5 = 32.0;
            TX11 = 1.0;
            TX12 = 16.0185;
            TX13 = 0.204816;
            TX14 = 39.37;
            TX15 = 3.28084;
            TX16 = 0.03979;
            TX17 = 28.958647;
            TX18 = 16.01848;

            IWR=2;

            UWA043(2);

            sw16.WriteLine("0                             ERGEBNISSE DER KREISLAUFRECHNUNG IM   E N G L I S C H E N   MASSYSTEM");
            sw16.WriteLine("                              =====================================================================");

            sw16.WriteLine("0 DRUCK  TEMPERATUR  ENTHALPIE  ENTROPIE  MASSENSTROM  LEISTUNG  WIRKUNGSGRAD  WAERMESTROM  WAERMEVERBRAUCH  DAMPFVERBRAUCH  GRAED.");
            sw16.WriteLine("   PSIA      F        BTU/LB    BTU/LB F  1000 LBS/H      MW          %        1000 BTU/H      BTU/KWH         LBS/KWH        F");
            goto label400;

        label300:
            KDR = 0;
            TX0 = 1.0;
            TX1 = 1.0;
            TX2 = 1.0;
            TX3 = 1.0;
            TX4 = 1.0;
            TX5 = 0.0;
            TX11 = 1.0;
            TX12 = 1.0;
            TX13 = 1.0;
            TX14 = 1.0;
            TX15 = 1.0;
            TX16 = 1.0;
            TX17 = 1.0;
            TX18 = 1.0;
            IWR=3;
            UWA043(2);

            sw16.WriteLine("0                             ERGEBNISSE DER KREISLAUFRECHNUNG IM T E C H N I S C H E N MASSYSTEM");
            sw16.WriteLine("                              =======================================================================");

            sw16.WriteLine("0 DRUCK  TEMPERATUR  ENTHALPIE  ENTROPIE  MASSENSTROM  LEISTUNG  WIRKUNGSGRAD  WAERMESTROM  WAERMEVERBRAUCH  DAMPFVERBRAUCH  GRAED.");

            sw16.WriteLine("    AT       C        KCAL/KG   KCAL/KG K     T/H         MW           %          GCAL/H       KCAL/KWH          KG/KWH        K");
            //330 FORMAT(" "," AT C KCAL/KG KCAL/KG K T/HMW % GCAL/H KCAL/KWH KG/KWH K"//)

        label400:
            IZ1 = 13;
            
            if (NUMMER == F10 || Convert.ToInt32(NUMMER) == 0) 
                goto label500;
            
            sw16.WriteLine("0 ZEICHN.-NR. DES WAERMESCHALTPLANES {0}-WT-TDT-{1} {2}", NRPROJ.PadLeft(6),NUMMER.PadLeft(5),NINDEX.ToString().PadLeft(2));

            //410 FORMAT(1H0,1X,"ZEICHN.-NR. DES WAERMESCHALTPLANES ",A6,"-WT-TDT-",A5,1X,A2)
            IZ1 = IZ1 + 2;

        label500:
            KKK = IFALL;
            if (NABHI == 1) PABHI1 = PT[1,1]*0.980665;
            if (KKK >= 7) KKK = STWRT2;
            sw16.WriteLine("0");
            sw16.WriteLine("  LASTPUNKT NR{0}", KKK.ToString().PadLeft(3));
            IZ1 = IZ1 + 2;

            JJ = 0;
            
        label600:
            JJ = JJ + 1;
            A1 = TLSTGE[JJ];
            A2 = GABDE[JJ]*TX3;
            A3 = GFDE[JJ]*TX3;
            A4 = GMFIXE[JJ]*TX3;
            A5 = QBZWM[1]/1000.0*TX4;
            A8 = THERMN;

            NITRA = NITRE[JJ];
            sw16.WriteLine("+                                                  ITERATIONSKRITERIUM{0}", NITRA.ToString().PadLeft(3));
            //601 FORMAT(1H+,50X,"ITERATIONSKRITERIUM",I3)

            if (NITRA == 9) NITRA = 2;
            if (NITRA == 8 && JJ > 1) NITRA = 3;
            IZ1 = IZ1 + 3;

            //goto label(610,620,630,640,650,660,610,680),
            if(NITRA == 1)      goto label610;
            if(NITRA == 2)      goto label620;
            if(NITRA == 3)      goto label630;
            if(NITRA == 4)      goto label640;
            if(NITRA == 5)      goto label650;
            if(NITRA == 6)      goto label660;
            if(NITRA == 7)      goto label610;
            if(NITRA == 8)      goto label680;

        label610:
            sw16.WriteLine("0                                                  P KL{0}", Math.Round(A1,3).ToString().PadLeft(9));
            //611 FORMAT(1H0,50X,"P KL =",F9.3/)
            goto label700;

        label620:
            sw16.WriteLine("0                                                  M ABD = {0}", Math.Round(A2,3).ToString().PadLeft(9));
            //621 FORMAT(1H0,50X,"M ABD =",F9.3/)
            goto label700;

        label630:
            sw16.WriteLine("0                                                  M FD = {0}", Math.Round(A3,3).ToString().PadLeft(9));
            //631 FORMAT(1H0,50X,"M FD =",F9.3/)
            goto label700;

        label640:
            sw16.WriteLine("0                                             M FIX = {0}      L FIX{1}", Math.Round(A4,3).ToString().PadLeft(9),NRMFIE[JJ].ToString().PadLeft(3));
            //641 FORMAT(1H0,45X,"M FIX =",F9.3,6X,"L FIX = ",I3/)
            goto label700;

        label650:
            sw16.WriteLine("0                                                  P HEIZ ={0}", Math.Round(A5,3).ToString().PadLeft(9));
            //651 FORMAT(1H0,50X,"P HEIZ =",F9.3/)
            goto label700;

        label660:
            sw16.WriteLine("0                                   M FD = {0}     M ABD ={1}     L VAR ={2}", Math.Round(A3,3).ToString().PadLeft(9),Math.Round(A2,3).ToString().PadLeft(9),NRMVAE[JJ].ToString().PadLeft(3));
            //661 FORMAT(1H0,35X,"M FD =",F9.3,5X,"M ABD =",F9.3,5X,"L VAR = ",I3/)
            goto label700;

        label680:
            sw16.WriteLine("0                                                  P-THERM = {0} MW", Math.Round(A8,3).ToString().PadLeft(9));
            //681 FORMAT(1H0,50X,"P-THERM =",F9.3," MW"/)

        label700:
            if (JJ > 1) goto label850;
            A1 = GFDE[JJ] *TX3;
            A2 = GMD1A[JJ]*TX3;
            A3 = GMD2A[JJ]*TX3;
            A4 = GABDE[JJ]*TX3;

            A5 = GZUW*TX3;
            if (Math.Abs(A5) < 0.002) A5 = 0.0;
            A6 = DVERBR[JJ]*TX3;
            if (IWR == 1) A6 = A6*3.6;
            Z1 = WAUFW/B;
            if (K == 1 && THERMN == 0.0) THERMN = Z1;
            Z2 = ARBTA[JJ];
            Z3 = ETAGE[JJ]*100.0;
            Z4 = VMECHE[JJ];
            Z5 = PULEIS/B;
            Z7 = WAUFW/(ARBTA[1] + Z5)*TX4;
            if (IWR == 1) Z7 = Z7*3.6;
            A7 = WAUFW/ARBTA[1]*TX4;
            if (IWR == 1) A7 = A7*3.6;

            A10 = 0.0;
            Z10 = 0.0;
            IX5 = 0;
            
            for(L = 1; L <= 11; L++)    //DO 720 L=1,11
            {
                IX1 = Math.Abs(LTGWT1[L]);
                IX2 = Math.Abs(LTGWT2[L]);
                
                if (IX1 == 0 || IX2 == 0) 
                    goto label710;
                IX5 = 1;
                if (LTGWT1[L] > 0) A10 = A10 + GLTG[IX1]*(ELTG[IX1]-ELTG[IX2]);
                if (LTGWT1[L] < 0) A10 = A10 - GLTG[IX1]*(ELTG[IX1]-ELTG[IX2]);
                
            label710:
                IX3 = Math.Abs(LTGWT3[L]);
                IX4 = Math.Abs(LTGWT4[L]);
                if (IX3 == 0 || IX4 == 0)
                    continue;
                IX5 = 1;

                if (LTGWT3[L] > 0) Z10 = Z10 + GLTG[IX3]*(ELTG[IX3]-ELTG[IX4])/B;
                if (LTGWT3[L] < 0) Z10 = Z10 - GLTG[IX3]*(ELTG[IX3]-ELTG[IX4])/B;
            }   //720 CONTINUE
            A8 = 0.0;
            Z8 = 0.0;
            if (IX5 == 0) goto label730;
            Z8 = (WAUFW + A10)/(ARBTA[1] + Z5 + Z10)*TX4;
            A8 = (WAUFW + A10)/(ARBTA[1] + Z10)*TX4;
            if (IWR == 1) A8 = A8*3.6;
            if (IWR == 1) Z8 = Z8*3.6;

        label730:
            sw16.WriteLine("0               MASSENSTROEME                   LEISTUNGEN                           SPEZIFISCHE WERTE             ");
            sw16.WriteLine("                -------------                   ----------                           -----------------             ");      
            
            sw16.WriteLine("             M FD    = {0}          P THERM = {1}          DAMPFVERBRAUCH   (BEZOGEN AUF P KL)     = {2}", 
                Math.Round(A1,3).ToString().PadLeft(10),Math.Round(Z1,3).ToString().PadLeft(10),Math.Round(A6,3).ToString().PadLeft(9));
            //750 FORMAT(1H ,12X,10HM FD = ,F10.3,10X,10HP THERM = ,F10.3,10X,42HDAMPFVERBRAUCH (BEZOGEN AUF P KL) = ,F9.3)

            sw16.WriteLine("             M ZUE 1 = {0}          P KL    = {1}          WAERMEVERBRAUCH  (BEZOGEN AUF P KL)     = {1}", Math.Round(A2,3).ToString().PadLeft(10),Math.Round(Z2,3).ToString().PadLeft(10),Math.Round(A7,2).ToString().PadLeft(9));
            //760 FORMAT(1H ,12X,10HM ZUE 1 = ,F10.3,10X,10HP KL = ,F10.3,10X,42HWAERMEVERBRAUCH (BEZOGEN AUF P KL) = ,F9.2)

            sw16.WriteLine("             M ZUE 2 = {0}          ETA GEN = {1} ", Math.Round(A3,3).ToString().PadLeft(10),Math.Round(Z3,2).ToString().PadLeft(10));
            //770 FORMAT(1H ,12X,10HM ZUE 2 = ,F10.3,10X,10HETA GEN = ,F10.2)

            if (IX5 == 1)
                sw16.WriteLine("+                                                                        DEF. WAERMEVERBR (BEZOGEN AUF P KL)     = {0} ", Math.Round(A8,2).ToString().PadLeft(9));
            //780 FORMAT(1H+,72X,42HDEF. WAERMEVERBR (BEZOGEN AUF P KL) = ,F9.2)

            sw16.WriteLine("             M KOND  = {0}          DP MECH = {1} ", Math.Round(A4,3).ToString().PadLeft(10),Math.Round(Z4,3).ToString().PadLeft(10));
            //790 FORMAT(1H ,12X,10HM KOND = ,F10.3,10X,10HDP MECH = ,F10.3)
            IZ1 = IZ1 + 8;

            if (A5 == 0.0 && Z5 == 0.0) goto label1000;
            IZ1 = IZ1 + 1;

            if (A5 == 0.0) goto label810;
            sw16.WriteLine("0        $$$ M DIFF = {0} $$$", Math.Round(A5,3).ToString().PadLeft(10));
            //800 FORMAT(1H0,8X,"$$$ ",10HM DIFF = ,F10.3," $$$")

        label810:
            if (Z5 == 0.0) goto label1000;
            if (A5 != 0.0)
                sw16.WriteLine("+                                          P SPT   = {0}          WAERMEVERBRAUCH  (BEZ.AUF P KL + P SPT) = {1}", Math.Round(Z5,3).ToString().PadLeft(10),Math.Round(Z7,2).ToString().PadLeft(9));

            if (A5 == 0.0)
                sw16.WriteLine("0                                          P SPT   = {0}          WAERMEVERBRAUCH  (BEZ.AUF P KL + P SPT) = {1}", Math.Round(Z5,3).ToString().PadLeft(10),Math.Round(Z7,2).ToString().PadLeft(9));
            
            //820 FORMAT(1H+,42X,10HP SPT = ,F10.3,10X,42HWAERMEVERBRAUCH (BEZ.AUF P KL + P SPT) = ,F9.2)
            //830 FORMAT(1H0,42X,10HP SPT = ,F10.3,10X,42HWAERMEVERBRAUCH (BEZ.AUF P KL + P SPT) = ,F9.2)

            if (IX5 == 1) 
                sw16.WriteLine("                                                                         DEF. WAERMEVERBR (BEZ.AUF P KL + P SPT) = {0} ", Math.Round(Z8,2).ToString().PadLeft(9));
            //840 FORMAT(1H ,72X,42HDEF. WAERMEVERBR (BEZ.AUF P KL + P SPT) = ,F9.2)
            
            if (IX5 == 1) IZ1 = IZ1 + 1;
            goto label1000;

        label850:
            A1 = GFDE[JJ] *TX3;
            A2 = GMD1A[JJ]*TX3;
            A3 = GMD2A[JJ]*TX3;
            A4 = GABDE[JJ]*TX3;
            Z1 = ARBTA[JJ];
            Z2 = ETAGE[JJ]*100.0;
            Z3 = VMECHE[JJ];
            Z4 = DVERBR[JJ]*TX3;
            if (IWR == 1) Z4 = Z4*3.6;

            sw16.WriteLine("                                        MASSENSTROEME                   LEISTUNGEN   ");
            sw16.WriteLine("                                        -------------                   ----------   ");
            //860 FORMAT(1H, 36X,20H MASSENSTROEME ,10X,20H LEISTUNGEN /37X,20H ------------- ,10X,20H ---------- /)

            sw16.WriteLine("                                     M FD    = {0}          P KL    = {1}    ", Math.Round(A1,3).ToString().PadLeft(10),Math.Round(Z1,3).ToString().PadLeft(10));
            //870 FORMAT(1H ,36X,10HM FD = ,F10.3,10X,10HP KL = ,F10.3)

            sw16.WriteLine("                                     M ZUE 1 = {0}          ETA GEN = {1}   ", Math.Round(A2,3).ToString().PadLeft(10),Math.Round(Z2,2).ToString().PadLeft(10));
            //880 FORMAT(1H ,36X,10HM ZUE 1 = ,F10.3,10X,10HETA GEN = ,F10.2)

            sw16.WriteLine("                                     M ZUE 2 = {0}          DP MECH = {1}  ", Math.Round(A3,3).ToString().PadLeft(10),Math.Round(Z3,3).ToString().PadLeft(10));
            //890 FORMAT(1H ,36X,10HM ZUE 2 = ,F10.3,10X,10HDP MECH = ,F10.3)

            sw16.WriteLine("                                     M KOND  = {0} ", Math.Round(A4,3).ToString().PadLeft(10));
            //900 FORMAT(1H ,36X,10HM KOND = ,F10.3)

            IZ1 = IZ1 + 8;

            if (NITRE[JJ] == 8 || NITRE[JJ] == 9) goto label1000;
            
            sw16.WriteLine("0");
            sw16.WriteLine("                                          SPEZIFISCHER DAMPFVERBRAUCH = {0} ", Math.Round(Z4,3).ToString().PadLeft(6));
            //910 FORMAT(1H0,/42X,30HSPEZIFISCHER DAMPFVERBRAUCH = ,F6.3)
            IZ1 = IZ1 + 3;

        label1000:
            sw16.WriteLine("0");
            sw16.WriteLine("                             EXPANSIONSVERLAUF ");
            sw16.WriteLine("                             ---------------- \n\n");
            sw16.WriteLine("            BEMERKUNG    DRUCK   TEMP.   ENTH.  ENTR.     VOL.   M TURB.    ANZAPFUNGEN    LEITUNGEN");

            //1010 FORMAT(1H0,/29X,17HEXPANSIONSVERLAUF/29X,17H-----------------,//2X,"BEMERKUNG DRUCK TEMP. ENTH. ENTR. VOL. M TURB. ANZAPFUNGEN LEITUNGEN")
            
            if (IWR != 2) 
                sw16.WriteLine("                                                                 DP(%)   C(M/S)\n");
            //1020 FORMAT(1H ,64X,"DP(%) C(M/S)"/)
            if (IWR == 2) 
                sw16.WriteLine("                                                                 DP(%)  C(FT/S)\n");
            //1030 FORMAT(1H ,64X,"DP(%) C(FT/S)"/)

            IZ1 = IZ1 + 8;

            GTURB = GFDE[JJ];
            IANF = 1;
            if (JJ > 1) IANF = IENDST[JJ-1] + 1;
            IEND = IENDST[JJ];

            for(I = IANF; I <= IEND; I++)   //DO 1300 I = IANF,IEND
            {
                UWA010(I,1);
                UWA044(I,1);
                IX1 = 0;
                KDRK = 12;
                KDRK1 = 12;
                if (I == IANF) KDRK = 5;
                if (I == IEND) KDRK = 14;
                if (E2T[I,1] > E1T[I,1] && KT7 == 1) KDRK = 11;
                if (KT7 == 5) KDRK = 1;
                if (KT1 == 3) KDRK = 14;
                if (KT7 == 6) KDRK = 26;
                if (KT7 == 7) KDRK = 27;
                if (KT7 == 2) KDRK = 31;
                if (I == 2 && KT7 == 1) KDRK = 29;

                GENTW = 0.0;
                
                for(J = 1; J <= 12; J++)    //DO 1100 J = 1,12
                    LTNG[J] = 0;    //1100 CONTINUE
                
                K1 = 0;
                K2 = 0;
                
                for(J = 1; J <= 10; J++)    //DO 1110 J= 1,10
                {
                    KK = LABT[J];
                    if (KK == 0) goto label1120;
                    LTNG[J] = -KK;
                    if (KK >= 47 && KK <= 69)       GENTW = GENTW + GLTG[KK];
                    K1 = J;
                    K2 = J;
                }   //1110 CONTINUE
                
            label1120:
                for(J = 1; J <= 10; J++)    //DO 1130   J = 1,10
                {
                    KK = LZUT[J];
                    if (KK >= 41 && KK <= 46)       KDRK = 7;
                    if (KK == 0) goto label1140;
                    if ((KK == 31 || KK == 32) && GLTG[KK] > 0.0) IX1 = KK;
                    if ((KK == 31 || KK == 32) && GLTG[KK] > 0.0)
                        continue;
                    K2 = K1 + J;
                    LTNG[K2] = KK;
                }   //1130 CONTINUE

            label1140:
                A1 = PT[I,1]*TX2;
                A2 = T2T[I];
                if (A2 < 0.0) A2 = 100.0*A2;
                if (A2 > 0.0) A2 = (A2-273.15)*TX0 + TX5;
                A3 = E2T[I,1]*TX1;
                A4 = VISUM(PT[I,1],T2T[I],02)*TX11;
                A5 = VISUM(PT[I,1],T2T[I],00)*TX12;
                A6 = GTURB*TX3;
                A7 = DPANZ[I];
                A8 = GESCHW[I]*TX15;
                
                if (KDRK < 12 || KDRK > 26) KDRK1 = KDRK + 1;
                IZ1 = IZ1 + 1;

                KDRK = (KDRK - 1) * 4 + 1;
                KDRK1 = (KDRK1- 1) * 4 + 1;
                
                if (A8 == 0.0 && K2 == 0) 
                    sw16.WriteLine("  {0}{1}{2}{3}{4}{5}{6}{7} ", TEXT.Substring(KDRK-1,3).PadLeft(4), TEXT.Substring(KDRK1-1,3),
                        Math.Round(A1,4).ToString().PadLeft(10),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(7),Math.Round(A5,4).ToString().PadLeft(9),Math.Round(A6,3).ToString().PadLeft(10));
                
                s = "";
                for(int J = 1; J <= K2; J++)
                    s = s + LTNG[J].ToString().PadLeft(5);
                if (A8 == 0.0 && K2 > 0)
                    sw16.WriteLine("  {0}{1}{2}{3}{4}{5}{6}{7}                {8} ", TEXT.Substring(KDRK-1,3), TEXT.Substring(KDRK1-1,3) ,
                        Math.Round(A1,4).ToString().PadLeft(10),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(7),Math.Round(A5,4).ToString().PadLeft(9),Math.Round(A6,3).ToString().PadLeft(10), s); //(LTNG[J],J=1,K2)
                //1150 FORMAT(1H ,1X,2A4,F10.4,2F8.2,F7.3,F9.4,F10.3,15X,1X,8I5,4I4)

                if (A8 > 0.0 && K2 == 0)
                    sw16.WriteLine("  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", TEXT.Substring(KDRK-1,3), TEXT.Substring(KDRK1-1,3) ,
                        Math.Round(A1,4).ToString().PadLeft(10),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(7),Math.Round(A5,4).ToString().PadLeft(9),Math.Round(A6,3).ToString().PadLeft(10),
                        Math.Round(A7,4).ToString().PadLeft(8),Math.Round(A8,2).ToString().PadLeft(7));
                

                string s1 = "";
                for(int J = 1; J <= K2; J++)
                    s = s1 + LTNG[J].ToString().PadLeft(5);
                if (A8 > 0.0 && K2 > 0)
                    sw16.WriteLine("  {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} {10}", TEXT.Substring(KDRK-1,3), TEXT.Substring(KDRK1-1,3) ,
                        Math.Round(A1,4).ToString().PadLeft(10),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(7),Math.Round(A5,4).ToString().PadLeft(9),Math.Round(A6,3).ToString().PadLeft(10),
                        Math.Round(A7,4).ToString().PadLeft(8),Math.Round(A8,2).ToString().PadLeft(7), s1);
                    //sw16.WriteLine("",1160) TEXT(KDRK :KDRK +3),TEXT(KDRK1:KDRK1+3),A1,A2,A3,A4,A5,A6,A7,A8,(LTNG[J],J=1,K2)
                //1160 FORMAT(1H ,1X,2A4,F10.4,2F8.2,F7.3,F9.4,F10.3,F8.4,F7.2,1X,8I5,4I4)

                GTURB = GTURB - SUMGAB + SUMGZU - GENTW;

                if (KT7 == 7 || KT7 == 6) goto label1290;
                if (I == IEND) goto label1290;
                if (GENTW == 0.0) goto label1200;
                if (KDRK == 7) goto label1200;
                KDRK = 13;
                KDRK = (KDRK - 1) * 4 + 1;
                goto label1210;
                
            label1200:
                if (Math.Abs(E2T[I,1]-E1T[I+1,1]) < 0.01) goto label1290;
                KDRK = 3;
                KDRK1 = 4;
                KDRK = (KDRK - 1) * 4 + 1;
                KDRK1 = (KDRK1- 1) * 4 + 1;

            label1210:
                if (IX1 == 0) goto label1220;
                A1 = PT[I,1]*TX2;
                A3 = (GTURB*E1T[I+1,1]-GLTG[IX1]*ELTG[IX1])/(GTURB-GLTG[IX1]);
                A2 = VISUM(PT[I,1],A3,03);
                A4 = VISUM(PT[I,1],A2,02)*TX11;
                A5 = VISUM(PT[I,1],A2,00)*TX12;
                if (A2 < 0.0) A2 = A2*100.0;
                if (A2 > 0.0) A2 = (A2-273.15)*TX0 + TX5;
                A3 = A3*TX1;
                A6 = (GTURB-GLTG[IX1])*TX3;
                goto label1230;

            label1220:
                A1 = PT[I,1]*TX2;
                A2 = T1T[I+1];
                
                if (A2 < 0.0) A2 = 100.0*A2;
                if (A2 > 0.0) A2 = (A2-273.15)*TX0 + TX5;
                A3 = E1T[I+1,1]*TX1;
                
                A4 = VISUM (PT[I,1],T1T[I+1],02)*TX11;
                A5 = VISUM (PT[I,1],T1T[I+1],00)*TX12;
                A6 = GTURB*TX3;
                
            label1230:
                //sw16.WriteLine("",1150) TEXT(KDRK :KDRK +3 ),TEXT(KDRK1:KDRK1+3 ),A1,A2,A3,A4,A5,A6
                sw16.WriteLine("  {0}{1}{2}{3}{4}{5}{6}{7} ", TEXT.Substring(KDRK-1,3).PadLeft(4), TEXT.Substring(KDRK1-1,3),
                        Math.Round(A1,4).ToString().PadLeft(10),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(7),Math.Round(A5,4).ToString().PadLeft(9),Math.Round(A6,3).ToString().PadLeft(10));
                IZ1 = IZ1 + 1;

                if (IX1 == 0) goto label1290;

                A1 = PT[I,1]*TX2;
                A2 = T1T[I+1];
                if (A2 < 0.0) A2 = A2*100.0;
                if (A2 > 0.0) A2 = (A2-273.15)*TX0 + TX5;
                A3 = E1T[I+1,1]*TX1;
                A4 = VISUM(PT[I,1],T1T[I+1],02)*TX11;
                A5 = VISUM(PT[I,1],T1T[I+1],00)*TX12;
                A6 = GTURB*TX3;
                //sw16.WriteLine("",1150) ZZUE,ZEINS,A1,A2,A3,A4,A5,A6,IX1
                sw16.WriteLine("  {0}{1}{2}{3}{4}{5}{6}{7}                {8} ", ZZUE.PadLeft(4), ZEINS.PadLeft(4),
                        Math.Round(A1,4).ToString().PadLeft(10),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(7),Math.Round(A5,4).ToString().PadLeft(9),Math.Round(A6,3).ToString().PadLeft(10),
                        IX1.ToString().PadLeft(5));         //(LTNG[J],J=1,K2)
                IZ1 = IZ1 + 1;

            label1290:
                if (IZ1 < 68)
                    continue;
                IZ1 = 13;
                UWA043(2);
                //sw16.WriteLine("",1010)
                sw16.WriteLine("0");
                sw16.WriteLine("                             EXPANSIONSVERLAUF ");
                sw16.WriteLine("                             ---------------- \n\n");
                sw16.WriteLine("            BEMERKUNG    DRUCK   TEMP.   ENTH.  ENTR.     VOL.   M TURB.    ANZAPFUNGEN    LEITUNGEN");
                if (IWR != 2) //sw16.WriteLine("",1020);
                    sw16.WriteLine("                                                                 DP(%)   C(M/S)\n");
                if (IWR == 2) //sw16.WriteLine("",1030);
                    sw16.WriteLine("                                                                 DP(%)  C(FT/S)\n");
            }   //1300 CONTINUE

            if (JJ >= ANZTRB) goto label1500;
            UWA043(2);
            K1 = NRMVAE[JJ+1] + 100;
            if (NITRE[JJ+1] > 7) goto label1400;
            if (NITRE[JJ+1] != 7 && LLTG[8] == 1) goto label1400;

            sw16.WriteLine("0\n");
            sw16.WriteLine("  ZWEIG - TURBINE                         ZUDAMPF-LTG.NR.{0}   ABDAMPF-LTG.NR.{1}\n\n",
                NRMVAE[JJ+1].ToString().PadLeft(4),K1.ToString().PadLeft(4));
            //1310 FORMAT(1H0,//2X,"ZWEIG - TURBINE",25X,"ZUDAMPF-LTG.NR.",I4,3X,"ABDAMPF-LTG.NR.",I4//)
            IZ1 = 9;
            goto label600;

        label1400:
            sw16.WriteLine("");
            sw16.WriteLine("  PARALLELER - DAMPFSTRANG                ZUDAMPF-LTG.NR.{0}   ABDAMPF-LTG.NR.{1}", NRMVAE[JJ+1].ToString().PadLeft(4),K1.ToString().PadLeft(4));
            //1410 FORMAT(//2X,"PARALLELER - DAMPFSTRANG",16X,"ZUDAMPF-LTG.NR.",I4,3X,"ABDAMPF-LTG.NR.",I4//)
            IZ1 = 9;
            goto label600;

        label1500:
            IZ1 = IZ1 + 6;
            if (IZ1 <= 68) goto label1510;
            UWA043(2);
            IZ1 = 10;
            
        label1510:
            K1 = 0;
            K2 = 0;
            
            for(J = 1; J <= 10; J++)    //DO 1520 J = 1,10
                if (NSPAB[J] != 0) 
                    K1 = J;     //1520 CONTINUE
            
            for(J = 1; J <= 10; J++)    //DO 1530 J = 1,10
                if (NSPZU[J] != 0) 
                    K2 = J;     //1530 CONTINUE
            
            if (K1 == 0 && K2 == 0) goto label2000;
            
            sw16.WriteLine("0");
            sw16.WriteLine("  SPERRDAMPFSCHALTUNG :");
            

            if (K1 > 0)
            {
                string s1 = "";
                for(int J = 1; J <= K1; J++)
                    s1 = s1 + NSPAB[J].ToString().PadLeft(4);
                sw16.WriteLine("+                        LEITUNGEN VON BEDAMPFUNGSSCHIENE {0}", s1);    //(NSPAB[J],J=1,K1)
            }
            //1550 FORMAT(1H+,24X,"LEITUNGEN VON BEDAMPFUNGSSCHIENE",1X,10I4)
            if (K2 > 0) //sw16.WriteLine("",1560) (NSPZU[J],J=1,K2)
            {
                string s1 = "";
                for(int J = 1; J <= K2; J++)
                    s1 = s1 + NSPZU[J].ToString().PadLeft(4);
                sw16.WriteLine("+                        LEITUNGEN ZUR BEDAMPFUNGSSCHIENE {0}", s1);    //(NSPAB[J],J=1,K1)
            }
            //1560 FORMAT(1H ,24X,"LEITUNGEN ZUR BEDAMPFUNGSSCHIENE",1X,10I4)

            A1 = GLTG[99] *TX3;
            if (A1 == 0.0) goto label1580;
            sw16.WriteLine("0                        MASSENSTROM ZUR BEDAMPFUNGSSCHIENE (LTG 99) ={0}", Math.Round(A1,3).ToString().PadLeft(7));
            //1570 FORMAT(1H0,24X,"MASSENSTROM ZUR BEDAMPFUNGSSCHIENE (LTG 99) =", F7.3)
            goto label2000;

        label1580:
            A2 = GLTG[100]*TX3;
            //sw16.WriteLine("",1590) A2
            //1590 FORMAT(1H0,24X,"UEBERSCHUSSDAMPF VON BEDAMPFUNGSSCHIENE (LTG 100) =",F7.3)
            sw16.WriteLine("0                        UEBERSCHUSSDAMPF VON BEDAMPFUNGSSCHIENE (LTG 100) ={0}", Math.Round(A1,3).ToString().PadLeft(7));

        label2000:
            K1 = 0;
            
            for(J = 1; J <= 160; J++)   //DO 2010 J= 1,160
            {
                if (ELTG[J] == 0.0 || GLTG[J] == 0.0) 
                    continue;
                
                K1 = K1 + 1;
                LTNG[K1] = J;
            }   //2010 CONTINUE
            
            if (K1 == 0) goto label3000;
            A1 = K1;
            K2 = (int)(A1/3.0+0.8);
            JJ = K1 - K1/3*3;
            if (JJ != 1) JJ = 0;
            IZ1 = IZ1 + 8 + K2;
            if (IZ1 <= 68) goto label2020;
            UWA043(2);
            IZ1 = 12 + K2;
            
        label2020:
            sw16.WriteLine("0\n");
            sw16.WriteLine("                            LEITUNGEN     (BEI TURBINENENTNAHMEN - ZUSTANDM TURBINENSTUTZEN");
            sw16.WriteLine("                            ------------------------------------------------------------------\n");
            sw16.WriteLine("                                             LTG     DRUCK   TEMP.   ENTH.      M LTG    LTG     DRUCK   TEMP.   ENTH.      M LTG    LTG     DRUCK   TEMP.   ENTH.      M LTG");

            KK = 0;
            
            for(J = 1; J <= K2; J++)    //DO 2200 J = 1,K2
            {
                KK = KK + 1;
                IX1 = LTNG[J];
                A1 = PLTG[IX1]*TX2;
                if (PLTG[IX1] != 0.0) 
                    A2 = VISUM(PLTG[IX1],ELTG[IX1],03);
                if (A2 < 0.0 && A2 > -0.01) 
                    A2 = UW0011(PLTG[IX1],1);
                if (A2 <= 0.0) A2 = 100.0*A2;
                if (A2 > 0.0) A2 = (A2-273.15)*TX0 + TX5;
                A3 = ELTG[IX1]*TX1;
                A4 = GLTG[IX1]*TX3;
                if (KK < K1) goto label2110;
                sw16.WriteLine(" {0}{1}{2}{3}{4} ", IX1.ToString().PadLeft(7), Math.Round(A1,4).ToString().PadLeft(10),
                     Math.Round(A2,2).ToString().PadLeft(8), Math.Round(A3,2).ToString().PadLeft(8), Math.Round(A4,3).ToString().PadLeft(11));
                continue;

            label2110:
                KK = KK + 1;
                II = J + K2;
                IX2 = LTNG[II];
                A5 = PLTG[IX2]*TX2;
                if (PLTG[IX2] != 0.0) A6 = VISUM(PLTG[IX2],ELTG[IX2],03);
                if (A6 < 0.0 && A6 > -0.01) A6 = UW0011(PLTG[IX2],1);
                if (A6 <= 0.0) A6 = 100.0*A6;
                if (A6 > 0.0) A6 = (A6-273.15)*TX0 + TX5;
                A7 = ELTG[IX2]*TX1;
                A8 = GLTG[IX2]*TX3;
                if (KK < K1) goto label2120;
                //sw16.WriteLine("",2130) IX1,A1,A2,A3,A4, IX2,A5,A6,A7,A8
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{4}{8}{9} ", IX1.ToString().PadLeft(7), Math.Round(A1,4).ToString().PadLeft(10),
                     Math.Round(A2,2).ToString().PadLeft(8), Math.Round(A3,2).ToString().PadLeft(8), Math.Round(A4,3).ToString().PadLeft(11),
                     IX2.ToString().PadLeft(7), Math.Round(A5,4).ToString().PadLeft(10), Math.Round(A6,2).ToString().PadLeft(8),
                     Math.Round(A7,2).ToString().PadLeft(8), Math.Round(A8,3).ToString().PadLeft(11));
                continue;

            label2120:
                KK = KK + 1;
                II = J + 2*K2 - JJ;
                IX3 = LTNG[II];
                Z5 = PLTG[IX3]*TX2;
                if (PLTG[IX3] != 0.0)
                    Z6 = VISUM(PLTG[IX3],ELTG[IX3],03);
                
                if (Z6 < 0.0 && Z6 > -0.01)
                    Z6 = UW0011(PLTG[IX3],1);
                if (Z6 <= 0.0) Z6 = 100.0*Z6;
                if (Z6 > 0.0) Z6 = (Z6-273.15)*TX0 + TX5;
                Z7 = ELTG[IX3]*TX1;
                Z8 = GLTG[IX3]*TX3;
                //sw16.WriteLine("",2130) IX1,A1,A2,A3,A4, IX2,A5,A6,A7,A8, IX3,Z5,Z6,Z7,Z8
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{4}{8}{9}{10}{11}{12}{13}{14} ", IX1.ToString().PadLeft(7), Math.Round(A1,4).ToString().PadLeft(10),
                     Math.Round(A2,2).ToString().PadLeft(8), Math.Round(A3,2).ToString().PadLeft(8), Math.Round(A4,3).ToString().PadLeft(11),
                     IX2.ToString().PadLeft(7), Math.Round(A5,4).ToString().PadLeft(10), Math.Round(A6,2).ToString().PadLeft(8),
                     Math.Round(A7,2).ToString().PadLeft(8), Math.Round(A8,3).ToString().PadLeft(11),IX3.ToString().PadLeft(7),
                     Math.Round(Z5,4).ToString().PadLeft(10), Math.Round(Z6,2).ToString().PadLeft(8), Math.Round(Z7,2).ToString().PadLeft(8), 
                     Math.Round(Z8,3).ToString().PadLeft(11));

                //2130 FORMAT(1H ,3(I7,F10.4,2F8.2,F11.3))
            }   //2200 CONTINUE

            K1 = 0;
            
            for(J = 1; J <= 40; J++)    //DO 2320 J = 1,40
            {
                for(int M = 1; M <= INENDE; M++)    //DO 2300 M = 1,INENDE
                {
                    if (NTYP[M] != 1 && NTYP[M] != 2 && NTYP[M] != 3 && NTYP[M] != 5 && NTYP[M] != 10 && NTYP[M] != 11 && NTYP[M] != 15 && NTYP[M] != 19 && NTYP[M] != 21)
                        continue;
                    if (J == N1[M]) 
                        goto label2310;
                }   //2300 CONTINUE
                continue;
                
            label2310:
                K1 = K1 + 1;
                LTNG[K1] = J;
            }   //2320 CONTINUE

            if (K1 == 0) goto label3000;

            K2 = (K1 + 1)/2;
            IZ1 = IZ1 + 8 + K2;
            if (IZ1 <= 68) goto label2330;
            UWA043(2);
            IZ1 = 12 + K2;

        label2330:
            sw16.WriteLine("0\n");
            sw16.WriteLine("                            LEITUNGEN     (BEI ANZAPF- UND ZUDAMPFLEITUNGEN - ZUSTAND AM APPARAT");
            sw16.WriteLine("                            ---------------------------------------------------------------------\n");
            sw16.WriteLine("        LTG     DRUCK   TEMP.  NTH.      M LTG      VOL.  T-SATT       LTG     DRUCK   TEMP.  NTH.      M LTG      VOL.  T-SATT");
            //4NTH. M LTG VOL. T-SATT")/)

            KK = 0;
            for(J = 1; J <= K2; J++)    //DO 2400 J = 1,K2
            {
                KK = KK + 1;
                IX1 = LTNG[J];
                A1 = PLTG[IX1] - DPLTG[IX1];
                A3 = ELTG[IX1] - DELTG[IX1];
                A2 = VISUM(A1,A3,03);
                A4 = GLTG[IX1]*TX3;
                A5 = VISUM(A1,A2,00)*TX12;
                A6 = UW0011(A1,1);
                A1 = A1*TX2;
                if (A2 < 0.0) A2 = A2*100.0;
                if (A2 > 0.0) A2 = (A2-273.15)*TX0 + TX5;
                A3 = A3*TX1;
                A6 = (A6-273.15)*TX0 + TX5;
                if (KK < K1) goto label2350;
                sw16.WriteLine("        {0}{1}{2}{3}{4}{5}{6} ", IX1.ToString().PadLeft(3),Math.Round(A1,4).ToString().PadLeft(10),
                    Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),Math.Round(A4,3).ToString().PadLeft(11),
                    Math.Round(A5,4).ToString().PadLeft(10),Math.Round(A6,2).ToString().PadLeft(8));
                continue;

            label2350:
                KK = KK + 1;
                II = J + K2;
                IX2 = LTNG[II];
                Z1 = PLTG[IX2] - DPLTG[IX2];
                Z3 = ELTG[IX2] - DELTG[IX2];
                Z2 = VISUM(Z1,Z3,03);
                Z5 = VISUM(Z1,Z2,00)*TX12;
                Z6 = UW0011(Z1,1);
                Z1 = Z1*TX2;
                if (Z2 < 0.0) Z2 = Z2*100.0;
                if (Z2 > 0.0) Z2 = (Z2-273.15)*TX0 + TX5;
                Z3 = Z3*TX1;
                Z4 = GLTG[IX2]*TX3;
                Z6 = (Z6-273.15)*TX0 + TX5;
                //sw16.WriteLine("",2360) IX1,A1,A2,A3,A4,A5,A6, IX2,Z1,Z2,Z3,Z4,Z5,Z6
                sw16.WriteLine("        {0}{1}{2}{3}{4}{5}{6}       {7}{8}{9}{10}{11}{12}{13} ", IX1.ToString().PadLeft(3),Math.Round(A1,4).ToString().PadLeft(10),
                    Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),Math.Round(A4,3).ToString().PadLeft(11),
                    Math.Round(A5,4).ToString().PadLeft(10),Math.Round(A6,2).ToString().PadLeft(8),IX2.ToString().PadLeft(3),Math.Round(Z1,4).ToString().PadLeft(10),
                    Math.Round(Z2,2).ToString().PadLeft(8),Math.Round(Z3,2).ToString().PadLeft(8),Math.Round(Z4,3).ToString().PadLeft(11),
                    Math.Round(Z5,4).ToString().PadLeft(10),Math.Round(Z6,2).ToString().PadLeft(8));

                //2360 FORMAT(1H ,2(7X,I3,F10.4,2F8.2,F11.3,F10.4,F8.2))

            }   //2400 CONTINUE

        label3000:
            IZ1 = IZ1 + 8 + IHENDE;
            if (IZ1 <= 68) goto label3010;
            UWA043(2);
            IZ1 = 12 + IHENDE;
            
        label3010:
            sw16.WriteLine("0\n");
            sw16.WriteLine("                                     VORWAERMSTRECKE (HAUPTZWEIG)  ZUSTAND AM AUSTRITT");
            sw16.WriteLine("                                     -------------------------------------------------\n");
            sw16.WriteLine(" NR      TYP        DRUCK   TEMP.   ENTH.     M APP    DP  Q    DT-V  DT-K K   DP K   DH  R   N1  N2  NEBENLEITUNGEN\n");

            for(J = 1; J <= INENDE; J++)    //DO 3600 J = 1,INENDE
            {
                N = NTYP[J] +1;
                K1 = 3*N -2;
                K2 = K1 + 2;
                K1 = (K1 - 1) * 4 + 1;
                K2 = (K2 - 1) * 4 + 4;
                A1 = PW[J]*TX2;
                A2 = (TWAUS[J]-273.15)*TX0 + TX5;
                if (A2 < 0.0) A2 = TWAUS[J]*100.0;
                A3 = EWAUS[J]*TX1;
                A4 = GWAS[J]*TX3;
                if (J > IHENDE && N == 21 && NN1[J] == 0) 
                {
                    A1 =0.0;
                    A2 =0.0;
                    A3 =0.0;
                    A4 =0.0;
                }   //endif
                A5 = 0.0;
                A6 = 0.0;
                A7 = 0.0;
                A8 = 0.0;
                A9 = 0.0;

                KK = 0;
                
                for(L = 1; L <= 8; L++)     //DO 3100 L = 1,8
                {
                    if (NBLTG[J,L] == 0) 
                        continue;
                    KK = KK + 1;
                    LTNG[KK] = NBLTG[J,L];
                }   //3100 CONTINUE
                //goto label(3300,3300,3120,3130,3300,3140,3300,3300,3190,3150,
                // 3150,3110,3140,3180,3300,3130,3300,3300,3300,3110,
                // 3300,3120,3160,3200),

                if(N == 1)      goto label3300;
                if(N == 2)      goto label3300;
                if(N == 3)      goto label3120;
                if(N == 4)      goto label3130;
                if(N == 5)      goto label3300;
                if(N == 6)      goto label3140;
                if(N == 7)      goto label3300;
                if(N == 8)      goto label3300;
                if(N == 9)      goto label3190;
                if(N == 10)      goto label3150;
                if(N == 11)      goto label3150;
                if(N == 12)      goto label3110;
                if(N == 13)      goto label3140;
                if(N == 14)      goto label3180;
                if(N == 15)      goto label3300;
                if(N == 16)      goto label3130;
                if(N == 17)      goto label3300;
                if(N == 18)      goto label3300;
                if(N == 19)      goto label3300;
                if(N == 20)      goto label3110;
                if(N == 21)      goto label3300;
                if(N == 22)      goto label3120;
                if(N == 23)      goto label3160;
                if(N == 24)      goto label3200;
                
            label3110:
                A6 = DEKOND[J]*TX0;
                if (N == 20) goto label3200;
                A5 = (UW0011(PW[J],1)-273.15)*TX0 + TX5;
                goto label3300;

            label3120:
                A6 = DTS[J]*TX0;
                if (N2[J] != 0) A7 = DTK[J]*TX0;
                goto label3300;

            label3130:
                A5 = QBZWM[J];
                A7 = DEKOND[J];
                if (N1[J] == 0) goto label3300;
                A6 = EKONDW[J]*TX1;
                if (SSTEU[J] > 0.0) A6 = SSTEU[J];
                goto label3300;

            label3140:
                A6 = DTS[J]*TX0;
                goto label3300;

            label3150:
                A5 = QBZWM[J]/1000.0*TX4;
                if (N == 10) goto label3155;

                II = N1[J];
                JJ = N2[J];
                UWA048(J);
                
                if (A5 == 0.0) 
                    A5 = (GLTG[II]*(ELTG[II]-ELTG[JJ]) + SUQL - SUGL*ELTG[JJ])/1000.0*TX4;
                
                if (IWR == 2) A5 = A5*1000.0;
                goto label3300;

            label3155:
                if (A5 == 0.0) A5 = GWAS[J]*EKONDW[J]/1000.0*TX4;
                if (IWR == 2) A5 = A5*1000.0;
                A6 = EKONDW[J]*TX1;
                goto label3300;

            label3160:
                A6 = DTS[J]*TX1;
                if (KRUECK[J] == 1) goto label3300;
                L = J;
                
            label3170:
                L = L - 1;
                if (L <= IHENDE) goto label3300;
                if (NTYP[L] != 6) goto label3170;
                A5 = GWAS[L]*(EWAUS[J]-EWAUS[L])*TX4/1000.0;
                if (IWR == 2) A5 = A5*1000.0;
                goto label3300;

            label3180:
                A5 = QBZWM[J];
                A6 = DTS[J]*TX1;
                A7 = DTK[J]*TX0;
                if (KATZE1[J] == 0) goto label3300;
                if (KATZE1[J] == 1) A8 = VERLP[J]*TX2;
                if (KATZE1[J] == 2) A8 = VERLP[J];
                if (KATZE1[J] < 3) goto label3300;
                A8 = VERLP[J]*TX2;
                if (K == 1 && KATZE1[J] == 4) A8 = VERLP[J];
                if (K == 2 && KATZE1[J] == 4) A8 = VERLP[J]*100.0/(PW[J]+VERLP[J]);
                goto label3300;

            label3190:
                if (J > IHENDE) goto label3200;
                A5 = (PW[J-1]-PW[J])/PW[J-1]*100.0;
                if (NTYP[J-1] == 3 || NTYP[J-1] == 15) A5 = 0.0;
                goto label3300;

            label3200:
                IX1 = NN1[J];
                A5 = (PLTG[IX1]-PW[J])/PLTG[IX1]*100.0;

            label3300:
                if (NABHI == 1 && N == 8) PABHI2 = PW[J]*0.980665;
                L = N1[J];
                if (L == 0 || NTYP[J] == 20 || NTYP[J] == 22) goto label3320;
                if (KATZE1[J] == 0 || KATZE1[J] == 2 || KATZE1[J] == 4) goto label3310;
                A8 = PLTG[L] - DPLTG[L];
                A8 = UW0011(PLTG[L],1) - UW0011(A8,1);
                if (KATZE1[J] == 1) A8 = VERLP[J];
                L = NTYP[J];
                if ((L == 1 || L == 2 || L == 3 || L == 5 || L == 10 || L == 11 || L == 15 || L == 19 || L == 21) && KATZE1[J] == 1) 
                    A8 = A8*TX0;
                goto label3320;

            label3310:
                A8 = DPLTG[L]*100.0/PLTG[L];
                if (KATZE1[J] == 2) A8 = VERLP[J];

            label3320:
                A9 = VERLE[J];
                if (KATZE2[J] == 1) A9 = A9*TX1;
                if (KATZE2[J] == 2) A9 = (1.0-A9)*100.0;
                if (KATZE2[J] >= 3) A9 = A9*TX1;

                if (N == 7) A9 = VERLE[J]*TX3;
                if (N == 23) A9 = VERLE[J];

                if (J > IHENDE) goto label3400;

                if (KK == 0)
                    sw16.WriteLine(" {0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}  {13} {14}{15} ", J.ToString().PadLeft(2), TXXT.Substring(K1-1,K2-K1).PadLeft(12),
                        Math.Round(A1,3).ToString().PadLeft(9),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(10),Math.Round(A5,3).ToString().PadLeft(9),Math.Round(A6,2).ToString().PadLeft(8),
                        Math.Round(A7,2).ToString().PadLeft(6),KATZE1[J].ToString().PadLeft(2),Math.Round(A8,2).ToString().PadLeft(5),
                        KATZE2[J].ToString().PadLeft(2),Math.Round(A9,2).ToString().PadLeft(5),KRUECK[J].ToString().PadLeft(1),
                        N1[J].ToString().PadLeft(4),N2[J].ToString().PadLeft(4));
                
                if (KK > 0)
                {
                    s = "";
                    for(L = 1; L <= KK; L++)
                        s = s + LTNG[L].ToString().PadLeft(4);
                    sw16.WriteLine(" {0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}  {13} {14}{15} {16}", J.ToString().PadLeft(2), TXXT.Substring(K1-1,K2-K1).PadLeft(12),
                        Math.Round(A1,3).ToString().PadLeft(9),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(10),Math.Round(A5,3).ToString().PadLeft(9),Math.Round(A6,2).ToString().PadLeft(8),
                        Math.Round(A7,2).ToString().PadLeft(6),KATZE1[J].ToString().PadLeft(2),Math.Round(A8,2).ToString().PadLeft(5),
                        KATZE2[J].ToString().PadLeft(2),Math.Round(A9,2).ToString().PadLeft(5),KRUECK[J].ToString().PadLeft(1),
                        N1[J].ToString().PadLeft(4),N2[J].ToString().PadLeft(4),s);
                        //J,TXXT(K1:K2) ,A1,A2,A3,A4,A5,A6,A7,KATZE1[J],A8,KATZE2[J],A9,KRUECK[J],N1[J],N2[J],(LTNG[L],L=1,KK)
                }
                
                //3330 FORMAT(1H ,I2,1X,A12,F9.3,2F8.2,F10.3,F9.3,F8.2,F6.2,2(I2,F5.2),2X,I1,1X,2I4,1X,8I4)
                goto label3500;

            label3400:
                IX1 = 0;
                if (J > IHENDE) IX1 = KREIHE[J] - IHENDE;
                II = KK;
                if (KK > 5) II = 5;

                if (KK == 0)
                    sw16.WriteLine(" {0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14} {15}{16} {17}{18} ", J.ToString().PadLeft(2), TXXT.Substring(K1-1,K2-K1).PadLeft(12),
                        Math.Round(A1,3).ToString().PadLeft(9),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(10),Math.Round(A5,3).ToString().PadLeft(9),Math.Round(A6,2).ToString().PadLeft(8),
                        Math.Round(A7,2).ToString().PadLeft(6),KATZE1[J].ToString().PadLeft(2),Math.Round(A8,2).ToString().PadLeft(8),KATZE2[J].ToString().PadLeft(2),
                        Math.Round(A9,2).ToString().PadLeft(5),IX1.ToString().PadLeft(3),KRUECK[J].ToString().PadLeft(2),NN1[J].ToString().PadLeft(4),
                        NN2[J].ToString().PadLeft(4),N1[J].ToString().PadLeft(4),N2[J].ToString().PadLeft(4));
                
                if (KK > 0)
                {
                    s = "";
                    for(L = 1; L <= II; L++)
                        s = s + LTNG[L].ToString().PadLeft(4);
                    sw16.WriteLine(" {0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14} {15}{16} {17}{18} {19} ", J.ToString().PadLeft(2), TXXT.Substring(K1-1,K2-K1).PadLeft(12),
                        Math.Round(A1,3).ToString().PadLeft(9),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),
                        Math.Round(A4,3).ToString().PadLeft(10),Math.Round(A5,3).ToString().PadLeft(9),Math.Round(A6,2).ToString().PadLeft(8),
                        Math.Round(A7,2).ToString().PadLeft(6),KATZE1[J].ToString().PadLeft(2),Math.Round(A8,2).ToString().PadLeft(8),KATZE2[J].ToString().PadLeft(2),
                        Math.Round(A9,2).ToString().PadLeft(5),IX1.ToString().PadLeft(3),KRUECK[J].ToString().PadLeft(2),NN1[J].ToString().PadLeft(4),
                        NN2[J].ToString().PadLeft(4),N1[J].ToString().PadLeft(4),N2[J].ToString().PadLeft(4), s);
                }
                //sw16.WriteLine("",3410) J,TXXT(K1:K2) ,A1,A2,A3,A4,A5,A6,A7,KATZE1[J],A8,KATZE2[J],A9,IX1,KRUECK[J],NN1[J],NN2[J],N1[J],N2[J],(LTNG[L],L=1,II)
                //3410 FORMAT(1H ,I2,1X,A12,F9.3,2F8.2,F10.3,F9.3,F8.2,F6.2,2(I2,F5.2), I3,I2,1X,2I4,1X,2I4,      1X,5I4)

                if (II >= KK) goto label3500;
                K1 = II + 1;

                s = "";
                for(L = K1; L <= KK; L++)
                    s = s = LTNG[L].ToString().PadLeft(4);
                sw16.WriteLine("                                                                                                                {0}", s);   //(LTNG[L],L=K1,KK);
                //3420 FORMAT(1H ,111X,3I4)
                IZ1 = IZ1 + 1;

            label3500:
                if (N != 3 && N != 22) goto label3520;
                if (N2[J] != 0) goto label3520;

                A1 = PW[J]*TX2;
                A2 = EKONDW[J] - 273.15;
                A2 = A2*TX0 + TX5;
                A3 = DEKOND[J]*TX1;
                A4 = QBZWM[J]*TX3;
                sw16.WriteLine("    {0}{1}{2}{3}{4} ", TXXT.Substring(288,12).PadLeft(12),Math.Round(A1,3).ToString().PadLeft(9),
                    Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),Math.Round(A4,3).ToString().PadLeft(10));
                //3510 FORMAT(1H ,3X,A12,F9.3,2F8.2,F10.3)
                IZ1 = IZ1 + 1;

            label3520:
                if (J != IHENDE) continue;
                if (IHENDE == INENDE) continue;
                IZ1 = IZ1 + 8 + INENDE - IHENDE;
                if (IZ1 <= 60) goto label3530;
                UWA043(2);
                IZ1 = INENDE - IHENDE + 12;
                
            label3530:
                sw16.WriteLine("0\n");
                sw16.WriteLine("                                     ELEMENTE DES NEBENZWEIGES   (ZUSTAND AM AUSTRITT)");
                sw16.WriteLine("                                     -------------------------------------------------\n");
                sw16.WriteLine(" NR      TYP        DRUCK   TEMP.   ENTH.     M APP    DP  Q    DT-V  DT-K K   DP K   DH NR R  NN1 NN2   N1  N2  NEBENLEITUNGEN\n");
            }      //3600 CONTINUE

            if (K == 1 && IHENDE > 3) 
                UWA054();
            
            UWA079();

            if (K == 1) 
                UWA040();
            goto label10;
        }   //END

                        
        static void UWA046(int INDD1)
        {
            //ENTRY TYPGEM(INDD1)
            //INCLUDE "KRAWAL80.COMMON"
            double DPLTGV = 0, P = 0, T = 0, V = 0;
            
            II = N1[I];

            if (II > 40)
                return;
            DPLTGV = DPLTG[II];
            
            if (LIGHT[2] == 9)
            {
                sw16.WriteLine(" ***TYPGEM***{0}{1}{2}{3}{4}{5}", K.ToString().PadLeft(6),INDD1.ToString().PadLeft(6),I.ToString().PadLeft(6),
                    NTYP[I].ToString().PadLeft(6),INDDT[I].ToString().PadLeft(6),II.ToString().PadLeft(6));
                sw16.WriteLine("               {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", PLTG[II].ToString("0.00000E+0").PadLeft(13),ELTG[II].ToString("0.00000E+0").PadLeft(13),
                    GLTG[II].ToString("0.00000E+0").PadLeft(13),DPLTG[II].ToString("0.00000E+0").PadLeft(13),Math.Round(DPLTGA[II],9).ToString().PadLeft(12),DELTG[II].ToString("0.00000E+0").PadLeft(13),
                    KATZE1[I].ToString().PadLeft(4),Math.Round(VERLP[I],3).ToString().PadLeft(7),KATZE2[I].ToString().PadLeft(4),Math.Round(VERLE[I],3).ToString().PadLeft(7));
            //9 FORMAT(" ","***TYPGEM***",6I6/15X,4E13.5,F12.9,E13.5,2(I4,F7.3))
            }
            
            if (INDD1 == 1) goto label5;
            if (NTYP[I] == 1 && DPENTG > 0.0) DTK[I] = DPENTG;
            if ((KATZE1[I] == 0 || KATZE1[I] == 3 || KATZE1[I] == 4) && INDDT[I] < 0) goto label3;
            if ((KATZE1[I] == 0 || KATZE1[I] == 3 || KATZE1[I] == 4) && K == 2) goto label3;
            if (KATZE1[I] == 0 || KATZE1[I] == 2 || KATZE1[I] == 4) goto label2;

            TWAUS[I] = UW0011(PLTG[II],1) - VERLP[I];
            A3 = UW0011(TWAUS[I],2);
            
        label1:
            DPLTG[II] = PLTG[II] - A3;
            if (NTYP[I] == 1) A3 = A3 - DTK[I];
            if (NTYP[I] == 1) TWAUS[I] = UW0011(A3,1);
            if (KATZE1[I] == 1 || KATZE1[I] == 2) goto label5;
            if (ELTG[II] == 0.0 || GLTG[II] == 0.0) goto label5;
            P = (PLTG[II]+A3)/2.0;
            if (NTYP[I] == 1 && DPLTG[II]*0.5 < PLTG[II])
                P = PLTG[II] - DPLTG[II]*0.5;
            T = VISUM(P,ELTG[II],13);
            V = VISUM(P,T,10);
            DPLTGA[II] = DPLTG[II]/(V*Math.Pow(GLTG[II],2.0));
            goto label5;

        label2:
            if (KATZE1[I] == 0) VERLP[I] = 5.0;
            if (KATZE1[I] == 0 && NTYP[I] == 1) VERLP[I] = 8.0;
            if (KATZE1[I] == 0 && NTYP[I] == 1 && DTK[I] == 0.0) DTK[I]=0.15;
            A3 = PLTG[II]*(1.0-VERLP[I]/100.0);
            TWAUS[I] = UW0011(A3,1);
            goto label1;

        label3:
            if (ELTG[II] == 0.0 || GLTG[II] == 0.0) goto label4;
            P = PLTG[II] - DPLTG[II]/2.0;
            if (P < PLTG[II]*0.54) P = PLTG[II]*0.77;
            T = VISUM(P,ELTG[II],13);
            V = VISUM(P,T,10);
            DPLTG[II] = DPLTGA[II]*V*Math.Pow(GLTG[II],2.0);
            
        label4:
            if (DPLTGV != 0.0) DPLTG[II] = (DPLTG[II] + DPLTGV)*0.5;
            if (DPLTG[II] > PLTG[II]*0.46) DPLTG[II] = PLTG[II]*0.46;
            A3 = PLTG[II] - DPLTG[II];
            if (NTYP[I] == 1 && A3 > DTK[I]) A3 = A3 - DTK[I];
            TWAUS[I] = UW0011(A3,1);
            goto label5;

        label5:
            if (KATZE2[I] == 0) VERLE[I] = 0.0;
            if (LIGHT[2] == 9) 
                sw16.WriteLine(" ***TYPGEM***  {0}{1}{2}{3}{4}{5}{6} ", I.ToString().PadLeft(6),II.ToString().PadLeft(6),A3.ToString("0.00000E+0").PadLeft(13),
                    TWAUS[I].ToString("0.00000E+0").PadLeft(13),DPLTG[II].ToString("0.00000E+0").PadLeft(13),Math.Round(DPLTGA[II],9).ToString().PadLeft(12),
                    DELTG[II].ToString("0.00000E+0").PadLeft(13));
            //11 FORMAT(" ","***TYPGEM***",2X,2I6,3E13.5,F12.9,E13.5)

            if (KATZE2[I] == 1) DELTG[II] = VERLE[I];
            
            return;
        }   //END


        static void UWA047(double P1, double P2, ref double T, double A,ref double DH)
        {
            //ENTRY PUMPE (P1,P2,T,A,DH)
            double P, V;
            P = (P1 + P2)/2.0;
            if (T == 0.0) T = 280.0;
            V = VISUM(P,T,00);
            DH = 23.422781*V*(P2-P1)/A;
            return;
        }   //END

                
        static void UWA049 (ref double DURCHM, ref double GESCHW, int KENNZL)
        {
            //ENTRY STUTZ (DURCHM,GESCHW,KENNZL)
            double SPRUNG, A;
            if (KENNZL != 1) goto label1;

            SPRUNG = 25.0;
            if (DURCHM > 150.0)     SPRUNG = 50.0;
            if (DURCHM > 500.0)     SPRUNG = 100.0;
            A = DURCHM/SPRUNG + 1.0;
            A = Math.Floor(A);      //FLOAT(IFIX(A));
            A = A*SPRUNG;
            GESCHW = Math.Pow((DURCHM/A),2)*GESCHW;
            DURCHM = A;
            
        label1:
            return;
        }   //END
        
                
        static void UWA051()
        {
            //ENTRY VORB
            //INCLUDE "KRAWAL80.COMMON"
            int N = 0, L2 = 0, L1 = 0, L = 0, LL = 0, L3 = 0;
            for(I = 1; I <= INENDE; I++)    //DO 1 I=1,INENDE
            {
                N = NTYP[I];
                IZ2 = N + 1;
                
                //goto label(20,20,30,20,30,30,20,30,30,20,30,30,30,20,20,30,20,20,20,30,30,30,20,30), 
                if(IZ2 == 1)        goto label20;
                if(IZ2 == 2)        goto label20;
                if(IZ2 == 3)        goto label30;
                if(IZ2 == 4)        goto label20;
                if(IZ2 == 5)        goto label30;
                if(IZ2 == 6)        goto label30;
                if(IZ2 == 7)        goto label20;
                if(IZ2 == 8)        goto label30;
                if(IZ2 == 9)        goto label30;
                if(IZ2 == 10)        goto label20;
                if(IZ2 == 11)        goto label30;
                if(IZ2 == 12)        goto label30;
                if(IZ2 == 13)        goto label30;
                if(IZ2 == 14)        goto label20;
                if(IZ2 == 15)        goto label20;
                if(IZ2 == 16)        goto label30;
                if(IZ2 == 17)        goto label20;
                if(IZ2 == 18)        goto label20;
                if(IZ2 == 19)        goto label20;
                if(IZ2 == 20)        goto label30;
                if(IZ2 == 21)        goto label30;
                if(IZ2 == 22)        goto label30;
                if(IZ2 == 23)        goto label20;
                if(IZ2 == 24)        goto label30;
                
            label30:
                JJ = N2[I];
                if (JJ <= 0) goto label20;
                L2 = JJ;
                if (N == 8 || N == 5) goto label16;
                if (JJ != 33 && JJ != 34) PLTG[JJ] = 0.0;
                ELTG[JJ] = 0.0;
                GLTG[JJ] = 0.0;
                goto label20;
                
            label16:
                for(J = 1; J <= INENDE; J++)    //DO 17 J = 1,INENDE
                {
                    if (NTYP[J] == 20 || NTYP[J] == 22) 
                        continue;
                    if (JJ == N1[J]) goto label20;
                }   //17 CONTINUE
                
                if (JJ != 33 && JJ != 34) PLTG[JJ] = 0.0;
                ELTG[JJ] = 0.0;
                GLTG[JJ] = 0.0;
                
            label18:
                L1 = IHENDE + 1;
                
                for(L = L1; L <= INENDE; L++)   //DO 19 L = L1,INENDE
                {
                    L3 = NN1[L];
                    if (L2 != L3) 
                        continue;
                    L2 = NN2[L];
                    ELTG[L2] = 0.0;
                    if (KRUECK[L] == 0) GLTG[L2] = 0.0;
                    goto label18;
                }   //19 CONTINUE
                
            label20:
                if (N < 3 || N == 21 || N == 4)
                    goto label8;
                continue;
                
            label8:
                if (N != 0) goto label10;

                if (I > IHENDE) goto label11;
                JJ = IENDST[1];
                if (K == 1 && PWA[I] == 0.0) PW[I] = XPT[JJ];
                if (K == 2 && PWT[I] == 0.0) PW[I] = XPT[JJ];
                goto label10;
                
            label11:
                JJ = NN1[I];

                if (K == 1 && PLTG[JJ] > 0.0 && PWA[I] == 0.0) PW[I] = PLTG[JJ];
                if (K == 2 && PLTG[JJ] > 0.0 && PWT[I] == 0.0) PW[I] = PLTG[JJ];
                if (PW[I] == 0.0) PW[I] = PW[1];

            label10:
                if (LLTG[6] == 1)
                    continue;      // goto label1;
                for(IZ2  = 1; IZ2 <= 8; IZ2++)  //DO 9 IZ2=1,8
                {
                    JJ = NBLTG[I,IZ2];
                    if (JJ < 49 || JJ > 69) 
                        continue;
                    NBLTG[I,IZ2] = 0;
                }   //9 CONTINUE
            }   //1 CONTINUE
            
            if (LLTG[6] == 1)
                goto label200;

            for(L = 49; L <= 69; L++)   //DO 170 L=49,69
            {
                if (PLTG[L] <= 0.0) 
                    continue;

                for(I = 1; I <= INENDE; I++)    //DO 100 I=1,INENDE
                {
                    N = NTYP[I];
                    if (N != 1 && N != 2 && N != 21) 
                        continue;
                    II = N1[I];
                    if (II == 0) continue;  //goto label100;
                    if (PLTG[II] <= 0.0) continue;  //goto label100;
                    if (ILTG[L] == ILTG[II]) goto label150;
                }   //100 CONTINUE
                UWA008("UNPACK", ILTG[L], ref IZ1, ref IZ2, ref IZ3, ref IZ4);

                I = INENDE + 1;
                if (IZ2 == 1) I = IHENDE + 1;
                
            label110:
                I = I - 1;
                if (I == 0) goto label120;
                N = NTYP[I];
                if (N != 1 && N != 2 && N != 21) goto label110;
                II = N1[I];
                if (II == 0) goto label110;
                if (IZ2 > 1 && II > 34) goto label110;
                if (PLTG[II] <= 0.0) goto label110;
                if (IZ2 > 1 && I <= IHENDE && Math.Abs(PLTG[L]-PLTG[II]) < 0.02)
                    goto label150;

                UWA008("UNPACK", ILTG[II], ref IZ5, ref IZ6, ref IZ7, ref IZ8);
                if (IZ2 != IZ6) goto label110;
                if (PLTG[II] <= PLTG[L]) goto label150;
                goto label110;

            label120:
                I = INENDE + 1;
                
            label130:
                I = I - 1;
                if (I == 0) goto label200;
                if (NTYP[I] != 0) goto label130;
                if (I == 1) goto label150;
                if (NRMVAE[IZ2]+100 == NN1[I]) goto label150;
                goto label130;

            label150:
                for(LL = 1; LL <= 8; LL++)  //DO 160 LL=1,8
                {
                    if (NBLTG[I,LL] != 0) 
                        continue;
                    NBLTG[I,LL] = L;
                    break;
                }   //160 CONTINUE
           
            }   //170 CONTINUE

        label200:
            for(L = 1; L <= ANZTRB; L++)    //DO 210 L=1,ANZTRB
            {
                if (L == 1) 
                    continue;

                I = NRMVAE[L];
                if (I == 0) 
                    continue;
                I = I + 100;
                II = IENDST[L];
                ELTG[I] = E2T[II,1];
                PLTG[I] = PT[II,1];
            }   //210 CONTINUE
            return;
        }   //END


        static void UWA052()
        {
            //ENTRY OPTENT
            double[] KT5RET = new double[6],PVOR = new double[7], DPI = new double[7], KT14RE = new double[7];
            double SABWEI = 0;
            int[] IANFI = new int[7], IENDI = new int[7], IENTI = new int[7], NRTVOR = new int[7];

            //INCLUDE "KRAWAL80.COMMON"
            int INDEXI = 0, NN = 0, MM = 0, KT14NA = 0, KT1NA = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0, I5 = 0, I6 = 0,
                I = 0, LL1 = 0, IRET = 0, IA5I = 0, IE5I = 0, IA2I = 0, IE2I = 0, IA3I = 0, IE3I = 0, IA4I = 0, 
                IE4I = 0, LL = 0, LL2 = 0;
            
        label9:
            INDEXI=1;
            
            for(NN = 1; NN <= 6; NN++)  //DO 20 NN=1,6
            {
                IANFI [NN] = 1;
                IENDI [NN] = 1;
                IENTI [NN] = 0;
                NRTVOR[NN] = 0;
                PVOR [NN] = 0.0;
                DPI [NN] = 0.0;
            }   //20 CONTINUE
            IANFI[1] = 0;
            IENDI[1] = 0;
            
        label1:
            I =I+1;
            UWA010(I,1);
            
            if (KT1 == 1) 
                goto label1;
            
            if(KT1 >= 2) return;
            if(KT7 != 4 && KT7 != 8) goto label1;
            if (IENDI[1] != 0) goto label25;
            
            UWA006("RDISC", 56,KT9);
            if (TALMIN[1] == 0.0) return;
            IANF = I;
            IANFI [1]=I;
            IENDI [1]=I;
            PVOR [1]=XPT[I-1];
            
        label25:
            KT14NA=UWA011(I+1,14);
            KT1NA =UWA011(I+1, 1);
            KT4 =0;
            KT11 =0;
            UWA010(I,2);
            
            if(KT1NA > 0) goto label2;
            if(KT14 == KT14NA) goto label1;
            UWA044(I,1);
            
            for(NN = 1; NN <= 10; NN++)     //DO 3 NN=1,10
            {
                MM =LABT[NN];
                if(MM == 0) goto label4;
                if(MM > 46) continue;
                if(PENTN0[MM] != 0.0) goto label5;
            }   //3 CONTINUE
            
        label4:
            for(NN = 1; NN <= 10; NN++)     //DO 6 NN=1,10
            {
                MM =LZUT[NN];
                if(MM == 0) goto label1;
                if(MM > 46) continue;
                if(PENTN0[MM] != 0.0) goto label5;
            }   //6 CONTINUE
            goto label1;
            
        label5:
            INDEXI=INDEXI+1;
            PVOR[INDEXI] = PENTN0[MM];
            NRTVOR[INDEXI] = NRTRB[MM];

            UWA008("UNPACK", NRTRB[MM], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
            if (IZ4 == 0) goto label40;

            if (IZ4 < NUEMIN[KT14] || IZ4 > NUEMAX[KT14])
                goto label41;
            IANFI[INDEXI] = IZ4;
            IENDI[INDEXI] = IZ4;
            goto label43;
            
        label41:
            sw16.WriteLine("OPTENT-WARNUNG : ANZAPFUNG {0} AUS LOGISCHESTUFE {1} NICHT MOEGLICH", MM.ToString().PadLeft(3),IZ4.ToString().PadLeft(3));
            //42 FORMAT (1H ,"OPTENT-WARNUNG : ANZAPFUNG ",I3," AUS LOGISCHE",
            //1 "STUFE ",I3," NICHT MOEGLICH")
            
        label40:
            IANFI[INDEXI] = NUEMIN[KT14];
            IENDI[INDEXI] = NUEMAX[KT14];
            
        label43:
            KT5RET[INDEXI]=KT5;
            KT14RE[INDEXI] = KT14;
            KT5 =0;
            UWA010(I,2);
            goto label1;
            
        label2:
            INDEXI=INDEXI+1;
            PVOR[INDEXI]=XPT[I+1];
            IANFI[INDEXI]=I+1;
            IENDI[INDEXI]=I+1;
            KT14RE[INDEXI] = UWA011(I+1,14);
            
            if(INDEXI == 2) goto label9;
            IEND = I + 1;
            IRET = I;
            UWA018();
            I = IRET;
            
        label7:
            for(NN = 2; NN <= INDEXI; NN++)     //DO 8 NN=2,INDEXI
                DPI [NN]=(PVOR[NN-1]-PVOR[NN])/(PVOR[NN-1]+PVOR[NN])*2.0;   //8 CONTINUE
            
            if (LIGHT[2] == 3)
                sw16.WriteLine(" ++OPTENT++{0}{1}{2}{3}{4}{5} ", KT5RET.ToString().PadLeft(3),IANFI.ToString().PadLeft(3),
                    IENDI.ToString().PadLeft(3),IENTI.ToString().PadLeft(3),DPI.ToString().PadLeft(3),PVOR.ToString().PadLeft(3));
                //100 FORMAT(" ","++OPTENT++",23I3,3E13.5,/,10X,9E13.5/)
            
            SABWEI=1.0E+20;
            I1 = IANFI[1] - 1;
            I6 = IANFI[6];
            IA5I = IANFI[5];
            IE5I = IENDI[5];
            
            for(I5 = IA5I; I5 <= IE5I; I5++)    //DO 10 I5=IA5I,IE5I
            {
                IA4I =IANFI[4];
                IE4I =IENDI[4];
                
                for(I4 = IA4I; I4 <= IE4I; I4++)    //DO 10 I4=IA4I,IE4I
                {
                    IA3I =IANFI[3];
                    IE3I =IENDI[3];
                    
                    for(I3 = IA3I; I3 <= IE3I; I3++)    //DO 10 I3=IA3I,IE3I
                    {
                        IA2I =IANFI [2];
                        IE2I =IENDI [2];
                        
                        for(I2 = IA2I; I2 <= IE2I; I2++)    //DO 10 I2=IA2I,IE2I
                        {
                            A10 =0.0;
                            if(INDEXI < 6) goto label15;
                            A1 =(XPT[I5]-XPT[I6])/(XPT[I5]+XPT[I6])*2.0;
                            A10 =A10+Math.Abs(DPI[6]-A1);
                            
                        label15:
                            if(INDEXI < 5) goto label14;
                            A1 =(XPT[I4]-XPT[I5])/(XPT[I4]+XPT[I5])*2.0;
                            A10 =A10+Math.Abs(DPI[5]-A1);
                            
                        label14:
                            if(INDEXI < 4) goto label13;
                            A1 =(XPT[I3]-XPT[I4])/(XPT[I3]+XPT[I4])*2.0;
                            A10 =A10+Math.Abs(DPI[4]-A1);
                            
                        label13:
                            if(INDEXI < 3) goto label12;
                            A1 =(XPT[I2]-XPT[I3])/(XPT[I2]+XPT[I3])*2.0;
                            A10 =A10+Math.Abs(DPI[3]-A1);
                            
                        label12:
                            A1 =(XPT[I1]-XPT[I2])/(XPT[I1]+XPT[I2])*2.0;
                            A10 =A10+Math.Abs(DPI[2]-A1);
                            if(SABWEI <= A10) continue;
                            SABWEI = A10;
                            IENTI[2]=I2;
                            IENTI[3]=I3;
                            IENTI[4]=I4;
                            IENTI[5]=I5;
                        }
                    }
                }
            }   //10 CONTINUE

            if (LIGHT[2] == 3)
                sw16.WriteLine(" ++OPTENT++{0}{1}{2}{3}{4}{5} ", KT5RET.ToString().PadLeft(3),IANFI.ToString().PadLeft(3),IENDI.ToString().PadLeft(3),
                    IENTI.ToString().PadLeft(3),DPI.ToString().PadLeft(3),PVOR.ToString().PadLeft(3));
            LL =INDEXI-1;
            IZ8 = 0;

            for(NN = 2; NN <= LL; NN++)     //DO 21 NN=2,LL
            {
                MM =IENTI [NN];
                UWA010(MM,1);
                KT4 = 3;
                KT5 = (int)KT5RET[NN];
                UWA008("UNPACK", NRTVOR[NN], ref IZ1, ref IZ2, ref IZ3, ref IZ4);

                if (NRTVOR[NN] > 0) goto label28;
                if (STWRT1 != 1) goto label200;
                goto label29;
                
            label28:
                if (IZ4 == 0) goto label200;
                IZ8 = IZ4;
                goto label29;
                
            label200:
                KT11 = 1;
                KT12 = 1;
                XPT[MM] = PVOR[NN];
                
            label29:
                UWA010(MM,2);
                UWA044(MM,1);
                
                for(LL1 = 1; LL1 <= 10; LL1++)  //DO 22 LL1=1,10
                {
                    LL2 =LZUT[LL1];
                    IX1 =1;
                    if(LL2 == 0) goto label23;
                    if(LL2 <= 46) goto label24;
                    
                label23:
                    LL2 =LABT[LL1];
                    IX1 =2;
                    if(LL2 == 0) continue;
                    if(LL2 > 46) continue;
                    
                label24:
                    UWA008("UNPACK", ILTG[LL2], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
                    IZ4=MM;
                    UWA008("PACK", ILTG[LL2], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
                    
                    if (STWRT1 != 1) goto label30;
                    IZ4 = 0;
                    I2 = 0;
                    
                    if (NRTRB[LL2] >= 0) IZ4 = IZ8;
                    if (NRTRB[LL2] < 0) I2 = -1;

                    UWA008("PACK", NRTRB[LL2], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
                    IZ8 = 0;
                    
                    if (I2 < 0)
                        NRTRB[LL2] = -NRTRB[LL2];
                    
                label30:
                    if (IX1 == 1) 
                        goto label23;
                }   //22 CONTINUE
            }   //21 CONTINUE
            
            IENTI[1] = IANF - 1;
            NN = 0;
            
        label27:
            NN = NN + 1;
            
            if (NN > 5 || IENTI[NN+1] == 0) 
                goto label9;
            IZ1 = IENTI [NN] + 1;
            IZ2 = IENTI[NN + 1];

            if (IZ2 < IZ1) goto label9;
            
            for(IZ3 = IZ1; IZ3 <= IZ2; IZ3++)   //DO 26 IZ3 = IZ1,IZ2
            {
                if (IZ3 > IEND) goto label9;
                UWA010 (IZ3,1);
                KT14 = (int)KT14RE[NN+1];
                UWA010 (IZ3,2);
            }   //26 CONTINUE
            goto label27;
        }   //END
        
                
        static void UWA053()
        {
            //ENTRY HOLDTT
            return;
        }   //END


        static void HOLDTT()
        {
            return;
        }   //END
                   
                
        static void UWA054()
        {
            int N = 0, nn = 0;
            double W = 0, DTM = 0, Q = 0, B1 = 0, B2 = 0, B3 = 0, B4 = 0, B5 = 0, B6 = 0, B7 = 0, B8 = 0;
            //ENTRY HEIFLA
            //INCLUDE "KRAWAL80.COMMON"

            TEXT = "VORWAERMER ENTHITZER KOND.KUEHLERDAMPFUEBERH.KOND.-TEIL ENTH.-TEIL KUEHLERTEIL ";

            KK = 0;
            IZ2 = IZ1;
            IZ1 = IZ1 + 19;

            for(I = 1; I <= INENDE; I++)    //DO 10 I=1,INENDE
            {
                N = LTYP[I];
                if (N != 2 && N != 5 && N != 12 && N != 19 && N != 21) 
                    continue;
                
                if (INDDT[I] < 0 && N != 2 && N != 21) 
                    continue;
                KK = KK + 1;
                IZ1 = IZ1 + 2;

                if (N != 2 && N != 21) 
                    continue;
                
                if (DTK[I] != 0.0) IZ1 = IZ1 + 1;
                if (N == 21) IZ1 = IZ1 + 1;
            }   //10 CONTINUE
            if (KK == 0) IZ1 = IZ2;
            if (KK == 0) return;

            if (IZ1 <= 68) goto label100;
            
            UWA043(2);
            IZ1 = 12;

        label100:
            sw16.WriteLine("0\n");
            sw16.WriteLine("                         WAERMETECHNISCHE UWA131 DER WAERMETAUSCHER");
            sw16.WriteLine("                         ------------------------------------------\n");
            sw16.WriteLine(" NR                          SPEISEWASSER             WAERME-   GRAEDIG-   HEIZ-    K-UWA135");
            sw16.WriteLine("                      EINTRITT          AUSTRITT      LEISTUNG    KEIT    FLAECHE");
            sw16.WriteLine("                    TEMP.   ENTH.     TEMP.   ENTH.");

            //goto label(140,160,180),
            if(IWR == 1)    goto label140;
            if(IWR == 2)    goto label160;
            if(IWR == 3)    goto label180;

        label140:
            sw16.WriteLine("                     C     KJ/KG       C     KJ/KG      KJ/S      K                   M2     W/M2 K");
            goto label200;

        label160:
            sw16.WriteLine("                     F    BTU/LB       F    BTU/LB      BTU/H     F        FT2      BTU/");
            sw16.WriteLine("                                                         *1000                     FT2 H F");
            goto label200;

        label180:
            sw16.WriteLine("                     C   KCAL/KG       C   KCAL/KG     MCAL/H               K         M2     KCAL/");
            sw16.WriteLine("                                                                                    M2 H C");

        label200:
            for(I = 1; I <= INENDE; I++)    //DO 2000 I=1,INENDE
            {
                N = LTYP[I];
                nn = N;
                KK = 0;
                if (N != 2 && N != 5 && N != 12 && N != 19 && N != 21)
                    continue;
                
                if (INDDT[I] < 0 && N != 2 && N != 21) 
                    continue;

                sw16.WriteLine(" ");
                //210 FORMAT(1H )

                if (INDDT[I] < 0) goto label800;

                A10 = DTS[I];
                Z10 = DTK[I];

                if (I > IHENDE) goto label300;
                
                A1 = PW[I-1];
                A2 = TWAUS[I-1];
                A3 = EWAUS[I-1];
                A4 = GWAS[I-1];
                if ((NTYP[I-1] == 2 || NTYP[I-1] == 21) && N2[I-1] == 0)
                    A2 = EKONDW[I-1];
                if ((NTYP[I-1] == 2 || NTYP[I-1] == 21) && N2[I-1] == 0)
                    A3 = DEKOND[I-1];
                if ((NTYP[I-1] == 2 || NTYP[I-1] == 21) && N2[I-1] == 0)
                    A4 = QBZWM[I-1];
                goto label400;

            label300:
                K1 = NN1[I];
                A1 = PLTG[K1];
                A2 = VISUM(PLTG[K1],ELTG[K1],03);
                
                if (A2 < 0.0) 
                    A2 = UW0011(PLTG[K1],1);
                A3 = ELTG[K1];
                A4 = GLTG[K1];

            label400:
                II = N1[I];
                if (N == 12) II = NBLTG[I,1];
                Z1 = PLTG[II];
                if (N != 12) Z1 = PLTG[II] - DPLTG[II];

                JJ = N2[I];
                Z5 = PLTG[JJ];
                if (JJ == 0) Z5 = Z1;

                A5 = PW[I];

                if (N == 12) goto label700;
                if (N != 2 && N != 21) goto label600;

                if (Z10 == 0.0) goto label500;

                N = 12;
                KK = 1;

                Z2 = UW0011(Z5,1);
                Z3 = SIEDI(Z5);
                Z7 = ELTG[JJ];
                Z6 = VISUM(Z5,Z7,03);
                if (Z6 < 0.0) Z6 = UW0011(Z5,1);
                Z8 = GLTG[JJ];
                A7 = A3 + Z8*(Z3-Z7)/A4;
                A6 = VISUM(A1,A7,03);
                if (Z10 < 0.0) Z10 = Z6 - A2;
                goto label1000;

            label500:
                Z3 = ELTG[II] - VERLE[I];
                if (KATZE2[I] == 2) Z3 = ELTG[II]*VERLE[I];
                Z2 = VISUM(Z1,Z3,03);
                if (Z2 < 0.0) Z2 = UW0011(Z1,1);
                Z4 = GLTG[II];

                if (JJ == 0) goto label510;

                Z7 = ELTG[JJ];
                Z6 = VISUM(Z5,Z7,03);
                if (Z6 < 0.0) Z6 = UW0011(Z5,1);
                goto label520;

            label510:
                Z6 = UW0011(Z5,1);
                Z7 = SIEDI(Z5);

            label520:
                if (N == 21) goto label540;

                A6 = TWAUS[I];
                A7 = EWAUS[I];
                Z9 = UW0011(Z1,1);
                if (A6 < Z9) goto label1000;

                sw16.WriteLine("0*** KONDENSATIONSTEIL HAT NEGATIVE GRAEDIGKEIT ***");
                continue;

            label540:
                N = 2;
                KK = 2;
                Z9 = UW0011(Z5,1);
                A9 = Z9 + 40.0;
                if (A9 < Z2) goto label560;

                sw16.WriteLine("0*** KEIN ENTHITZUNGSTEIL VORHANDEN | TEMPERATUR DESANZAPFDAMPFES < SAETTIGUNGSTEMPERATUR + 40.0 GRAD ***");
                KK = 0;
                goto label520;

            label560:
                Z9 = VISUM(Z1,A9,01);
                A7 = EWAUS[I] - Z4*(Z3-Z9)/A4;
                A6 = VISUM(A5,A7,03);
                Z2 = A9;
                Z3 = Z9;
                Z9 = UW0011(Z1,1);
                if (A6 < Z9) goto label1000;

                sw16.WriteLine("0*** KONDENSATIONSTEIL HAT NEGATIVE GRAEDIGKEIT ***");
                continue;

            label600:
                Z3 = ELTG[II] - VERLE[I];
                if (KATZE2[I] == 2) 
                    Z3 = ELTG[II]*VERLE[I];
                Z2 = VISUM(Z1,Z3,03);
                
                if (Z2 < 0.0) 
                    Z2 = UW0011(Z1,1);
                Z4 = GLTG[II];
                Z7 = ELTG[JJ];
                Z6 = VISUM(Z5,Z7,03);
                if (Z6 < 0.0) Z6 = UW0011(Z5,1);
                A6 = TWAUS[I];
                A7 = EWAUS[I];
                A10 = Z6 - A2;
                if (N == 19) A10 = Z6 - A6;
                goto label1000;

            label700:
                Z3 = ELTG[II];
                Z2 = VISUM(Z1,Z3,23);
                Z4 = GLTG[II];
                Z7 = ELTG[JJ];
                Z6 = VISUM(Z5,Z7,03);
                A6 = TWAUS[I];
                A7 = EWAUS[I];
                A10 = DTS[I];
                if (A10 < 0.0) A10 = Z6 - A2;
                goto label1000;

            label800:
                II = -INDDT[I];
                A1 = PENULL[II];
                A2 = TENULL[II];
                A3 = VISUM(A1,A2,01);
                A4 = GWNULL[II];
                A5 = PANULL[II];
                Z1 = PDNULL[II];
                Z4 = GDNULL[II];
                Z5 = PDNULL[II];
                A10 = DTNULL[II];
                Z6 = TKNULL[II];
                if (Z6 == 0.0) goto label810;

                N = 12;
                KK = 1;

                Z2 = UW0011(Z5,1);
                Z3 = SIEDI(Z5);
                Z7 = VISUM(Z5,Z6,01);
                Z8 = GKNULL[II];
                A6 = A2;
                A7 = A3;
                A3 = A7 - Z8*(Z3-Z7)/A4;
                A2 = VISUM(A1,A3,03);
                Z10= Z6 - A2;
                goto label1000;

            label810:
                Z2 = TDNULL[II];
                
                if (Z2 < 0.0) Z2 = UW0011(Z1,1);
                Z3 = VISUM(Z1,Z2,01);

                Z6 = UW0011(Z5,1);
                Z7 = SIEDI(Z5);

                N = 2;
                if (nn == 21) goto label830;

            label820:
                A6 = TANULL[II];
                A7 = VISUM(A5,A6,01);
                Z9 = UW0011(Z1,1);
                if (A6 < Z9) goto label1000;

                sw16.WriteLine("0*** KONDENSATIONSTEIL HAT NEGATIVE GRAEDIGKEIT ***");
                continue;

            label830:
                KK = 2;
                Z9 = UW0011(Z5,1);
                A9 = Z9 + 40.0;
                if (A9 < Z2) goto label840;

                sw16.WriteLine("0*** KEIN ENTHITZUNGSTEIL VORHANDEN |   TEMPERATUR DES ANZAPFDAMPFES < SAETTIGUNGSTEMPERATUR + 40.0 GRAD ***");
                KK = 0;
                goto label820;

            label840:
                Z9 = VISUM(Z1,A9,01);
                A6 = TANULL[II];
                A7 = VISUM(A5,A6,01);
                A7 = A7 - Z4*(Z3-Z9)/A4;
                A6 = VISUM(A5,A7,03);
                Z2 = A9;
                Z3 = Z9;
                Z9 = UW0011(Z1,1);
                if (A6 < Z9) goto label1000;

                sw16.WriteLine("",530);
                continue;

            label1000:
                A9 = Math.Log(A2-273.15);
                if(N == 2)
                    W=((((((((0.3272703136472231E1 *A9-0.1152021193826295E3) * A9+0.1719570159712999E4)*A9-0.139783720774122E5) * A9+0.6506231685689501E5)*A9-0.1563364514405821E6) *
                        A9+0.5654293023857827E5)*A9+0.6713306343178636E6) * A9-0.1592724123364445E7)*A9+0.1185554868993347E7;
                
                if(N == 5)
                    W=((((((((0.2633728495142175E1 *A9-0.9262067562377229E2) * A9+0.1404899980014474E4)*A9-0.1194980234756751E5) * A9+0.6180603970019642E5)*A9-0.1952754270749793E6) * 
                        A9+0.3483645475738634E6)*A9-0.2443946170812518E6) * A9-0.1626674247312925E6)*A9+0.2749519260324374E6;
                
                if (N == 12) 
                    W= (((-0.7260100569909773E2 *A9+0.1111461119092450E4) * A9-0.6205942419230083E4)*A9+0.1537267010674748E5) * A9-0.1328872300747053E5;
                
                if (N == 19) 
                    W= 32.0*A5 + 78.0;

                if (N != 2)
                    goto label1010;
                DTM = (A6 + A2)/2.0 - 273.15;
                
                if (DTM < 110.0) 
                    W = (18.25*DTM + 2240.0)/(0.0027*DTM + 1.0);
                
                DTM = (A6-A2)/Math.Log((Z9-A2)/(Z9-A6));
                goto label1020;

            label1010:
                DTM = (Z2-A6-Z6+A2)/Math.Log((Z2-A6)/(Z6-A2));

            label1020:
                Q = A4*(A7-A3);
                F = Q/W/DTM*1000.0;

                if (LIGHT[2] == 7)
                {
                    sw16.WriteLine("0** HEIFLA **{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}", I.ToString().PadLeft(4),II.ToString().PadLeft(4),nn.ToString().PadLeft(4),N.ToString().PadLeft(4),
                        Math.Round(A1,3).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(10),Math.Round(A3,3).ToString().PadLeft(10),Math.Round(A4,3).ToString().PadLeft(10),
                        Math.Round(A5,3).ToString().PadLeft(10),Math.Round(A6,3).ToString().PadLeft(10),Math.Round(A7,3).ToString().PadLeft(10),Math.Round(A8,3).ToString().PadLeft(10),
                        Math.Round(A9,3).ToString().PadLeft(10),Math.Round(A10,3).ToString().PadLeft(10));
                    sw16.WriteLine("                             {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}", Math.Round(Z1,3).ToString().PadLeft(10),Math.Round(Z2,3).ToString().PadLeft(10),
                        Math.Round(Z3,3).ToString().PadLeft(10),Math.Round(Z4,3).ToString().PadLeft(10),Math.Round(Z5,3).ToString().PadLeft(10),Math.Round(Z6,3).ToString().PadLeft(10),
                        Math.Round(Z7,3).ToString().PadLeft(10),Math.Round(Z8,3).ToString().PadLeft(10),Math.Round(Z9,3).ToString().PadLeft(10),Math.Round(Z10,3).ToString().PadLeft(10));
                    sw16.WriteLine("                             {0}{1}{2}{3} ", Math.Round(W,2).ToString().PadLeft(10),Math.Round(DTM,2).ToString().PadLeft(10),
                        Math.Round(Q,2).ToString().PadLeft(10),Math.Round(F,2).ToString().PadLeft(10));
                    //1030 FORMAT(1H0,"** HEIFLA **",4I4,10F10.3/29X,10F10.3/29X,4F10.2/)
                }
                
                if (N == 2) IZ5 = 1;
                if (N == 5) IZ5 = 4;
                if (N == 12) IZ5 = 7;
                if (N == 19) IZ5 = 10;
                if (KK > 0) IZ5 = IZ5 + 12;
                IZ6 = IZ5 + 2;
                IZ5 = (IZ5 - 1) * 4 + 1;
                IZ6 = (IZ6 - 1) * 4 + 4;
                B1 = (A2-273.15)*TX0 + TX5;
                B2 = A3*TX1;
                B3 = (A6-273.15)*TX0 + TX5;
                B4 = A7*TX1;
                B5 = Q*TX4;
                B6 = A10*TX0;
                if (KK > 0 && N == 12) B6 = Z10*TX0;
                B7 = F*TX15*TX15;
                B8 = W*TX13;

                if (KK != 3)
                    sw16.WriteLine(" {0} {1} {2}{3}  {4}{5}{6}{7}{8}{9} ", I.ToString().PadLeft(2), TEXT.Substring(IZ5-1,IZ6-IZ5).PadLeft(12),
                        Math.Round(B1,2).ToString().PadLeft(8),Math.Round(B2,2).ToString().PadLeft(8),Math.Round(B3,2).ToString().PadLeft(8),Math.Round(B4,2).ToString().PadLeft(8),
                        Math.Round(B5,2).ToString().PadLeft(11),Math.Round(B6,2).ToString().PadLeft(8),Math.Round(B7,0).ToString().PadLeft(10),Math.Round(B8,0).ToString().PadLeft(10));
                    //1100 FORMAT(1H ,I2,1X,A12,1X,2F8.2,2X,2F8.2,F11.2,F8.2,2F10.0)

                if (KK == 3)
                    sw16.WriteLine(" {0} {1} {2}{3}  {4}{5}{6}        {7}{8} ", I.ToString().PadLeft(2), TEXT.Substring(IZ5-1,IZ6-IZ5).PadLeft(12), Math.Round(B1,2).ToString().PadLeft(8),
                        Math.Round(B2,2).ToString().PadLeft(8),Math.Round(B3,2).ToString().PadLeft(8),Math.Round(B4,2).ToString().PadLeft(8),Math.Round(B5,2).ToString().PadLeft(11),
                        Math.Round(B7,0).ToString().PadLeft(10),Math.Round(B8,0).ToString().PadLeft(10));
                    //1110 FORMAT(1H ,I2,1X,A12,1X,2F8.2,2X,2F8.2,F11.2,8X,2F10.0)

                if (KK == 0) continue;
                if (KK == 2 && N == nn) continue;
                if (KK == 3) continue;

                A1 = A5;
                A2 = A6;
                A3 = A7;
                Z5 = Z1;
                Z6 = Z2;
                Z7 = Z3;
                N = nn;

                if (INDDT[I] < 0) goto label1400;

                if (KK > 1) goto label1300;

                N = 2;
                KK = 2;
                Z3 = ELTG[II] - VERLE[I];
                if (KATZE2[I] == 2) Z3 = ELTG[II]*VERLE[I];
                Z2 = VISUM(Z1,Z3,03);
                if (Z2 < 0.0) Z2 = UW0011(Z1,1);
                Z4 = GLTG[II];

                if (nn == 21) goto label1210;

            label1200:
                A6 = TWAUS[I];
                A7 = EWAUS[I];
                Z9 = UW0011(Z1,1);
                if (A6 < Z9) goto label1000;

                sw16.WriteLine("0*** KONDENSATIONSTEIL HAT NEGATIVE GRAEDIGKEIT ***");
                continue;

            label1210:
                Z9 = UW0011(Z1,1);
                A9 = Z9 + 40.0;
                if (A9 < Z2) goto label1220;

                sw16.WriteLine("0*** KEIN ENTHITZUNGSTEIL VORHANDEN |   TEMPERATUR DES ANZAPFDAMPFES < SAETTIGUNGSTEMPERATUR + 40.0 GRAD ***");
                KK = 0;
                goto label1200;

            label1220:
                Z9 = VISUM(Z1,A9,01);
                A7 = EWAUS[I] - Z4*(Z3-Z9)/A4;
                A6 = VISUM(A5,A7,03);
                Z2 = A9;
                Z3 = Z9;
                Z9 = UW0011(Z1,1);
                if (A6 < Z9) goto label1000;

                sw16.WriteLine("0*** KONDENSATIONSTEIL HAT NEGATIVE GRAEDIGKEIT ***");
                continue;

            label1300:
                N = 5;
                KK = 3;
                A6 = TWAUS[I];
                A7 = EWAUS[I];
                Z3 = ELTG[II] - VERLE[I];
                if (KATZE2[I] == 2) Z3 = ELTG[II]*VERLE[I];
                Z2 = VISUM(Z1,Z3,03);
                if (Z2 < 0.0) Z2 = UW0011(Z1,1);
                goto label1000;

            label1400:
                if (KK > 1) goto label1500;

                N = 2;
                KK = 2;
                Z2 = TDNULL[II];
                Z3 = VISUM(Z1,Z2,01);
                Z4 = GDNULL[II];

                if (nn == 21) goto label1420;

            label1410:
                A6 = TANULL[II];
                A7 = VISUM(A5,A6,01);
                Z9 = UW0011(Z1,1);
                if (A6 < Z9) goto label1000;

                sw16.WriteLine("0*** KONDENSATIONSTEIL HAT NEGATIVE GRAEDIGKEIT ***");
                continue;

            label1420:
                Z9 = UW0011(Z1,1);
                A9 = Z9 + 40.0;
                if (A9 < Z2) goto label1430;

                sw16.WriteLine("0*** KEIN ENTHITZUNGSTEIL VORHANDEN |   TEMPERATUR DES ANZAPFDAMPFES < SAETTIGUNGSTEMPERATUR + 40.0 GRAD ***");
                KK = 0;
                goto label1410;

            label1430:
                Z9 = VISUM(Z1,A9,01);
                A6 = TANULL[II];
                A7 = VISUM(A5,A6,01);
                A7 = A7 - Z4*(Z3-Z9)/A4;
                A6 = VISUM(A5,A7,03);
                Z2 = A9;
                Z3 = Z9;
                Z9 = UW0011(Z1,1);
                if (A6 < Z9) goto label1000;

                sw16.WriteLine("0*** KONDENSATIONSTEIL HAT NEGATIVE GRAEDIGKEIT ***");
                continue;

            label1500:
                N = 5;
                KK = 3;
                A6 = TANULL[II];
                A7 = VISUM(A5,A6,01);
                Z2 = TDNULL[II];
                Z3 = VISUM(Z1,Z2,01);
                goto label1000;
            }   //2000 CONTINUE

            sw16.WriteLine("0");
            sw16.WriteLine("       *************************************************************************** ");
            sw16.WriteLine("       *                                                                         * ");
            sw16.WriteLine("       * HEIZFLAECHEN DER KUEHLER UND ENTHITZER SIND ABHAENGIG VON DER BAUART || * ");
            sw16.WriteLine("       *                                                                         * ");
            sw16.WriteLine("       * HEIZFLAECHEN DER KUEHLER UND ENTHITZER SIND ABHAENGIG VON DER BAUART || * ");
            sw16.WriteLine("       *                                                                         * ");
            sw16.WriteLine("       *************************************************************************** ");
            
            return;
        }   //END

                                      
        static void UWA055(int NX)
        {
            //ENTRY DTHEIZ(NX)
            //INCLUDE "KRAWAL80.COMMON"
            double B1, B2, B3, B4, B5, B6, B7, B8, B9, B10;
            K1 = NN1[NX];
            K2 = NN2[NX];
            B1 = GLTG[K1];
            B2 = VISUM(PLTG[K2],ELTG[K2],03);
            B3 = VISUM(PLTG[K1],ELTG[K1],03);
            B5 = ELTG[K2];
            B6 = ELTG[K1];
            B7 = 1.0;

            if (B2-B3 > 0.0) 
                B7 = (B5-B6)/(B2-B3);
            B8 = B1*(B5-B6);
            
            if (INDDT[NX] != 0)
                IPUMP[NX] = INDDT[NX];
            K1 = (int)IPUMP[NX];
            
            if (K1 == 0) goto label100;
            K1 = Math.Abs(K1);
            Z1 = GWNULL[K1];
            Z2 = TSNULL[K1];
            Z3 = TENULL[K1];
            Z5 = OMEGAR[K1];
            Z4 = (Z2-Z3)/Math.Exp(Z5);
            
            if (Z4 == 0.0) Z4 = 0.00001;

            B10 = Math.Sqrt(B1/Z1)*Math.Pow(((B3-263.15)/(Z3-263.15)),0.27);
            B4 = B8/(Math.Pow(((Z2-Z3)/Z4),(Z1/B1*B10))-1.0)/B1/B7;
            DTS[NX] = B4;
            INDDT[NX] = 0;

            A9 = B3 + B4*Math.Pow(((Z2-Z3)/Z4), (Z1/B1*B10));
            return;

        label100:
            A9 = B3 + DTS[NX] + B8/B1/B7;
            return;
        }   //END

                
        static void UWA056()
        {
            //ENTRY PRINTZ
            bool QPAR;
            //CHARACTER * 6 QD(4), QT(5), NRPROJ
            //CHARACTER * 5 QP[2], QG(3), NUMMER
            //CHARACTER * 8 QE(3)
            //CHARACTER * 9 QW(3)
            //CHARACTER * 10 QM(3)
            //CHARACTER * 132 STEXT
            //CHARACTER * (20) S
            //DIMENSION IWT(20)
            
            //CHARACTER * 20 BESCHR
            //CHARACTER * 10 TURBM

            //COMMON /DPWAS/ DPHD,DPND,PWA(60),LOESCH
            //COMMON /WASTL/ LOEST,PWT(60),DTKT(60)
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /DRUVER/ DPUEB(7)
            //COMMON /HEIZEN/ DPHEIZ(5),IM(5)
            //COMMON /ETAGEN/ ETAPKT(4,4),TNPKT(5,4),PDEPKT(3),TTHPKT(4),
            //1 ETAGET(4)
            //COMMON /KESSEL/ XKESS,YKESS,ISCHWR
            //COMMON /PUMDRU/ DELTPA(60),H0REGA(5),WD0A(5),WW0A(5),Q0A(5),
            //1 HOA(5),PKESS,ETANUA(5),DREFAK,KART(5)
            //COMMON /AUSWAS/ DELTAI(10),PPUMPA(10),ETAPPA(10)
            //COMMON /TEIWAS/ DELTTI(10),PPUMPT(10),ETAPPT(10)
            //COMMON /AUSTEU/ KDRTU,KDRKR
            //COMMON /PRINT/ IWR,TX0,TX13,TX14,TX15,TX16,TX17,TX18
            //COMMON /KONKEN/ KTFAC(4),IKONDR(4),NKPARA(4)
            //COMMON /KONDER/ GKONDA(4), GKONDT(4), TKONDA(4), TKONDT(4),
            //1 PKONDA(4), PKONDT(4), DTKONA(4), DTKONT(4),
            //2 TKONAA(4), TKONAT(4), DKONDA(4), DKONDT(4)
            //COMMON /SCHRFT/ IP1,IP2,IP3,UEBER1 ,UEBER2 ,UEBER3 ,
            //1 IPL(160),BESCHR(160) ,NUMMER,NINDEX,KDRPL,
            //2 KTEXT,NRPROJ,NAME
            //COMMON /DINA4/ IDINA4,XDINA4
            //COMMON /MODTYP/ TURBM(4,4)
            //COMMON /DRUTUR/ ETAWB(15),ETABA(7),WABB(7),CAXT(4),NZTROM(15),
            //1 PSIGMT(15,6)
            //COMMON /LVART/ LVAR(4),PVAR(4),HVAR(4)

            string[] QD = {" ", " BAR  ", " PSIA ", " AT   ", " IN.HG"}, QT = {"", " GRD C", " GRD F", " GRD C", " GRD K", "      "},
                QP = {"", " MW  ", " MJ/S"}, QM ={"",  " KG/S     ", "*1000LBS/H ", " T/H      "}, QW = {"", " KJ/KWH  ", " BTU/KWH ", " KCAL/KWH"},
                QG = {"", " M/S ", " FT/S", " M/S "}, QE = { "", " KJ/KG  ", " BTU/LB ", " KCAL/KG"};
            string BLANC5 = "     ", p = "";
            string S = "";
            int N = 0, L = 0, L1 = 0, L2 = 0, M = 0, LL = 0, KT9VOR = 0, KT7VOR = 0;
            int[] IWT = new int[21];
            StringBuilder STEXT = new StringBuilder("                                                                                                                                                    ");
            double KDR = KDRKR;
            if (KDR == 0) KDR = 100;
            
        label100:
            if (KDR > 99) goto label110;
            if (KDR > 9) goto label120;
            if (KDR > 0) goto label130;
            sw16.WriteLine("1");
            //105 FORMAT(1H1)
            return;

        label110:
            KDR = KDR - (KDR/100)*100;
            TX0 = 1.0;
            TX1 = 4.1868;
            TX2 = 0.980665;
            TX3 = 1.0/3.6;
            TX4 = 4.1868/3.6;
            TX5 = 0.0;
            TX6 = 1.0;
            IWR = 1;
            goto label200;

        label120:
            KDR = KDR - (KDR/10)*10;
            TX0 = 1.8;
            TX1 = 1.8;
            TX2 = 14.223315;
            TX3 = 2.204622;
            TX4 = 3.9683;
            TX5 = 32.0;
            TX6 = 3.28084;
            IWR = 2;
            goto label200;

        label130:
            KDR = 0;
            TX0 = 1.0;
            TX1 = 1.0;
            TX2 = 1.0;
            TX3 = 1.0;
            TX4 = 1.0;
            TX5 = 0.0;
            TX6 = 1.0;
            IWR = 3;

        label200:
            UWA043(2);
            sw16.WriteLine("0");
            sw16.WriteLine("       DATENZUSAMMENFASSUNG FUER QUALITAETSSICHERUNG\n\n");
            sw16.WriteLine("                 PROZESSDATEN                                                                            BEMERKUNGEN\n\n");

            if (K == 1) 
                sw16.WriteLine(" (  )  ITERATIONSKRITERIUM BEI AUSLEGUNG : ");
            //220 FORMAT(1H ,"( ) ITERATIONSKRITERIUM BEI AUSLEGUNG : ")
            
            if (K == 2) 
                sw16.WriteLine(" (  )  ITERATIONSKRITERIUM BEI TEILLAST  : ");
            //221 FORMAT(1H ,"( ) ITERATIONSKRITERIUM BEI TEILLAST : ")
            
            N = NITRE[1];
            //goto label(230,240,250,260,270,280,300,290),
            if(N == 1)      goto label230;
            if(N == 2)      goto label240;
            if(N == 3)      goto label250;
            if(N == 4)      goto label260;
            if(N == 5)      goto label270;
            if(N == 6)      goto label280;
            if(N == 7)      goto label300;
            if(N == 8)      goto label290;

        label230:
            A1 = ETAGE[1];
            if (A1 < 100.0) 
                sw16.WriteLine("+                                          KLEMMENLEISTUNG ={0}{1} ", Math.Round(TLSTGE[1],3).ToString().PadLeft(9), QP[1]);
            if (A1 == 100.0) 
                sw16.WriteLine("+                                          KUPPLUNGSLEISTUNG ={0}{1}", Math.Round(TLSTGE[1],3).ToString().PadLeft(9),QP[1]);
            //231 FORMAT(1H+,42X,"KLEMMENLEISTUNG =",F9.3,A )
            //232 FORMAT(1H+,42X,"KUPPLUNGSLEISTUNG =",F9.3,A )
            goto label300;

        label240:
            sw16.WriteLine("+                                          ABDAMPFMASSENSTROM ={0}{1}", Math.Round(GABDE[1]*TX3,3).ToString().PadLeft(10),QM[IWR]);
            //241 FORMAT(1H+,42X,"ABDAMPFMASSENSTROM =",F10.3,A)
            goto label300;

        label250:
            sw16.WriteLine("+                                          FRISCHDAMPFMASSENSTROM ={0}{1}", Math.Round(GFDE[1]*TX3,3).ToString().PadLeft(10),QM[IWR]);
            //251 FORMAT(1H+,42X,"FRISCHDAMPFMASSENSTROM =",F10.3, A )
            goto label300;

        label260:
            sw16.WriteLine("+                                          VORGEGEBENER MASSENSTROM IN TURBINE ={0}{1}", Math.Round(GMFIXE[1]*TX3,3).ToString().PadLeft(10),QM[IWR]);
            //261 FORMAT(1H+,42X,"VORGEGEBENER MASSENSTROM IN TURBINE =",F10.3, A )
            goto label300;

        label270:
            sw16.WriteLine("+                                          HEIZLEISTUNG ={0}{1}", Math.Round(QBZWM[1]*TX4/1000.0,3).ToString().PadLeft(9),QP[2]);
            //271 FORMAT(1H+,42X,"HEIZLEISTUNG =",F9.3,A )
            goto label300;

        label280:
            sw16.WriteLine("+                                          FRISCHDAMPFMASSENSTROM ={0}{1}", Math.Round(GFDE[1]*TX3,3).ToString().PadLeft(10),QM[IWR]);
            sw16.WriteLine("+                                          ABDAMPFMASSENSTROM ={0}{1}", Math.Round(GABDE[1]*TX3,3).ToString().PadLeft(10),QM[IWR]);
            //281 FORMAT(1H+,42X,"FRISCHDAMPFMASSENSTROM =",F10.3, A /43X,"ABDAMPFMASSENSTROM =",F10.3, A )
            goto label300;

        label290:
            sw16.WriteLine("+                                          DAMPFERZEUGERLEISTUNG ={0}{1}", Math.Round(THERMN,3).ToString().PadLeft(9),QP[2]);
            //291 FORMAT(1H+,42X,"DAMPFERZEUGERLEISTUNG =",F9.3,A )

        label300:
            UWA006("RDISC", 52,1);
            UWA006("RDISC", 59,1);
            if (N != 1) 
                sw16.WriteLine(" (  )  ELEKTRISCHE LEISTUNG    :{0}{1}", Math.Round(ARBTA[1],3).ToString().PadLeft(9),QP[1]);
            if (N != 3 && N != 6) 
                sw16.WriteLine(" (  )  FRISCHDAMPFMASSENSTROM  :{0}{1}", Math.Round(GFDE[1]*TX3,3).ToString().PadLeft(9),QM[IWR]);
            if (N != 8 && LLTG[14] > 1) 
                sw16.WriteLine(" (  )  THERMISCHE LEISTUNG DE  :{0}{1}", Math.Round(WAUFW/859.845,3).ToString().PadLeft(9),QP[2]);
            L = UWA011(4,7);
            if (L == 4) sw16.WriteLine(" (  )  TURBINE IM GLEITDRUCK GEREGELT");
            if (L == 5) sw16.WriteLine(" (  )  TURBINE DROSSELGEREGELT");
            if (L == 3) sw16.WriteLine(" (  )  TURBINE DUESENGEREGELT");
            //301 FORMAT(1H ,'(  )  TURBINE IM GLEITDRUCK GEREGELT')                 UWA056
            //302 FORMAT(1H ,'(  )  TURBINE DROSSELGEREGELT')                        UWA056
            //303 FORMAT(1H ,'(  )  TURBINE DUESENGEREGELT')                         UWA056
            //304 FORMAT(1H ,'(  )  ELEKTRISCHE LEISTUNG    :',F9.3,A )             A 020787
            //305 FORMAT(1H ,'(  )  FRISCHDAMPFMASSENSTROM  :',F9.3,A )             A 020787
            //306 FORMAT(1H ,'(  )  THERMISCHE LEISTUNG DE  :',F9.3,A )             A 020787
            L = LLTG[14] + 1;
            //goto label(310,315,320,325),
            if(L == 1)      goto label310;
            if(L == 2)      goto label315;
            if(L == 3)      goto label320;
            if(L == 4)      goto label325;

        label310:
            sw16.WriteLine(" (  )  BENSONKESSEL");
            //311 FORMAT(1H ,"( ) BENSONKESSEL")
            goto label350;

        label315:
            sw16.WriteLine(" (  )  TROMMELKESSEL");
            //316 FORMAT(1H ,"( ) TROMMELKESSEL")
            goto label350;

        label320:
            sw16.WriteLine(" (  )  SIEDEWASSERREAKTOR");
            //321 FORMAT(1H ,"( ) SIEDEWASSERREAKTOR")
            goto label350;

        label325:
            if (ISCHWR == 0) sw16.WriteLine(" (  )  DRUCKWASSERREAKTOR");
            if (ISCHWR == 1) sw16.WriteLine(" (  )  SCHWERWASSERREAKTOR");
            //326 FORMAT(1H ,"( ) DRUCKWASSERREAKTOR")
            //327 FORMAT(1H ,"( ) SCHWERWASSERREAKTOR")

        label350:
            if (KART[1] < 6) sw16.WriteLine("+                          /  SPEISEPUMPE DREHZAHLGEREGELT");
            if (KART[1] >= 6) sw16.WriteLine("+                          /  SPEISEPUMPE DREHZAHLKONSTANT");
            //351 FORMAT(1H+,25X," /  SPEISEPUMPE DREHZAHLGEREGELT")
            //352 FORMAT(1H+,25X," /  SPEISEPUMPE DREHZAHLKONSTANT")
             
            sw16.WriteLine(" (  )  FRISCHDAMPF KESSEL ");
            //360 FORMAT(1H ,"( ) FRISCHDAMPF KESSEL ")
            
            A1 = PT[1,K]*TX2;
            A2 = T1T[1];
            if (A2 > 273.15) A2 = (A2-273.15)*TX0+TX5;
            L = IWR;
            if (A2 < 0.0) L = 5;
            if (A2 < 0.0) A2 = -A2;
            if (K == 2) goto label370;
            
            if (A2  > 1.0) sw16.WriteLine("+                                    {0}{1},  {2}{3} ", Math.Round(A1,2).ToString().PadLeft(7),QD[IWR],Math.Round(A2,1).ToString().PadLeft(7),QT[L]);
            if (A2 <= 1.0) sw16.WriteLine("+                                    {0}{1},  {2}{3} ", Math.Round(A1,2).ToString().PadLeft(7),QD[IWR],Math.Round(A2,4).ToString().PadLeft(7),QT[L]);
            //365 FORMAT(1H+,36X,F7.2,A ,3H, ,F7.1,A )
            //366 FORMAT(1H+,36X,F7.2,A ,3H, ,F7.4,A )
            goto label380;
            
        label370:
            A3 = PT[1,1];
            A4 = E1T[1,1];
            A5 = VISUM(A3,A4,03);
            if (A5 > 273.15) A5 = (A5-273.15)*TX0+TX5;
            if (A5 < 0.0) A5 = -A5;
            A3 = A3*TX2;
            if(A2 > 1.0) sw16.WriteLine("+                                    {0} ({1}){2},  {3} ({4}){5} ", Math.Round(A1,2).ToString().PadLeft(7),Math.Round(A3,2).ToString().PadLeft(7),QD[IWR],Math.Round(A2,2).ToString().PadLeft(7),Math.Round(A5,1).ToString().PadLeft(7),QT[L]);
            if(A2 <= 1.0) sw16.WriteLine("+                                    {0} ({1}){2},  {3} ({4}){5} ", Math.Round(A1,2).ToString().PadLeft(7),Math.Round(A3,2).ToString().PadLeft(7),QD[IWR],Math.Round(A2,2).ToString().PadLeft(7),Math.Round(A5,4).ToString().PadLeft(7),QT[L]);
            //375 FORMAT(1H+,26X,F7.2," (",F7.2,")",A ,", ",F7.1," (",F7.1,")",A )
            //376 FORMAT(1H+,26X,F7.2," (",F7.2,")",A ,", ",F7.4," (",F7.4,")",A )

        label380:
            sw16.WriteLine(" (  )              TURBINE");
            //385 FORMAT(1H ,"( )",14X,"TURBINE ")
            A1 = PT[2,K]*TX2;
            A2 = T2T[2];
            if (A2 > 273.15) A2 = (A2-273.15)*TX0+TX5;
            L = IWR;
            if (A2 < 0.0) L = 5;
            if (A2 < 0.0) A2 = -A2;
            if (K == 2) goto label390;
            if (A2 > 1.0) sw16.WriteLine("+                                    {0}{1},  {2}{3} ", Math.Round(A1,2).ToString().PadLeft(7),QD[IWR],Math.Round(A2,1).ToString().PadLeft(7),QT[L]);
            if (A2 <= 1.0) sw16.WriteLine("+                                    {0}{1},  {2}{3} ", Math.Round(A1,2).ToString().PadLeft(7),QD[IWR],Math.Round(A2,4).ToString().PadLeft(7),QT[L]);
            goto label400;
            
        label390:
            A3 = PT[2,1];
            A4 = E1T[2,1];
            A5 = VISUM(A3,A4,03);
            
            if (A5 > 273.15) A5 = (A5-273.15)*TX0+TX5;
            if (A5 < 0.0) A5 = -A5;
            A3 = A3*TX2;
            
            if(A2 > 1.0) sw16.WriteLine("+                                    {0} ({1}){2},  {3} ({4}){5} ", Math.Round(A1,2).ToString().PadLeft(7),Math.Round(A3,2).ToString().PadLeft(7),QD[IWR],Math.Round(A2,1).ToString().PadLeft(7),Math.Round(A5,1).ToString().PadLeft(7),QT[L]);
            if(A2 <= 1.0) sw16.WriteLine("+                                    {0} ({1}){2},  {3} ({4}){5} ", Math.Round(A1,2).ToString().PadLeft(7),Math.Round(A3,2).ToString().PadLeft(7),QD[IWR],Math.Round(A2,4).ToString().PadLeft(7),Math.Round(A5,4).ToString().PadLeft(7),QT[L]);

        label400:
            J = 0;
            
        label410:
            J = J + 1;
            if (J > 2) goto label500;
            if(J == 1 && GMD1A[1] <= 0.0) goto label500;
            if(J == 2 && GMD2A[1] <= 0.0) goto label500;
            UWA006("RDISC", 52,J);
            II = ITTEND[J];
            A1 = PT[II,K]*TX2;
            UWA006("RDISC", 52,J+1);
            A2 = PT[1,K]*TX2;
            A3 = T1T[1];

            if (A3 > 273.15)
                A3 = (A3-273.15)*TX0+TX5;
            L = IWR;
            if (A3 < 0.0) L = 5;
            if (A3 < 0.0) A3 = -A3;
            sw16.WriteLine(" (  )  ZWISCHENUEBERHITZER{0}", J.ToString().PadLeft(2));
            //420 FORMAT(1H ,"( ) ZWISCHENUEBERHITZER",I2)
            
            if (K == 2)     goto label440;
            sw16.WriteLine("+                            {0} / {1}{2},  {3}{4} ", Math.Round(A1,2).ToString().PadLeft(6), Math.Round(A2,2).ToString().PadLeft(6),QD[IWR], Math.Round(A3,1).ToString().PadLeft(7),QT[L]);
            //430 FORMAT(1H+,28X,F6.2,3H / ,F6.2,A ,3H, ,F7.1,A )
            goto label410;
            
        label440:
            A5 = E1T[1,1];
            A4 = VISUM(PT[1,1],A5,03);
            if (A4 > 273.15) A4 = (A4-273.15)*TX0+TX5;
            if (A4 < 0.0) A4 = -A4;

            sw16.WriteLine("+                            {0} / {1}{2},  {3} ({4}){5} ", Math.Round(A1,2).ToString().PadLeft(6),Math.Round(A2,2).ToString().PadLeft(6),
                QD[IWR],Math.Round(A3,1).ToString().PadLeft(7),Math.Round(A4,1).ToString().PadLeft(7),QT[L]);
            //450 FORMAT(1H+,28X,F6.2,3H / ,F6.2,A ,3H, ,F7.1," (",F7.1,")",A )
            goto label410;
            
        label500:
            for(L = 1; L <= 20; L++)    //DO 510 L=1,20
                IWT[L] = 0;         //510 CONTINUE
            
            L1 = 0;
            L2 = 0;
            
            for(L = 1; L <= IHENDE; L++)    //DO 520 L=1,IHENDE
            {
                if (NTYP[L] != 7) A1 = (TWAUS[L]-273.15)*TX0+TX5;
                if (LTYP[L] == 1 || LTYP[L] == 2 || LTYP[L] == 21) L1 = L1 + 1;
                if (NTYP[L] == 1 || NTYP[L] == 2 || NTYP[L] == 5 || NTYP[L] == 12 || NTYP[L] == 21) L2 = L2 + 1;
                if (NTYP[L] == 1 || NTYP[L] == 2 || NTYP[L] == 5 || NTYP[L] == 12 || NTYP[L] == 21) IWT[L2] = L;
            }   //520 CONTINUE
            sw16.WriteLine(" (  )  ANZAHL DER VORWAERMSTUFEN         {0}", L1.ToString().PadLeft(3));
            //530 FORMAT(1H ,"( ) ANZAHL DER VORWAERMSTUFEN",9X,I3)
            sw16.WriteLine(" (  )  SPEISEWASSERENDVORWAERMUNG    {0}{1} ", Math.Round(A1,1).ToString().PadLeft(7),QT[IWR]);
            //540 FORMAT(1H ,"( ) SPEISEWASSERENDVORWAERMUNG ",3X,F7.1,A )
            
            if (INENDE == IHENDE) goto label600;
            L1 = IHENDE + 1;
            
            for(L = L1; L <= INENDE; L++)   //DO 560 L=L1,INENDE
            {
                if (NTYP[L] != 6) 
                    continue;
                K2 = NN2[L];
                I = L;
            
            label550:
                I = I + 1;
                if (I > INENDE) continue;
                if (NTYP[I] == 17) goto label550;
                K1 = NN1[I];
                if (K1 == 0) goto label550;
                if (K1 != K2) goto label550;
                K2 = NN2[I];
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label550;
                II = N1[I];
                if (II < 35 || II > 39) continue;
                L2 = L2 + 1;
                IWT[L2] = I;
                goto label550;
            }   //560 CONTINUE

        label600:
            N = 0;
            J = NTTETB[1];
            UWA006("RDISC", 52,J);
            I = ITTEND[J];
            A1 = PT[I,K]*TX2;
            IX2 = 0;
            
            if (PT[I,K] > 0.2) IX2 = 1;
            if (IWR == 2) A1 = A1/TX2/0.034532;
            IZ1 = IWR;
            if (IWR == 2) IZ1 = 4;
            IX1 = 0;
            if (K == 1) IX1 = 1;
            if (K == 2 && ETWK[1] == 0.0) IX1 = 1;
            L = NKPARA[1];
            if (L > 0) goto label650;
            if (IX2 == 0) sw16.WriteLine(" (  )  KONDENSATORDRUCK               {0}{1}", Math.Round(A1,4).ToString().PadLeft(6), QD[IZ1]);
            if (IX2 == 1) sw16.WriteLine(" (  )  GEGENDRUCK                    {0}{1} ", Math.Round(A1,4).ToString().PadLeft(6), QD[IZ1]);
            //610 FORMAT(1H ,"( ) KONDENSATORDRUCK",15X,F6.4,A )
            //620 FORMAT(1H ,"( ) GEGENDRUCK ",13X,F8.4,A )
            if (IX1 == 0) sw16.WriteLine("+                                                       UMGERECHNET");
            if (IX1 == 1) sw16.WriteLine("+                                                       VORGEGEBEN");
            //630 FORMAT(1H+,55X,"UMGERECHNET")
            //640 FORMAT(1H+,55X,"VORGEGEBEN")
            goto label800;
            
        label650:
            N = L;
            J = NTTETB[N];
            UWA006("RDISC", 52,J);
            I = ITTEND[J];
            A2 = PT[I,K] * TX2;
            
            if (IWR == 2) 
                A2 = A2/TX2/0.034532;
            L = NKPARA[N];
            
            if (L > 0)
                goto label690;

            sw16.WriteLine(" (  )  KONDENSATORDRUECKE    {0} / {1}{2} ", Math.Round(A1,4).ToString().PadLeft(6),Math.Round(A2,4).ToString().PadLeft(6),QD[IZ1]);
            //660 FORMAT(1H ,"( ) KONDENSATORDRUECKE ",F6.4," / ",F6.4,A6)
            
            if (IX1 == 0) sw16.WriteLine("+                                                       UMGERECHNET");
            if (IX1 == 1) sw16.WriteLine("+                                                       UMGERECHNET");
            //670 FORMAT(1H+,55X,"UMGERECHNET")
            //680 FORMAT(1H+,55X,"UMGERECHNET")
            goto label730;

        label690:
            J = NTTETB[L];
            UWA006("RDISC", 52,J);
            I = ITTEND[J];
            A3 = PT[I,K]*TX2;

            if (IWR == 2) A3 = A3/TX2/0.034532;
            sw16.WriteLine(" (  )  KONDENSATORDRUECKE {0} / {1} / {2}{3}", Math.Round(A1,4).ToString().PadLeft(6),Math.Round(A2,4).ToString().PadLeft(6),Math.Round(A3,4).ToString().PadLeft(6),QD[IZ1]);
            //700 FORMAT(1H ,"( ) KONDENSATORDRUECKE ",F6.4," / ",F6.4," / ",F6.4,A6)
            if (IX1 == 0) sw16.WriteLine("+                                                               UMGERECHNET");
            if (IX1 == 1) sw16.WriteLine("+                                                               VORGEGEBEN");
            //710 FORMAT(1H+,63X,"UMGERECHNET")
            //720 FORMAT(1H+,63X,"VORGEGEBEN")

        label730:
            sw16.WriteLine("       KONDENSATOREN HINTEREINANDERGESCHALTET ");
            //740 FORMAT(1H ,6X,"KONDENSATOREN HINTEREINANDERGESCHALTET")

        label800:
            if (IX2 == 1) goto label1000;
            if (ETWK[1] == 0.0) goto label1000;
            STEXT = new StringBuilder("(  )  KUEHLMEDIUM ");    //( 1: 17)
            if (K == 2)     goto label830;
            A1 = ETWK[1]*TX0+TX5;
            A3 = EWKEFF[1]*TX3;
            if (A3 == 0.0) A3 = GABDE[1]*EWKZUK[1]*TX3;

            //S = Math.Round(A1,1).ToString().PadLeft(6); A1
            //840 FORMAT (F6.1)
            S = Math.Round(A1,1).ToString().PadLeft(6);
            
            //STEXT(38: 43) = S
            STEXT.Remove(37,6);
            STEXT.Insert(37,S);

            //STEXT(44: 49) = QT(IWR)
            STEXT.Remove(43,6);
            STEXT.Insert(43,QT[IWR]);
            
            //STEXT(50: 52) = ", "
            STEXT.Remove(49,3);
            STEXT.Insert(49,",  ");

            //S = Math.Round(A1,1).ToString().PadLeft(9); A3
            //850 FORMAT (F9.1)
            S = Math.Round(A3,1).ToString().PadLeft(9);

            //STEXT( 53: 61) = S
            STEXT.Remove(52,9);
            STEXT.Insert(52,S);
            
            //STEXT( 62: 71) = QM(IWR)
            STEXT.Remove(61,10);
            STEXT.Insert(61,QM[IWR]);

            goto label1000;
            
        label830:
            A1 = TKONDT[1]*TX0+TX5;
            A2 = TKONDA[1]*TX0+TX5;
            A3 = GKONDT[1]*TX3;
            A4 = GKONDA[1]*TX3;
            S = Math.Round(A1,1).ToString().PadLeft(6); // A1
            
            //STEXT( 29: 34) = S
            STEXT.Remove(28,6);
            STEXT.Insert(28,S);

            //STEXT( 35: 36) = " ("
            STEXT.Remove(34,2);
            STEXT.Insert(34," (");

            S = Math.Round(A1,1).ToString().PadLeft(6); //A2
            //STEXT( 37: 42) = S
            STEXT.Remove(36,6);
            STEXT.Insert(36,S);
            
            //STEXT( 43: 43) = ")"
            STEXT.Remove(42,1);
            STEXT.Insert(42,")");

            //STEXT( 44: 49) = QT(IWR)
            STEXT.Remove(43,6);
            STEXT.Insert(43,QT[IWR]);

            //STEXT( 50: 52) = ", "
            STEXT.Remove(49,3);
            STEXT.Insert(49,",  ");

            S = Math.Round(A3,1).ToString().PadLeft(9); //A3
            //STEXT( 53: 61) = S
            STEXT.Remove(52,9);
            STEXT.Insert(52,S);

            //STEXT( 62: 64) = " ("
            STEXT.Remove(61,3);
            STEXT.Insert(61,"  (");

            S = Math.Round(A1,1).ToString().PadLeft(9); //A4
            //STEXT( 65: 73) = S
            STEXT.Remove(64,9);
            STEXT.Insert(64,S);

            //STEXT( 74: 74) = ")"
            STEXT.Remove(73,1);
            STEXT.Insert(73,")");

            //STEXT( 75: 84) = QM(IWR)
            STEXT.Remove(74,10);
            STEXT.Insert(74,QM[IWR]);

        label1000:
            //STEXT( 95:129) = "DRUCKVERLUST IN DEN ANZAPFLEITUNGEN"
            STEXT.Remove(94,35);
            STEXT.Insert(94,"DRUCKVERLUST IN DEN ANZAPFLEITUNGEN");

            sw16.WriteLine(" {0}", STEXT);
            //810 FORMAT (1H ,A)
            
            sw16.WriteLine("                                                                                               GESCHWINDIGKEITEN IN DEN ANZAPFSTUTZEN");
            sw16.WriteLine("                                                                                               GRAEDIGKEITEN DER WAERMETAUSCHER");
            //1005 FORMAT(1H ,94X,"GESCHWINDIGKEITEN IN DEN ANZAPFSTUTZEN" /95X,"GRAEDIGKEITEN DER WAERMETAUSCHER")
            
            sw16.WriteLine("0      KREISLAUFDATEN");
            //1010 FORMAT(1H0, 6X,"KREISLAUFDATEN")
            
            sw16.WriteLine("+                                                                                                    DP A   C SCHL   DT WT    DT K");
            //1020 FORMAT(1H+,100X,"DP A C SCHL DT WT DT K")
            if (IWR != 2) 
                sw16.WriteLine("                                                                                                              M/S    GRD C   GRD C");
            //1030 FORMAT(1H ,109X,"M/S GRD C GRD C"/)
            if (IWR == 2) 
                sw16.WriteLine("                                                                                                             FT/S    GRD F   GRD F");
            //1040 FORMAT(1H ,108X,"FT/S GRD F GRD F"/)

            L1 = 0;
            p = STEXT.ToString();
            UWA057(L1, ref p);
            STEXT = new StringBuilder(p);
            J = 0;
            
        label1100:
            J = J + 1;
            if (J > 2) goto label1200;
            if (J == 1 && GMD1A[1] == 0.0) goto label1200;
            if (J == 2 && GMD2A[1] == 0.0) goto label1200;

            //WRITE(STEXT,1110) J;
            //1110 FORMAT("(  )  DRUCKVERLUST IM ZUE",I2,":");
            STEXT = new StringBuilder("(  )  DRUCKVERLUST IM ZUE" + J.ToString().PadLeft(2) + ":");

            UWA006("RDISC", 52,J);
            II = ITTEND[J];
            A3 = PT[II,1];
            A7 = PT[II,K];
            UWA006("RDISC", 52,J+1);
            A1 = A7 - PT[1,K];
            A2 = A1/A7*100.0;
            
            if (K == 2) goto label1130;
            //WRITE(S,"(F6.2)") A2
            S = Math.Round(A2,2).ToString().PadLeft(6);
            
            //STEXT ( 38: 43) = S
            STEXT.Remove(37,6);
            STEXT.Insert(37,S);
            
            //STEXT ( 44: 45) = " %"
            STEXT.Remove(43,2);
            STEXT.Insert(43," %");

            //STEXT ( 56: 65) = "VORGEGEBEN"
            STEXT.Remove(55,10);
            STEXT.Insert(55,"VORGEGEBEN");
            goto label1170;
            
        label1130:
            A4 = PT[1,1];
            A5 = A3 - A4;
            A6 = A5/A3*100.0;
            //WRITE(S,"(F6.2)") A2
            S = Math.Round(A2,2).ToString().PadLeft(6);
            
            //STEXT (29: 34) = S
            STEXT.Remove(28,6);
            STEXT.Insert(28,S);

            //STEXT (35: 38) = " % ("
            STEXT.Remove(34,4);
            STEXT.Insert(34," % (");
            
            //WRITE(S,"(F5.2)") A6
            S = Math.Round(A6,2).ToString().PadLeft(5);
            
            //STEXT (39: 44) = S
            STEXT.Remove(38,5);
            STEXT.Insert(38,S);
            IX1 = 0;
            if (DPUEB[J+1] != 0.0) IX1 = 1;
            if (IX1 == 0) //STEXT ( 56: 66) = "UMGERECHNET"
            {
                STEXT.Remove(55,11);
                STEXT.Insert(55,"UMGERECHNET");
            }
            if (IX1 == 1)   //STEXT ( 56: 65) = "VORGEGEBEN"
            {
                STEXT.Remove(55,10);
                STEXT.Insert(55,"VORGEGEBEN");
            }
            
        label1170:
            L1 = L1 + 1;
            if (L1 > L2) //sw16.WriteLine("",810) STEXT
                sw16.WriteLine(" {0}", STEXT);
            if (L1 > L2) goto label1100;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057(L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}", STEXT);
            goto label1100;
            
        label1200:
            I = IHENDE + 1;
             
        label1210:
            I = I - 1;
            if (I <= 0) goto label1900;
            
            if (NTYP[I] != 3 && NTYP[I] != 15) goto label1210;
            A1 = PW[I]*TX2;
            IX1 = 0;
            
            if (K == 1 && PWA[I] != 0.0 || K == 2 && PWT[I] != 0.0) IX1 = 1;
            //WRITE(STEXT,1220) A1,QD(IWR)
            //1220 FORMAT("( ) PUMPENENDDRUCK",16X,F7.2,A )
            STEXT = new StringBuilder("(  )  PUMPENENDDRUCK                " + Math.Round(A1,2).ToString().PadLeft(7) + QD[IWR]);
            
            if (IX1 == 0) 
            {
                //STEXT ( 56: 68) = "NACH PROGRAMM"
                STEXT.Remove(55,13);
                STEXT.Insert(55,"NACH PROGRAMM");
            }
            if (IX1 == 1) 
            {
                //STEXT ( 56: 65) = "VORGEGEBEN"
                STEXT.Remove(55,10);
                STEXT.Insert(55,"VORGEGEBEN");
            }

            L1 = L1 + 1;
            if (L1 > L2) sw16.WriteLine(" {0}", STEXT);
            if (L1 > L2) goto label1250;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}", STEXT);

        label1250:
            A1 = DEKOND[I];
            //WRITE(STEXT,1260) A1;
            STEXT = new StringBuilder("(  )  ETA-SPEISEPUMPE                " + Math.Round(A1,2).ToString().PadLeft(6) + " %");
            
            //1260  FORMAT("( ) ETA-SPEISEPUMPE",16X,F6.2," %");
            IX1 = 0;
            
            if (K == 1 && (DELTAI[1] != 0.0 || PPUMPA[1] != 0.0 || ETAPPA[1] != 0.0)) IX1 = 1;
            if (K == 2 && (DELTTI[1] != 0.0 || PPUMPT[1] != 0.0 || ETAPPT[1] != 0.0)) IX1 = 1;
            if (IX1 == 0) 
            {
                //STEXT ( 56: 68) = "NACH PROGRAMM";
                STEXT.Remove(55,13);
                STEXT.Insert(55,"NACH PROGRAMM");
            }
            if (IX1 == 1) 
            {
                //STEXT ( 56: 65) = "VORGEGEBEN";
                STEXT.Remove(55,10);
                STEXT.Insert(55,"VORGEGEBEN");
            }
            L1 = L1 + 1;
            if (L1 > L2) sw16.WriteLine(" {0} ", STEXT);
            if (L1 > L2) goto label1300;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0} ", STEXT);

        label1300:
            IX1 = 0;
            if (N1[I] != 0) IX1 = 1;
            if (IX1 == 0)       //WRITE(STEXT,1310)
                STEXT = new StringBuilder("(  )  ANTRIEB DER SPEISEPUMPE DURCH E-MOTOR");
            
            if (IX1 == 1)       //WRITE(STEXT,1320)
                STEXT = new StringBuilder("(  )  ANTRIEB DER SPEISEPUMPE DURCH SPT");
            //1310 FORMAT("( ) ANTRIEB DER SPEISEPUMPE DURCH E-MOTOR")
            //1320 FORMAT("( ) ANTRIEB DER SPEISEPUMPE DURCH SPT")

            L1 = L1 + 1;
            if (L1 > L2) sw16.WriteLine(" {0}", STEXT);
            if (L1 > L2) goto label1400;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}", STEXT);

        label1400:
            if (N1[I] == 0) goto label1900;
            II = N1[I];
            JJ = N2[I];
            K1 = 0;
            
            for(M = 1; M <= IHENDE; M++)    //DO 1460 M = 1,IHENDE
            {
                if (NTYP[M] != 1 && NTYP[M] != 2 && NTYP[M] != 21) 
                    continue;
                K1 = K1 + 1;
                KK = N1[M];
                if (PLTG[KK] != PLTG[II]) 
                    continue;
                UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 != 0) goto label1430;

                IZ3 = II;
                IZ1 = IHENDE + 1;
                
            label1410:
                for(IZ2 = IZ1; IZ2 <= INENDE; IZ2++)    //DO 1420 IZ2 = IZ1,INENDE
                {
                    if (IZ3 != NN2[IZ2] && IZ3 != N2[IZ2]) 
                        continue;
                    IZ3 = NN1[IZ2];
                    UWA008("UNPACK", ILTG[IZ3], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 != 0) goto label1430;
                    goto label1410;
                }   //1420 CONTINUE

                goto label1500;
                
            label1430:
                //WRITE(STEXT,1440) K1
                STEXT = new StringBuilder("(  )  SPT : ANGEHAENGT AN ANZAPFUNG A" + K1.ToString().PadLeft(1));
                //1440 FORMAT("( ) SPT : ANGEHAENGT AN ANZAPFUNG A",I1)
                IX1 = 0;
                if (IX4 == ITTEND[IX3] || IX4 == ITTEND[IX3]-1) IX1 = 1;
                if (IX1 == 1)   
                {
                    //STEXT ( 42: 55) = "UEBERSTROEMUNG";
                    STEXT.Remove(41,14);
                    STEXT.Insert(41,"UEBERSTROEMUNG");
                }
                L1 = L1 + 1;
                if (L1 > L2) sw16.WriteLine(" {0} ", STEXT);
                if (L1 > L2) goto label1500;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057(L,ref p);
                STEXT = new StringBuilder(p);
                sw16.WriteLine(" {0}", STEXT);
                goto label1500;
            }    //1460 CONTINUE

        label1500:
            IZ9 = 0;
            STEXT = new StringBuilder(" ");
            if (ANZTRB == 1) goto label1530;
            
            for(LL = 2; LL <= ANZTRB; LL++)     //DO 1520 LL=2,ANZTRB
            {
                if (NRMVAE[LL] != II) 
                    continue;
                IZ9 = LL;
                //STEXT ( 1: 33) = "( ) GERECHNET ALS TURBINE"
                STEXT.Remove(0,33);
                STEXT.Insert(0, "(  )  GERECHNET ALS TURBINE");

                L1 = L1 + 1;
                if (L1 == L2) sw16.WriteLine(" {0}", STEXT);
                if (L1 == L2) goto label1600;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057 (L,ref p);
                STEXT = new StringBuilder(p);
                sw16.WriteLine(" {0}", STEXT);

                goto label1600;
            }   //1520 CONTINUE
            
        label1530:
            IX1 = 0;
            if (SSTEU[I] != 0.0) IX1 = 1;
            if (IX1 == 0) 
            {
                //WRITE(STEXT,1540) EKONDW[I]*TX1,QE[IWR];
                STEXT = new StringBuilder("(  )  GERECHNET ALS ELEMENT MIT VORGEGEBENER ABD.ENTHALPIE" + Math.Round(EKONDW[I]*TX1,2).ToString().PadLeft(8) + QE[IWR]);
            }
            if (IX1 == 1) //WRITE(STEXT,1550) SSTEU[I];
            {
                STEXT = new StringBuilder("(  )  GERECHNET ALS ELEMENT MIT VORGEGEBENEM ETA-I" + Math.Round(SSTEU[I],2).ToString().PadLeft(6) + " %");
            }
            //1540 FORMAT ("( ) GERECHNET ALS ELEMENT MIT VORGEGEBENER ABD.ENTHALPIE",F8.2,A )
            //1550 FORMAT ("( ) GERECHNET ALS ELEMENT MIT VORGEGEBENEM ETA-I",F6.2," %")

            L1 = L1 + 1;
            if (L1 > L2)    sw16.WriteLine(" {0}", STEXT);
            if (L1 > L2) goto label1600;
            
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057(L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}", STEXT);

        label1600:
            IX1 = 0;
            if (IHENDE == INENDE) goto label1620;
            IZ1 = IHENDE + 1;
            
            for(L = IZ1; L <= INENDE; L++)  //DO 1610 L = IZ1,INENDE 
            {
                if (NTYP[L] != 0) continue;
                if (NN1[L] != JJ) continue;
                IX1 = 1;
                goto label1620;
            }   //1610 CONTINUE
            
        label1620:
            if (IX1 == 0)   //WRITE(STEXT,1630);
                STEXT = new StringBuilder("(  )  ABDAMPF AUF HAUPTKONDENSATOR");
            if (IX1 == 1)   //WRITE(STEXT,1640);
                STEXT = new StringBuilder("(  )  ABDAMPF AUF EIGENEN KONDENSATOR");
            //1630 FORMAT("(  )  ABDAMPF AUF HAUPTKONDENSATOR")
            //1640 FORMAT("(  )  ABDAMPF AUF EIGENEN KONDENSATOR")

            L1 = L1 + 1;
            if (L1 > L2) sw16.WriteLine(" {0} ", STEXT);
            if (L1 > L2) goto label1700;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L, ref p);
            sw16.WriteLine(" {0}", STEXT);

        label1700:
            A1 = PLTG[JJ]*TX2;
            IX2 = 0;
            if (PLTG[JJ] > 0.2) IX2 = 1;
            if (IWR == 2) A1 = A1/TX2/0.034532;
            IX3 = IWR;
            if (IWR == 2) IX3 = 4;
            if (IX2 == 0) //WRITE(STEXT,1710) A1,QD[IX3];
                STEXT = new StringBuilder("(  )  P-KOND SPT               " + Math.Round(A1,4).ToString().PadLeft(6) + QD[IX3]);
            if (IX2 == 1) //WRITE(STEXT,1711) A1,QD[IX3];
                STEXT = new StringBuilder("(  )  P-GEGEN SPT              " + Math.Round(A1,4).ToString().PadLeft(6) + QD[IX3]);
            //1710 FORMAT("(  )  P-KOND SPT               ",15X,F6.4,A )
            //1711 FORMAT("(  )  P-GEGEN SPT              ",14X,F6.4,A )
            if (IX1 == 0) goto label1720;
            IX1 = 0;
            if (K == 1) goto label1720;
            if (IZ9 == 0) goto label1720;
            if (ETWK[IZ9] > 0.0) IX1 = 1;

            for(N = 1; N <= 8; N++)     //DO 1712 N=1,8
            {
                if (JJ != NBLTG[1,N])   continue;
                if (KATZE1[1] == 2 || KATZE1[1] == 4) IX1 = 1;
                if (ETWK[1] > 0.0) IX1 = 1;
                goto label1720;
            }   //1712 CONTINUE

        label1720:
            if(IX1 == 0) 
            {
                //STEXT ( 56: 65) = "VORGEGEBEN";
                STEXT.Remove(55,10);
                STEXT.Insert(55, "VORGEGEBEN");
            }
            if(IX1 == 1) 
            {
                //STEXT ( 56: 66) = "UMGERECHNET";
                STEXT.Remove(55,11);
                STEXT.Insert(55, "UMGERECHNET");
            }
            
            L1 = L1 + 1;
            if (L1 > L2) sw16.WriteLine(" {0}", STEXT);
            if (L1 > L2) goto label1800;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}",  STEXT);
            
        label1800:
            if (IZ9 == 0)    goto label1900;
            A1 = ETWK[IZ9]*TX0+TX5;
            if (A1 == 0.0)   goto label1900;
            STEXT = new StringBuilder("                                                                                                                    ");
            //STEXT( 1: 17) = "(  )  KUEHLMEDIUM";
            STEXT.Remove(0,17);
            STEXT.Insert(0,"(  )  KUEHLMEDIUM");
            if (K == 2)     goto label1820;
            A3 = EWKEFF[IZ9]*TX3;
            if (A3 == 0.0) A3 = GLTG[JJ]*EWKZUK[IZ9]*TX3;
            S = Math.Round(A1,1).ToString().PadLeft(6); //A1;
            //STEXT( 38: 43) = S;
            STEXT.Remove(37,6);
            STEXT.Insert(37,S);
            
            //STEXT( 44: 49) = QT[IWR];
            STEXT.Remove(43,5);
            STEXT.Insert(43,QT[IWR]);
            S = Math.Round(A3,1).ToString().PadLeft(9); //A3;
            //STEXT( 50: 58) = S;
            STEXT.Remove(49,9);
            STEXT.Insert(49,S);

            //STEXT( 59: 68) = QM[IWR];
            STEXT.Remove(58,10);
            STEXT.Insert(58,QT[IWR]);
            goto label1830;
            
        label1820:
            A1 = TKONDT[IZ9]*TX0+TX5;
            A2 = TKONDA[IZ9]*TX0+TX5;
            A3 = GKONDT[IZ9]*TX3;
            A4 = GKONDA[IZ9]*TX3;
            S = Math.Round(A1,1).ToString().PadLeft(6); //A1;
            //STEXT( 29: 34) = S;
            STEXT.Remove(28,6);
            STEXT.Insert(28,S);

            //STEXT( 35: 36) = " (";
            STEXT.Remove(34,2);
            STEXT.Insert(34," (");

            S = Math.Round(A2,1).ToString().PadLeft(6); //A2;
            //STEXT( 37: 42) = S;
            STEXT.Remove(36,6);
            STEXT.Insert(36,S);

            //STEXT( 43: 43) = ")";
            STEXT.Remove(42,1);
            STEXT.Insert(42,")");
            
            //STEXT( 44: 49) = QT[IWR];
            STEXT.Remove(43,6);
            STEXT.Insert(43,QT[IWR]);
            S = Math.Round(A3,1).ToString().PadLeft(9); //A3;
            
            //STEXT( 50: 58) = S;
            STEXT.Remove(49,9);
            STEXT.Insert(49,S);
            
            //STEXT( 59: 61) = " (";
            STEXT.Remove(58,2);
            STEXT.Insert(58," (");

            S = Math.Round(A4,1).ToString().PadLeft(9); //A4;
            //STEXT( 62: 70) = S;
            STEXT.Remove(61,9);
            STEXT.Insert(61,S);

            //STEXT( 71: 71) = ")";
            STEXT.Remove(70,1);
            STEXT.Insert(70,")");
            
            //STEXT( 72: 81) = QM[IWR];
            STEXT.Remove(71,10);
            STEXT.Insert(71, QM[IWR]);

        label1830:
            L1 = L1 + 1;
            if (L1 > L2) 
                sw16.WriteLine(" {0}", STEXT);

            if (L1 > L2) goto label1900;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}", STEXT);

        label1900:
            IZ1 = I-1;
            
            for(M = 1; M <= IZ1; M++)    //DO 1930 M=1,IZ1
            {
                if (NTYP[M] == 1) goto label2000;
                if (NTYP[M] != 3) continue;
                A1 = DEKOND[M];
                
                //WRITE(STEXT,1910) A1;
                STEXT = new StringBuilder("(  )  ETA-KONDPUMPE                  " + Math.Round(A1,2).ToString().PadLeft(6) + " %");
                //1910 FORMAT("(  )  ETA-KONDPUMPE",18X,F6.2," %")
                I = 0;
                
                for(N = 1; N <= IHENDE; N++)    //DO 1920 N=1,IHENDE
                    if (NTYP[N] == 3 || NTYP[N] == 15)
                        I = I + 1;      //1920 CONTINUE
                
                IX1 = 0;
                
                if (K == 1 && (DELTAI[I] != 0.0 || PPUMPA[I] != 0.0 || ETAPPA[I] != 0.0)) IX1 = 1;
                if (K == 2 && (DELTTI[I] != 0.0 || PPUMPT[I] != 0.0 || ETAPPT[I] != 0.0)) IX1 = 1;
                if (IX1 == 0) 
                {
                    //STEXT ( 56: 68) = "NACH PROGRAMM";
                    STEXT.Remove(55,13);
                    STEXT.Insert(55,"NACH PROGRAMM");
                }

                if (IX1 == 1) 
                {
                    //STEXT ( 56: 65) = "VORGEGEBEN";
                    STEXT.Remove(55,10);
                    STEXT.Insert(55,"VORGEGEBEN");
                }

                L1 = L1 + 1;
                if (L1 > L2) sw16.WriteLine(" {0}", STEXT);
                if (L1 > L2) goto label2000;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057 (L,ref p);
                STEXT = new StringBuilder(p);
                sw16.WriteLine(" {0}", STEXT);
                STEXT = new StringBuilder("                                                                                                             ");

                goto label2000;
            }   //1930 CONTINUE

        label2000:
            L1 = L1 + 1;
            if (L1 > L2) goto label2020;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L, ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}",  STEXT);

        label2020:
            if (PLTG[31] == 0.0 && PLTG[32] == 0.0) goto label2100;
            IX1 = 0;
            J = 0;
            
        label2030:
            J = J + 1;
            if (J > 2) goto label2100;
            UWA006("RDISC", 52,J);
            UWA006("RDISC", 59,J);
            I = ITTEND[J];
            UWA010(I,1);
            
            if (KT5 == 0) goto label2030;
            UWA044(I,1);
            
            for(M = 1; M <= 10; M++)    //DO 2050 M=1,10
            {
                IZ1 = LZUT[M];
                if (IZ1 == 0) 
                    goto label2030;

                if (IZ1 != 31 && IZ1 != 32) 
                    continue;

                IX1 = IX1 + 1;
                A1 = GLTG[IZ1]*TX3;
                //WRITE(STEXT,2040) IX1,A1,QM(IWR)
                STEXT = new StringBuilder("(  )  EINSPRITZUNG IN DEN ZWISCHENUEBERHITZER" + IX1.ToString().PadLeft(2) + Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
                //2040 FORMAT("(  )  EINSPRITZUNG IN DEN ZWISCHENUEBERHITZER",I2,1F10.3, A )
                
                L1 = L1 + 1;
                if (L1 > L2) goto label2030;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057 (L,ref p);
                STEXT = new StringBuilder(p);
                sw16.WriteLine(" {0}", STEXT);
                goto label2030;
            }   //2050 CONTINUE
            goto label2030;

        label2100:
            //WRITE(STEXT,2110)
            STEXT = new StringBuilder("(  )  MAKE UP");
            //2110 FORMAT("( ) MAKE UP")

            L1 = L1 + 1;
            if (L1 > L2) goto label2200;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}",  STEXT);

        label2200:
            STEXT = new StringBuilder("                                                      ");
            if (IHENDE == INENDE)
                goto label2500;
            IX10 = 0;
            IZ1 = IHENDE + 1;
            
            for(IX1 = IZ1; IX1 <= INENDE; IX1++)    //DO 2350 IX1 = IZ1,INENDE
            {
                if (NTYP[IX1] != 6) 
                    continue;
                
                A10 = 0.0;
                IX2 = 0;
                IZ2 = 0;
                K2 = NN2[IX1];
                I = IX1;
                
            label2210:
                I = I + 1;
                if (I > INENDE) goto label2330;
                if (NTYP[I] == 17) goto label2210;
                K1 = NN1[I];
                if (K1 == 0) goto label2210;
                if (K1 != K2) goto label2210;
                K2 = NN2[I];
                if (NTYP[I] != 2 && NTYP[I] != 21) goto label2210;
                II = N1[I];
                if (II < 35 || II > 39) continue;
                A10 = A10 + GLTG[K1]*(ELTG[K2]-ELTG[K1]);
                IX4 = II - 34;
                
                if (K == 2) goto label2240;
                UWA008("UNPACK", ILTG[II],ref IX6, ref IX7, ref IX8, ref IX9);
                IM[IX4] = II;
                if (IX7 != 0) goto label2240;
                IZ4 = II;
                
            label2220:
                for(IZ5 = IZ1; IZ5 <= INENDE; IZ5++)    //DO 2230 IZ5 = IZ1,INENDE
                {
                    K1 = NN1[IZ5];
                    K2 = NN2[IZ5];
                    JJ = N2[IZ5];
                    if (IZ4 != K2 && IZ4 != JJ) continue;
                    IZ4 = K1;
                    UWA008("UNPACK", ILTG[IZ4], ref IX6, ref IX7, ref IX8, ref IX9);
                    if (IX7 == 0) goto label2220;
                    IM[IX4] = IZ4;
                    goto label2240;
                }   //2230 CONTINUE
                goto label2210;
                
            label2240:
                IX3 = 0;
                IZ4 = IM[IX4];
                UWA008("UNPACK", ILTG[IZ4], ref IX6, ref IX7, ref IX8, ref IX9);
                
                if (IX8 == NTTETB[IX7] && IX9 == ITTEND[IX8]) 
                    goto label2310;
                
                for(M = 1; M <= IHENDE; M++)    //DO 2250 M=1,IHENDE
                {
                    if (NTYP[M] != 1 && NTYP[M] != 2 && NTYP[M] != 21) continue;
                    IX3 = IX3 + 1;
                    JJ = N1[M];
                    if (NTYP[M] == 1) JJ = KREIHE[M];
                    if (PLTG[II] == PLTG[JJ]) goto label2260;
                    if (PLTG[IZ4] == PLTG[JJ]) goto label2260;
                    UWA008("UNPACK", ILTG[JJ], ref IX6, ref IX7, ref IX8, ref IX9);
                    if (IX7 > 0) continue;
                    
                label2242:
                    for(IZ7 = 1; IZ7 <= INENDE; IZ7++)  //DO 2244 IZ7 = 1,INENDE
                    {
                        if (JJ != N2[IZ7] && JJ != NN2[IZ7]) continue;
                        if (IZ7 <= IHENDE) JJ = N1[IZ7];
                        if (IZ7 <= IHENDE && JJ == 0) break;
                        if (IZ7 > IHENDE) JJ = NN1[IZ7];
                        if (IZ7 > IHENDE && NTYP[IZ7] == 5) JJ = N1[IZ7];
                        if (PLTG[II] == PLTG[JJ]) goto label2260;
                        if (PLTG[IZ4] == PLTG[JJ]) goto label2260;
                        UWA008("UNPACK", ILTG[JJ], ref IX6, ref IX7, ref IX8, ref IX9);
                        if (IX7 > 0) break;
                        goto label2242;
                    }   //2244 CONTINUE
                }   //2250 CONTINUE
                IZ2 = IZ2 + 1;
                if (STEXT.ToString().Substring(0,10) != "          ") 
                    sw16.WriteLine(" {0}", STEXT);
                STEXT = new StringBuilder("                                       ");
                if (IWR == 1) //WRITE(STEXT,2252) PLTG[II]*TX2;
                    STEXT = new StringBuilder("(  )  HEIZANZAPFUNG BEI" + Math.Round(PLTG[II]*TX2,3).ToString().PadLeft(7) +" BAR");
                if (IWR == 2) //WRITE(STEXT,2254) PLTG[II]*TX2;
                    STEXT = new StringBuilder("(  )  HEIZANZAPFUNG BEI" + Math.Round(PLTG[II]*TX2,3).ToString().PadLeft(7) +" PSIA");
                if (IWR == 3)   //WRITE(STEXT,2256) PLTG[II]*TX2;
                    STEXT = new StringBuilder("(  )  HEIZANZAPFUNG BEI" + Math.Round(PLTG[II]*TX2,3).ToString().PadLeft(7) +" AT");
                //2252 FORMAT("(  )  HEIZANZAPFUNG BEI",F7.3," BAR");
                //2254 FORMAT("(  )  HEIZANZAPFUNG BEI",F7.3," PSIA");
                //2256 FORMAT("(  )  HEIZANZAPFUNG BEI",F7.3," AT");

                L1 = L1 + 1;
                if (L1 > L2) goto label2210;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057 (L,ref p);
                STEXT = new StringBuilder(p);
                goto label2210;
                
            label2260:
                IX2 = IX2 + 1;
                IZ2 = IX2;
                if (IX2 == 1) //WRITE(STEXT,2270) IX3;
                    STEXT  = new StringBuilder("(  )  HEIZANZAPFUNGEN AN A" + IX3.ToString().PadLeft(1));
                
                if (IX2 == 2) 
                {
                    //STEXT ( 28: 30) = ", A";
                    STEXT.Remove(27,3);
                    STEXT.Insert(27,", A");
                }
                //WRITE(S,"[I1]") IX3;
                S = IX3.ToString().PadLeft(1);
                if (IX2 == 2) //STEXT ( 31: 31) = S;
                {
                    STEXT.Remove(30,1);
                    STEXT.Insert(30,S);
                }
                if (IX2 == 3) //STEXT ( 32: 34) = ", A";
                {
                    STEXT.Remove(31,3);
                    STEXT.Insert(31,", A");
                }
                if (IX2 == 3) //STEXT ( 35: 35) = S;
                {
                    STEXT.Remove(34,1);
                    STEXT.Insert(34,S);
                }
                if (IX2 == 4) //STEXT ( 36: 38) = ", A";
                {
                    STEXT.Remove(35,3);
                    STEXT.Insert(35,", A");
                }
                if (IX2 == 4) //STEXT ( 39: 39) = S;
                {
                    STEXT.Remove(38,1);
                    STEXT.Insert(38,S);
                }
                //2270 FORMAT("( ) HEIZANZAPFUNGEN AN A",I1)
                if (IX2 > 1) goto label2210;

                L1 = L1 + 1;
                if (L1 > L2) goto label2210;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057 (L, ref p);
                STEXT = new StringBuilder(p);
                goto label2210;

            label2310:
                sw16.WriteLine("  (  ) HEIZANZAPFUNG{0} AM GEGENDRUCK", IX4.ToString().PadLeft(2));
                //2320 FORMAT(1H ,"( ) HEIZANZAPFUNG",I2," AM GEGENDRUCK")
                IZ2 = IZ2 + 1;
                IX10 = 1;

                L1 = L1 + 1;
                if (L1 > L2) goto label2210;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057 (L,ref p);
                STEXT = new StringBuilder(p);
                goto label2210;

            label2330:
                if (IZ2 == 0) continue;
                A10 = A10*TX4/1000.0;
                if (IWR == 3) A10 = A10*1.163;
                //STEXT (44: 56) = "HEIZLEISTUNG";
                STEXT.Remove(43,13);
                STEXT.Insert(38,"HEIZLEISTUNG");
                
                //WRITE(S,"(F10.3)") A10;
                S = Math.Round(A10,3).ToString().PadLeft(10);
                //STEXT (57: 66) = S;
                STEXT.Remove(56,10);
                STEXT.Insert(56,S);
                
                //STEXT (67: 71) = QP[1];
                STEXT.Remove(66,5);
                STEXT.Insert(66,QP[1]);
                
                sw16.WriteLine(" {0}", STEXT);
                STEXT = new StringBuilder("                                                                                          ");
            }   //2350 CONTINUE
            
            if (IZ2 == 0) goto label2500;

            I = IHENDE;
            
        label2360:
            I = I + 1;
            if (I > INENDE) goto label2500;
            if (LTYP[I] != 2 && LTYP[I] != 21) goto label2360;
            II = N1[I];
            
            if (II < 35 || II > 39) goto label2360;
            JJ = N2[I];
            J = I;
            
        label2370:
            J = J - 1;
            if (J == IHENDE || NTYP[J] == 6) goto label2390;
            if (LTYP[J] != 2 && LTYP[J] != 21) goto label2370;
            
            for(M = 1; M <= 8; M++)     //DO 2380 M=1,8
                if (NBLTG[J,M] == JJ) 
                    goto label2360;     //2380 CONTINUE
            goto label2370;
            
        label2390:
            IX3 = 0;
            IX5 = 0;
            
            for(N = 1; N <= IHENDE; N++)    //DO 2410 N=1,IHENDE
            {
                if (LTYP[N] == 1 || LTYP[N] == 2 || LTYP[N] == 21) IX3 = IX3 + 1;
                if (LTYP[N] == 12) IX5 = IX5 + 1;
                if (NTYP[N] != 0 && NTYP[N] != 1 && NTYP[N] != 8 && NTYP[N] != 2 && NTYP[N] != 21 && NTYP[N] != 12) continue;
                
                for(M = 1; M  <= 8; M++)    //DO 2400 M=1,8
                    if (NBLTG[N,M] == JJ)
                        goto label2420;     //2400 CONTINUE
            }   //2410 CONTINUE
            IX6 = IHENDE + 1;
            
            for(N = IX6; N <= INENDE; N++)      //DO 2415 N=IX6,INENDE
            {
                if (JJ != NN1[N]) continue;
                JJ = NN2[N];
                goto label2390;
            }   //2415 CONTINUE
            goto label2360;
            
        label2420:
            A1 = GLTG[JJ]*TX3;
            A2 = 0.0;
            
            if (PLTG[JJ] > 0.0 && ELTG[JJ] > 0.0)
                A2 = VISUM(PLTG[JJ],ELTG[JJ],23);
            if (A2 > 0.0)
                A2 = (A2-273.15)*TX0+TX5;
            
            if (NTYP[N] == 0) //WRITE(STEXT,2430) A2,QT(IWR),A1,QM(IWR)
                STEXT = new StringBuilder("(  )  HEIZKOND.RUECKL. IN KONDENSATOR " + Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] + " /" +
                    Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
            //2430 FORMAT("(  )  HEIZKOND.RUECKL. IN KONDENSATOR ",F7.2,A," /",F10.3,A)
            
            if (NTYP[N] == 1) //WRITE(STEXT,2440) A2,QT(IWR),A1,QM(IWR)
                STEXT = new StringBuilder("(  )  HEIZKOND.RUECKL. IN SPEISEWASSERBEHAELTER" + Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] +
                    " /" + Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
            //2440 FORMAT("(  )  HEIZKOND.RUECKL. IN SPEISEWASSERBEHAELTER",F7.2,A," /",F10.3,A)
            
            if (NTYP[N] == 8 && IX3 == 0 && (IX10 == 0 || IX10 == 1 && II != 35))    //WRITE(STEXT,2450) A2,QT(IWR),A1,QM(IWR)
                STEXT = new StringBuilder("(  )  HEIZKOND.RUECKL. NACH KOND.PUMPE " + Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] + " /" +
                    Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
                //2450 FORMAT("(  )  HEIZKOND.RUECKL. NACH KOND.PUMPE ",F7.2,A," /",F10.3,A)
            
            if (NTYP[N] == 8 && IX3 == 0 && IX10 == 1 && II == 35)      //WRITE(STEXT,2460) A2,QT(IWR),A1,QM(IWR)
                STEXT = new StringBuilder("(  )  HEIZKOND.RUECKL. (HAUPTKONDENSAT) " + Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] + " /" +
                    Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
                //2460 FORMAT("(  )  HEIZKOND.RUECKL. (HAUPTKONDENSAT) ",F7.2,A," /",F10.3,A)
            IX4 = IX3 + 1;
            
            if (NTYP[N] == 8 && IX3 > 0)    //WRITE(STEXT,2470) IX3,IX4,A2,QT(IWR),A1,QM(IWR)
                STEXT = new StringBuilder("(  )  HEIZKOND.RUECKL. ZWISCHEN A" + IX3.ToString().PadLeft(1) + " UND A" + IX4.ToString().PadLeft(1) + "      " + 
                    Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] + " /" + Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
            //2470 FORMAT("(  )  HEIZKOND.RUECKL. ZWISCHEN A",I1," UND A",I1,6X,F7.2,A," /",F10.3,A)
            
            if (NTYP[N] == 2 || NTYP[N] == 21)      //WRITE(STEXT,2480) IX3,A2,QT(IWR),A1,QM(IWR)
                STEXT = new StringBuilder("(  )  HEIZKOND.RUECKL. IN VORWAERMER A" + IX3.ToString().PadLeft(1) + "       " + Math.Round(A2,2).ToString().PadLeft(7) +
                    QT[IWR] + " /" + Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
            //2480 FORMAT("(  )  HEIZKOND.RUECKL. IN VORWAERMER A",I1, 7X,F7.2,A," /",F10.3,A)
            
            if (NTYP[N] == 12)  //WRITE(STEXT,2490) IX5,A2,QT(IWR),A1,QM(IWR)
                STEXT = new StringBuilder("(  )  HEIZKOND.RUECKL. IN KOND.KUEHLER" + IX5.ToString().PadLeft(2) + "       " +Math.Round(A2,2).ToString().PadLeft(7) +
                    QT[IWR] + " /" + Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
            //2490 FORMAT("(  )  HEIZKOND.RUECKL. IN KOND.KUEHLER",I2, 7X,F7.2,A," /",F10.3,A)

            L1 = L1 + 1;
            if (L1 > L2) sw16.WriteLine(" {0}", STEXT);
            if (L1 > L2) goto label2360;
            L = IWT[L1];
            p = STEXT.ToString();
            UWA057 (L,ref p);
            STEXT = new StringBuilder(p);
            sw16.WriteLine(" {0}", STEXT);

            goto label2360;

        label2500:
            if (IHENDE == INENDE) goto label2700;
            IZ2 = 0;
            IZ1 = IHENDE + 1;
            
            for(I = IZ1; I <= INENDE; I++)  //DO 2540 I=IZ1,INENDE
            {
                if (NTYP[I] != 10) continue;
                II = N1[I];
                IX3 = 0;
                
                for(M = 1; M <= IHENDE; M++)    //DO 2510 M=1,IHENDE
                {
                    if (LTYP[M] != 1 && LTYP[M] != 2 && LTYP[M] != 21) 
                        continue;
                    IX3 = IX3 + 1;
                    JJ = N1[M];
                    if (PLTG[II] == PLTG[JJ]) goto label2520;
                }   //2510 CONTINUE
                continue;
                
            label2520:
                A1 = GLTG[II]*TX3;
                //WRITE(STEXT,2530) IX3,A1,QM(IWR)
                STEXT = new StringBuilder("(  )  FREMDDAMPF AUS A" + IX3.ToString().PadLeft(1) + "          " + Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
                //2530 FORMAT("(  )  FREMDDAMPF AUS A",I1,10X,F10.3,A )
                IZ2 = IZ2 + 1;
                L1 = L1 + 1;
                if (L1 > L2) sw16.WriteLine(" {0}", STEXT);
                if (L1 > L2) continue;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057 (L,ref p);
                STEXT = new StringBuilder(p);
                sw16.WriteLine(" {0}", STEXT);
            }   //2540 CONTINUE

            if (IZ2 == 0) goto label2700;
            for(IX1 = IZ1; IX1 <= INENDE; IX1++)    //DO 2670 IX1=IZ1,INENDE
            {
                if (NTYP[IX1] != 10) continue;
                JJ = N2[IX1];
                IX3 = 0;
                
                for(I = 1; I <= IHENDE; I++)    //DO 2610 I=1,IHENDE
                {
                    if (LTYP[I] == 1 || LTYP[I] == 2 || LTYP[I] == 21) IX3 = IX3 + 1;
                    if (NTYP[I] != 0 && NTYP[I] != 1 && NTYP[I] != 8) continue;
                    
                    for(M = 1; M <= 8; M++)     //DO 2600 M=1,8
                        if (JJ == NBLTG[I,M]) 
                            goto label2620;     //2600 CONTINUE
                }   //2610 CONTINUE
                continue;
                
            label2620:
                A1 = GLTG[JJ]*TX3;
                A2 = VISUM(PLTG[JJ],ELTG[JJ],23);
                A2 = (A2-273.15)*TX0+TX5;
                if (NTYP[I] == 0) //WRITE(STEXT,2630) A2,QT[IWR],A1,QM[IWR];
                    STEXT = new StringBuilder("(  )  FREMDKOND.RUECKL. IN KONDENSATOR          " + Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] + " /" +
                        Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);

                if (NTYP[I] == 1) //WRITE(STEXT,2640) A2,QT[IWR],A1,QM[IWR];
                    STEXT = new StringBuilder("(  )  FREMDKOND.RUECKL. IN SPEISEWASSERBEHAELTER" + Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] + " /" +
                        Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
                
                if (NTYP[I] == 8 && IX3 == 0) //WRITE(STEXT,2650) A2,QT[IWR],A1, QM[IWR];
                    STEXT = new StringBuilder("(  )  FREMDKOND.RUECKL. NACH KOND.PUMPE         " + Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] + " /" +
                        Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
                
                IX4 = IX3 + 1;
                
                if (NTYP[I] == 8 && IX3 > 0)    //WRITE(STEXT,2660) IX3,IX4,A2,QT[IWR],A1,QM[IWR]
                    STEXT = new StringBuilder("(  )  FREMDKOND.RUECKL. ZWISCHEN A " + IX3.ToString().PadLeft(1) + " UND A" + IX4.ToString().PadLeft(1) + "      " +
                        Math.Round(A2,2).ToString().PadLeft(7) + QT[IWR] + " /" + Math.Round(A1,3).ToString().PadLeft(10) + QM[IWR]);
                
                
                //2630 FORMAT("( ) FREMDKOND.RUECKL. IN KONDENSATOR ",F7.2
                //1,A ," /",F10.3, A )
                //2640 FORMAT("( ) FREMDKOND.RUECKL. IN SPEISEWASSERBEHAELTER",F7.2
                //1,A ," /",F10.3, A )
                //2650 FORMAT("( ) FREMDKOND.RUECKL. NACH KOND.PUMPE ",F7.2
                //1,A ," /",F10.3, A )
                //2660 FORMAT("( ) FREMDKOND.RUECKL. ZWISCHEN A",I1," UND A",I1,6X,
                //1F7.2,A ," /",F10.3, A )

                L1 = L1 + 1;
                if (L1 > L2) sw16.WriteLine(" {0}", STEXT);
                if (L1 > L2) continue;
                L = IWT[L1];
                p = STEXT.ToString();
                UWA057 (L,ref p);
                STEXT = new StringBuilder(p);
                sw16.WriteLine(" {0}", STEXT);
            }   //2670 CONTINUE

        label2700:
            L1 = L1 + 1;
            if (L1 > L2) goto label3000;
            
            for(M = L1; M <= L2; M++)   //DO 2720 M=L1,L2
            {
                L = IWT[M];
                STEXT = new StringBuilder("                                                                                               ");
                p = STEXT.ToString();
                UWA057 (L,ref p);
                STEXT = new StringBuilder(p);
                sw16.WriteLine(" {0}", STEXT);
            }   //2720 CONTINUE

        label3000:
            sw16.WriteLine("0(  )  WAERMESCHALTPLAN NR.");
            //3010 FORMAT(1H0,"(  )  WAERMESCHALTPLAN NR.")
            
            if (NUMMER == "     ")      goto label3100;
            
            sw16.WriteLine("+                            {0}-WT-TDT-{1} {2}", NRPROJ,NUMMER,NINDEX);
            //3020 FORMAT(1H+,28X,A ,"-WT-TDT-",A ,1X,A2)

        label3100:
            sw16.WriteLine("0(  )  WAERMEVERBRAUCH");
            //3110 FORMAT(1H0,"( ) WAERMEVERBRAUCH")
            A1 = QVERBR*TX4;
            
            if (IWR == 1) A1 = A1*3.6;
            A2 = PULEIS/859.845;
            if (A2 > 0.0) A1 = A1*ARBTA[1]/(ARBTA[1]+A2);
            IX1 = 0;
            if (A2 > 0.0) IX1 = 1;
            if (LLTG[14] > 1) IX1 = IX1 + 2;
            if (IX1 == 0) sw16.WriteLine("+                        WT = (Q FD + Q ZUE)/P KL ={0} {1}", Math.Round(A1,1).ToString().PadLeft(7),QW[IWR]);
            if (IX1 == 1) sw16.WriteLine("+                        WT = (Q FD + Q ZUE)/(P KL + P SPT) ={0}{1}", Math.Round(A1,1).ToString().PadLeft(7),QW[IWR]);
            if (IX1 == 2) sw16.WriteLine("+                        WT = Q FD / P KL ={0}{1}", Math.Round(A1,1).ToString().PadLeft(7),QW[IWR]);
            if (IX1 == 3) sw16.WriteLine("+                        WT = Q FD / ( P KL + P SPT ) ={0}{1}", Math.Round(A1,1).ToString().PadLeft(7),QW[IWR]);
            
            //3120 FORMAT(1H+,24X,"WT = (Q FD + Q ZUE)/P KL =",F7.1,1X,A )
            //3130 FORMAT(1H+,24X,"WT = (Q FD + Q ZUE)/(P KL + P SPT) =",F7.1,A )
            //3140 FORMAT(1H+,24X,"WT = Q FD / P KL =",F7.1,A )
            //3150 FORMAT(1H+,24X,"WT = Q FD / ( P KL + P SPT ) =",F7.1,A )
            
            if (ETAGE[1] == 1.0) goto label3600;
            sw16.WriteLine("0");
            sw16.WriteLine("       GENERATORDATEN");
            sw16.WriteLine("0(  )  GENERATORWIRKUNGSGRAD ={0} %", Math.Round(ETAGE[1]*100.0,2).ToString().PadLeft(6));
            //3510 FORMAT(1H0,"( ) GENERATORWIRKUNGSGRAD =",F6.2," %")
            
            if (ETAGET[1] > 0.0) goto label3600;
            if (ETAPKT[1,1] == 0.0) goto label3600;

            sw16.WriteLine("(  )  GENERATORKURVE :  4/4-LAST ={0} MW    ETA (4/4,3/4,2/4,1/4) ={1}/{2}/{3}/{4} %",
                Math.Round(TNPKT[1,1],1).ToString().PadLeft(6), Math.Round(ETAPKT[1,1]*100.0,2).ToString().PadLeft(6),
                Math.Round(ETAPKT[2,1]*100.0,2).ToString().PadLeft(6), Math.Round(ETAPKT[3,1]*100.0,2).ToString().PadLeft(6),
                Math.Round(ETAPKT[4,1]*100.0,2).ToString().PadLeft(6));

            //3520 FORMAT(1H0,"( ) GENERATORKURVE : 4/4-LAST =",F6.1," MW ETA  (4/4,3/4,2/4,1/4) =",3(F6.2,1H/),F6.2," %")
            
        label3600:
            if (ETABA[1] <= 0.0) goto label4500;

            sw16.WriteLine("0\n");
            sw16.WriteLine("       TURBINENDATEN");
            sw16.WriteLine("0           GEHAEUSE       VENTILE C-VENT  PSIG-TRO              ETA-WB/ETA-BA       C-AX   W-AB");
            sw16.WriteLine("                                    {0}                              %            {1} {2}   ", QG[IWR].PadLeft(5),
                QG[IWR].PadLeft(5),QE[IWR].PadLeft(8));
            //4010 FORMAT(1H0,11X,"GEHAEUSE VENTILE C-VENT",2X,"PSIG-TRO",14X,"ETA-WB/ETA-BA",7X,"C-AX W-AB"/36X,A5,30X,"%",12X,A5,2X,A8/)

            QPAR = false;
            IZ2 = 0;
            IX5 = 0;
            JJ = NTTETB[1];
            
            for(int IZ6 = 1; IZ6 <= JJ; IZ6++)  //DO 4400 IZ6 = 1,JJ
            {
                J = IZ6;
                IX6 = 2;
                STEXT = new StringBuilder("                                                                                                                             ");
                //STEXT(1:6) = "(  )  ";
                STEXT.Insert(0,"(  )  ");
                if (J == 1) STEXT.Insert(6, "HD   ");
                if (J == 2) STEXT.Insert(6, "MD   ");
                if (J == 2 && JJ == 4) 
                    STEXT.Insert(6,"MD1  ");
                if (J == 3) STEXT.Insert(6,"MD2  ");
                if (J == JJ) STEXT.Insert(6,"ND  ");
                IX1 = J;
                if (J > 1 && JJ < 4) IX1 = 3;
                if (J == JJ) IX1 = 4;
                
                if (TURBM[1,IX1].Substring(0,10) == "SONDERMOD.") 
                    goto label4100;
                if (J == JJ) goto label4030;
                if (TURBM[1,IX1].Substring(1,2) == "  ")
                    goto label4100;
                
                //STEXT(12:12) 
                STEXT.Remove(11,1);
                STEXT.Insert(11, TURBM[1,IX1].Substring(0,1));
                
                //STEXT(13:14) = "  "
                STEXT.Remove(12,2);
                STEXT.Insert(12,"  ");

                //STEXT(15:16) = 
                STEXT.Remove(14,2);
                STEXT.Insert(14,TURBM[1,IX1].Substring(1,2));

                //STEXT(17:17) = "-"
                STEXT.Remove(16,1);
                STEXT.Insert(16,"-");

                //STEXT(18:20) 
                STEXT.Remove(17,3);
                STEXT.Insert(17,TURBM[1,IX1].Substring(3,3));
                goto label4100;
                
            label4030:
                if (TURBM[1,IX1].Substring(0,2) == "  ")   goto label4100;
                //STEXT (12:14) = "N "
                STEXT.Remove(11,3);
                STEXT.Insert(11,"N  ");
                
                //STEXT (15:16) 
                STEXT.Remove(14,2);
                STEXT.Insert(14, TURBM[1,IX1].Substring(0,2));
                
                //STEXT (17:17) = " "
                STEXT.Remove(16,1);
                STEXT.Insert(16," ");
                
                //STEXT (18:18) 
                STEXT.Remove(17,1);
                STEXT.Insert(17,TURBM[1,IX1].Substring(2,1));
                
                //STEXT (19:19) = "X"
                STEXT.Remove(18,1);
                STEXT.Insert(18,"X");
                
                //STEXT (20:21) = 
                STEXT.Remove(19,2);
                STEXT.Insert(19, TURBM[1,IX1].Substring(3,2));
                
                //STEXT (22:22) = "."
                STEXT.Remove(21,1);
                STEXT.Insert(21,".");
                
                //STEXT (23:23) = 
                STEXT.Remove(22,1);
                STEXT.Insert(22, TURBM[1,IX1].Substring(5,1));
                
                //STEXT (24:24) = "-"
                STEXT.Remove(23,1);
                STEXT.Insert(23,"-");
                
                //STEXT (25:25) = 
                STEXT.Remove(24,1);
                STEXT.Insert(24, TURBM[1,IX1].Substring(6,1));

            label4100:
                UWA006("RDISC", 52,J);
                UWA006("RDISC", 59,J);
                KT9VOR = 0;
                IX3 = 0;
                II = ITTEND[J];
                I = 0;
                
            label4110:
                I = I + 1;
                if (I > II) goto label4170;
                UWA010(I,1);
                if (KT7 == 1 || KT7 == 3 || KT7 == 5 || KT7 == 7) goto label4110;
                if (KT7 != 2) goto label4150;
                KT7VOR = UWA011(I+1,7);
                L1 = 5;
                if (KT7VOR == 3) L1 = NADUES;
                K1 = 0;
                A2 = 0.0;
                
                for(L = 1; L <= L1; L++)    //DO 4120 L=1,L1
                {
                    A2 = A2 + Math.Pow((VENDUR[L]/1000.0),2.0)*3.14159/4.0;
                    if (VENDUR[L] > 0.0) 
                        K1 = K1 + 1;
                }   //4120 CONTINUE

                if (A2 <= 0.0) goto label4150;
                if (VENDUR[1] == 0.0) K1 = K1 + 1;
                K2 = (int)VENDUR[K1];
                
                //WRITE (S,"(I1,""X"",I4)") K1,K2
                S = K1.ToString().PadLeft(1) + "X" + K2.ToString().PadLeft(4);
                
                //STEXT (27:32) = S
                STEXT.Remove(26,6);
                STEXT.Insert(26,S);
                
                if (KT7VOR == 3 && K == 2) goto label4150;
                A1 = CVENT[1]*TX6;
                //WRITE (S,840) A1
                S = Math.Round(A1,1).ToString().PadLeft(6);
                //STEXT(35:40) = S
                STEXT.Remove(34,6);
                STEXT.Insert(34,S);
                goto label4110;

            label4150:
                if (KT9 == KT9VOR) goto label4110;
                KT9VOR = KT9;
                IX2 = IX3 + 1;
                IX3 = IX3 + (int)NZTROM[KT9];
                IX4 = 0;
                
                for(IX1 = IX2; IX1 <= IX3; IX1++)   //DO 4160 IX1 = IX2,IX3
                {
                    IX4 = IX4 + 1;
                    ZNIND[IX1] = PSIGMT[KT9,IX4];
                }   //4160 CONTINUE
                goto label4110;
                
            label4170:
                if (IX3 > 5) IX3 = 5;
                S = "";
                
                for(int i = 1; i <= IX3; i++)
                    S = S + Math.Round(ZNIND[i],1).ToString().PadLeft(4);
                
                //WRITE (S,"(5F4.1)") (ZNIND[IX1],IX1=1,IX3);
                
                //STEXT (42:61) = S;
                STEXT.Remove(41,20);
                STEXT.Insert(41,S);

                //WRITE (S,"(F6.2,""/"",F5.2)")
                S = Math.Round(ETAWB[KT9]*100.0,2).ToString().PadLeft(6) + "/" + Math.Round(ETABA[KT6]*100.0,2).ToString().PadLeft(5);
                //STEXT (65:76) = S;
                STEXT.Remove(64,12);
                STEXT.Insert(64, S);
                
                if (J != NTTETB[KT10]) goto label4300;
                if (KT10 > 1 && STZNDT[KT10] == 0) goto label4300;

                //WRITE (S,"(F7.1,2X,F5.1)") 
                S = Math.Round(CAXT[KT10]*TX6,1).ToString().PadLeft(7) + "  " + Math.Round(WABB[KT6]*TX1,1).ToString().PadLeft(5);
                //STEXT (83:96) = S;
                STEXT.Remove(82,14);
                STEXT.Insert(82, S);

            label4300:
                sw16.WriteLine(" {0}", STEXT);
                if (ANZTRB == 1)
                    continue;       //goto label4400;
                if (IX6 > ANZTRB)
                    continue;       //goto label4400;
                if (QPAR) goto label4330;
                
                for(IZ1 = IX6; IZ1 <= ANZTRB; IZ1++)    //DO 4320 IZ1=IX6,ANZTRB
                {
                    IZ2 = NRMVAE[IZ1];
                    UWA008("UNPACK", ILTG[IZ2], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 > 0) goto label4310;
                    IZ2 = LVAR[IZ1];
                    UWA008("UNPACK", ILTG[IZ2], ref IX1, ref IX2, ref IX3, ref IX4);
                    
                label4310:
                    if (IX3 != J)   continue;
                    IZ2 = NTTETB[IZ1-1];
                    IZ3 = NTTETB[IZ1];
                    if (NITRE[IZ1] == 8 || NITRE[IZ1] == 9) goto label4330;
                }   //4320 CONTINUE
                continue;

            label4330:
                IZ2 = IZ2 + 1;
                QPAR = false;
                if (IZ3 > IZ2) QPAR = true;
                if (!QPAR) IX6 = IX6 + 1;
                STEXT = new StringBuilder("                                                                            ");
                STEXT.Remove(0,6);
                STEXT.Insert(0, "(  )  ");
                
                if (J == 1)     //STEXT (7:11) = "HD.1 ";
                {
                    STEXT.Remove(6,5);
                    STEXT.Insert(6, "HD.1 ");
                }
                if (J == 2)     //STEXT (7:11) = "MD.1 ";
                {
                    STEXT.Remove(6,5);
                    STEXT.Insert(6, "MD.1 ");
                }
                if (J == 2 && JJ == 4) //STEXT ( 7:11) = "MD1.1";
                {
                    STEXT.Remove(6,5);
                    STEXT.Insert(6, "MD1.1");
                }
                if (J == 3)     //STEXT(7:11) = "MD2.1";
                {
                    STEXT.Remove(6,5);
                    STEXT.Insert(6, "MD2.1");
                }
                if (J == JJ)    //STEXT(7:11) = "ND.1 ";
                {
                    STEXT.Remove(6,5);
                    STEXT.Insert(6, "ND.1 ");
                }
                if (J == JJ && STZNDT[IZ1] != 0) IX5 = IX5 + 1;
                if (J == JJ && STZNDT[IZ1] != 0 && IX5 == 1)    //STEXT(7:11) = "ND.1 ";
                {
                    STEXT.Remove(6,5);
                    STEXT.Insert(6, "ND.1 ");
                }
                if (J == JJ && STZNDT[IZ1] != 0 && IX5 == 2)    //STEXT(7:11) = "ND.2 ";
                {
                    STEXT.Remove(6,5);
                    STEXT.Insert(6, "ND.2 ");
                }
                if (J == JJ && STZNDT[IZ1] != 0 && IX5 == 3)    //STEXT(7:11) = "ND.3 ";
                {
                    STEXT.Remove(6,5);
                    STEXT.Insert(6, "ND.3 ");
                }
                IX1 = J;
                if (J > 1 && JJ < 4) IX1 = 3;
                if (J == JJ) IX1 = 4;

                if (TURBM[1,IX1].Substring(0,10) == "SONDERMOD.")
                    goto label4340;
                if (J == JJ) goto label4335;
                
                if (TURBM[1,IX1].Substring(1,2) == "  ") 
                    goto label4340;
                
                //STEXT (12:12) = 
                STEXT.Remove(11,1);
                STEXT.Insert(11, TURBM[1,IX1].Substring(0,1));

                //STEXT (13:14) = " ";
                STEXT.Remove(12,2);
                STEXT.Insert(12, "  ");

                //STEXT (15:16) = TURBM(1,IX1)(2:3);
                STEXT.Remove(14,2);
                STEXT.Insert(14, TURBM[1,IX1].Substring(1,2));

                //STEXT (17:17) = "-";
                STEXT.Remove(16,1);
                STEXT.Insert(16, "-");

                //STEXT (18:20) = 
                STEXT.Remove(17,3);
                STEXT.Insert(17, TURBM[1,IX1].Substring(3,3));
                goto label4100;
                
            label4335:
                if (TURBM[1,IX1].Substring(0,2) == "  ")
                    goto label4340;
                //STEXT (12:14) = "N ";
                STEXT.Remove(12,3);
                STEXT.Insert(12, "N  ");
                
                //STEXT (15:16) 
                STEXT.Remove(14,2);
                STEXT.Insert(14, TURBM[1,IX1].Substring(0,2));

                //STEXT (17:17) = " ";
                STEXT.Remove(16,1);
                STEXT.Insert(16, " ");
                
                //STEXT (18:18) 
                STEXT.Remove(17,1);
                STEXT.Insert(17, TURBM[1,IX1].Substring(2,1));
                
                //STEXT (19:19) = "X";
                STEXT.Remove(18,1);
                STEXT.Insert(18, "X");
                
                //STEXT (20:21) 
                STEXT.Remove(19,2);
                STEXT.Insert(19, TURBM[1,IX1].Substring(3,2));

                //STEXT (22:22) = ".";
                STEXT.Remove(21,1);
                STEXT.Insert(21, ".");

                //STEXT (23:23) = 
                STEXT.Remove(22,1);
                STEXT.Insert(22, TURBM[1,IX1].Substring(5,1));

                //STEXT (24:24) = "-";
                STEXT.Remove(23,1);
                STEXT.Insert(23, "-");

                //STEXT (25:25) 
                STEXT.Remove(24,1);
                STEXT.Insert(24, TURBM[1,IX1].Substring(6,1));
                
            label4340:
                J = IZ2;
                goto label4100;
            }   //4400 CONTINUE

        label4500:
            sw16.WriteLine("0");
            sw16.WriteLine(" GEPRUEFT     DATUM:              UNTERSCHRIFT:");
            sw16.WriteLine("                    ............               ....................");
            goto label100;
        }   //END

                
        static void UWA057(int L, ref string STEXT)
        {
            //ENTRY PRINTW (L,STEXT)
            //CHARACTER * 132 STEXT
            string S;
            StringBuilder sb;
            int I1 = 0, I2 = 0, I3 = 0, I4 = 0, N = 0, LL = 0;
            if (L > 0)      goto label100;

            I1 = 0;
            I2 = 0;
            I3 = 0;
            I4 = 0;
            return;
            
        label100:
            N = NTYP[L];
            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            
            if (N == 12) goto label110;

            LL = N1[L];
            A5 = PLTG[LL];
            A6 = DPLTG[LL];
            A1 = A6/A5*100.0;
            IX5 = 0;
            
            if (KATZE1[L] == 0 || KATZE1[L] == 2 || KATZE1[L] == 4) 
                goto label110;

            A7 = UW0011(A5,1);
            A8 = A5 - A6;
            A9 = UW0011(A8,1);
            A1 = (A7-A9)*TX0;
            IX5 = 1;
            
        label110:
            if (N == 1) goto label120;
            A2 = DTS[L]*TX0;
            if (N == 5 || N == 12) goto label120;
            A3 = DTK[L]*TX0;

        label120:
            if (N == 12) goto label220;
            UWA008("UNPACK", ILTG[LL], ref IX6, ref IX7, ref IX8, ref IX9);
            if (IX7 > 0) goto label150;
            IZ5 = LL;
            
        label130:
            for(int M = 1; M <= INENDE; M++)    //DO 140 M=1,INENDE
            {
                if (IZ5 == NN1[M]) goto label170;
                if (IZ5 != N2[M] && IZ5 != NN2[M]) continue;
                if (M <= IHENDE) IZ5 = N1[M];
                if (M <= IHENDE && NTYP[M] == 1) goto label170;
                if (M > IHENDE) IZ5 = NN1[M];
                if (M > IHENDE && NTYP[M] == 5) IZ5 = N1[M];
                if (IZ5 == 0) goto label170;
                UWA008("UNPACK", ILTG[IZ5], ref IX6, ref IX7, ref IX8, ref IX9);
                if (IX7 > 0) goto label150;
                goto label130;
            }   //140 CONTINUE
            goto label170;
            
        label150:
            UWA006("RDISC", 52,IX8);
            UWA006("RDISC", 59,IX8);
            UWA010(IX9,1);
            UWA006("RDISC", 56,KT9);
            
            if (TAFDP[KT14] <= 0.0) goto label170;
            UWA044(IX9,1);
            A5 = 0.0;
            
            for(IX10 = 1; IX10 <= 10; IX10++)   //DO 160 IX10 = 1,10
            {
                IZ10 = LABT[IX10];
                if (IZ10 == 0) continue;
                if (IZ10 < 41) A5 = A5 + GLTG[IZ10];
            }   //160 CONTINUE
            A6 = VISUM(PT[IX9,K],T2T[IX9],00);
            
            if (KT14 == 1) Z1 = HS1MIN[6];
            if (KT14 == 2) Z1 = HS1MAX[6];
            if (KT14 == 3) Z1 = HSZMIN[6];
            if (KT14 == 4) Z1 = HSZMAX[6];
            if (KT14 == 5) Z1 = TAKF1 [6];
            if (Z1 == 0.0) Z1 = 1.0;
            A4 = A5*A6*TAFDP[KT14]/Math.Sqrt(Z1)/3.6*TX6;
            
        label170:
            if (N == 2 || N == 21) goto label210;
            if (N == 1) goto label190;

            I3 = I3 + 1;
            //STEXT ( 95: 95) = "E";
            sb = new StringBuilder(STEXT);
            sb.Remove(94,1);
            sb.Insert(94,"E");
            STEXT = sb.ToString();

            //WRITE (S,"[I1]") I3;
            S = I3.ToString().PadLeft(1);
            
            //STEXT ( 96: 96) = S;
            sb = new StringBuilder(STEXT);
            sb.Remove(95,1);
            sb.Insert(94, S);
            STEXT = sb.ToString();
            
            //WRITE (S,"(F7.2)") A1;
            S = Math.Round(A1,2).ToString().PadLeft(7);
            
            //STEXT ( 97:103) = S;
            sb = new StringBuilder(STEXT);
            sb.Remove(96,7);
            sb.Insert(96,S);
            STEXT = sb.ToString();

            if (IX5 == 0)   
            {
                //STEXT (104:105) = " %";
                sb = new StringBuilder(STEXT);
                sb.Remove(103,2);
                sb.Insert(103," %");
                STEXT = sb.ToString();
            }
            if (IX5 == 1) 
            {
                //STEXT (104:105) = " K";
                sb = new StringBuilder(STEXT);
                sb.Remove(103,2);
                sb.Insert(103," K");
                STEXT = sb.ToString();
            }
            //WRITE (S,"(F8.2)") A4;
            S = Math.Round(A4,2).ToString().PadLeft(8);
            
            if (A4 > 0.0) 
            {
                //STEXT (106:113) = S;
                sb = new StringBuilder(STEXT);
                sb.Remove(105, 8);
                sb.Insert(105, S);
                STEXT = sb.ToString();
            }
            //WRITE (S,"(F8.2)") A2;
            S = Math.Round(A2,2).ToString().PadLeft(8);
            //STEXT (114:121) = S;
            sb = new StringBuilder(STEXT);
            sb.Remove(113,8);
            sb.Insert(113,S);
            STEXT = sb.ToString();
            return;

        label190:
            I1 = I1 + 1;
            //STEXT ( 95: 95) = "A";
            sb = new StringBuilder(STEXT);
            sb.Remove(94,1);
            sb.Insert(94,"A");
            STEXT = sb.ToString();
            
            //WRITE (S,"[I1]") I1;
            S = I1.ToString().PadLeft(1);
            
            //STEXT ( 96: 96) = S;
            sb = new StringBuilder(STEXT);
            sb.Remove(95,1);
            sb.Insert(95,S);
            STEXT = sb.ToString();

            //WRITE (S,"(F7.2)") A1;
            S = Math.Round(A1,2).ToString().PadLeft(7);
            //STEXT ( 97:103) = S;
            sb = new StringBuilder(STEXT);
            sb.Remove(96,7);
            sb.Insert(96,S);
            STEXT = sb.ToString();

            if (IX5 == 0) 
            {
                //STEXT (104:105) = " %";
                sb = new StringBuilder(STEXT);
                sb.Remove(103,2);
                sb.Insert(103," %");
                STEXT = sb.ToString();
            }
            if (IX5 == 1) 
            {
                //STEXT (104:105) = " K";
                sb = new StringBuilder(STEXT);
                sb.Remove(103,2);
                sb.Insert(103," K");
                STEXT = sb.ToString();
            }
            //WRITE (S,"(F8.2)") A4;
            S = Math.Round(A4,2).ToString().PadLeft(8);
            if (A4 > 0.0) 
            {
                //STEXT (106:113) = S;
                sb = new StringBuilder(STEXT);
                sb.Remove(105,8);
                sb.Insert(105, S);
                STEXT = sb.ToString();
            }
            return;

        label210:
            I1 = I1 + 1;
            if (L > IHENDE) I4 = I4 + 1;
            //WRITE (S,"(F7.2)") A1
            S = Math.Round(A1,2).ToString().PadLeft(7);
            
            //STEXT ( 97:103) = S
            sb = new StringBuilder(STEXT);
            sb.Remove(96,7);
            sb.Insert(96,S);
            STEXT = sb.ToString();
            
            if (IX5 == 0) 
            {
                //STEXT (104:105) = " %"
                sb = new StringBuilder(STEXT);
                sb.Remove(103,2);
                sb.Insert(103," %");
                STEXT = sb.ToString();
            }
            if (IX5 == 1) 
            {
                //STEXT (104:105) = " K"
                sb = new StringBuilder(STEXT);
                sb.Remove(103,2);
                sb.Insert(103," K");
                STEXT = sb.ToString();
            }
            if (L <= IHENDE) 
            {
                //STEXT ( 95: 95) = "A"
                sb = new StringBuilder(STEXT);
                sb.Remove(94,1);
                sb.Insert(94,"A");
                STEXT = sb.ToString();
            }
            //WRITE (S,"[I1]") I1
            S = I1.ToString().PadLeft(1);

            if (L <= IHENDE) 
            {
                //STEXT ( 96: 96) = S
                sb = new StringBuilder(STEXT);
                sb.Remove(95,1);
                sb.Insert(95,"S");
                STEXT = sb.ToString();
            }
            if (L > IHENDE) 
            {
                //STEXT ( 95: 95) = "H"
                sb = new StringBuilder(STEXT);
                sb.Remove(94,1);
                sb.Insert(94,"H");
                STEXT = sb.ToString();
            }
            //WRITE (S,"[I1]") I4
            S = I4.ToString().PadLeft(1);
            
            if (L > IHENDE) 
            {
                //STEXT ( 96: 96) = S
                sb = new StringBuilder(STEXT);
                sb.Remove(95,1);
                sb.Insert(95,"S");
                STEXT = sb.ToString();
            }
            //WRITE (S,"(F8.2)") A4
            S = Math.Round(A4,2).ToString().PadLeft(8);

            if (A4 > 0.0) 
            {
                //STEXT (106:113) = S
                sb = new StringBuilder(STEXT);
                sb.Remove(105,8);
                sb.Insert(105,S);
                STEXT = sb.ToString();
            }
            //WRITE (S,"(F8.2)") A2
            S = Math.Round(A2,2).ToString().PadLeft(8);
            //STEXT (114:121) = S
            sb = new StringBuilder(STEXT);
            sb.Remove(113,8);
            sb.Insert(113,S);
            STEXT = sb.ToString();
            
            //WRITE (S,"(F8.2)") A3
            S = Math.Round(A3,2).ToString().PadLeft(8);
            
            if (A3 != 0.0) 
            {
                //STEXT (122:129) = S
                sb = new StringBuilder(STEXT);
                sb.Remove(121,8);
                sb.Insert(121,S);
                STEXT = sb.ToString();
            }
            return;

        label220:
            I2 = I2 + 1;
            //STEXT ( 95: 95) = "K";
            sb = new StringBuilder(STEXT);
            sb.Remove(94,1);
            sb.Insert(94,"K");
            STEXT = sb.ToString();

            //WRITE (S,"[I1]") I2;
            S = I2.ToString().PadLeft(1);
            
            //STEXT (96:96) = S;
            sb = new StringBuilder(STEXT);
            sb.Remove(95,1);
            sb.Insert(95,S);
            STEXT = sb.ToString();
            
            //WRITE (S,"(F8.2)") A2;
            S = Math.Round(A2,2).ToString().PadLeft(8);
            
            //STEXT (122:129) = S;
            sb = new StringBuilder(STEXT);
            sb.Remove(121,8);
            sb.Insert(121,S);
            STEXT = sb.ToString();
            return;
        }   //END
        

        static void UWA060()
        {
            //ENTRY DIMORG
            int[] ISTF1N = new int[16], ISTF2N = new int[16], ISTF3N = new int[16], ISTF1A = new int[16], ISTF2A = new int[16], ISTF3A = new int[16],
                IKT4N = new int[76], IKT14N = new int[76], IKT15N = new int[76], ILTGZ = new int[47];
            double[] OEFEND = new double[5];
            int ITTEAK = 0, nn = 0;
            double H0AV = 0, H0TV = 0, C2GAV = 0, C2GTV = 0, DFAKAV = 0, DFAKTV = 0, PSTFV = 0, TSTFV = 0, ETAOV = 0, ETAUV = 0,
                PSIV = 0, ETAIV = 0, PHIV = 0;
            

            for(JJ = 1; JJ <= ANZDTT; JJ++)     //DO 500 JJ=1,ANZDTT
            {
                JANF =0;
                UWA006("RDISC", 52,JJ);
                UWA006("RDISC", 59,JJ);
                LIGHT[10]=0;
                
                if (LIGHT[3] == 2) 
                    UWA012();
                
                for(J = 1; J <= ANZDGR; J++)    //DO 250 J=1,ANZDGR
                {
                    UWA008("UNPACK", ISTFGR[J], ref IX1, ref IX2, ref IX3, ref IX4);

                    if ((IX3 - JJ) < 0) continue;
                    if ((IX3-JJ) == 0)   goto label25;
                    if ((IX3-JJ) > 0)   goto label300;
                    
                label25:
                    IZ1 =IX4;
                    if (J == ANZDGR) goto label30;
                    UWA008("UNPACK", ISTFGR[J + 1], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX3 != JJ ) goto label30;
                    IZ3 =IX4-1;
                    goto label40;
                    
                label30:
                    IZ3 =ITTEND[JJ];
                    
                label40:    // CONTINUE
                    IZ2 =IZ3;
                    
                label50:
                    UWA010(IZ2,1);
                    if (KT7 == 4 || KT7 == 9) goto label60;
                    IZ2 =IZ2-1;
                    goto label50;
                    
                label60:
                    ISTF1A[J]= IZ1;
                    ISTF2A[J]= IZ2;
                    ISTF3A[J]= IZ3;
                    
                    UWA006("RDISC", 56,J);
                    UWA006("RDISC", 53,J);
                    if (STZNDT[KT10] != 0 && NTTETB[KT10] == KT6) goto label500;
                    if(TALMIN[1] == 0.0) goto label500;

                    if (JANF != 0) goto label70;

                    JANF =ISTF1A[J];
                    ITTEAK= ITTEND[JJ];
                    UWA010(ITTEAK,1);

                    if (KT6 != NTTETB[KT10]) goto label61;

                    I = ITTEAK;
                    H0AV = XH0[I];
                    H0TV = YH0[I];
                    C2GAV = XC2GES[I];
                    C2GTV = YC2GES[I];
                    DFAKAV= XDFAKT[I];
                    DFAKTV= YDFAKT[I];
                    PSTFV = PSTFMX[I];
                    TSTFV = TSTFMX[I];
                    ETAOV = ETAIOP[I];
                    ETAUV = ETAUOP[I];
                    PSIV = PSI[I];
                    ETAIV = ETAI[I];
                    PHIV = PHI[I];

                    if (LSZ[KT10] == 0.0) goto label61;
                    I = ITTEAK - 1;
                    OEFEND[KT10] = OEFFNG[I];
                    
                label61:
                    for(I = IZ1; I <= ITTEAK; I++)  //DO 65 I=IZ1,ITTEAK
                    {
                        UWA010(I,1);
                        KT4 =0;
                        KT14 =0;
                        KT15 =0;

                        if (KT5 == 0) goto label1060;
                        if (KT12 != 0) goto label1060;
                        UWA044(I,1);
                        
                        for(IX8 = 1; IX8 <= 10; IX8++)  //DO 1100 IX8=1, 10
                        {
                            if (LABT[IX8] == 0) continue;
                            if (LABT[IX8] > 46) continue;
                            IX6 = LABT[IX8];
                            if (NRTRB[IX6] == 0) continue;

                            UWA008("UNPACK", NRTRB[IX6], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
                            if (NRTRB[IX6] < 0 && IZ4 == 0 && STWRT1 != 1) 
                                KT12 = 1;
                            if (NRTRB[IX6] > 0 && IZ4 == 0) KT12 = 1;
                        }   //1100 CONTINUE
                        
                    label1060:
                        UWA010(I,2);
                        OEFFNG[I]=0.0;
                        STFDI [I]=0.0;
                        BRTLE [I]=0.0;
                        BRTLA [I]=0.0;
                        LS[I] = 0.0;
                        PSI[I] = 0.0;
                        MUKASO[I]=0;
                    }
                    
                    for(I = 1;  I <= 75; I++)   //DO 66 I=1,75
                    {
                        IKT5 [I] =0;
                        IKT11[I] =0;
                        IKT12[I] =0;
                        APT [I] =0.0;
                    }
                    goto label80;
                    
                label70:
                    JANF =JANF -ISTF2A[J-1]+ISTF3A[J-1];
                    
                label80:
                    ISTF1N[J] = (int)(JANF);
                    ISTF2N[J] = (int)(JANF+ISTF2A[J]-ISTF1A[J]);
                    ISTF3N[J] = (int)(JANF+ISTF3A[J]-ISTF1A[J]);
                    IX6 = ISTF2A[J];
                    UWA010(IX6,1);
                    
                    if (KT12 != 0) goto label1070;
                    KT12 = 1;
                    UWA010(IX6,2);

                label1070:
                    for(IX5 = 2; IX5 <= 6; IX5++)   //DO 90 IX5=2, 6
                        NUESTF[IX5]=0;
                    
                    NUESTF[1] = ISTF1A[J];
                    IX5 =2;
                    
                    for(IX8 = 1; IX8 <= 46; IX8++)  //DO 1050 IX8=1, 46
                        ILTGZ[IX8] = 0;
                    
                    for(IX6 = 1; IX6 <= 46; IX6++)      //DO 100 IX6 =1,46
                    {
                        nn = 0;
                        UWA008("UNPACK", ILTG[IX6], ref IX1, ref IX2, ref IX3, ref IX4);
                        if (IX3 != JJ ) continue;
                        if (IX4 < ISTF1A[J]) continue;
                        if (IX4 >= ISTF2A[J]) continue;
                        
                        for(IZ6 = 1; IZ6 <= 46; IZ6++)      //DO 1020 IZ6=1, 46
                        {
                            if (IZ6 == IX6) continue;
                            UWA008("UNPACK", ILTG[IZ6], ref IZ1, ref IZ2, ref IZ3, ref IZ4);
                            if (IZ3 != JJ) continue;
                            if (IZ4 == IX4) goto label1030;
                            continue;
                            
                        label1030:
                            for(IX8 = 1; IX8 <= 46; IX8++)  //DO 1040 IX8=1, 46
                                if (ILTGZ[IX8] == IX4) 
                                    nn = 1;     //1040 CONTINUE
                        }   //1020 CONTINUE
                        if (nn == 1)
                            continue;   //goto label100;
                        UWA044(IX4,1);
                        
                        for(nn = 1; nn <= 10; nn++)     //DO 1025 nn=1, 10
                            if (LABT[nn] == IX6 || LZUT[nn] == IX6) 
                                goto label1026;     //1025 CONTINUE

                        continue;
                        
                    label1026:
                        ILTGZ[IX6] = IX4;
                        NUESTF[IX5] = IX4 + 1;
                        IX5 = IX5+1;
                    }   //100 CONTINUE
                    NUESTF[IX5]= ISTF2A[J]+1;

                    IX4= IX5-1;
                    
                    for(IX3 = 1; IX3 <= IX4; IX3++)     //DO 150 IX3=1,IX4
                    {
                        IX2= IX3+1;
                        
                        for(IX1 = IX2; IX1 <= IX5; IX1++)   //DO 150 IX1= IX2,IX5
                        {
                            if(NUESTF[IX1] > NUESTF[IX3]) 
                                continue;

                            IZ1 = (int)NUESTF[IX1];
                            NUESTF[IX1]=NUESTF[IX3];
                            NUESTF[IX3]=IZ1;
                        }
                    }   //150 CONTINUE
                    int II2 = 0;
                    UWA066(II2);
                    if(KFELER == 0) goto label235;
                    sw16.WriteLine(" +++++DIMENS-ERROR1+++++ KFELER= {0}", KFELER.ToString().PadLeft(5));
                    FORERR();
                    //236 FORMAT(" +++++DIMENS-ERROR1+++++ KFELER= ",I5);
                    
                label235:
                    UWA006("WDISC", 56,J);
                    UWA006("WDISC", 53,J);
                    ISTF2N[J]= (int)JANF-1;
                    ISTF3N[J]=ISTF3A[J]+ISTF2N[J]-ISTF2A[J];
                    
                label240:
                    ITTEAK =ISTF3N[J];
                }   //250 CONTINUE

            label300:
                if (JANF == 0) goto label500;
                
                for(I = 1; I <= ITTEAK; I++)    //DO 310 I=1,ITTEAK
                {
                    UWA010(I,1);
                    IKT4N [I]=KT4;
                    IKT14N[I]=KT14;
                    IKT15N[I]=KT15;
                }
                
                for(J = 1; J <= ANZDGR; J++)    //DO 400 J=1,ANZDGR
                {
                    UWA008("UNPACK", ISTFGR[J], ref IX1, ref IX2, ref IX3, ref IX4);

                    if ((IX3 - JJ) < 0) continue;
                    if ((IX3-JJ) == 0)   goto label325;
                    if ((IX3-JJ) > 0)   goto label410;
                    
                label325:
                    UWA006("RDISC", 56,J);
                    UWA006("RDISC", 53,J);
                    
                label329:
                    if((ISTF2N[J] - ISTF2A[J]) < 0)     goto label330;
                    if((ISTF2N[J] - ISTF2A[J]) == 0)     goto label330;
                    if((ISTF2N[J] - ISTF2A[J]) > 0)     goto label340;
                
                label330:
                    IX5 =ISTF2A[J];
                    IX6 =ISTF2N[J];
                    UWA010(IX5-1,1);
                    KT7=8;
                    UWA010(IX6-1,2);
                    UWA010(IX5 ,1);
                    KT7=9;
                    UWA010(IX6 ,2);
                    
                    if(IX5 != IX6 ) goto label336;
                    goto label360;
                    
                label335:
                    if(IX5 == ITTEND[JJ]) goto label360;
                    IX5 =IX5+1;
                    IX6 =IX6+1;
                    UWA010(IX5,1);
                    UWA010(IX6,2);
                    
                label336:
                    ETAUOP[IX6]= ETAUOP[IX5];
                    ETAIOP[IX6]= ETAIOP[IX5];
                    ETAI [IX6]= ETAI [IX5];
                    VOLUME[IX6]= VOLUME[IX5];
                    PHI [IX6]= PHI [IX5];
                    PUNORM[IX6]= PUNORM[IX5];
                    PUMAX [IX6]= PUMAX [IX5];
                    T1T [IX6]= T1T [IX5];
                    T2T [IX6]= T2T [IX5];
                    DI [IX6]= DI [IX5];
                    XG [IX6]= XG [IX5];
                    XE1T [IX6]= XE1T [IX5];
                    XE2T [IX6]= XE2T [IX5];
                    XPT [IX6]= XPT [IX5];
                    XH0 [IX6]= XH0 [IX5];
                    XC2GES[IX6]= XC2GES[IX5];
                    XDFAKT[IX6]= XDFAKT[IX5];
                    goto label335;
                    
                label340:
                    IX6 =ITTEND[JJ]+ISTF3N[J]-ISTF3A[J];
                    IX5 =ITTEND[JJ];
                    
                label345:
                    ETAUOP[IX6]= ETAUOP[IX5];
                    ETAIOP[IX6]= ETAIOP[IX5];
                    ETAI [IX6]= ETAI [IX5];
                    VOLUME[IX6]= VOLUME[IX5];
                    PHI [IX6]= PHI [IX5];
                    PUNORM[IX6]= PUNORM[IX5];
                    PUMAX [IX6]= PUMAX [IX5];
                    T1T [IX6]= T1T [IX5];
                    T2T [IX6]= T2T [IX5];
                    DI [IX6]= DI [IX5];
                    XG [IX6]= XG [IX5];
                    XE1T [IX6]= XE1T [IX5];
                    XE2T [IX6]= XE2T [IX5];
                    XPT [IX6]= XPT [IX5];
                    XH0 [IX6]= XH0 [IX5];
                    XC2GES[IX6]= XC2GES[IX5];
                    XDFAKT[IX6]= XDFAKT[IX5];
                    if (IX5 == ISTF1N[J]) goto label350;
                    if (IX5 == ISTF2A[J]-1) goto label350;
                    UWA010(IX5,1);
                    UWA010(IX6,2);
                    IX5 = IX5-1;
                    IX6 = IX6-1;
                    goto label345;
                    
                label350:
                    UWA010(IX5,1);
                    KT7=4;
                    if (IX5 != ISTF1N[J] || IX6 == ISTF2N[J]) goto label356;
                    KT1 = 0;
                    KT2 = 0;
                    KT3 = 0;
                    
                label356:
                    UWA010(IX6,2);
                    if (IX5 == IX6) goto label355;
                    IX6 = IX6-1;
                    goto label345;
                    
                label355:
                    IX5 = ISTF2N[J];
                    UWA010(IX5 ,1);
                    KT7=9;
                    UWA010(IX5 ,2);
                    UWA010(IX5-1,1);
                    KT7=8;
                    UWA010(IX5-1,2);
                    //CONTINUE
                    
                label360:
                    IX6 =ISTF2N[J]-ISTF2A[J];
                    ITTEND[JJ]=ITTEND[JJ]+IX6;
                    
                    if(ITTEND[JJ] > 75) 
                        FORERR();
                    
                    for(IX5 = J; IX5 <= ANZDGR; IX5++)      //DO 370 IX5=J,ANZDGR
                    {
                        ISTF2A[IX5]=ISTF2A[IX5]+IX6;
                        ISTF3A[IX5]=ISTF3A[IX5]+IX6;
                    }
                    NSTFZ [J] =ISTF2N[J] -ISTF1N[J];
                    IZ1 =ISTF1N[J];
                    IZ2 =ISTF2N[J];

                    UWA008("UNPACK", ISTFGR[J], ref IX1, ref IX2, ref IX3, ref IX4);
                    IX4=IZ1;
                    UWA008("PACK", ISTFGR[J], ref IX1, ref IX2, ref IX3, ref IX4);
                    UWA010(IZ1,1);
                    
                    if(KT2 == 0) goto label375;
                    UWA008("UNPACK", ISTOBU[KT2], ref IX1, ref IX2, ref IX3, ref IX4);
                    IX4=IZ1;
                    UWA008("PACK", ISTOBU[KT2], ref IX1, ref IX2, ref IX3, ref IX4);
                    
                label375:
                    if(KT3 == 0) goto label385;

                    UWA008("UNPACK", ISTOBU[KT3], ref IX1, ref IX2, ref IX3, ref IX4);
                    IX4=IZ1;
                    UWA008("PACK", ISTOBU[KT3], ref IX1, ref IX2, ref IX3, ref IX4);
                    
                label385:
                    UWA010(IZ2,1);
                    if (KT2 == 0 ) goto label390;
                    UWA008("UNPACK", ISTOBU[KT2], ref IX1, ref IX2, ref IX3, ref IX4);
                    IX4=IZ2;
                    UWA008("PACK", ISTOBU[KT2], ref IX1, ref IX2, ref IX3, ref IX4);
                    
                label390:
                    if (KT3 == 0 ) continue;
                    UWA008("UNPACK", ISTOBU[KT3], ref IX1, ref IX2, ref IX3, ref IX4);
                    IX4=IZ2;
                    UWA008("PACK", ISTOBU[KT3], ref IX1, ref IX2, ref IX3, ref IX4);
                }   //400 CONTINUE

            label410:
                for(I = 1; I <= ITTEAK; I++)    //DO 420 I=1,ITTEAK
                {
                    UWA010(I,1);
                    KT4 = IKT4N [I];
                    KT14= IKT14N[I];
                    KT15= IKT15N[I];
                    if(IKT5 [I] != 0 ) KT5 =IKT5 [I];
                    if(IKT11[I] != 0 ) KT11 =IKT11[I];
                    if(IKT12[I] != 0 ) KT12 =IKT12[I];
                    if(APT [I] != 0.0) XPT[I] =APT [I];
                    if (I != ITTEAK || KT6 != NTTETB[KT10]) goto label411;
                    KT14 = 0;
                    KT15 = 0;
                    XH0[I] = H0AV;
                    YH0[I] = H0TV;
                    XC2GES[I] = C2GAV;
                    YC2GES[I] = C2GTV;
                    XDFAKT[I] = DFAKAV;
                    YDFAKT[I] = DFAKTV;
                    PSTFMX[I] = PSTFV;
                    TSTFMX[I] = TSTFV;
                    ETAIOP[I] = ETAOV;
                    ETAUOP[I] = ETAUV;
                    PSI[I] = PSIV;
                    ETAI[I] = ETAIV;
                    PHI[I] = PHIV;
                    
                    if(LSZ[KT10] == 0.0) goto label411;
                    LS[I-1] = LSZ[KT10];
                    OEFFNG[I-1] = OEFEND[KT10];
                    OEFFNG[I-2] = OEFEND[KT10];
                    
                label411:
                    UWA010(I,2);

                    if (KT5 == 0) continue;
                    
                    for(int IBB = 1; IBB <= 12; IBB++)      //DO 601 IBB = 1,12
                    {
                        int IAA = LTGSAM[IBB,KT5];
                        
                        if(IAA < 0)     goto label602;
                        if (IAA == 0) break;
                        if(IAA > 0)     goto label603;
                        
                    label602:
                        IAA = Math.Abs(IAA);
                        
                        if (IAA > 92) continue;
                        goto label604;
                        
                    label603:
                        if (IAA > 69 && IAA < 93) 
                            continue;
                        
                    label604:
                        UWA008("UNPACK", ILTG[IAA], ref IX1, ref IX2, ref IX3, ref IX4);
                        UWA008("PACK", ILTG[IAA], ref IX1, ref IX2, ref IX3, ref I);
                        if (IAA > 46) continue;
                        if (NRTRB[IAA] == 0) continue;
                        UWA008("UNPACK", NRTRB[IAA], ref IX1, ref IX2, ref IX3, ref IX4);
                        if (IX4 == 0) continue;
                        nn = 0;
                        if (NRTRB[IAA] < 0) nn = 1;
                        if (nn == 0 && KT1 == 0) continue;
                        UWA008("PACK", NRTRB[IAA], ref IX1, ref IX2, ref IX3, ref I);
                        
                        if (nn == 1) NRTRB[IAA] = -NRTRB[IAA];
                    }   //601 CONTINUE
                }   //420 CONTINUE
                
                UWA006("WDISC", 52,JJ);
                UWA006("WDISC", 59,JJ);
                LIGHT[10]=0;
                
                if (LIGHT[3] == 2) 
                    UWA012();

            label500:
                ;
            }   //500 CONTINUE
            return;
        }   //END

            
        static void UWA063(int IJEND,ref int IJTL1, ref double[] ETL1, ref double[] ETHMIN, ref double[] ETHMAX, ref int II2)
        {
            //ENTRY AKONTR(IJEND,IJTL1,ETL1,ETHMIN,ETHMAX,II2)
            //DIMENSION ETL1(6), ETHMIN(6), ETHMAX(6)
            int IJ1 = 0, IJ2 = 0, IJ1E = 0, IJ2A = 0;
            double EX1 = 0, EYMIN = 0, EYMAX = 0;
            IJTL1 = 0;
            
            for(IJ1 = 1; IJ1 <= IJEND; IJ1++)   //DO 100 IJ1 =1,IJEND
            {
                if(HS1MIN[IJ1] == 0.0 && HS1MAX[IJ1] == 0.0) goto label50;
                IJTL1 =IJTL1+1;
                if(IJ1 == 1) ETL1[IJTL1] =0.0;
                if(IJ1 != 1) ETL1[IJTL1] =TALMAX[IJ1-1];
                ETHMIN[IJTL1] =HS1MIN[IJ1];
                ETHMAX[IJTL1] =HS1MAX[IJ1];
                
            label50:
                if(HSZMIN[IJ1] == 0.0 && HSZMAX[IJ1] == 0.0) 
                    continue;
                
                IJTL1 =IJTL1+1;
                ETL1[IJTL1] =TALMIN[IJ1];
                ETHMIN[IJTL1] =HSZMIN[IJ1];
                ETHMAX[IJTL1] =HSZMAX[IJ1];
            }   //100 CONTINUE

            if(ETL1[1] == 0.0 && ETL1[IJTL1] == TALMIN[IJEND])
                goto label120;

            II2 = 11;
            KFELER=1011;
            return;
            
        label120:
            for(IJ1 = 1; IJ1 <= IJTL1; IJ1++)       //DO 140 IJ1 =1,IJTL1
            {
                if(ETHMIN[IJ1] != 0.0 && ETHMAX[IJ1] != 0.0) 
                    goto label130;
                II2 =1;
                if(ETHMIN[IJ1] == 0.0) ETHMIN[IJ1]=ETHMAX[IJ1]/1.01;
                if(ETHMAX[IJ1] == 0.0) ETHMAX[IJ1]=ETHMIN[IJ1]/0.99;
                continue;
                
            label130:
                if(ETHMIN[IJ1] <= ETHMAX[IJ1]/1.01) continue;
                II2 =1;
                ETHMIN[IJ1]=ETHMAX[IJ1]/1.01;
            }   //140 CONTINUE

            IJ1E = IJTL1-1;
            
            for(IJ1 = 1; IJ1 <= IJ1E; IJ1++)    //DO 150 IJ1 =1 ,IJ1E
            {
                IJ2A = IJ1+1;
                for(IJ2 = IJ2A; IJ2 <= IJTL1; IJ2++)    //DO 150 IJ2 =IJ2A,IJTL1
                {
                    if(ETL1[IJ1] <= ETL1[IJ2]) 
                        continue;
                    EX1 =ETL1[IJ1];
                    EYMIN =ETHMIN[IJ1];
                    EYMAX =ETHMAX[IJ1];
                    ETL1[IJ1] =ETL1[IJ2];
                    ETHMIN[IJ1]=ETHMIN[IJ2];
                    ETHMAX[IJ1]=ETHMAX[IJ2];
                    ETL1[IJ2] =EX1;
                    ETHMIN[IJ2]=EYMIN;
                    ETHMAX[IJ2]=EYMAX;
                }   //150 CONTINUE
            }
            return;
        }   //end


        static void UWA064(double EP0, double EI0, double EP1,double EI1,double EEPS,double EPSI,double EG,double EKF, double EUPM,double EH,
            double EDM, int  IPRF, ref double EBLE, ref double EBLA,ref double ELSLE, ref double ELSLA)
        {
            //ENTRY STFBEM(EP0,EI0,EP1,EI1,EEPS,EPSI,EG,EKF,EUPM,EH,EDM,IPRF,EBLE,EBLA,ELSLE,ELSLA)
            double ET0 = 0, ET1 = 0, EV1 = 0, EPHI = 0, EX0 = 0, ET1X = 0, EDTX19 = 0, ET02 = 0, ET105 = 0, ETSIGA = 0,
                EY1 = 0, EY2 = 0, ESIGZ = 0, ETT = 0, EX1 = 0, ECOSLE = 0, ESIGF = 0,  ECOSLA = 0, ESINLE = 0, ESINLA = 0,
                ESALE = 0, ESALA = 0, ELAM = 0, EZ1 = 0, EZ2 = 0, EBLS = 0;
            int JPRF,IY;
            //COMMON /LNKDIM/ LNKNR, icputm
            double[,] ETSMLE = new double[8,2], ETSALE = new double[8,2], ETSMLA = new double[8,2], ETSALA = new double[8,2];
            double[,] ETX1 = {{0,0}, {0, 20.0}, {0, 100.0}, {0, 150.0}, {0, 200.0}, {0, 250.0}, {0, 300.0}, {0, 350.0}, {0, 400.0},
                                 {0, 425.0}, {0, 440.0}, {0, 460.0}, {0, 480.0}, {0, 500.0}, {0, 520.0}, {0, 540.0}, {0, 560.0},
                                 {0, 580.0}, {0, 600.0}};
            
            double[,] ETY1 = {{0,0,0},
                            {0.0,	6000.0,	    0.0},
                            {0.0,	 5750.0,	 0.0},
                            {0.0,	 5580.0,	 0.0},
                            {0.0,	 5380.0,	 0.0},
                            {0.0,	 5150.0,	 0.0},
                            {0.0,	 4880.0,	 0.0},
                            {0.0,	 4600.0,	 0.0},
                            {0.0,	4300.0, 	0.0},
                            {0.0,	 4130.0,	 4130.0},
                            {0.0,	 4020.0,	 3730.0},
                            {0.0,	 3880.0,	 3200.0},
                            {0.0,	 3740.0,	 2700.0},
                            {0.0,	 3590.0,	 2200.0},
                            {0.0,	 3440.0,	 1730.0},
                            {0.0,	3290.0,	    1300.0},
                            {0.0,	 3130.0,	 940.0},
                            {0.0,	 2960.0,	 680.0},
                            {0.0,	 2800.0,	480}};

            double[,] ETX2 = {{0,0}, {0, 600.0}, {0, 570.0}, {0, 550.0}, {0, 530.0}, {0, 515.0}, {0, 500.0}, {0, 475.0}, {0, 450.0},
                                {0, 425.0}, {0, 400.0}, {0, 300.0}, {0, 200.0}, {0, 100.0}, {0, 20.0}};

            double[,] ETY2 = {{0,0,0,0,0,0,0,0},
                            {0.0,	470.0,	487.0,	510.0,	573.0,	657.0,	711.0,	760.0},
                            {0.0,	 800.0,	 805.0,	 841.0,	 912.0,	 993.0,	 1040.0,	 1060.0},
                            {0.0,	 1130.0,	 1116.0,	 1134.0,	 1181.0,	 1216.0,	 1227.0,	 1260.0},
                            {0.0,	 1530.0,	 1516.0,	 1525.0,	 1520.0,	 1498.0,	 1484.0,	 1500.0},
                            {0.0,	 1850.0,	 1836.0,	 1838.0,	 1789.0,	 1740.0,	 1700.0,	 1700.0},
                            {0.0,	 2240.0,	 2207.0,	 2151.0,	 2029.0,	 1932.0,	 1887.0,	 1880.0},
                            {0.0,	 2870.0,	 2712.0,	 2576.0,	 2411.0,	 2303.0,	 2248.0,	 2240.0},
                            {0.0,    3520.0,	 3218.0,	 3046.0,	 2821.0,	 2639.0,	 2566.0,	 2580.0},
                            {0.0,	 4150.0,	 3672.0,	 3426.0,	 3132.0,	 2974.0,	 2918.0,	 2940.0},
                            {0.0,	 4300.0,	 3796.0,	 3529.0,	 3239.0,	 3095.0,	 3071.0,	 3170.0},
                            {0.0,	 4900.0,	 4157.0,	 3775.0,	 3394.0,	 3242.0,	 3279.0,	 3500.0},
                            {0.0,	 5380.0,	 4497.0,	 3953.0,	 3465.0,	 3287.0,	 3330.0,	 3540.0},
                            {0.0,	 5740.0,	 4744.0,	 4119.0,	 3543.0,	 3327.0,	 3362.0,	 3580.0},
                            {0.0,	 6000.0,	 4938.0,	 4289.0,	 3642.0,	 3385.0,	 3391.0,	3600}};
                        
            double[] ECOS1 = {0, 1.00000, 0.97016, 0.89444, 0.70711, 0.44722, 0.24254, 0.0};
            double[] ESIN1 = {0, 0.0, 0.24254, 0.44722, 0.70711, 0.89444, 0.97016, 1.00000};
            double[] EFBLE = { 0, 2.75, 5.50, 3.125};
            double[] EFBLA = {0, 2.75, 5.50, 3.125};
            double[,] ETX3 = {{0,0,0,0,0,0,0,0,0,0},
                                {0.0,	0.324,	 0.198,	0.310,	0.324,	0.2450,	0.2440,	0.2450,	0.0,	0.0},
                                {0.0,	 0.360,	 0.215,	 0.350,	 0.360,	0.2745,	0.2629,	0.2745,	0.0,	0.0},
                                {0.0,	 0.396,	 0.231,	 0.381,	 0.396,	0.3039,	0.2818,	0.3039,	0.0,	0.0},
                                {0.0,	 0.433,	 0.263,	 0.420,	 0.433,	0.3334,	0.3007,	0.3334,	0.0,	0.0},
                                {0.0,	 0.470,	 0.295,	 0.451,	 0.470,	0.3629,	0.3196,	0.3629,	0.0,	0.0},
                                {0.0,	 0.506,	 0.327,	 0.490,	 0.506,	0.3923,	0.3384,	0.3923,	0.0,	0.0},
                                {0.0,	 0.542,	 0.358,	 0.518,	 0.542,	0.4218,	0.3573,	0.4218,	0.0,	0.0},
                                {0.0,	 0.578,	 0.389,	 0.540,	 0.578,	0.4513,	0.3762,	0.4513,	0.0,	0.0},
                                {0.0,	 0.612,	 0.420,	 0.560,	 0.612,	0.4807,	0.3951,	0.4807,	0.0,	0.0},
                                {0.0,	 0.646,	 0.438,	 0.583,	 0.646,	0.5102,	0.4140,	0.5102,	0.0,	0.0}};
            
            double[,] ETY3 = {{0,0,0,0,0,0,0,0,0,0},
                                {0.0,	0.77585,	0.64810,	0.72060,	0.77585,	0.73500,	0.72500,	0.73500,	0.0,	0.0},
                                {0.0,	 0.79896,	 0.66050,	 0.75300,	 0.79896,	 0.75490,	 0.73810,	 0.75490,	0.0,	0.0},
                                {0.0,	 0.82143,	 0.67350,	 0.77510,	 0.82143,	 0.77480,	 0.75120,	 0.77480,	0.0,	0.0},
                                {0.0,	 0.84291,	 0.69820,	 0.80300,	 0.84291,	 0.79480,	 0.76430,	 0.79480,	0.0,	0.0},
                                {0.0,	 0.86354,	 0.72220,	 0.82470,	 0.86354,	 0.81470,	 0.77740,	 0.81470,	0.0,	0.0},
                                {0.0,	 0.88328,	 0.74540,	 0.85100,	 0.88328,	 0.83460,	 0.79060,	 0.83460,	0.0,	0.0},
                                {0.0,	0.90210,	0.76780,	0.86900,	0.90210,	0.85420,	0.80370,	0.85420,	0.0,	0.0},
                                {0.0,	 0.91999,	 0.78940,	 0.88200,	 0.91999,	 0.87180,	 0.81680,	 0.87180,	0.0,	0.0},
                                {0.0,	 0.93700,	 0.81010,	 0.89400,	 0.93700,	 0.88800,	 0.82990,	 0.88800,	0.0,	0.0},
                                {0.0,	 0.95300,	 0.82140,	 0.90760,	 0.95300,	 0.90310,	 0.84300,	 0.90310,	0.0,	0.0}};

            double[,] ETY4 = {{0,0,0,0,0,0,0,0,0,0},
                                {0.0,	 42.26,	49.14,	44.65,	42.26,	42.70,	45.000,	42.70,	    0.0,	0.0},
                                {0.0,	 40.26,	 48.05,	 41.70,	 40.26,	 41.00,	43.856,	 41.00, 	0.0,	0.0},
                                {0.0,	 38.26,	 47.05,	 39.57,	 38.26,	 39.29,	42.711,	 39.29, 	0.0,	0.0},
                                {0.0,	 36.26,	 44.95,	 36.70,	 36.26,	 37.51,	41.567,	 37.51, 	0.0,	0.0},
                                {0.0,	 34.26,	 42.85,	 34.48,	 34.26,	 35.71,	40.422,	 35.71, 	0.0,	0.0},
                                {0.0,	 32.26,	 40.75,	 31.50,	 32.26,	 33.82,	39.278,	 33.82, 	0.0,	0.0},
                                {0.0,	 30.26,	 38.65,	 29.40,	 30.26,	 31.87,	38.133,	 31.87, 	0.0,	0.0},
                                {0.0,	 28.26,	 36.55,	 27.70,	 28.26,	 30.07,	36.989,	 30.07,	    0.0,	0.0},
                                {0.0,	 26.26,	34.45,	26.10,	26.26,	28.36,	35.844,	 28.36, 	0.0,	0.0},
                                {0.0,	 24.26,	 33.23,	 24.32,	 24.26,	 26.70,	34.700,	 26.70, 	0.0,	0.0}};

            double[] EBMIN = {0, 12.40, 8.60, 21.69, 12.40, 12.10, 9.06, 12.10, 0.0, 0.0};
            double[] EW1 = {0, 12.0513E-03, 9.8870E-03, 7.9839E-03, 12.0513E-03, 11.5653E-03, 11.5200E-03, 11.5653E-03, 0.0, 0.0};
            double[] EW2 = {0, 61.4350E-03, 51.2032E-03, 48.8412E-03, 61.4350E-03, 62.1722E-03, 66.0600E-03, 62.1722E-03, 0.0, 0.0};
            double[] ETLS = {0, 0.85, 0.80, 0.85, 0.85, 0.8371, 0.85, 0.8371, 0.0 ,0.0};
            double[] EFF = {0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 0.5, 0.0, 0.0};
            double EC1 = 1.06, EC2 = 50.0,EC3 = 2.0,EC12 = 6.0;

            ET0 = VISUM(EP0,EI0,13);
            ET1 = VISUM(EP1,EI1,13);
            EV1 = VISUM(EP1,ET1,10);
            EPHI = (0.92*EPSI+2.0)/(4.0 * Math.Sqrt(1.0- Math.Pow(EEPS,2))/EEPS);
            EX0 = 1.04;
            if(ET0 < 0.0) EX0 =-ET0;
            
        label50:
            ET1X =ET1;
            
            if(ET1X < 0.0) 
                ET1X =UW0011(EP1,1);
            ET1X = ET1X-273.15;
            EDTX19 = 0.0;
            
            if (ET1X  <  400.0  ||  LNKNR  ==  6) 
                goto label77;
            EDTX19 = 2.944 + 24.183 * Math.Pow((Math.Abs(Math.Log(ET1X/490.0))),2.224);
            EDTX19 = 38.0 - Math.Exp(EDTX19);

            if (EDTX19 < 0.0) EDTX19 = 0.0;

        label77:
            ET02 = 0.0;
            ET105 = 0.0;
            ETSIGA = 0.0;
            if (LNKNR != 6) goto label1;
            if (ET1X <= 477.0) goto label1;

            ET02 = 37.8 + 0.483*ET1X;

            ET105 = 35.6 + 0.112*ET1X;

            ETSIGA = -880.6 + 2.75*ET1X - 0.001895*ET1X*ET1X;

        label1:
            ET02 = ET1X - ET02 - EDTX19;
            ET105 = ET1X - ET105 - EDTX19;
            ETSIGA = ET1X - ETSIGA - EDTX19;
            RH0008(ETX1,ETY1,ET02,1,1,18,1,18, ref EY1 /*,&85*/);
            EY1 =EY1*0.5;
            
            if(ET105  < 425.0) goto label75;
            RH0008(ETX1,ETY1,ET105,1,2,18,9,18, ref EY2 /*,&85*/);
            EY2 =EY2/1.25;
            if(EY1  > EY2 ) EY1 =EY2;
            
        label75:
            ESIGZ =EY1;
            ETT = ET1;
            EX1 =-ETT;
            if(ETT < 0.0) goto label76;
            EX1 = 1.04;
            if(EP1 > 165.0) goto label76;
            ETT = UW0011(EP1,1)-273.15;
            if(ET1 < ETT+30.0) EX1 = 1.02;
            
        label76:
            IY=3;
            if(EX0 > 1.0 && EX1 > 0.96) IY=2;
            if(EX0 > 1.0 && EX1 > 1.03) IY=1;
            ECOSLE= 1.0/Math.Sqrt(1.0 + Math.Pow(EFBLE[IY],2));
            ECOSLA= 1.0/Math.Sqrt(1.0 + Math.Pow(EFBLA[IY],2));
            ESINLE= EFBLE[IY]*ECOSLE;
            ESINLA= EFBLA[IY]*ECOSLA;
            
            for(IY = 1; IY <= 7; IY++)  //DO 80 IY=1,7
            {
                RH0008(ETX2,ETY2,ETSIGA,1,IY,14,1,14, ref EZ1 /*,&85*/);
                EY1 =EZ1*ECOS1[IY];
                EY2 =EZ1*ESIN1[IY];
                ETSMLE[IY,1] = -EY2*ECOSLE+EY1*ESINLE;
                ETSALE[IY,1] = EY2*ESINLE+EY1*ECOSLE;
                ETSMLA[IY,1] = -EY2*ECOSLA+EY1*ESINLA;
                ETSALA[IY,1] = EY2*ESINLA+EY1*ECOSLA;
            }
            ESIGF = EFF[IPRF]*EH *EDM * Math.Pow(EUPM,2)*4.33E-10;
            RH0008(ETSMLE,ETSALE, 0.0,1,1,7,1,7, ref EY1 /*,&85 */);
            RH0008(ETSMLA, ETSALA, (ESIGF * ESINLA), 1, 1, 7, 1, 7, ref EY2 /*,&85 */);
            ESALE = EY1 *ESINLE;
            ESALA = (EY2-ESIGF*ECOSLA)*ESINLA;
            goto label90;
            
        label85:
            sw16.WriteLine(" +++++ STFBEM-ERROR1 +++++ EP1= {0}", Math.Round(EP1,5).ToString().PadLeft(10));
            //86 FORMAT(' +++++ STFBEM-ERROR1 +++++ EP1= ',F10.5)
            return;
            
        label90:
            JPRF =IPRF;
            RH0008(ETX3,ETY3,EEPS,JPRF,JPRF,10,1,10, ref EBLS /*,&505 */);
            RH0008(ETX3,ETY4,EEPS,JPRF,JPRF,10,1,10, ref ELAM /*,&505 */);
            ELAM = ELAM*3.14159/180.0;
            goto label510;
            
        label505:
            sw16.WriteLine(" +++++ STFBEM-ERROR2 +++++ EEPS={0}", Math.Round(EEPS,5).ToString().PadLeft(10));
            //506 FORMAT(' +++++ STFBEM-ERROR2 +++++ EEPS=',F10.5)
            return;
            
        label510:
            EY1 =Math.Atan(1.0/(4.0*EEPS*0.95*EPHI/EEPS/EPSI* (2.0*EPHI/EEPS*Math.Sqrt(1.0- EEPS*EEPS)-1.0)));
            EY1 =1.025E+04/(3.6*2.0*3.14159)* EEPS/EPHI*EBLS*Math.Sqrt(EPSI/19.62*ETLS[IPRF]*(Math.Cos(EY1-ELAM)/EW1[IPRF]+Math.Sin(EY1-ELAM)/EW2[IPRF])/Math.Sin(EY1));
            EY1 =EG*EKF*Math.Sqrt(EV1*(EH+5.0)/EH)*EY1*EC1/(EDM*EEPS);
            EBLE =EY1/Math.Sqrt(ESALE/ESINLE*ECOSLE);
            EZ1 =ESIGZ - ESIGF;
            EZ2 =ESALA/ESINLA* ECOSLA;
            if(EZ1 > EZ2) EZ1 =EZ2;
            if(EZ1 > EC2) EBLA =EC3 * EBLE;
            if(EZ1 >= EC2) EBLA =EY1 / Math.Sqrt(EZ1);
            if(EBLA/EBLS  >=  EH/EC12) goto label530;
            EBLE = EH/EC12 * EBLS;
            EBLA = EH/EC12 * EBLS;
            
        label530:
            if(EBLA  >=  EBMIN[IPRF]) goto label540;
            EBLE = EBMIN[IPRF];
            EBLA = EBMIN[IPRF];
            
        label540:
            ELSLE = EBLE /EBLS;
            ELSLA = EBLA /EBLS;
            return;
        }   //END
        
        
        static void UWA066(int II2)
        {
            //ENTRY DIMENS(II2)
            bool QFEST = false, QEND = false, QWEICH = false, QOPT = false, QOPTX = false, QAB = false;
            bool[] QLELA = new bool[11];
            int IY = 0, IPRF = 0, IJTL1 = 0;
            int[,] IEZTT = new int[11, 6];

            double[,] ETSMLE = new double[8, 2], ETSALE = new double[8, 2], ETSMLA = new double[8, 2], ETSALA = new double[8, 2];
            double[] ELEIST = new double[11], ELEIWB = new double[11], ECOSLE = new double[11], ECOSLA = new double[11], 
                ESINLE = new double[11], ESINLA = new double[11], ESALE = new double[11], ESIGZ = new double[11], EVS = new double[11],
                ELGES = new double[6], ELRGES = new double[6], EDLRA = new double[6], EDLR = new double[6], EXMIN = new double[6], 
                EXMAX = new double[6], EDLPA = new double[6], ELMIN = new double[6], ELMAX = new double[6], ELOPT = new double[6];

            int[] IIOPT = new int[6], IIOPT1 = new int[6], ITAKEN = new int[6], IIKEN1 = new int[6], IIKEN2 = new int[6], IJTAB = new int[6],
                JUEMIN = new int[6], JUEMAX = new int[6], ITAPRF = new int[7], IZAUSG = new int[11];

            double[] EV = new double[3], EKF = new double[3], ELSM = new double[3], EHMIN = new double[3], EHMAX = new double[3],
                EDI = new double[11], EEPS = new double[11], EBLE = new double[11], EBLA = new double[11], EH = new double[11],
                ETL1 = new double[7], ETHMIN = new double[7], ETHMAX = new double[7], EALMIN = new double[7], EALMAX = new double[7],
                EABANZ = new double[7], EASAXE = new double[7],  EAOEFF = new double[7], EAKF1 = new double[7],
                EAKFZ = new double[7], ETAZLA = new double[7], EZETA = new double[7], EKMIN = new double[6], EKMAX = new double[6],
                EBM = new double[6], EKM = new double[6], ESAX = new double[6], EZ = new double[6], EPSI = new double[6];
            //COMMON /ANZAPF/ NUESTF(6),IKT5 (75),IKT11(75),IKT12(75),APT(75)
            //COMMON /GEFFAK/ HFAKTE(15)
            //COMMON /LNKDIM/ LNKNR, ICPUTM

            int IK9 = 0, IJEND = 0, IIEND = 0, IKW = 0, IENTLA = 0, IJ = 0, IK2 = 0, IK1 = 0, IZ = 0, ITER39 = 0, IZAEHL = 0, IK = 0, IJ1 = 0, IH1 = 0,
                ITER95 = 0, IZEIG = 0,  IOPTX = 0, IIFIX = 0, IL1 = 0, IZUTEI = 0, IAUSK = 0, IAUSKZ = 0, IITERS = 0, ITER = 0, IZU = 0, IJM1 = 0,
                IJ2 = 0, IST = 0, IIAUS = 0, ITER1 = 0, IZX = 0, IJA = 0, IJE = 0, IIA = 0, IIE = 0, IFEST = 0, IZM = 0, IEZTTO = 0, IJAF = 0,
                IJEF = 0, IZA = 0, IZE = 0, IZAE = 0, IZI = 0, IIST = 0, JANF = 0,  JANF1 = 0, JANF2 = 0;

            double PHTURB = 0, HFIXE = 0, HC0C2E = 0, HC0C2A = 0, EE12T = 0, EPT = 0, ET12T = 0, EX0 = 0, ETT = 0, EDTX19 = 0, ET02 = 0, ET105 = 0, ETSIGA = 0, EX1 = 0,
                EY1 = 0, EX = 0, EFBLEX = 0, ETAND = 0, EXOPT = 0, ELRVOR = 0, ELRGM = 0, ELRGP = 0, EG = 0, ESH0 = 0, EX2 = 0, EEPSV = 0, ETAZLV = 0, ESAXV = 0, EH1 = 0,
                EDEPS = 0, EZOPT = 0, ED1 = 0, ETAN1 = 0, ETANDR = 0, EE1 = 0, EPHI = 0, EDM = 0, EUM = 0, EE2 = 0, EH2 = 0, ESIGF = 0, ESIGD = 0, EHDB = 0, EBLS = 0,
                ELAM = 0, ESALA = 0, ESIGB = 0, EDZ = 0, EZAE = 0, FZAE = 0, EKORR = 0, XZAE = 0, EZIST = 0, EDZM = 0, EDZP = 0, EZSOLL = 0, 
                EZX = 0, STFZAL = 0, EK2 = 0, EK1 = 0, EXMAX0 = 0, EZA = 0,  EK0 = 0, ELA = 0, EZE = 0, ESUMM = 0, EL1 = 0, EL2 = 0, L = 0;

            double[,] ETX1 = {{0, 0}, {0, 20.0}, {0, 100.0}, {0, 150.0}, {0, 200.0}, {0, 250.0}, {0, 300.0}, {0, 350.0}, {0, 400.0}, 
                             {0, 425.0}, {0, 440.0}, {0, 460.0}, {0, 480.0}, {0, 500.0}, {0, 520.0}, {0, 540.0}, {0, 560.0}, {0,580.0}, 
                             {0, 600.0}};

            double[,] ETY1 = {{0, 0, 0}, {0, 6000.0, 0.0}, {0, 5750.0, 0.0}, {0, 5580.0, 0.0}, {0, 5380.0, 0.0}, {0, 5150.0, 0.0}, {0, 4880.0, 0.0}, {0, 4600.0, 0.0}, 
                             {0, 4300.0, 0.0}, {0, 4130.0, 4130.0}, {0, 4020.0, 3730.0}, {0, 3880.0, 3200.0}, {0, 3740.0, 2700.0}, {0, 3590.0, 2200.0}, {0, 3440.0, 1730.0},
                             {0, 3290.0, 1300.0}, {0, 3130.0, 940.0}, {0, 2960.0, 680.0}, {0, 2800.0, 480.0}};

            double[,] ETX2 = {{0, 0}, {0, 600.0}, {0, 570.0}, {0, 550.0}, {0, 530.0}, {0, 515.0}, {0, 500.0}, {0, 475.0}, {0, 450.0}, {0, 425.0}, 
                            {0, 400.0}, {0, 300.0}, {0, 200.0}, {0, 100.0}, {0, 20.0}};

            double[,] ETY2 = {{0,0,0,0,0,0,0,0},
                                 {0,470     ,487	,510	,573	,657	,711	,760},
                                 {0,800	    ,805	,841	,912	,993	,1040	,1060},
                                 {0,1130	,1116	,1134	,1181	,1216	,1227	,1260},
                                 {0,1530	,1516	,1525	,1520	,1498	,1484	,1500},
                                 {0,1850	,1836	,1838	,1789	,1740	,1700	,1700},
                                 {0,2240	,2207	,2151	,2029	,1932	,1887	,1880},
                                 {0,2870	,2712	,2576	,2411	,2303	,2248	,2240},
                                 {0,3520	,3218	,3046	,2821	,2639	,2566	,2580},
                                 {0,4150	,3672	,3426	,3132	,2974	,2918	,2940},
                                 {0,4300	,3796	,3529	,3239	,3095	,3071	,3170},
                                 {0,4900	,4157	,3775	,3394	,3242	,3279	,3500},
                                 {0,5380	,4497	,3953	,3465	,3287	,3330	,3540},
                                 {0,5740	,4744	,4119	,3543	,3327	,3362	,3580},
                                 {0,6000	,4938	,4289	,3642	,3385	,3391	,3600}};

            double[] ECOS1 = {0, 1.00000, 0.97016, 0.89444, 0.70711, 0.44722, 0.24254, 0.0};

            double[] ESIN1 = {0, 0.0, 0.24254, 0.44722, 0.70711, 0.89444, 0.97016, 1.00000};

            double[] EFBLE = {0, 1.925, 3.85, 2.1875 };

            double[] EFBLA = {0, 2.75, 5.50, 3.125};

            double[,] ETX3 = {{0,0,0,0,0,0,0,0,0,0},
                             {0.0,	0.324,	0.198,	0.310,	0.324,	0.2450,	0.2440,	0.2450,	0.0,	0.0},
                             {0.0,  0.360,	0.215,	0.350,	0.360,	0.2745,	0.2629,	0.2745,	0.0,	0.0},
                            {0.0,	0.396,	0.231,	0.381,	0.396,	0.3039,	0.2818,	0.3039,	0.0,	0.0},
                            {0.0,	0.433,	0.263,	0.420,	0.433,	0.3334,	0.3007,	0.3334,	0.0,	0.0},
                            {0.0,	0.470,	0.295,	0.451,	0.470,	0.3629,	0.3196,	0.3629,	0.0,	0.0},
                            {0.0,	0.506,	0.327,	0.490,	0.506,	0.3923,	0.3384,	0.3923,	0.0,	0.0},
                            {0.0,	0.542,	0.358,	0.518,	0.542,	0.4218,	0.3573,	0.4218,	0.0,	0.0},
                            {0.0,	0.578,	0.389,	0.540,	0.578,	0.4513,	0.3762,	0.4513,	0.0,	0.0},
                            {0.0,	0.612,	0.420,	0.560,	0.612,	0.4807,	0.3951,	0.4807,	0.0,	0.0},
                            {0.0,	0.646,	0.438,	0.583,	0.646,	0.5102,	0.4140,	0.5102,	0.0,	0.0}};
            
            double[,] ETY3 = {{0,0,0,0,0,0,0,0,0,0},
                            {0.0,	0.77585,	0.64810,	0.72060,	 0.77585,	0.73500,	0.72500,	0.73500,	0.0,	0.0},
                            {0.0,	0.79896,	0.66050,	0.75300,	0.79896,	0.75490,	0.73810,	0.75490,	0.0,	0.0},
                            {0.0,	0.82143,	0.67350,	0.77510,	0.82143,	0.77480,	0.75120,	0.77480,	0.0,	0.0},
                            {0.0,	0.84291,	0.69820,	0.80300,	0.84291,	0.79480,	0.76430,	0.79480,	0.0,	0.0},
                            {0.0,	0.86354,	0.72220,	0.82470,	0.86354,	0.81470,	0.77740,	0.81470,	0.0,	0.0},
                            {0.0,	0.88328,	0.74540,	0.85100,	0.88328,	0.83460,	0.79060,	0.83460,	0.0,	0.0},
                            {0.0,	0.90210,	0.76780,	0.86900,	0.90210,	0.85420,	0.80370,	0.85420,	0.0,	0.0},
                            {0.0,	0.91999,	0.78940,	0.88200,	0.91999,	0.87180,	0.81680,	0.87180,	0.0,	0.0},
                            {0.0,	0.93700,	0.81010,	0.89400,	0.93700,	0.88800,	0.82990,	0.88800,	0.0,	0.0},
                            {0.0,	0.95300,	0.82140,	0.90760,	0.95300,	0.90310,	0.84300,	0.90310,	0.0,	0.0}};

            double[,] ETY4 = {{0,0,0,0,0,0,0,0,0,0},
                                {0.0,	42.26,	49.14,	44.65,	42.26,	42.70,	45.000,	42.70,	0.0,	0.0},
                                {0.0,	40.26,	48.05,	41.70,	40.26,	41.00,	43.856,	41.00,	0.0,	0.0},
                                {0.0,	38.26,	47.05,	39.57,	38.26,	39.29,	42.711,	39.29,	0.0,	0.0},
                                {0.0,	36.26,	44.95,	36.70,	36.26,	37.51,	41.567,	37.51,	0.0,	0.0},
                                {0.0,	34.26,	42.85,	34.48,	34.26,	35.71,	40.422,	35.71,	0.0,	0.0},
                                {0.0,	32.26,	40.75,	31.50,	32.26,	33.82,	39.278,	33.82,	0.0,	0.0},
                                {0.0,	30.26,	38.65,	29.40,	30.26,	31.87,	38.133,	31.87,	0.0,	0.0},
                                {0.0,	28.26,	36.55,	27.70,	28.26,	30.07,	36.989,	30.07,	0.0,	0.0},
                                {0.0,	26.26,	34.45,	26.10,	26.26,	28.36,	35.844,	28.36,	0.0,	0.0},
                                {0.0,	24.26,	33.23,	24.32,	24.26,	26.70,	34.700,	26.70,	0.0,	0.0}};

            double[] EBMIN = {0,  12.40, 8.60, 21.69, 12.40, 12.10, 9.06, 12.10, 0.0, 0.0};

            double[] EW1 = {0, 12.0513E-03, 9.8870E-03, 7.9839E-03, 12.0513E-03, 11.5653E-03, 11.5200E-03, 11.5653E-03, 0.0, 0.0};

            double[] EW2 = {0, 61.4350E-03, 51.2032E-03, 48.8412E-03, 61.4350E-03, 62.1722E-03, 66.0600E-03, 62.1722E-03, 0.0, 0.0}; 

            double[] ETLS = {0, 0.85, 0.80, 0.85, 0.85, 0.8371, 0.85, 0.8371, 0.0, 0.0};

            double[] EFPROV = {0, 0.27190, 0.22450, 0.20800, 0.27190, 0.25182, 0.25430, 0.25182, 0.0, 0.0};

            double[] EEPSMI = {0, 0.324, 0.198, 0.310, 0.324, 0.245, 0.244, 0.245, 0.0, 0.0};

            double[] EEPSMA = {0, 0.646, 0.438, 0.583, 0.646, 0.510, 0.414, 0.510, 0.0, 0.0};

            double[] EFF = {0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 0.5, 0.0, 0.0};

            double[] ENTLAS = {0, 0.200, 0.150, 0.150, 0.200, 0.200, 0.000, 0.200, 0.0, 0.0};
            
            double EC1 = 1.06, EC2 = 50.0, EC3 = 2.0, EC12 = 6.0, ETW = 0.0001, EPSIAN = 3.0, EPSIMI = 1.0;

            II2 =0;
            KFELER=0;
            IK9 = (int)NUESTF[1];
            IK9 = UWA011(IK9,9);
            HFAKTE[IK9] = 1.0;
            IJEND = 0;
            
        label10:
            if(IJEND == 5) goto label20;
            IJEND =IJEND+1;
            if(TALMIN[IJEND] != 0.0 ) goto label10;
            IJEND =IJEND-1;
            
        label20:
            for(IIEND=1; IIEND <= 6; IIEND++)
                if(NUESTF[IIEND] == 0)
                    goto label26;   //25 CONTINUE
            IIEND =7;
            
        label26:
            IIEND =IIEND-2;
            PHTURB = 0.0;
            IK2 = (int)NUESTF[IIEND+1] - 1;
            KT1 = UWA011(IK2,1);
            
            if (KT1 > 1) PHTURB = XPT[IK2];
            if (KT1 > 1) XPT[IK2] = PSI[75] * XPT[IK2];

            IZ1 = IIEND + 1;
            IENTLA = (int)NUESTF[IZ1] - 1;

            if (TABANZ[IJEND] < 0.0) IENTLA = 0;
            
        label2720:
            IZ2 = (int)NUESTF[IZ1] - 1;
            UWA010(IZ2,1);
            
            if (IZ1 == IIEND+1 && KT1 <= 1) IENTLA = 0;
            if (IZ1 == IIEND+1) A1 = XPT[IZ2];
            if (IZ1 == 1)   goto label2710;
            if (KT12 == 1 && IZ1 != IIEND+1)    goto label2710;
            IZ1 = IZ1 - 1;
            goto label2720;
            
        label2710:
            A2 = VISUM(XPT[IZ2],XE1T[IZ2+1],03);
            A2 = VISUM(XPT[IZ2],A2,02);
            A2 = VISUM(A1,A2,04);
            A2 = VISUM(A1,A2,01);
            HFIXE = XE1T[IZ2+1] - A2;
            HC0C2E = 0.0;
            HC0C2A = 0.0;
            
            if (XYZXYZ == 0.0 || IENTLA == 0) 
                goto label2700;
            
            HC0C2E = (Math.Pow(XC2GES[IENTLA-2],2)-Math.Pow(XC2GES[IENTLA-1],2))/8.37225E+03;
            HC0C2A = (Math.Pow(XC2GES[IENTLA-1],2)- Math.Pow(XC2GES[IENTLA],2))/8.37225E+03;

        label2700:
            if (IJEND < IIEND) goto label29;
            if(TABANZ[IJEND] >= 0.0) goto label30;
            if( IJEND  == 1 ) goto label30;
            
        label29:
            II2 =10;
            KFELER=1010;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            //9000 FORMAT(' +++++DIMENS-WARNING',I2,'+++++')
            return;

        label30:
            UWA063(IJEND, ref IJTL1, ref ETL1, ref ETHMIN, ref ETHMAX, ref II2);
            if(II2  != 0) sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            if (KFELER != 0)
                return;

            for(IJ = 1; IJ <= IJEND; IJ++)  //DO 120 IJ=1, IJEND
            {
                if (TAKF1[IJ] > 5.0 &&TAKFZ[IJ] > 5.0 ) goto label125;
                EAKF1[IJ] = TAKF1[IJ];
                EAKFZ[IJ] = TAKFZ[IJ];
                continue;
                
            label125:
                II = IJ;
                if (IIEND == IJEND) goto label126;
                if (IJ >= IIEND-1) II = IIEND - 1;
                if (IJ == IJEND) II = IIEND;
                if (II < 1) II = 1;
                
            label126:
                A1 = TAKF1[IJ] - 5.0;
                A2 = TAKFZ[IJ] - 5.0;
                IK1 = NUESTF[II];
                IK2 = NUESTF[II+1] - 1;
                Z1 = XPT[IK1-1] * A1;
                Z2 = XPT[IK2] * Math.Sqrt(Math.Pow(A1,3)/A2);
                Z3 = Math.Pow((XPT[IK2]/XPT[IK1-1]),2);
                Z4 = XG[IK1] * A1 * Math.Sqrt((1.0-Z3*A1/A2)/(1.0-Z3));
                Z5 = 0.0;
                
                for(IZ = IK1; IZ <= IK2; IZ++)      //DO 130 IZ=IK1, IK2
                {
                    if (XYZXYZ != 0.0 && II == IIEND && IZ == IK2-1) 
                        continue;
                    Z6 = XPT[IZ] * Math.Sqrt((1.0-Math.Pow((XPT[IK2]/XPT[IZ]),2)) * Math.Pow((Z4/XG[IK1]),2) + Math.Pow((Z2/XPT[IZ]),2));
                    Z5 = Z5 + Z4/XG[IK1] * Math.Sqrt(XPT[IZ]/Z6);
                }   //130 CONTINUE
                A3 = (IK2+1-IK1);
                
                if (XYZXYZ != 0.0 && II == IIEND) A3 = A3 - 1.0;
                EAKF1[IJ] = Z5/A3;
                EAKFZ[IJ] = EAKF1[IJ];
            }   //120 CONTINUE
            
            for(IJ = 1; IJ <= IJEND; IJ++)      //DO 35 IJ=1, IJEND
            {
                EKMIN[IJ] = 0.0;
                EKMAX[IJ] = 0.0;
                IJTAB [IJ] = IJ;
                ITAPRF[IJ]=(int)NTAPRF[IJ];
                EALMIN[IJ]=TALMIN[IJ];
                EALMAX[IJ]=TALMAX[IJ];
                EABANZ[IJ]=TABANZ[IJ];
                ETAZLA[IJ] = TAZLA[IJ];
                EASAXE[IJ]=TASAXE[IJ];
                EAOEFF[IJ]=TAOEFF[IJ];
                EAKF1 [IJ]=EAKF1 [IJ]*GMAXG1;
                EAKFZ [IJ]=EAKFZ [IJ]*GMAXG1;
            }
            EZETA[1] = HS1MIN[6];
            EZETA[2] = HS1MAX[6];
            EZETA[3] = HSZMIN[6];
            EZETA[4] = HSZMAX[6];
            EZETA[5] = TAKF1[6];
            EZETA[6] = TAKFZ[6];
            //9001 FORMAT(' ',2I3,11F11.5)
            string s = "";
            for(int ij = 1; ij <= IJEND; ij++)
                s = s + Math.Round(EAKF1[ij],5).ToString().PadLeft(11) + Math.Round(EAKFZ[ij],5).ToString().PadLeft(11);

            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}", IIEND.ToString().PadLeft(3), IJEND.ToString().PadLeft(3), s);     //(EAKF1[IJ],EAKFZ[IJ],IJ=1,IJEND);

            ITER39 = 0;
            
        label39:
            ITER39 = ITER39 + 1;
            if (ITER39 != 10) goto label38;
            II2 =3;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            goto label3650;
            
        label38:
            IZAEHL=0;
            II =0;
            
        label40:
            II =II+1;
            if(II == IIEND) goto label41;
            IIOPT [II]=II;
            IIOPT1[II]=II;
            goto label40;
            
        label41:
            IIOPT[IIEND]=IJEND;
            IIOPT1[IIEND]=IJEND;
            II =0;
            
        label50:
            II =II+1;
            if(II == IIEND) goto label51;
            ELGES [II] =0.0;
            ELRGES[II] =0.0;
            goto label50;
            
        label51:
            ELGES [II] =EALMIN[IJEND];
            ELRGES[II] =EALMIN[IJEND];
            IJ =0;
            
        label55:
            IJ =IJ+1;
            if(IJ == IJEND) goto label56;
            ELMIN[IJ] =EALMIN[IJ];
            ELMAX[IJ] =EALMAX[IJ]-EABANZ[IJ];
            IY =IJTAB[IJ];
            ITAKEN[IJ] = RH0010(NTAKEN,5-IY);
            if(ELMIN[IJ] <= ELMAX[IJ])goto label55;
            II2 = 12;
            KFELER=1012;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            return;
            
        label56:
            ELMIN[IJ] =EALMIN[IJEND];
            ELMAX[IJ] =EALMIN[IJEND];
            ITAKEN[IJ]=1;

            for(II = 1; II <= IIEND; II++)      //DO 60 II =1,IIEND
            {
                IK1 =2*(II-1)+1;
                IK2 =2*(II-1)+2;
                EH[IK1] =0.0;
                EH[IK2] =0.0;
                EDI[IK1] = 0.0;
                EDI[IK2] = 0.0;
                EKM [II] =0.0;
                EBM [II] = 0.0;
                ESAX[II] = 0.0;
                EZ[II] = 0.0;
                EBLA[IK1] = 0.0;
                EBLA[IK2] = 0.0;
                QLELA[IK1] = false;
                QLELA[IK2] = false;
                EPSI[II] = EPSIAN;
            }

            if(EABANZ[IJEND] < 0.0) 
                goto label90;
            IK = NUESTF[1];
            EE12T = XE1T[IK] - Math.Pow(XC2GES[IK-1],2)/8.37225E+03;
            EPT = XPT[IK-1];
            ET12T = VISUM(EPT,EE12T,13);
            EX0 = 1.04;
            
            if(ET12T < 0.0) EX0 =-ET12T;
            if (LIGHT[3] != 2) goto label7550;
            sw16.WriteLine("1");
            //7500 FORMAT('1')
            sw16.WriteLine("\n\n STFDI1      STFDIZ      XUPM        FLUT        NTAKEN      STFZ");
            sw16.WriteLine(" {0}{1}{2}{3}{4}{5} ", STFDI1.ToString("0.00000E+0").PadLeft(12),STFDIZ.ToString("0.00000E+0").PadLeft(12),
                XUPM.ToString("0.00000E+0").PadLeft(12),FLUT.ToString("0.00000E+0").PadLeft(12),NTAKEN.ToString().PadLeft(12),STFZ.ToString("0.00000E+0").PadLeft(12));
            //7504 FORMAT(' ',4G12.4,I12,G12.4)
            sw16.WriteLine("\n\n TALMIN      TALMAX      TABANZ     TASAXE     NTAPRF TAOEFF  TAKF1      TAKFZ      HS1MIN      HS1MAX     HSZMIN       HSZMAX");
            
            
            string p;
            for(int I = 1; I <= IJEND; I++)
            {
                p = "";
                p = p + TALMIN[I].ToString("0.000E+0").PadLeft(12) + TALMAX[I].ToString("0.000E+0").PadLeft(12) + TABANZ[I].ToString("0.000E+0").PadLeft(11) + 
                    TASAXE[I].ToString("0.000E+0").PadLeft(11) + NTAPRF[I].ToString().PadLeft(5) + TAOEFF[I].ToString("0.000E+0").PadLeft(10) + TAKF1[I].ToString("0.000E+0").PadLeft(11) + 
                    TAKFZ[I].ToString("0.000E+0").PadLeft(11) + HS1MIN[I].ToString("0.000E+0").PadLeft(12) + HS1MAX[I].ToString("0.000E+0").PadLeft(12) + HSZMIN[I].ToString("0.000E+0").PadLeft(12) + 
                    HSZMAX[I].ToString("0.000E+0").PadLeft(12);
                
                sw16.WriteLine(" {0}", p);
            }
            //(TALMIN[I],TALMAX[I],TABANZ[I],TASAXE[I],NTAPRF[I],TAOEFF[I],TAKF1 [I],TAKFZ [I],HS1MIN[I],HS1MAX[I],HSZMIN[I],HSZMAX[I], I=1,IJEND)
            //7512 FORMAT(' ',2G12.4,2G11.3,I5,G10.3,2G11.3,4G12.4)
            
            sw16.WriteLine("\n\n TAZLE       TAZLA       TAFDP       EZETA       ");
            II = IJEND + 1;

            //WRITE (16,7514) (TAZLE[I],TAZLA[I],TAFDP[I],EZETA[I],I=1,II)
            //7514 FORMAT(' ',4G12.4)

            for(int I = 1; I <= IJEND; I++)
            {
                p = "";
                p = p + TAZLE[I].ToString("0.000E+0").PadLeft(12) + TAZLA[I].ToString("0.000E+0").PadLeft(12) + TAFDP[I].ToString("0.000E+0").PadLeft(12) + 
                    EZETA[I].ToString("0.000E+0").PadLeft(12);
                
                sw16.WriteLine(" {0}", p);
            }

            sw16.WriteLine("\n\n XPT            XE1T");
            sw16.WriteLine(" {0}{1} ", EPT.ToString("0.00000E+0").PadLeft(15),EE12T.ToString("0.00000E+0").PadLeft(15));
            
            sw16.WriteLine("\n\n NUESTF");
            IJ1 =IIEND+1;

            string q = "";
            for(int i = 1; i <= IJ1; i++)
                q = q + NUESTF[i].ToString().PadLeft(12);
            sw16.WriteLine(" {0}", q);      //7522) (NUESTF[I],I=1,IJ1)
            //7522 FORMAT(' ',6I12)
            
            sw16.WriteLine("\n\n XPT            XE1T           T1T            XE2T          T2T            XG             XH0            VOLUME");
            //7524 FORMAT("\n\n XPT            XE1T           T1T            XE2T          T2T            XG             XH0            VOLUME");
            IJ1 =NUESTF[1];
            IJ2 =NUESTF[IIEND+1]-1;
            
            //sw16.WriteLine("",7526) (XPT[I],XE1T[I],T1T[I],XE2T[I],T2T[I],XG[I],XH0[I],VOLUME[I],I=IJ1,IJ2)
            //7526 FORMAT(' ', 8G15.7)
            for(int I = IJ1; I <= IJ2; I++)
            {
                p = "";
                p = p + XPT[I].ToString("0.000E+0").PadLeft(15) + XE1T[I].ToString("0.000E+0").PadLeft(15) + T1T[I].ToString("0.000E+0").PadLeft(15) + 
                    XE2T[I].ToString("0.000E+0").PadLeft(15) + T2T[I].ToString("0.000E+0").PadLeft(15) + XG[I].ToString("0.000E+0").PadLeft(15) + 
                    XH0[I].ToString("0.000E+0").PadLeft(15) + VOLUME[I].ToString("0.000E+0").PadLeft(15);
                
                sw16.WriteLine(" {0}", p);
            }
            
        label7550:  //CONTINUE
            QKOND = false;
            QFEST = false;
            II =0;
            
        label70:
            II =II+1;
            IST = 1;
            
        label71:
            IK = NUESTF[II];
            if (IST == 2) IK = NUESTF[II+1] - 1;
            if (IST == 1 && XYZXYZ == 0.0) IK = NUESTF[II] - 1;
            IZ = 2 * (II-1) + IST;
            A1 = Math.Pow(XC2GES[IK],2)/8.37225E+03;
            EE12T = XE2T[IK] - A1;
            if (IST == 1 && XYZXYZ == 0.0) EE12T = XE1T[IK+1] - A1;
            EPT = XPT[IK];
            ET12T = VISUM(EPT,EE12T,13);

            //9001 FORMAT(' ',2I3,11F11.5)
            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5} ", II.ToString().PadLeft(3),IK.ToString().PadLeft(3),Math.Round(EE12T,5).ToString().PadLeft(11),
                    Math.Round(ET12T,5).ToString().PadLeft(11),Math.Round(EPT,5).ToString().PadLeft(11),Math.Round(XYZXYZ,5).ToString().PadLeft(11));
            
            EVS[IZ] = VISUM(EPT,ET12T,10);
            if (XYZXYZ == 0.0) goto label72;
            A1 = Math.Pow(XC2GES[IK-1],2)/8.37225E+03;
            A2 = XE1T[IK] - A1;
            if (IST != 2 || II != IIEND) goto label74;
            EE12T = A2;
            EPT = XPT[IK-1];
            ET12T = VISUM(EPT,EE12T,13);
            goto label72;
            
        label74:
            EE12T = (EE12T + A2)/2.0;
            A1 = VISUM(EPT,ET12T,12);
            A2 = VISUM(XPT[IK-1],A2,13);
            A2 = VISUM(XPT[IK-1],A2,12);
            A1 = (A1 + A2)/2.0;
            ET12T = EE12T;
            EPT = VISUM(A1,ET12T,15);
            
        label72:
            ETT = ET12T;
            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6} ", II.ToString().PadLeft(3),IZ.ToString().PadLeft(3),Math.Round(EE12T,5).ToString().PadLeft(11),
                    Math.Round(ET12T,5).ToString().PadLeft(11),Math.Round(EPT,5).ToString().PadLeft(11),Math.Round(A1,5).ToString().PadLeft(11),Math.Round(A2,5).ToString().PadLeft(11));
            
            if(ET12T < 0.0)
                ET12T = UW0011(EPT,1);
            ET12T=ET12T-273.15;
            EDTX19 = 0.0;
            
            if (ET12T  <  400.0  ||  LNKNR  ==  6) goto label77;
            A1 = 2.944 + 24.183 * Math.Pow((Math.Abs(Math.Log(ET12T/490.0))),2.224);
            EDTX19 = 38.0 - Math.Exp(A1);
            if (EDTX19 < 0.0) EDTX19 = 0.0;
            
        label77:
            ET02 = 0.0;
            ET105 = 0.0;
            ETSIGA = 0.0;
            if (LNKNR != 6) goto label1;
            if (ET12T <= 477.0) goto label1;
            ET02 = 37.8 + 0.483*ET12T;
            ET105 = 35.6 + 0.112*ET12T;
            ETSIGA = -880.6 + 2.75*ET12T - 0.001895*ET12T*ET12T;
            
        label1:
            ET02 = ET12T - ET02 -EDTX19;
            ET105 = ET12T - ET105 - EDTX19;
            ETSIGA = ET12T - ETSIGA - EDTX19;
            RH0008(ETX1,ETY1,ET02 ,1,1,18,1,18, ref EX1 /*,&85*/);
            EX1 =EX1*0.5;
            if(ET105  < 425.0) goto label75;
            RH0008(ETX1,ETY1,ET105 ,1,2,18,9,18, ref EY1 /*,&85 */);
            EY1 =EY1/1.25;
            if(EX1 > EY1) EX1 =EY1;
            
        label75:
            ESIGZ[IZ]=EX1;
            EX =-ETT;
            if(ETT < 0.0) goto label76;
            EX =1.04;
            if(EPT > 165.0) goto label76;
            ETT =UW0011(EPT,1)-273.15;
            if(ET12T < ETT+30.0) EX =1.02;
            
        label76:
            IY =3;
            if(EX0 > 1.0 && EX > 0.96) IY =2;
            if(EX0 > 1.0 && EX > 1.03) IY =1;
            A1 = EFBLE[IY];
            if (!QFEST) goto label73;
            A1 = A1 * EFBLEX/1.4;
            
        label73:
            ECOSLE[IZ]=1.0/Math.Sqrt(1.0+ A1*A1);
            ECOSLA[IZ]=1.0/Math.Sqrt(1.0+ Math.Pow(EFBLA[IY],2));
            ESINLE[IZ]=A1 *ECOSLE[IZ];
            ESINLA[IZ]=EFBLA[IY]*ECOSLA[IZ];
            
            for(IY = 1; IY <= 7; IY++)  //DO 80 IY =1,7
            {
                RH0008(ETX2,ETY2,ETSIGA ,1,IY,14,1,14, ref EY1 /*,&85 */);
                EX1 =EY1*ECOS1[IY];
                EY1 =EY1*ESIN1[IY];
                ETSMLE[IY, 1]=-EY1*ECOSLE[IZ]+EX1*ESINLE[IZ];
                ETSALE[IY, 1]= EY1*ESINLE[IZ]+EX1*ECOSLE[IZ];
                ETSMLA[IY,IZ]=-EY1*ECOSLA[IZ]+EX1*ESINLA[IZ];
                ETSALA[IY,IZ]= EY1*ESINLA[IZ]+EX1*ECOSLA[IZ];
            }
            RH0008(ETSMLE,ETSALE,0.0,1,1,7,1,7, ref EY1 /*,&85 */);
            ESALE[IZ]=EY1*ESINLE[IZ];
            if (QFEST) goto label555;
            if (QKOND) goto label556;
            IST = IST + 1;
            if (IST == 2) goto label71;
            if(II  != IIEND ) goto label70;
            goto label90;
            
        label85:
            II2 = 13;
            KFELER=1013;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            return;
            
        label90:
            ETAND =(STFDIZ-STFDI1)/EALMIN[IJEND];
            EZOPT =0.0;
            IH1 = 0;
            QEND = false;
            ITER95 = 0;
            
        label95:
            ITER95 = ITER95 + 1;
            if (ITER95 != 15) goto label96;
            II2 =3;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            goto label3650;
            
        label96:
            IZEIG =0;
            
            for(I = 1; I <= 10; I++)    //DO 91 I=1, 10
            {
                IZAUSG[I] = 0;
                ELEIST[I] = 0.0;
            }   //91 CONTINUE
            IOPTX = 0;
            IIFIX = 0;
            IL1 =0;
            IZUTEI = 0;
            IAUSK =0;
            QTROM = false;
            QWEICH = true;
            QZEIC = false;
            QOPT = true;
            QOPTX = false;
            if (EABANZ[IJEND] < 0.0) QZEIC = true;
            QDISC = false;
            if (EABANZ[IJEND] < 0.0) QDISC = true;
            IAUSKZ = 0;
            IITERS = 0;
            ITER=0;
            
        label100:
            ITER=ITER+1;
            if (ITER != 40) goto label101;
            II2 =3;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            if (IH1 == 0) goto label895;
            II = IIAUS;
            goto label910;
            
        label101:
            if (IITERS != 0) goto label105;
            II =0;
            
        label99:
            II =II+1;
            
        label105:
            IK1 =NUESTF[II];
            IK2 =NUESTF[II+1]-1;
            IX8 = IK1;
            IX9 = IK2;
            ELRVOR = ELRGES[II];
            ELRGM = 0.0;
            ELRGP = 0.0;
            IZU =0;
            EG =XG[IK1]/FLUT;
            ESH0 =0.0;
            
            for(IK = IK1; IK <= IK2; IK++)  //DO 110 IK=IK1,IK2
                ESH0 =ESH0+XH0[IK];
            
            if (EABANZ[IJEND] >= 0.0) goto label111;
            A1 = Math.Pow(XC2GES[IK1],2)/8.37225E+03;
            A2 = Math.Pow(XC2GES[IK2],2)/8.37225E+03;
            A1 = XE2T[IK1] - A1;
            A2 = XE2T[IK2] - A2;
            A1 = VISUM(XPT[IK1],A1,13);
            A2 = VISUM(XPT[IK2],A2,13);
            EV[1] = VISUM(XPT[IK1],A1,10);
            EV[2] = VISUM(XPT[IK2],A2,10);
            
        label111:
            IK1 =2*(II-1)+1;
            IK2 =2*(II-1)+2;
            if (EABANZ[IJEND] < 0.0) goto label112;
            EV[1] = EVS[IK1];
            EV[2] = EVS[IK2];
            
        label112:
            IJM1 = 0;
            if(II  > 1)
                IJM1 = IIOPT[II-1];
            IJ =IIOPT[II];
            EX2 = 0.0;
            EX1 = 2.0 * EBM[II] + ESAX[II];
            if (EABANZ[IJEND] >= 0.0 && XYZXYZ == 0.0) EX1 = 0.0;
            if(II == 1) goto label140;
            EX2 =ELRGES[II-1]+EABANZ[IJM1];
            if(ELGES[II-1] == 0.0 ) goto label140;
            if(ELRGES[II-1] < EALMIN[IJM1]) EX2 =EALMIN[IJM1]+EABANZ[IJM1];
            
        label140:
            EDI[IK1] =STFDI1+ETAND*(EX2+EX1);
            if(ELRGES[II] == 0.0) EDI[IK2] =EDI[IK1];
            if(ELRGES[II] != 0.0) EDI[IK2] =STFDI1+ETAND*ELRGES[II];
            IJ1 =IJM1+1;
            IJ2 =IJ;
            EKF[1] = EAKF1[IJ2];
            EKF[2]=EAKFZ[IJ2];
            EEPSV =EAOEFF[IJ2];
            ETAZLV = ETAZLA[IJ2];
            ESAXV =EASAXE[IJ2];

            if (ETAZLV != 1.0 && EABANZ[IJEND] >= 0.0)
                ESAXV = ESAXV + 0.5;
            IPRF =ITAPRF[IJ2];
            if (EEPSMA[IPRF] <= 0.0) EEPSMA[IPRF] = 0.8;
            EEPS[2*II-1] =EEPSV;
            IST = 1;
            ITER1 =0;
            ED1 =0.0;
            ETAN1 = 0.0;
            ETANDR = 0.0;
            IZ8 = 0;
            IZ9 = 0;
            IZ10= 0;
            Z10 = 0.0;
            
        label310:
            IK =2*(II-1)+IST;
            IY =IK;
            EDEPS = 0.0;
            IZ1 = 0;
            IZ2 = 0;
            EE1 =0.0;
            EH1 =0.0;
            EEPS[2*II] = EEPSV;
            
        label400:
            A1 = 0.92;
            if (XYZXYZ == 0.0) goto label401;
            if (IST == 1) A1 = ETAUOP[IX8];
            if (IST == 2) A1 = ETAUOP[IX9];
            
        label401:
            if (IPRF != 9) goto label402;
            A2 = EEPS[IK]/Math.Sqrt(1.0-Math.Pow(EEPS[IK],2));
            EPHI = 3.0243 + 4.7355* Math.Pow(EEPS[IK],2.695);
            EPHI = A2 * (A1*EPSI[II] + 0.555*EPHI)/EPHI;
            goto label403;
            
        label402:
            EPHI =(A1 *EPSI[II]+2.0)/(4.0*Math.Sqrt(1.0 - Math.Pow(EEPS[IK],2)/EEPS[IK]));
            
        label403:
            EY1 = EG*EV[IST]*1.69E+09/(XUPM*EPHI*Math.Pow(EDI[IK],3));
            if(EH[IK] != 0.0) EX2 =EH[IK]/EDI[IK];
            if(EH[IK] == 0.0) EX2 =0.5*Math.Sqrt(EY1);
            
        label410:
            EX1 = EX2;
            EX2 = EX1-((((EX1+2.0)*EX1+1.0)*EX1)-EY1)/((3.0*EX1+4.0)*EX1+1.0);
            if(Math.Abs(EX1/EX2-1.0) > 0.5E-3) goto label410;
            EH[IK] =EX2* EDI[IK];
            EDM =EH[IK] +EDI[IK];
            EUM = EDM*XUPM*5.2359E-05;
            if (IST == 2) goto label411;
            IX1 = NUESTF[II] - 1;
            KT7 = UWA011(IX1,70);
            if (KT7 == 4 || KT7 > 7) goto label412;
            YC2GES[IX1] = XC2GES[IX1];
            goto label412;
            
        label411:
            IX1 = NUESTF[II+1] - 1;
            A1 = Math.Sqrt(1.0- Math.Pow(EEPS[IK],2))/EEPS[IK];
            A1 = Math.Pow((A1*EPHI*EUM - EUM),2);
            YC2GES[IX1] = Math.Sqrt(Math.Pow((EPHI*EUM),2) + A1);
            
        label412:
            if (IH1 == 0) goto label500;
            if(IST != 1) goto label435;
            EX1 =0.0;
            A1 = 2.0 * EBM[II] + ESAX[II];
            if (EABANZ[IJEND] >= 0.0 && XYZXYZ == 0.0) A1 = 0.0;
            EX2 = A1;
            if(II  == 1) goto label440;
            EX1 = ELRGES[II-1] + EABANZ[IJM1];
            EX2 = EX1 + A1;
            if(ELGES[II-1] == 0.0 ) goto label440;
            if(ELRGES[II-1] < EALMIN[IJM1]) EX1 = EALMIN[IJM1]+EABANZ[IJM1];
            EX2 = EX1 + A1;
            goto label440;
            
        label435:
            EX2 =ELRGES[II];
            EX1 = EX2;
            
        label440:
            for(IJ2 = 1; IJ2 <= IJTL1; IJ2++)   //DO 445 IJ2 =1,IJTL1
                if(EX1 < ETL1[IJ2]) 
                    goto label455;      //445 CONTINUE
            IJ2 =IJTL1;
            
        label455:
            EHMIN[IST]=(ETHMIN[IJ2]-ETHMIN[IJ2-1])/(ETL1[IJ2]-ETL1[IJ2-1])*(EX2 -ETL1[IJ2-1])+ETHMIN[IJ2-1];
            EHMAX[IST]=(ETHMAX[IJ2]-ETHMAX[IJ2-1])/(ETL1[IJ2]-ETL1[IJ2-1])*(EX2 -ETL1[IJ2-1])+ETHMAX[IJ2-1];
            
            if(!( EH[IK] < EHMIN[IST]  || EH[IK] > EHMAX[IST] )) goto label501;
            if (IZ1 != 0) goto label506;
            if( EEPS[IK] <= EEPSMI[IPRF] ||  EEPS[IK] >= EEPSMA[IPRF] ) goto label490;
            
        label506:
            EE2 = EE1;
            EE1 =EEPS[IK];
            EH2 =EH1;
            EH1 =EH[IK];
            if (EDEPS != 0.0) goto label504;
            IZ1 = 1;
            if (EH1 > EHMAX[IST]) IZ1 = 2;
            
        label504:
            if (IZ1 != 1) goto label502;
            A1 = EHMIN[IST]*1.001;
            EDEPS = EEPSMI[IPRF]- EE1;
            goto label503;
            
        label502:
            A1 = EHMAX[IST]*0.999;
            EDEPS = EEPSMA[IPRF]- EE1;
            
        label503:
            if (EE2 != 0.0) EDEPS = (EE2-EE1)/(EH2-EH1) * (A1-EH1);
            if(Math.Abs(EDEPS) > 0.025)     EDEPS =EDEPS/Math.Abs(EDEPS)*0.025;
            EEPS[IK] =EEPS[IK]+EDEPS;
            if (EEPS[IK]  <  0.01) goto label507;
            IZ2 = IZ2 + 1;
            if (IZ2 < 50) goto label400;
            IAUSK = 4;
            goto label507;
            
        label501:
            if (Math.Abs(EDEPS/EEPS[IK]) > 0.0002)goto label506;
            if (IZ1 == 0) goto label500;
            
        label507:
            A2 = EEPS[IK];
            if (EEPS[IK] < EEPSMI[IPRF]) EEPS[IK] = EEPSMI[IPRF];
            if (EEPS[IK] > EEPSMA[IPRF]) EEPS[IK] = EEPSMA[IPRF];
            if (A2 == EEPS[IK]) goto label500;
            IZ1 = 0;
            EDEPS = 0.0;
            goto label400;
            
        label490:
            if (IZAEHL != 0 && (QDISC) ) IAUSK = 4;
            
        label500:
            if(EABANZ[IJEND] < 0.0) goto label550;
            
        label555:
            if (!QFEST) goto label560;
            IK = 2 * (II-1) + IST;
            IY = IK;
            
        label560:
            ESIGF =EFF[IPRF]*EH[IK] *EDM*XUPM*XUPM*4.33E-10;
            ESIGD = 0.0;
            RH0008(ETX3,ETY3,EEPS[IK],IPRF,IPRF,10,1,10, ref EBLS /*,&505*/);
            if (ETAZLV == 1.0) goto label561;
            EHDB = 0.150 * EBLA[IK]/EBLS;
            if (EHDB < 3.0) EHDB = 3.0;
            A1 = EDM + EH[IK] + EHDB;
            ESIGD = A1 * XUPM*XUPM * EHDB * A1/EDM * EBLS * ETLS[IPRF] / EFPROV[IPRF] * 4.33E-10;
            
        label561:
            ESIGF = ESIGF + ESIGD;
            A2 = ESIGF;
            A3 = 0.8 * ESIGZ[IY];
            if (ESIGF > A3) ESIGF = A3;
            if (IZ8 != 0) ESIGF = Z10;
            if (IZ8 != 0) A3 = ESIGF;
            RH0008(ETSMLA,ETSALA,ESIGF*ESINLA[IY],IY,IY,7,1,7, ref EY1 /*,&85*/);
            ESALA =(EY1-ESIGF*ECOSLA[IY])*ESINLA[IY];
            RH0008(ETX3,ETY4,EEPS[IK],IPRF,IPRF,10,1,10, ref ELAM   /*,&505*/);
            ELAM =ELAM*3.14159/180.0;
            goto label510;
            
        label505:
            II2 = 14;
            KFELER=1014;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            return;
            
        label510:
            EX1 = Math.Atan(1.0/(4.0*EEPS[IK]*0.95*EPHI/EEPS[IK]/EPSI[II]*(2.0*EPHI/EEPS[IK]*Math.Sqrt(1.0-EEPS[IK]*EEPS[IK])-1.0)));
            EY1 =1.025E+04/(3.6*2.0*3.14159)*EEPS[IK]/EPHI*EBLS*Math.Sqrt(EPSI[II]/19.62*ETLS[IPRF]*(Math.Cos(EX1-ELAM)/EW1[IPRF]+Math.Sin(EX1-ELAM)/EW2[IPRF])/Math.Sin(EX1));
            EY1 =EG*EKF[IST]*Math.Sqrt(EV[IST]*(EH[IK]+EHDB*0.30)/EH[IK])*EY1*EC1/(EDM*EEPS[IK]);
            EBLE[IK]=EY1/Math.Sqrt(ESALE[IY]/ESINLE[IY]*ECOSLE[IY]);
            EX1 =ESIGZ[IY]-ESIGF;
            EX2 =ESALA/ESINLA[IY]*ECOSLA[IY];
            if(EX1 > EX2) EX1 =EX2;
            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", II.ToString().PadLeft(3),IK.ToString().PadLeft(3),Math.Round(EH[IK],5).ToString().PadLeft(11),
                    Math.Round(EHDB,5).ToString().PadLeft(11),Math.Round(EDM,5).ToString().PadLeft(11),Math.Round(ESIGF,5).ToString().PadLeft(11),
                    Math.Round(ESIGD,5).ToString().PadLeft(11),Math.Round(ESIGZ[IY],5).ToString().PadLeft(11),Math.Round(EX1,5).ToString().PadLeft(11),
                    Math.Round(EX2,5).ToString().PadLeft(11));
            if (EX1 < EC2) EX1 = EC2;
            ESIGB = EX1;
            if(EX1 >= EC2) EBLA[IK]=EY1/Math.Sqrt(EX1);
            if (EBLE[IK]/EBLS >= EH[IK]/EC12) goto label531;
            EBLE[IK] = EH[IK]/EC12 * EBLS;
            
        label531:
            if (EBLA[IK]/EBLS >= EH[IK]/EC12) goto label532;
            EBLA[IK] = EH[IK] /EC12 * EBLS;
            
        label532:
            if (EBLE[IK] >= EBMIN[IPRF]) goto label530;
            EBLE[IK] = EBMIN[IPRF];
            
        label530:
            if (EBLA[IK] >= EBMIN[IPRF]) goto label541;
            EBLA[IK] = EBMIN[IPRF];
            
        label541:
            if (EX1 > EC2&&A3 != ESIGF) goto label540;
            if (IZAEHL == 0 || IH1 == 0 || (!QDISC))    goto label540;
            if (1.0-ESIGF/A2 <= 0.15) goto label540;
            IZX = 16;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", IZX.ToString().PadLeft(2));
            sw16.WriteLine(" FLIEHKRAFTSPANNUNG ZU HOCH,KON.-VERW. SCHAUFELN EINSETZEN", IK9.ToString().PadLeft(6),II.ToString().PadLeft(6),
                Math.Round(A2,2).ToString().PadLeft(11),Math.Round(ESIGF,2).ToString().PadLeft(11),Math.Round(ESIGB,2).ToString().PadLeft(11),
                Math.Round(ESIGZ[IY],2).ToString().PadLeft(11));
            //9002 FORMAT (' ','FLIEHKRAFTSPANNUNG ZU HOCH,KON.-VERW. SCHAUFELN EINSE UWA066
            //1TZEN',2I6,4F11.2)
            
        label540:
            ELSM[IST]=(EBLE[IK]+EBLA[IK])/(2.0*EBLS);
            A1 = EBLA[IK]/EBLS;
            A2 = 64.0*3000.0/XUPM * ETLS[IPRF]/EFPROV[IPRF] * 0.319882;
            if (A1 <= A2) goto label550;
            if (!QDISC) goto label550;
            if (QLELA[IK]) goto label550;
            QFEST = true;
            QLELA[IK] = true;
            A3 = 100.0/64.0 * A2;
            EFBLEX = 1.4 + (A1-A2) * (2.0-1.4)/(A3-A2);
            
            if (EFBLEX > 2.0) EFBLEX = 2.0;
            goto label71;
            
        label550:
            IST = IST + 1;
            if(IST == 2) goto label310;
            EUM = 0.0;
            if (EABANZ[IJEND] < 0.0 || XYZXYZ != 0.0) goto label574;
            if (ITER > 1) EUM = (EDI[IK2]+EH[IK2]-EDI[IK1]-EH[IK1])/EZ[II];
            
        label574:
            EUM = (EDI[IK1]+EH[IK1]+EUM+EDI[IK2]+EH[IK2])/2.0*XUPM*3.14159/60E+03;
            IX1 = NUESTF[II] - 1;
            IX2 = NUESTF[II+1] - 1;
            YDFAKT[IX2] = ESH0 + (XC2GES[IX2]*XC2GES[IX2]-XC2GES[IX1]*XC2GES[IX1])/8.37225E+03;
            A1 = YDFAKT[IX2] + (YC2GES[IX1]*YC2GES[IX1]-YC2GES[IX2]*YC2GES[IX2])/8.37225E+03;
            XDFAKT[IX2] = A1;
            EZ[II] = 8.37225E+03/EPSI[II]*A1/EUM*EUM;
            
            if(EABANZ[IJEND] >= 0.0) goto label600;
            EBM [II]=(ELGES[II]+ESAXV)/(2.0*STFZ)-ESAXV;
            EDZ =STFZ-EZ[II];
            EZ[II]=STFZ;
            ESAX[II]=ESAXV;
            goto label611;
            
        label600:
            EBM[II] =(EBLE[IK1]+EBLA[IK1]+EBLE[IK2]+EBLA[IK2])/4.0;
            //goto label(601,602,602,601,601,606,601,608,609) ,
            if(IPRF == 1)   goto label601;
            if(IPRF == 2)   goto label602;
            if(IPRF == 3)   goto label602;
            if(IPRF == 4)   goto label601;
            if(IPRF == 5)   goto label601;
            if(IPRF == 6)   goto label606;
            if(IPRF == 7)   goto label601;
            if(IPRF == 8)   goto label608;
            if(IPRF == 9)   goto label609;
            
        label601:
            ESAX[II]=0.2*(ELSM[1] + ELSM[2])/2.0;
            goto label610;
            
        label602:
            ESAX[II]=0.2*(ELSM[1]+ELSM[2])/2.0;
            goto label610;
            
        label606:
            goto label610;
            
        label608:
            goto label610;
            
        label609:       ;   // CONTINUE
            
        label610:
            if(ESAXV > ESAX[II]) ESAX[II]=ESAXV;
            
        label611:
            EDLRA[II]=2.0*EZ[II]*EBM[II]+(2.0*EZ[II]-1.0)*ESAX[II];
            IJA =IJM1;
            IJE =IJ;
            EDLR[II]=EDLRA[II];
            if(II == 1) goto label615;
            EDLR[II] =EDLR[II]+EABANZ[IJA];
            if(ELGES[II-1] != 0.0 && ELRGES[II-1] < EALMIN[IJA])
                EDLR[II] =EDLR[II]+EALMIN[IJA]-ELRGES[II-1];
            
        label615:
            IJ2 =IJA;
            
        label625:
            IJ2 =IJ2+1;
            if(IJ2 == IJE) goto label630;
            if(ITAKEN[IJ2] != 0) EDLR[II] =EDLR[II]+EABANZ[IJ2];
            goto label625;
            
        label630:
            if(II == 1) ELRGES[II]=EDLR[II];
            if(II != 1) ELRGES[II]=EDLR[II]+ELRGES[II-1];
            if (LIGHT[3] != 2) goto label700;
            
            sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", II.ToString().PadLeft(3),IJ.ToString().PadLeft(3),Math.Round(EZ[II],5).ToString().PadLeft(11),Math.Round(A1,5).ToString().PadLeft(11),Math.Round(ELRGES[II],5).ToString().PadLeft(11),
            Math.Round(EDLR[II],5).ToString().PadLeft(11),Math.Round(ESAX[II],5).ToString().PadLeft(11),Math.Round(EBM[II],5).ToString().PadLeft(11),Math.Round(ETAN1,5).ToString().PadLeft(11),
            Math.Round(EPSI[II],5).ToString().PadLeft(11),Math.Round(EPHI,5).ToString().PadLeft(11),Math.Round(ESIGF,5).ToString().PadLeft(11),Math.Round(ESIGB,5).ToString().PadLeft(11));

            sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", IK1.ToString().PadLeft(3),IK2.ToString().PadLeft(3),Math.Round(EDI[IK1],5).ToString().PadLeft(11),
                Math.Round(EDI[IK2],5).ToString().PadLeft(11),Math.Round(EHMAX[1],5).ToString().PadLeft(11),Math.Round(EH[IK1],5).ToString().PadLeft(11),Math.Round(EHMAX[2],5).ToString().PadLeft(11),
                Math.Round(EH[IK2],5).ToString().PadLeft(11),Math.Round(EEPS[IK1],5).ToString().PadLeft(11),Math.Round(EEPS[IK2],5).ToString().PadLeft(11),Math.Round(ELSM[1],5).ToString().PadLeft(11),
                Math.Round(ELSM[2],5).ToString().PadLeft(11),Math.Round(EX0,5).ToString().PadLeft(11));
            //9001 FORMAT(' ',2I3,11F11.5)
            
        label700:
            ETANDR=(EDI[IK2]-STFDI1)/ELRGES[II];
            
            if(Math.Abs(ETAND-ETANDR) <= ETW) goto label800;
            if(ED1 == 0.0) EX1 =ELRGES[II]*(ETAND-ETANDR);
            if (Math.Abs(ETANDR-ETAN1) == 0.0 ) ETANDR = ETANDR*1.00001;
            if(ED1 != 0.0) EX1 =(EDI[IK2]-ED1)/(ETANDR-ETAN1)*(ETAND-ETANDR);
            if(Math.Abs(EX1/EDI[IK2]) > 0.2) EX1 =EX1/Math.Abs(EX1)*0.2*EDI[IK2];
            A1 = Math.Abs(ELRGES[II]*(ETAND-ETANDR));
            if (Math.Abs(EX1) > A1) EX1 = A1 * EX1/Math.Abs(EX1) * 0.5;
            A2 = ETAND - ETANDR;
            if (A2 > 0.0) IZ9 = 1;
            if (A2 < 0.0) IZ10 = 1;
            if (ITER1 != 20) goto label720;
            if (IZ9 == 1&&IZ10 == 1) goto label720;
            IZ8 = 1;
            Z10 = ESIGF;
            
        label720:
            ED1 = EDI[IK2];
            EDI[IK2]=EDI[IK2]+EX1;
            if (ITER1 != 50) ELRGES[II] = (EDI[IK2]-STFDI1)/ETAND;
            ETAN1 = ETANDR;
            IST =2;
            ITER1 =ITER1+1;
            if (ITER1 != 50) goto label310;
            II2 =3;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            
        label800:
            EDLPA[II]=0.0;
            if(ELGES[II] == 0.0) goto label99;
            EZAE=0.0;
            IIA =IZEIG+1;
            IIE =II;
            II =IIA-1;
            
        label830:
            II =II +1;
            EZAE=EZAE+EZ[II];
            if(II != IIE) goto label830;
            if(EABANZ[IJEND] < 0.0) goto label880;
            if(EZOPT  == 0.0) goto label840;
            FZAE =EZOPT;
            
        label835:
            EKORR =FZAE-EZAE;
            ELRGM =ELRGES[II]+2.0* EKORR *EBM[II]+2.0* EKORR *ESAX[II];
            ELRGP =ELRGES[II]+2.0*(EKORR+1.0)*EBM[II]+2.0*(EKORR+1.0)*ESAX[II];
            
            if (LIGHT[3] == 2)
                sw16.WriteLine(" QOPT{0}{1}{2}{3}{4}{5}{6} ", EZAE.ToString("0.000000E+0").PadLeft(18),EZOPT.ToString("0.000000E+0").PadLeft(18),
                    FZAE.ToString("0.000000E+0").PadLeft(18),ELRGM.ToString("0.000000E+0").PadLeft(18),ELRGP.ToString("0.000000E+0").PadLeft(18),
                    ELMIN[IJ].ToString("0.000000E+0").PadLeft(18),ELMAX[IJ].ToString("0.000000E+0").PadLeft(18));
            //8003 FORMAT(' QOPT',7G18.8)
            A1 = Math.Abs(EKORR/EZOPT);
            A2 = Math.Abs((ELRGES[II]-ELRVOR)/ELRGES[II]);
            if (QDISC) goto label841;
            if (A1 > 0.002  || A2 > 0.002 ) goto label844;
            QDISC = true;
            goto label844;
            
        label841:
            if (QZEIC) goto label870;
            if (A1  < 0.0005&&IH1 == 1) QZEIC = true;
            if (A2  > 0.0005) QZEIC = false;
            if (!QZEIC || !QFEST) goto label844;
            IFEST = 1;
            goto label1000;
            
        label844:
            if (QZEIC && QEND) goto label871;
            if (!QZEIC || ELRGM <= ELMAX[IJ]) goto label839;
            QDISC = false;
            EZOPT = EZOPT - 1.0;
            QZEIC = false;
            QOPTX = true;
            goto label836;
            
        label839:
            if (QZEIC && IOPTX == 99) goto label871;
            if (QZEIC && ELRGP < ELMIN[IJ] && EPSI[II] > EPSIMI)
                QOPT = false;
            if (QZEIC && QOPTX) QOPT = true;
            goto label871;
            
        label870:
            if (ELRGM > ELMAX[IJ]) goto label836;
            if(ELRGP  < ELMIN[IJ]) goto label837;
            
        label871:
            ELRGES[II] = ELRGM;
            EZ[II] =EZ[II]+EKORR;
            EX1 =EZAE/FZAE;
            EZAE =FZAE;
            if (QZEIC && QEND) goto label900;
            if (QZEIC&&IOPTX == 99) goto label900;
            if (!QOPT) goto label900;
            if (QZEIC && QOPTX) goto label900;
            goto label881;
            
        label836:
            FZAE =FZAE-1.0;
            if(FZAE < (II-IZEIG)) goto label840;
            goto label835;
            
        label837:
            FZAE =FZAE+1.0;
            if(II  ==  IIEND) goto label840;
            XZAE =0.0;
            IY =II;
            
        label838:
            IY =IY+1;
            XZAE =XZAE+EZ[IY];
            if(ELGES[IY] == 0.0) goto label838;
            if(XZAE-(FZAE-EZIST)  <  (IY-II)) goto label840;
            goto label835;
            
        label840:
            IZM = HFIX(EZAE);
            EDZM = IZM-EZAE;
            EDZP = EDZM+1.0;
            ELRGM=ELRGES[II]+2.0*EDZM*EBM[II]+2.0*EDZM*ESAX[II];
            ELRGP=ELRGES[II]+2.0*EDZP*EBM[II]+2.0*EDZP*ESAX[II];
            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7} ", II.ToString().PadLeft(2),EBM[II].ToString().PadLeft(2),ELGES[II].ToString("0.000000E+0").PadLeft(18),
                    ELRGES[II].ToString("0.000000E+0").PadLeft(18),ELRGM.ToString("0.000000E+0").PadLeft(18),ELRGP.ToString("0.000000E+0").PadLeft(18),ELMIN[IJ].ToString("0.000000E+0").PadLeft(18),
                    ELMAX[IJ].ToString("0.000000E+0").PadLeft(18));
            //8000 FORMAT(' ',I2,7G18.8)
            if (QTROM) goto label850;
            IH1 = 1;
            if (QDISC) goto label842;
            A1 = Math.Abs((ELRGES[II]-ELGES[II])/ELGES[II]);
            A2 = Math.Abs((ELRGES[II]-ELRVOR )/ELGES[II]);
            if (A1 > 0.002  ||  A2 > 0.002 ) goto label2500;
            QDISC = true;
            goto label2500;
            
        label842:
            if (Math.Abs((ELRGES[II]-ELGES[II])/ELGES[II]) > 0.0005) goto label2500;
            if (Math.Abs((ELRGES[II]-ELRVOR)/ ELGES[II]) > 0.0005) goto label2500;
            QTROM = true;
            QAB = true;
            if (Math.Abs((ELRGES[II]-ELRGP )/ ELGES[II]) <= 0.0005) QAB = false;
            if (QAB) EZSOLL = EZAE + EDZM;
            if (!QAB) EZSOLL = EZAE + EDZP;
            IY = HFIX(EZSOLL+0.5);
            EZSOLL = IY;
            QDISC = false;
            if (!QFEST) goto label850;
            IFEST = 2;
            goto label1000;
            
        label850:
            EX1 = (II-IZEIG);
            if(EZAE+EDZM >= EX1) goto label855;
            EZAE =EZAE + EDZP;
            EDZ =EDZP;
            EZ[II]=EZ[II]+EDZP;
            IL1 =1;
            goto label900;
            
        label855:
            EDZ = EZSOLL -EZAE;
            EZAE = EZSOLL;
            EX1 = (EZAE-EDZ)/EZAE;
            A1 = Math.Abs((ELRGES[II]-ELRVOR)/ELRGES[II]);
            if (A1 <= 0.002 &&Math.Abs(1.0-EX1) <= 0.002 ) QDISC = true;
            if (A1 <= 0.0005&&Math.Abs(1.0-EX1) <= 0.0005) QZEIC = true;
            if (!QZEIC) goto label881;
            if (HFIX(EZSOLL+0.5) == HFIX(EZSOLL-EDZ )) goto label860;
            ELRGES[II] = ELRGP;
            EDZ = EDZP;
            EZ[II] = EZ[II] + EDZP;
            goto label865;
            
        label860:
            ELRGES[II] = ELRGM;
            EDZ = EDZM;
            EZ[II] = EZ[II] + EDZM;
            
        label865:
            EZAE = EZSOLL;
            
        label880:
            EX1 =(EZAE-EDZ)/EZAE;
            
        label881:       // CONTINUE
            EX2 = EPSI[IIA]*Math.Pow(EX1,0.9);
            if (IIE == IZEIG+1 && EZ[IIE] < 2.0) EX2 = 0.5*(EX2+EPSI[IIA]);
            II =IIA-1;
            
        label890:
            II =II +1;
            if (ITER == 39) goto label891;
            EPSI[II]=EX2;
            
        label891:
            if (II != IIE) goto label890;
            if (QDISC) goto label843;
            A1 = Math.Abs(1.0-EX1);
            if (A1 >= 0.005 ) goto label895;
            QDISC = true;
            goto label895;
            
        label843:
            if (Math.Abs(1.0-EX1) <= 0.0005 && QZEIC) goto label900;
            
        label895:
            IH1 =1;
            II =IIA;
            if (IAUSKZ == 0) ITER = 0;
            IAUSKZ = 1;
            IITERS = 1;
            IIAUS = IIE;
            goto label100;
            
        label900:
            if (QDISC) goto label905;
            QDISC = true;
            goto label895;
            
        label905:
            if(IH1 == 0) goto label895;
            
        label910:
            if (!QFEST) goto label848;
            IFEST = 3;
            
        label1000:
            QFEST = false;
            QKOND = true;
            II = IIA - 1;
            
        label999:
            II = II + 1;
            IST = 1;
            
        label998:
            IZ = 2 * (II-1) + IST;
            if (!QLELA[IZ]) goto label556;
            QLELA[IZ] = false;
            goto label71;
            
        label556:
            IST = IST + 1;
            if (IST == 2) goto label998;
            if (II != IIE) goto label999;
            QKOND = false;
            //goto label(844,850,848), 
            if(IFEST == 1)      goto label844;
            if(IFEST == 2)      goto label850;
            if(IFEST == 3)      goto label848;
            
        label848:
            IAUSKZ = 0;
            EZOPT =0.0;
            EDZ =0.0;
            IY = 0;
            if(II == IIEND) goto label3080;
            if (IOPTX == 99) goto label3085;
            if (!QOPT || IOPTX != 0) goto label3081;
            IY =II;
            
        label834:
            IY = IY + 1;
            ELRGES[IY]=ELRGES[IY]+2.0*(EZAE-EZIST)*(EBM[II]+ESAX[II]);
            if(IY != IIEND) goto label834;
            EDZ =-(EZAE-EZIST);
            
        label3085:
            if (IOPTX != 99) goto label3086;
            IY = IIOPT[IZEIG+1];
            IZX = IIOPT[II];
            
            for(IZ1 = IY; IZ1 <= IZMAXA; IZ1++)     //DO 3087 IZ1=IY ,IZX
                if (ELMIN[IZ1] != EALMIN[IZ1])
                    ELMIN[IZ1] = EALMIN[IZ1] + 0.1;     //3087 CONTINUE
            
        label3086:
            IOPTX = 0;
            IZEIG = II;
            IY = 0;
            goto label3080;
            
        label3081:
            IY = 1;
            
        label3080:
            II = IZEIG + IY;
            
        label3010:
            II =II+1;
            IZX =HFIX(EZ[II]+EDZ+0.5);
            EZX =IZX;
            
            if(EZX < 1.0) 
                EZX=1.0;
            
            EDZ =EDZ+EZ[II]-EZX;
            EX1 =EZX-EZ[II];
            EX2 =2.0*EX1*EBM[II]+2.0*EX1*ESAX[II];
            EPSI[II] = EPSI[II]*EZ[II]/EZX;
            EZ[II]=EZX;
            
            for(IZX = II; IZX <= IIEND; IZX++)      //DO 3020 IZX =II,IIEND
                ELRGES[IZX]=ELRGES[IZX]+EX2;
            
            if(II != IIEND) 
                goto label3010;
            
            if (Math.Abs(EDZ) <= 0.01) 
                goto label3070;
            II =IIEND+1;
            
        label3050:
            II =II-1;
            IZX =HFIX(EZ[II]+EDZ+0.5);
            EZX = IZX;
            
            if(EZX < 1.0) EZX=1.0;
            EDZ =EDZ+EZ[II]-EZX;
            EX1 =EZX-EZ[II];
            EX2 =2.0*EX1*EBM[II]+2.0*EX1*ESAX[II];
            EPSI[II] = EPSI[II]*EZ[II]/EZX;
            EZ[II]=EZX;
            
            for(IZX = II; IZX <= IIEND; IZX++)  //DO 3060 IZX =II,IIEND
                ELRGES[IZX]=ELRGES[IZX]+EX2;
            
            if(II !=  1) goto label3050;
            
        label3070:
            if (IIFIX == IIEND&&IOPTX == 99) goto label3000;
            if (IIFIX == IIEND&&IOPTX == 0&&QOPT) goto label3000;

            UWA067(IIEND, IJEND, IZEIG, ref ELMIN, ref ELMAX, ref EALMIN, ELRGES, ref ITAKEN, ELOPT, ref IIOPT, ref EDLPA, ref EABANZ, ref EBM,
                ref EZ, ref ESAX, ref EPSI, ref EZOPT, ref EZIST, ref IIFIX, ref EDI, ref EH, ref ITAPRF, ref EEPS, ref QOPT, ref QWEICH, ref IZAEHL,
                ref IOPTX, ref QEND, ref IZAUSG, ref ELEIST, ref ELEIWB, ref IEZTT, ref IEZTTO);
            
            if (IIE == IIFIX && QOPT && IOPTX == 0 && QWEICH) goto label3000;
            QOPT = true;
            QWEICH = true;
            II =IZEIG;
            if(IIFIX != IIEND) ELGES[IIFIX] = ELOPT[IIFIX];
            QTROM = false;
            ITER = 1;
            QZEIC = false;
            QDISC = false;
            IZUTEI =IZUTEI + 1;
            if (IZUTEI > 50) goto label3000;
            goto label99;
            
        label2500:
            if(EPSI[II] != EPSIMI) goto label2550;
            if (LIGHT[3] == 2)
                sw16.WriteLine("   {0}{1}{2}{3}{4}{5}{6} ", EBM[II].ToString("0.000000E+0").PadLeft(18),ELGES[II].ToString("0.000000E+0").PadLeft(18),
                    ELRGES[II].ToString("0.000000E+0").PadLeft(18),ELRGM.ToString("0.000000E+0").PadLeft(18),ELRGP.ToString("0.000000E+0").PadLeft(18),
                    ELMIN[IJ].ToString("0.000000E+0").PadLeft(18),ELMAX[IJ].ToString("0.000000E+0").PadLeft(18));
                //8001 FORMAT(' ',2X,7G18.8)
            
            EDLPA[II] =ELGES[II]-ELRGP;
            if(EDLPA[II] < 0.0) goto label2550;
            if (QTROM) goto label2503;
            QTROM = true;
            IH1 = 0;
            goto label850;
            
        label2503:
            ELRGES[II] = ELGES[II];
            EZAE =EZAE +EDZP;
            EZ[II]=EZ[II]+EDZP;
            
            if (II != IIEND) goto label900;
            ELRGES[II] = ELRGP;
            EDLPA[II] = 0.0;
            goto label900;
            
        label2550:
            EX1 =0.0;
            
            for(II = IIA; II <= IIE; II++)      //DO 2575 II =IIA,IIE
                EX1 =EX1+EDLRA[II];
            
            EX2 =EX1 + ELGES[IIE] - ELRGES[IIE];
            if(EX2 > 0.0) goto label2580;
            EZ[IIE]=EZ[IIE]+EDZM;
            if(IZU == 0 ) goto label3510;
            IITERS = 1;
            IIAUS = IIE;
            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}{3}{4} ", IZU.ToString().PadLeft(2), EX2.ToString("0.000000E+0").PadLeft(18),EX1.ToString("0.000000E+0").PadLeft(18),
                    ELGES[IIE].ToString("0.000000E+0").PadLeft(18),ELRGES[IIE].ToString("0.000000E+0").PadLeft(18));
                //8010 FORMAT (' ',I2,4G18.8)
            II = IIE + 1;
            if (II > 5) goto label3510;
            goto label100;
            
        label2580:
            EX1 = Math.Pow((EX1/EX2),0.9);
            EX1 = EX1*EPSI[IIA];
            
            for(II = IIA; II <= IIE; II++)  //DO 2600 II =IIA,IIE
            {
                if (ITER == 19) 
                    continue;
                EPSI[II] = EX1;
            }   //2600 CONTINUE
            II =IIA;
            IITERS = 1;
            IIAUS = IIE;
            goto label100;
            
        label3000:
            EX1 = (IIEND);
            EZAE=0.0;
            
            for(II = 1; II <= IIEND; II++)  //DO 3005 II=1,IIEND
                EZAE=EZAE+EZ[II];
            STFZAL=EZAE+1.0;
            if (EX1 > EZAE) goto label3003;
            goto label3500;
            
        label3003:
            for(IZX = 1; IZX <= 50; IZX++)      //DO 3002 IZX = 1, 50
            {
                sw16.WriteLine(" ++++++++++++++++++++++++++++++ RECHNUNG UNGUELTIGTROMMELTEILZAHL GROESSER ALS STUFENZAHL ++++++++++++++++++++++++++++++");
            }
            
        label3500: 
            for(II = 1; II <= IIEND; II++)      //DO 3200 II=1,IIEND
            {
                EX1 =Math.Abs((EKM[II]-EBM[II])/EBM[II]);
                if (EX1 > 0.001) IL1 = 1;
                if(IIOPT[II] != IIOPT1[II]) IL1=1;
                EKM[II] =EBM[II];
                IIOPT1[II]=IIOPT[II];
            }
            if (QEND) IL1 = 0;
            if(IL1 == 0) goto label3650;
            IZAEHL=IZAEHL+1;
            if(IZAEHL != 10) goto label3510;
            II2 =3;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            
            for(II = 1; II <= IIEND; II++)  //DO 3250 II=1,IIEND
                IIOPT[II] = IIOPT1[II];
            goto label3650;
            
        label3510:
            IJ =0;
            
        label3515:
            IJ =IJ+1;
            if(IJ == IJEND) goto label3520;
            if (ELMIN[IJ] < EALMIN[IJ]+0.099) goto label3516;
            ELMIN[IJ] = EALMIN[IJ] + 0.001;
            goto label3517;
            
        label3516:
            ELMIN[IJ] = EALMIN[IJ];
            
        label3517:
            ELMAX[IJ] = EALMAX[IJ] - EABANZ[IJ];
            goto label3515;
            
        label3520:
            II =0;
            
        label3525:
            II =II+1;
            IJM1 =0;
            
            if(II != 1)
                IJM1 = IIOPT[II-1];
            
            IJ =IIOPT[II];
            IJA =IJM1;
            IJE =IJ;
            IJ2 =IJA;
            IJ =0;
            
        label3550:
            IJ2 =IJ2+1;
            if(IJ2-1 != IJA) goto label3560;
            if(IJ2  !=  1) 
                EX1 = ELMIN[IJ2-1] + EABANZ[IJ2-1];
            if(IJ2  ==  1) EX1=0.0;
            EX1=EX1+ 1.0005 * (2.0*EBM[II]+ESAX[II]);
            goto label3570;
            
        label3560:
            EX1 = ELMIN[IJ2-1];
            
            if(ITAKEN[IJ2-1] !=  0) 
                EX1 = EX1 + EABANZ[IJ2-1];
            
        label3570:
            if(IJ2  !=  1) EDLR[IJ2] = EX1 - ELMIN[IJ2-1];
            if(IJ2  ==  1) EDLR[IJ2]=EX1;
            if(IJ2 == IJEND) goto label3580;
            if(ELMIN[IJ2] < EX1) ELMIN[IJ2]=EX1;
            if(IJ2 != IJE) goto label3550;
            goto label3525;
            
        label3580:
            IJ2 =IJ2-1;
            if(IJ2 + 2 != IJ) 
                goto label3581;
            IJ2 =IJ2+1;
            if(ITAKEN[IJ2] != 0) IJ2 =IJ;
            goto label3651;
            
        label3581:
            if(IJ2 != 0) goto label3585;
            IZEIG =0;
            IIFIX = 0;
            IOPTX = 0;
            UWA067(IIEND, IJEND, IZEIG, ref ELMIN, ref ELMAX, ref EALMIN, ELRGES, ref ITAKEN, ELOPT, ref IIOPT, ref EDLPA, ref EABANZ, ref EBM,
                ref EZ, ref ESAX, ref EPSI, ref EZOPT, ref EZIST, ref IIFIX, ref EDI, ref EH, ref ITAPRF, ref EEPS, ref QOPT, ref QWEICH, ref IZAEHL,
                ref IOPTX, ref QEND, ref IZAUSG, ref ELEIST, ref ELEIWB, ref IEZTT, ref IEZTTO);
            
            if(IIFIX != IIEND) 
                ELGES[IIFIX] = ELOPT[IIFIX];
            goto label95;
            
        label3585:
            EX1 = ELMAX[IJ2+1] - EDLR[IJ2+1];
            if(ELMAX[IJ2] > EX1 ) ELMAX[IJ2]=EX1;
            if(ELMAX[IJ2] >= ELMIN[IJ2]) goto label3580;
            ELMAX[IJ2]=ELMAX[IJ2]+0.001;
            if(ELMAX[IJ2] >= ELMIN[IJ2]) goto label3580;
            if(IJ2 == 1 ) goto label3651;
            if(IJ  != 0 ) goto label3651;
            if(ITAKEN[IJ2] == 0) goto label3651;
            IJ =IJ2;
            goto label3580;
            
        label3651:
            IJEND =IJEND-1;
            for(IY = IJ2; IY <= IJEND; IY++)    //DO 3655 IY=IJ2,IJEND
            {
                IJTAB [IY]=IJTAB [IY+1];
                ITAPRF[IY]=ITAPRF[IY+1];
                EALMIN[IY]=EALMIN[IY+1];
                EALMAX[IY]=EALMAX[IY+1];
                EABANZ[IY]=EABANZ[IY+1];
                ETAZLA[IY] = ETAZLA[IY+1];
                EASAXE[IY]=EASAXE[IY+1];
                EAOEFF[IY]=EAOEFF[IY+1];
                EAKF1 [IY]=EAKF1 [IY+1];
                EAKFZ [IY]=EAKFZ [IY+1];
            }
            II2 =2;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            if(IJEND < IIEND) goto label3640;
            goto label39;
            
        label3640:
            II2 = 12;
            KFELER=1012;
            return;
            
        label3650:
            if(IAUSK != 0) sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", IAUSK.ToString().PadLeft(2));
            IJ =0;
            
        label3900:
            IJ =IJ+1;
            if(IJ == IJEND) goto label4000;
            IIKEN1[IJ]=0;
            IIKEN2[IJ]=1;
            EXMIN[IJ]=(ELMIN[IJ]+ELMAX[IJ])/2.0;
            EXMAX[IJ]=(ELMIN[IJ]+ELMAX[IJ])/2.0;
            if(ITAKEN[IJ] == 0 ) goto label3900;
            IIKEN1[IJ]=1;
            EXMAX[IJ]=EXMAX[IJ]+EABANZ[IJ];
            goto label3900;
            
        label4000:  // CONTINUE
            for(II = 1; II <= IIEND; II++)  //DO 4010 II =1,IIEND
            {
                IJ =IIOPT[II];
                EXMIN[IJ]=ELRGES[II];
                IIKEN1[IJ]=1;
                IIKEN2[IJ]=2;
                if(IJ == IJEND) goto label4015;
                EXMAX[IJ]=EXMIN [IJ]+EABANZ[IJ];
                if (ELGES[II] == 0.0)
                    continue;
                if(ELRGES[II] < EALMIN[IJ]) EXMAX[IJ]=EALMIN[IJ]+EABANZ[IJ];
                IIKEN2[IJ]=3;
            }   //4010 CONTINUE
            
        label4015:
            EXMAX[IJ]=EXMIN [IJ];
            IIKEN2[IJEND]=3;
            EZAE=0.0;
            II =0;
            
        label4020:
            IZEIG =II;
            IIA =IZEIG;
            IIE =IZEIG;
            
        label4060:
            IIE =IIE+1;
            if(ELGES[IIE] == 0.0) goto label4060;
            IJAF=0;
            if(IIA != 0) IJAF=IIOPT[IIA];
            IJEF=IIOPT[IIE];
            EX1=1.0;
            IJ =IJAF;
            
        label4100:
            IJ =IJ+1;
            if(IIKEN1[IJ] != 0 ) EX1 =EX1+1.0;
            if(IJ  != IJEF) goto label4100;
            EK2 =0.0;
            EX2=EDLPA[IIE]/EX1;

            //8904 FORMAT(' ',5G20.10)
            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}{3}{4}", ELRGES[IIE].ToString("0.00000000E+0").PadLeft(20),EALMIN[IJEF].ToString("0.00000000E+0").PadLeft(20),
                    EK2.ToString("0.00000000E+0").PadLeft(20),EX2.ToString("0.00000000E+0").PadLeft(20));
            IJ =IJAF;
            if(IJ == 0) goto label4109;
            goto label4106;
            
        label4105:
            EKMIN[IJ]=EXMIN[IJ];
            
        label4106:
            EKMAX[IJ]=EXMAX[IJ];
            if(IIKEN1[IJ] == 0) goto label4115;
            EXMAX[IJ]=EXMAX[IJ]+EX2;
            EKMAX[IJ]=EXMAX[IJ]-EX2/2.0;
            if(IJ == IJAF) EKMAX[IJ]=EKMAX[IJ]-EX2/2.0;
            if(IJ != IJAF) EKMIN[IJ]=EXMIN[IJ]+EX2/2.0;
            
        label4109:
            IJ1 =IJ;
            
        label4110:
            IJ1 =IJ1+1;
            if(IJ1 == IJEF) goto label4115;
            EXMIN[IJ1]=EXMIN[IJ1]+EX2;
            EXMAX[IJ1]=EXMAX[IJ1]+EX2;
            goto label4110;
            
        label4115:
            IJ =IJ+1;
            if(IJ != IJEF) goto label4105;
            EXMIN[IJ] =EXMIN[IJ] -EX2;
            EKMIN[IJ] =EXMIN[IJ] +EX2;
            IJ =IJAF;
            goto label4119;
            
        label4118:
            if(IIKEN1[IJ] == 0) goto label4121;
            EKMIN[IJ]=EKMIN[IJ]+EK2/2.0;
            EKMAX[IJ]=EKMAX[IJ]+EK2/2.0;
            
        label4119:
            IJ1 =IJ;
            
        label4120:
            IJ1 =IJ1+1;
            if(IJ1 > IJEF) goto label4121;
            EKMIN[IJ1]=EKMIN[IJ1]+EK2;
            EKMAX[IJ1]=EKMAX[IJ1]+EK2;
            goto label4120;
            
        label4121:
            IJ =IJ+1;
            if(IJ != IJEF)
                goto label4118;
            EKMIN[IJ]=EKMIN[IJ]+EK2;
            
        label4125:
            II =II+1;
            IJA =0;
            if(II  != 1) IJA = IIOPT[II-1];
            IJE =IIOPT[II];
            EX1 =EX2+EK2;
            IJ =IJA;
            
        label4150:
            IJ =IJ +1;
            if(IJ == IJE) goto label4160;
            if(IIKEN1[IJ] != 0) EX1 =EX1+EX2+EK2;
            goto label4150;
            
        label4160:
            if(IJA == IJAF) EX1 =EX1+(EX2+EK2)/2.0;
            if(IJE == IJEF) EX1 =EX1+(EX2+EK2)/2.0;
            EKM[II]=EBM[II]+(EX1+(2.0*EZ[II]-1.0)*ESAX[II])/(2.0*EZ[II]);
            
        label4210:
            IJ =IJA;
            
        label4215:
            IJ =IJ+1;
            if(IJ == IJE) goto label4230;
            if(IJ == 1) goto label4225;
            if(EXMIN[IJ] >= EXMAX[IJ-1]) goto label4225;
            EXMAX[IJ]=EXMAX[IJ]-EXMIN[IJ]+EXMAX[IJ-1];
            EXMIN[IJ]=EXMAX[IJ-1];
            goto label4210;
            
        label4225:
            if(EXMAX[IJ] <= EXMIN[IJ+1]) goto label4215;
            EXMIN[IJ] = EXMIN[IJ]-EXMAX[IJ]+EXMIN[IJ+1];
            EXMAX[IJ]=EXMIN[IJ+1];
            goto label4210;
            
        label4230:
            IJ =IJTAB[IJ];
            TASAX [IJ]=ESAX[II];
            
        label4250:
            IJ =IJA;
        label4255:
            IJ =IJ+1;
            if(IJ == IJE) goto label4270;
            if(IJ ==  1) goto label4265;
            if(EKMIN[IJ] >= EKMAX[IJ-1]) goto label4265;
            EKMAX[IJ] = EKMAX[IJ]-EKMIN[IJ]+EKMAX[IJ-1];
            EKMIN[IJ] = EKMAX[IJ-1];
            goto label4250;
            
        label4265:
            if(EKMIN[IJ] <= EKMIN[IJ+1]) goto label4255;
            EKMIN[IJ] = EKMIN[IJ]-EKMAX[IJ]+EKMIN[IJ+1];
            EKMAX[IJ]=EKMIN[IJ+1];
            goto label4250;
            
        label4270:
            IJ =IJA;
            EX1 =0.0;
            EK1 =0.0;
            if(IJ == IJA) goto label4600;
            
        label4300:
            if(IJ != 1 ) goto label4310;
            EXMAX0=EX2;
            EX1 =EX1+EXMIN[IJ]-EX2;
            EK1 =EK1+EKMIN[IJ];
            goto label4350;
            
        label4310:
            if(EXMIN[IJ] >= EXMAX[IJ-1]) goto label4315;
            EXMAX[IJ]=EXMAX[IJ-1]+EXMAX[IJ]-EXMIN[IJ];
            EXMIN[IJ]=EXMAX[IJ-1];
            
        label4315:
            EX1 =EX1+EXMIN[IJ]-EXMAX[IJ-1];
            if(EKMIN[IJ] >= EKMAX[IJ-1]) goto label4345;
            EKMAX[IJ]=EKMAX[IJ-1]+EKMAX[IJ]-EKMIN[IJ];
            EKMIN[IJ]=EKMAX[IJ-1];
            
        label4345:
            EK1 =EK1+EKMIN[IJ]-EKMAX[IJ-1];
            
        label4350:
            EZA =(EX1+ESAX[II])/(2.0*(EBM[II]+ESAX[II]));
            IZA =HFIX(EZA+0.5);
            EZA = (IZA);
            EX0 =2.0*EZA*EBM[II]+(2.0*EZA-1.0)*ESAX[II];
            EXMIN[IJ]=EXMIN[IJ]+EX0-EX1;
            EXMAX[IJ]=EXMAX[IJ]+EX0-EX1;
            EX1 =EX0;
            EZA =EK1/(2.0*EKM[II]);
            IZA =HFIX(EZA+0.5);
            EZA =(IZA);
            EK0 =2.0*EZA*EKM[II];
            EKMIN[IJ]=EKMIN[IJ]+EK0-EK1;
            EKMAX[IJ]=EKMAX[IJ]+EK0-EK1;
            EK1 =EK0;
            if(IJ == IJE) goto label4650;
            
        label4600:
            IJ =IJ+1;
            goto label4300;
            
        label4650:
            ELA =EXMAX0;
            if(IJA != 0) ELA = EXMAX[IJA];
            IJ =IJA;
            IZA =(int)(HFIX(EZAE+0.5) +JANF-1);
            IZE =(int)(HFIX(EZAE+0.5+EZ[II])+JANF-1);
            EZA =(IZA);
            if (EABANZ[IJEND] < 0.0 || XYZXYZ != 0.0) EZA = EZA + 1.0;
            EZE =(IZE);
            IZX =IZA;
            EX1 =ELA;
            ESUMM = Math.Abs(EX1-ESAX[II]);

            string[] h = new string[IJE];
            for(int NN = 1; NN <= IJE; NN++)
            {
                h[NN] = h[NN] + NN.ToString("0.00000000E+0").PadLeft(20) + EXMIN[NN].ToString("0.00000000E+0").PadLeft(20) + EXMAX[NN].ToString("0.00000000E+0").PadLeft(20) + 
                    ELMIN[NN].ToString("0.00000000E+0").PadLeft(20) + ELMAX[NN].ToString("0.00000000E+0").PadLeft(20);
            }
            if (LIGHT[3] == 2) 
            {
                //sw16.WriteLine("     ",8211) (NN,EXMIN(NN),EXMAX(NN),ELMIN(NN),ELMAX(NN),NN=1,IJE)
                for(int NN = 1; NN <= IJE; NN++)
                    sw16.WriteLine("     {0}", h[NN]);
            }
            
            if (LIGHT[3] == 2) 
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", IJ.ToString().PadLeft(8),IJA.ToString().PadLeft(8),IJE.ToString().PadLeft(8),
                    JANF.ToString().PadLeft(8),II.ToString().PadLeft(8),IIEND.ToString().PadLeft(8),IZX.ToString().PadLeft(8),IZE.ToString().PadLeft(8),
                    Math.Round(EX1,4).ToString().PadLeft(12),Math.Round(ESAX[II],4).ToString().PadLeft(12),Math.Round(ESUMM,4).ToString().PadLeft(12),
                    Math.Round(EXMIN[IJ+1],4).ToString().PadLeft(12),Math.Round(HFIXE,4).ToString().PadLeft(12));
            //8210 FORMAT (' ',8I8,5F12.4)
            //8211 FORMAT(5X,6G20.10)
            
        label4665:
            if (Math.Abs(EX1-ESAX[II]-EXMIN[IJ+1]) >= 0.1)
                goto label4670;
            EX1 =EXMAX[IJ+1]+ESAX[II];
            IJ =IJ+1;
            if(IJ != IJE) goto label4665;
            EZAE=EZAE+EZ[II];
            IZAE=(int)(HFIX(EZAE+0.5));
            if(II == IIEND) goto label5000;
            if(ELGES[II] != 0.0) goto label4020;
            goto label4125;
            
        label4670:
            IZX =IZX+1;
            EZX = IZX;
            if(IZX <= 75) goto label4680;
            JANF =76;
            II2 = 15;
            KFELER=1015;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            return;
            
        label4680:
            EX1 =EX1+2.0*EBM[II]+ESAX[II];
            STFDI [IZX]=EX1*ETAND+STFDI1;
            OEFFNG[IZX]=EEPS[2*II];
            if(IZX != IZE)
                OEFFNG[IZX]=(EEPS[2*II]-EEPS[2*II-1])/(EZE-EZA)*(EZX-EZA)+EEPS[2*II-1];
            BRTLE [IZX]=EBM[II];
            BRTLA [IZX]=EBM[II];
            PSI[IZX] = EPSI[II];
            LS[IZX] = EH[2*II];

            if (IZX != IZE)
                LS[IZX] = (EH[2*II]-EH[2*II-1])/(EZE-EZA)*(EZX-EZA)+EH[2*II-1];

            PSTFMX[IZX] = 1.0;
            TSTFMX[IZX] = 0.0;
            UWA010(IZX,1);
            KT14 =IJTAB[IJE];
            KT15 =ITAPRF[IJE];
            UWA010(IZX,2);
            EX1 =EX1+ESAX[II];
            ESUMM = Math.Abs(EX1-ESAX[II]);
            
            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", IJ.ToString().PadLeft(8),IJA.ToString().PadLeft(8),IJE.ToString().PadLeft(8),
                    JANF.ToString().PadLeft(8),II.ToString().PadLeft(8),IIEND.ToString().PadLeft(8),IZX.ToString().PadLeft(8),IZE.ToString().PadLeft(8),
                    Math.Round(EX1,4).ToString().PadLeft(12),Math.Round(ESAX[II],4).ToString().PadLeft(12),Math.Round(ESUMM,4).ToString().PadLeft(12),
                    Math.Round(EXMIN[IJ+1],4).ToString().PadLeft(12),Math.Round(OEFFNG[IZX],4).ToString().PadLeft(12));
            goto label4665;
            
        label5000:
            EZ[IIEND]=EZ[IIEND]+1.0;
            EZAE =EZAE +1.0;
            IZAE =IZAE +1;
            IZX =IZX +1;
            if(IZX <= 75) goto label5005;
            JANF =76;
            II2 = 15;
            KFELER=1015;
            sw16.WriteLine(" +++++DIMENS-WARNING{0}+++++ ", II2.ToString().PadLeft(2));
            return;
            
        label5005:
            OEFFNG[IZX] =OEFFNG[IZX-1];
            BRTLE [IZX] =BRTLE[IZX-1];
            BRTLA [IZX] =BRTLA[IZX-1];
            PSI[IZX] = PSI[IZX-1];
            LS[IZX] = LS[IZX-1];
            PSTFMX[IZX] = 1.0;
            LS[IZX-1] = (LS[IZX]+LS[IZX-2])/2.0;
            STFDI[IZX] = STFDI[IZX-1];
            STFDI[IZX-1] = STFDI[IZX-1] - ETAND*(EBM[IIEND]+ESAX[IIEND]);
            
            UWA010(IZX,1);
            KT14 =IJTAB [IJEND];
            KT15 =ITAPRF[IJEND];
            UWA010(IZX,2);
            IZ1 = IZX;
            TSTFMX[IZ1] = 1.0;
            IJ =1;
            
        label6050:
            if(IJ == IJEND) goto label7000;
            NUEMIN[IJ]=0;
            NUEMAX[IJ]=0;
            EL1 =0.0;
            IJ1 =1;
            
        label6075:
            if(IJ1 == IJ) goto label6080;
            if(IIKEN1[IJ1] != 0) EL1 =EL1+EABANZ[IJ1];
            IJ1 =IJ1+1;
            goto label6075;
            
        label6080:
            EL2 =EL1;
            IZ = (int)JANF-1;
            IZI =0;
            IIST =1;
            
        label6100:
            IZ =IZ+1;
            IZI =IZI+1;
            if(HFIX(EZ[IIST]+0.5) >= IZI) goto label6120;
            IIST =IIST+1;
            if(IIST == IIEND+1) goto label7000;
            IZI =1;
            
        label6120:
            EL1 =EL2;
            EL2 =EL2+2.0*EKM[IIST];
            if(EL2+0.10*EKM[IIST]  <  ELMIN[IJ]) goto label6100;
            NUEMIN[IJ]=IZ;
            if(EL2-0.05*EKM[IIST]  <  ELMAX[IJ]) goto label6250;
            NUEMAX[IJ]=IZ;
            if(Math.Abs(EL1-ELMIN[IJ])  >=  Math.Abs(EL2-ELMAX[IJ])) goto label6310;
            NUEMIN[IJ]=IZ-1;
            NUEMAX[IJ]=IZ-1;
            goto label6310;
            
        label6200:
            if(EL2-0.05*EKM[IIST]  >  ELMAX[IJ]) goto label6310;
            
        label6250:
            NUEMAX[IJ]=IZ;
            IZ =IZ+1;
            IZI =IZI+1;
            if(HFIX(EZ[IIST]+0.5) >= IZI) goto label6300;
            IIST =IIST+1;
            if(IIST == IIEND+1) goto label6310;
            IZI =1;
            
        label6300:
            EL2 =EL2+2.0*EKM[IIST];
            goto label6200;
            
        label6310:
            IJ =IJ+1;
            goto label6050;
            
        label7000:
            EXMAX[IJEND] =EXMIN[IJEND];
            EKMAX[IJEND] =EKMIN[IJEND];
            NUEMIN[IJEND]=IZAE+JANF-1;
            NUEMAX[IJEND]=IZAE+JANF-1;
            IZA=JANF;
            IZE=JANF+IZAE-1;
            for(IZX = IZA; IZX <= IZE; IZX++)   //DO 5010 IZX =IZA,IZE
                MUKASO[IZX]=0;
            II =0;
            
        label5050:
            II =II+1;
            IJ =0;
            
        label5060:
            IJ =IJ+1;
            if(IJ == IJEND) goto label5080;
            IZA =NUEMIN[IJ];
            IZE =NUEMAX[IJ];
            IZX =IZA-1;
            
        label5070:
            IZX =IZX+1;
            if(IIKEN2[IJ] != II) goto label5075;
            MUKASO[IZX]=II;
            UWA010(IZX,1);
            KT4 =II;
            UWA010(IZX,2);
            
        label5075:
            if(IZX != IZE) goto label5070;
            goto label5060;
            
        label5080:
            if(II  != 2 ) goto label5050;
            II =0;
            EZAE =0.0;
            
        label5100:
            II =II+1;
            EZAE =EZAE+EZ[II];
            IZAE =HFIX(EZAE+0.5)+JANF-1;
            IJ = NUESTF[II+1]-1;
            UWA010(NUESTF[II+1]-1,1);
            if (KT1 > 1) XPT[IJ] = PHTURB;
            IKT5 [IZAE]=KT5;
            IKT11[IZAE]=KT11;
            IKT12[IZAE]=KT12;
            APT [IZAE]=XPT[IJ];
            L =KT12;
            KT5 =0;
            KT11 =0;
            KT12 =0;
            UWA010(NUESTF[II+1]-1,2);
            if(!(L != 0 || II == IIEND)) goto label5100;
            MUKASO[IZAE]=3;
            UWA010(IZAE,1);
            KT4 =3;
            UWA010(IZAE,2);
            if(II == IIEND) goto label5101;
            IJE =IIOPT[II];
            NUEMIN[IJE]=IZAE;
            NUEMAX[IJE]=IZAE;
            goto label5100;
            
        label5101:
            IANF = JANF;
            JANF = IZAE + 1;
            IJE = IJTAB[IJEND];
            
            for(IJ = 1; IJ <= IJE; IJ++)    //DO 5200 IJ =1,IJE
            {
                JUEMIN[IJ]=0;
                JUEMAX[IJ]=0;
            }
            for(IJ = 1; IJ <= IJEND; IJ++)  //DO 5220 IJ =1,IJEND
            {
                IJ1 = IJTAB[IJ];
                JUEMIN[IJ1]=NUEMIN[IJ];
                JUEMAX[IJ1]=NUEMAX[IJ];
            }
            
            for(IJ = 1; IJ <= IJE; IJ++)    //DO 5250 IJ=1, IJE
            {
                NUEMIN[IJ]=JUEMIN[IJ];
                NUEMAX[IJ]=JUEMAX[IJ];
            }
            
            if (IENTLA != 0 || STZHD2[1] == 1)
                UWA068(ref IENTLA, ref ENTLAS, ref EEPSMA, ref EEPSMI, ref HFIXE, ref HC0C2E, ref HC0C2A, ref IK9, ref EABANZ, ref ELMIN, ref EXMIN,
                    ref IJEND, ref IIEND, ref EZ, ref EBM, ref ESAX, ref IIOPT);
            
            if (LIGHT[3] != 2)
                goto label8910;

            string l = "", m = "", n ="", o = "";
            p = "";
            for(IJ = 1; IJ <= IJEND; IJ++)
            {
                l = l + IIKEN1[IJ].ToString("0.0000000E+0").PadLeft(20);
                m = m + IIKEN2[IJ].ToString("0.0000000E+0").PadLeft(20);
                n = n + EKM[IJ].ToString("0.0000000E+0").PadLeft(20);
                o = o + EKMIN[IJ].ToString("0.0000000E+0").PadLeft(20);
                p = p + EKMAX[IJ].ToString("0.0000000E+0").PadLeft(20);
            }

            sw16.WriteLine(" {0}", l);      //(IIKEN1[IJ],IJ=1,IJEND)
            sw16.WriteLine(" {0}", m);      //(IIKEN2[IJ],IJ=1 ,IJEND)
            sw16.WriteLine(" {0}", n);      //(EKM [II],II=1 ,IIEND)
            sw16.WriteLine(" {0}", o);      //(EKMIN[IJ],IJ=1 ,IJEND)
            sw16.WriteLine(" {0}", p);      //(EKMAX[IJ],IJ=1 ,IJEND)
            //8904 FORMAT(' ',5G20.10)
            
            sw16.WriteLine("\n\n     II                  EPSI(II)            EH(II,1)            EH(II,2) ");
            //8206 FORMAT(//5X,'II EPSI[II] EH(II,1)EH(II,2) ')
            
            for(II = 1; II <= IIEND; II++)
            {
                sw16.WriteLine("     {0}{1}{2}{3} ", II.ToString("0.0000000E+0").PadLeft(20),EPSI[II].ToString("0.0000000E+0").PadLeft(20),
                    EH[2*II-1].ToString("0.0000000E+0").PadLeft(20),EH[2*II].ToString("0.0000000E+0").PadLeft(20));
                //sw16.WriteLine("",8207) (II,EPSI[II],EH(2*II-1),EH(2*II),II=1,IIEND)
                //8207 FORMAT(5X,4G20.10)
            }
            
            sw16.WriteLine("     IJ                  EXMIN(IJ)           EXMAX(IJ)           ELMIN(IJ)           ELMAX(IJ) ");
            //8204 FORMAT(5X,'IJ EXMIN[IJ] EXMAX[IJ] ELMIN[IJ] ELMAX[IJ] ')
            
            //sw16.WriteLine("",8205) (IJTAB[IJ],EXMIN[IJ],EXMAX[IJ],ELMIN[IJ],ELMAX[IJ],IJ=1,IJEND)
            //8205 FORMAT(5X,5G20.10)
            for(IJ = 1; IJ <= IJEND; IJ++)
                sw16.WriteLine("     {0}{1}{2}{3}{4} ", IJTAB[IJ].ToString("0.0000000E+0").PadLeft(20),EXMIN[IJ].ToString("0.0000000E+0").PadLeft(20),
                    EXMAX[IJ].ToString("0.0000000E+0").PadLeft(20),ELMIN[IJ].ToString("0.0000000E+0").PadLeft(20),ELMAX[IJ].ToString("0.0000000E+0").PadLeft(20));

            sw16.WriteLine("     IJ                  NUEMIN(IJ)          NUEMAX(IJ)   ");
            //8200 FORMAT(5X,'IJ NUEMIN[IJ] NUEMAX[IJ] ')
            IJE =IJTAB[IJEND];

            for(IJ = 1; IJ <= IJE; IJ++)
                sw16.WriteLine("     {0}{1}{2} ", IJ.ToString("0.0000000E+0").PadLeft(20),NUEMIN[IJ].ToString("0.0000000E+0").PadLeft(20),NUEMAX[IJ].ToString("0.0000000E+0").PadLeft(20));
            //8201 FORMAT(5X,3G20.10)

            JANF1=JANF-IZAE;
            JANF2=JANF-1;
            sw16.WriteLine("     IZ                  OEFFNG(IZ)          STFDI(IZ)           BRTLE(IZ)           BRTLA(IZ)           MUKASO(IZ) ");
            //8202 FORMAT(5X,'IZ OEFFNG[IZ] STFDI[IZ] BRTLE[IZ] BRTLA[IZ] MUKASO[IZ] ')
            
            for(II = JANF1; II <= JANF2; II++)
                sw16.WriteLine("     {0}{1}{2}{3}{4}{5} ", II.ToString("0.0000000E+0").PadLeft(20),OEFFNG[II].ToString("0.0000000E+0").PadLeft(20),STFDI[II].ToString("0.0000000E+0").PadLeft(20),BRTLE[II].ToString("0.0000000E+0").PadLeft(20),BRTLA[II].ToString("0.0000000E+0").PadLeft(20),MUKASO[II].ToString("0.0000000E+0").PadLeft(20));
            //8203 FORMAT(5X,6G20.10)
            
            sw16.WriteLine("     IZ                  IJ                  NTAPRF(IZ)          TASAX (IZ)          TAZLE(IZ)           TAZLA(IZ)  ");
            //8902 FORMAT(5X,'IZ IJ NTAPRF[IZ] TASAX [IZ] TAZLE[IZ] TAZLA[IZ] ')
            
            for(II = JANF1; II <= JANF2; II++)      //DO 8901 II=JANF1,JANF2
            {
                UWA010(II,1);
                sw16.WriteLine("     {0}{1}{2}{3}{4}{5} ", II.ToString("0.0000000E+0").PadLeft(20),KT14.ToString("0.0000000E+0").PadLeft(20),KT15.ToString("0.0000000E+0").PadLeft(20),TASAX[KT14].ToString("0.0000000E+0").PadLeft(20),TAZLE[KT14].ToString("0.0000000E+0").PadLeft(20),TAZLA[KT14].ToString("0.0000000E+0").PadLeft(20));
                //8903 FORMAT(5X,6G20.10)
            }   //8901 CONTINUE

        label8910:
            TAZLE[6] = EXMAX[IJEND];
            TAZLA[6] = ELMAX[IJEND];
            
            if (TABANZ[1] >= 0.0)
                return;
            TAZLE[6] = TALMIN[1];
            TAZLA[6] = TALMIN[1];
            return;
        }   //END
        
                
        static void UWA067( int IIEND, int IJEND, int IZEIG, ref double[] ELMIN, ref double[] ELMAX, ref double[] EALMIN, double[] ELRGES,
            ref int[] ITAKEN, double[] ELOPT, ref int[] IIOPT, ref double[] EDLPA, ref double[] EABANZ, ref double[] EBM, ref double[] EZ,
            ref double[] ESAX, ref double[] EPSI, ref double EZOPT, ref double EZIST, ref int IIFIX, ref double[] EDI, ref double[] EH,
            ref int[] ITAPRF, ref double[] EEPS, ref bool QOPT, ref bool QWEICH, ref int IZAEHL, ref int IOPTX, ref bool QEND, ref int[] IZAUSG,
            ref double[] ELEIST, ref double[] ELEIWB, ref int[,] IEZTT, ref int IEZTTO)
        {
            //ENTRY ZUTEIL(IIEND,IJEND,IZEIG,ELMIN,ELMAX,EALMIN,ELRGES,ITAKEN,ELOPT,IIOPT,EDLPA,EABANZ,EBM,EZ,ESAX,EPSI,EZOPT,EZIST,IIFIX,EDI,EH,
            //ITAPRF,EEPS,QOPT,QWEICH,IZAEHL,IOPTX,QEND,IZAUSG,ELEIST,ELEIWB,IEZTT,IEZTTO);

            bool QTEND;
                
            double EFEHLM = 0, EFEHL = 0, EDL1 = 0, EDL2 = 0, EADL1 = 0, EADL2 = 0, FZAE = 0, EZAE = 0, EX1 = 0, EX2 = 0,
                EL1 = 0, EL2 = 0, EKM = 0, EEMF1 = 0, EEMF = 0, C2 = 0, PHIOP = 0, ETAU0 = 0, EPHI = 0, ZETAR = 0, PHIQ = 0,
                EXB = 0, EXA = 0, EXMA = 0, ETAQ = 0, PHID = 0, CAX = 0, EUM = 0, C0 = 0, EPSIN = 0, EKORR = 0;

            int L = 0, IZ = 0, IJ = 0, IIL = 0, IIDEL = 0, IJL = 0, IZVOR = 0, IY = 0, IJ1 =0, IZI = 0, IIST = 0, IZOPT = 0;
            // IEZTT(10,5)
            double[]  ELAKT = new double[6], EE = new double[6], EK2 = new double[6], EEIFIX = new double[6];
            int[] IIAKT = new int[6], IIKEN1 = new int[6], IZAE = new int[6];

            //COMMON /ANZAPF/ NUESTF(6),IKT5 (75),IKT11(75),IKT12(75),APT(75)
            double EPSIMI = 1.0;
            if (!QOPT || IOPTX != 0)
                IOPTX = IOPTX + 1;
            QTEND = false;
            if (IIFIX == IIEND) QTEND = true;
            II = IZEIG;
            
        label6:
            II = II + 1;
            L = UWA011(NUESTF[II+1]-1,12);
            if (II == IIEND) goto label7;
            if (L  ==  0) goto label6;
            IZ = II;
            IJ = IIOPT[IZ];
            if (IZAEHL != 0 && ELMIN[IJ] == EALMIN[IJ]) goto label7;
            if (EPSI[IZ] >= 2.2) goto label7;
            A1 = 0.0;
            A2 = 0.0;
            II = IZEIG + 1;
            
            for(IZ1 = II; IZ1 <= IZ; IZ1++)     //DO 8 IZ1=II, IZ
            {
                A3 = 2.0 * EZ[IZ1] * EBM[IZ1] + (2.0*EZ[IZ1]-1.0) * ESAX[IZ1];
                A2 = A2 + A3;
                A1 = A1 + A3 * EPSI[IZ1]/2.2;
            }   //8 CONTINUE

            A3 = ELRGES[IZ] - A2 + A1;
            IZ2 = IIOPT[II];
            
            for(IZ1 = IZ2; IZ1 <= IJ; IZ1++)    //DO 9 IZ1=IZ2, IJ
            {
                if (ELMIN[IZ1] >= A3) continue;
                ELMIN[IZ1] = A3;
                if (ELMIN[IZ1] > ELMAX[IZ1])
                    ELMIN[IZ1] = ELMAX[IZ1];
            }   //9 CONTINUE
            
        label7:
            if (IZAEHL != 0) goto label2;
            for(IZ = 1; IZ <= 10; IZ++)     //DO 3 IZ=1, 10
            {
                ELEIWB[IZ] = 0.0;
                for(IZ1 = 1; IZ1 <= 5; IZ1++)   //DO 4 IZ1=1, 5
                    IEZTT[IZ,IZ1] = 0;
            }   //3 CONTINUE
            
        label2:
            for(IIL = 1; IIL <= IIEND; IIL++)   //DO 1 IIL=1, IIEND
            {
                IIAKT[IIL]=IIOPT[IIL];
                ELAKT[IIL] = ELOPT[IIL];
            }
            EFEHLM=-1.0;
            IIDEL =IJEND-IIEND;
            II =IZEIG;
            
        label5:
            II =II+1;
            L =UWA011(NUESTF[II+1]-1,12);
            
        label10:
            if(II == 1) IIAKT[II]=0;
            if(II != 1) IIAKT[II]=IIAKT[II-1];
            
        label20:
            IIAKT[II]=IIAKT[II]+1;
            if(IIAKT[II] > IIDEL+II) goto label1000;
            if(II  != IIEND ) goto label5;
            EFEHL = 0.0;
            
            for(IIL = 1; IIL <= IIEND; IIL++)   //DO 100 IIL =1,IIEND
            {
                IJL =IIAKT[IIL];
                EDL1 =ELRGES[IIL]-ELMIN[IJL];
                EDL2 =ELRGES[IIL]-ELMAX[IJL];
                EADL1 =Math.Abs(EDL1);
                EADL2 =Math.Abs(EDL2);
                
                if(ITAKEN[IIL] == 0  ||  L == 0) goto label30;
                EADL1 =0.8*EADL1;
                EADL2 =0.8*EADL2;
                
            label30:
                ELAKT[IIL]=ELRGES[IIL];
                if (EDL1 * EDL2 < 0.0) continue;
                if(EADL1 >= EADL2) goto label50;
                ELAKT[IIL]=ELMIN[IJL];
                EFEHL =EFEHL+EADL1;
                continue;
                
            label50:
                ELAKT[IIL]=ELMAX[IJL];
                EFEHL =EFEHL+EADL2;
            }   //100 CONTINUE
            if(EFEHLM < 0.0 ) goto label200;
            if(EFEHLM < EFEHL) goto label20;
            
        label200:
            for(IIL = 1; IIL <= IIEND; IIL++)   //DO 300 IIL = 1,IIEND
            {
                IIOPT[IIL]=IIAKT[IIL];
                ELOPT[IIL]=ELAKT[IIL];
            }
            EFEHLM=EFEHL;
            goto label20;
            
        label1000:
            II =II-1;
            if(II != IZEIG) goto label20;
            IIOPT[IIEND]=IJEND;
            
        label3000:
            IJ =0;
            
        label3900:
            IJ =IJ+1;
            if(IJ == IJEND) goto label4000;
            IIKEN1[IJ]=0;
            if(ITAKEN[IJ] != 0) IIKEN1[IJ]=1;
            NUEMIN[IJ]=0;
            NUEMAX[IJ]=0;
            goto label3900;
            
        label4000:
            FZAE =0.0;
            
            for(II = 1; II <= IIEND; II++)  //DO 4010 II=1,IIEND
            {
                FZAE =FZAE+EZ[II];
                IZAE[II]=  (int)(HFIX(FZAE+0.5)+JANF-1);
                IIAKT[II]=IZAE[II];
                IJ =IIOPT[II];
                IIKEN1[IJ]=1;
            }
            II =0;
            IZVOR =0;
            
        label6000:
            EZAE =0.0;
            
        label6010:
            II = II+1;
            EZAE = EZAE+EZ[II];
            L = UWA011(NUESTF[II+1]-1, 12);
            if(II == IIEND) L =1;
            if(L == 0) goto label6010;
            IJ =IIOPT[II];
            EX1 =EDLPA[II];
            EX2 =0.0;
            if(ELRGES[II] >= EALMIN[IJ]) goto label6025;
            if (EPSI[II] > EPSIMI) goto label6025;
            EX2 =EALMIN[IJ]-ELRGES[II];
            
        label6025:
            IY =II+1;
            
        label6020:
            IY =IY-1;
            EK2[IY]= (EX1+EX2)/(2.0*EZAE);
            if(IY  !=  IZVOR+1) goto label6020;
            IZVOR = II;
            if(II  !=  IIEND) goto label6000;
            if (LIGHT[3] == 2)
            {
                //sw16.WriteLine(" {0}{1}{2}{3}{4} ", EZ.ToString("0.00000E+0").PadLeft(18), EBM.ToString("0.00000E+0").PadLeft(18),
                //    ESAX.ToString("0.00000E+0").PadLeft(18), EDLPA.ToString("0.00000E+0").PadLeft(18), EK2.ToString("0.00000E+0").PadLeft(18));
            }
            //9003 FORMAT(' ',5G18.8);
            II =IZEIG;
             
        label6040:
            II =II+1;
            if(II == IIEND) goto label7000;
            L =UWA011(NUESTF[II+1]-1,12);

            if(L == 0) goto label6040;
            IJ =IIOPT[II];
            
        label6050:
            if(IJ == IJEND) goto label7000;
            EL1 =0.0;
            IJ1 =1;
            
        label6075:
            if(IJ1 == IJ) goto label6080;
            if(IIKEN1[IJ1] != 0) EL1 =EL1+EABANZ[IJ1];
            IJ1 =IJ1+1;
            goto label6075;
            
        label6080:
            EL1 = EL1 - ESAX[1];
            for(IJ1 = 1; IJ1 <= II; IJ1++)      //DO 6081 IJ1=1, II
            {
                if (IJ1 == 1) continue;
                IZ = IIOPT[IJ1-1];
                EL1 = EL1 - ESAX[IJ1];
                
                if (EABANZ[IZ] < ESAX[IJ1] && IIKEN1[IZ] != 0)
                    EL1 = EL1 + (ESAX[IJ1]-EABANZ[IZ]);
                if (IIKEN1[IZ] == 0)
                    EL1 = EL1 + ESAX[IJ1];
            }   //6081 CONTINUE
            EL2 = EL1;
            IZ = JANF-1;
            IZI =0;
            IIST =1;
            EKM = EBM[IIST] + EK2[IIST] + ESAX[IIST];
            
        label6100:
            IZ =IZ+1;
            IZI =IZI+1;
            if(HFIX(EZ[IIST]+0.5) >= IZI) goto label6120;
            if (ELRGES[II] < ELMIN[IJ] && II == IIST) goto label6120;
            IIST =IIST+1;
            if(IIST == IIEND+1) goto label7000;
            EKM = EBM[IIST] + EK2[IIST] + ESAX[IIST];
            IZI =1;
            
        label6120:
            EL1 =EL2;
            EL2 =EL2+2.0*EKM;
            
            if (LIGHT[3] == 2)
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}", IJ.ToString("0.00000E+0").PadLeft(18),IZ.ToString("0.00000E+0").PadLeft(18),EL1.ToString("0.00000E+0").PadLeft(18),
                    EL2.ToString("0.00000E+0").PadLeft(18),EKM.ToString("0.00000E+0").PadLeft(18),ELMIN[IJ].ToString("0.00000E+0").PadLeft(18),ELMAX[IJ].ToString("0.00000E+0").PadLeft(18),
                    ELRGES[II].ToString("0.00000E+0").PadLeft(18));
            if (IZ == IZAE[II]) NUEMIN[IJ] = IZ;
            if (EL2+0.002 *EKM < ELMIN[IJ]) goto label6100;
            if (NUEMIN[IJ] == 0) NUEMIN[IJ] = IZ;
            if (ELRGES[II] > ELMIN[IJ]) goto label6122;
            if (!QOPT || IOPTX != 0) goto label6123;
            if (EPSI[II] > 2.0) goto label6122;
            
        label6123:
            NUEMIN[IJ] = IZAE[II];
            goto label6125;
            
        label6122:
            IZ10 = II;
            if (ELRGES[II] < ELMIN[IJ]) 
                goto label6125;
            
        label6121:
            IZ10 = IZ10 + 1;
            if (IZ10 > IIEND) IZ10 = IIEND;
            L = UWA011(NUESTF[IZ10+1]-1,12);
            
            if (IZ10 == IIEND) L = 1;
            if (L == 0) goto label6121;
            IZ9 = IIOPT[IZ10];
            A1 = ELMIN[IZ9] - ELRGES[IZ10];
            A2 = EL2 - ELMIN[IJ];
            A3 = 2.0 * (EBM[IZ10] + ESAX[IZ10]);
            
            if (LIGHT[3] == 2) sw16.WriteLine(" {0}{1}{2}{3}{4} ", IZ10.ToString("0.00000E+0").PadLeft(18),IZ9.ToString("0.00000E+0").PadLeft(18),
                IIEND.ToString("0.00000E+0").PadLeft(18),A1.ToString("0.00000E+0").PadLeft(18),A2.ToString("0.00000E+0").PadLeft(18));
            if (A1+A2 >= 0.99 *A3) goto label6124;
            if (IZ10 < IIEND) goto label6121;
            goto label6125;
            
        label6124:
            NUEMIN[IJ] = IZ - 1;
            
        label6125:
            if (IZ == JANF) NUEMIN[IJ] = (int)JANF;
            if (EL2-0.001 *EKM < ELMAX[IJ]) goto label6250;
            NUEMAX[IJ] = IZ - 1;
            if (IZ == JANF) NUEMAX[IJ] = (int)JANF;
            if (IZ != JANF&&NUEMIN[IJ] == IZ) NUEMIN[IJ] = IZ - 1;
            goto label6310;
            
        label6200:
            if (EL2-0.001 *EKM > ELMAX[IJ]) goto label6310;
            
        label6250:
            NUEMAX[IJ]=IZ;
            IZ =IZ+1;
            if (NUEMAX[IJ] >= IZAE[IIEND])
                NUEMAX[IJ] = IZAE[IIEND];
            
        label6300:
            EL2 =EL2+2.0*EKM;
            goto label6200;
            
        label6310:
            goto label6040;
            
        label7000:
            NUEMIN[IJEND]=IZAE[IIEND];
            NUEMAX[IJEND]=IZAE[IIEND];
            if (QEND) goto label9999;
            IEZTTO = 0;
            if (IZEIG != 0 || IZAEHL != 9) goto label9999;
            QEND = true;
            EEMF1 = 0.0;
            
            for(IZ1 = 1; IZ1 <= IZAEHL; IZ1++)      //DO 9004 IZ1=1, IZAEHL
            {
                if (ELEIWB[IZ1] < EEMF1) continue;
                EEMF1 = ELEIWB[IZ1];
                IZ = IZ1;
            }   //9004 CONTINUE
            IEZTTO = IZ;
            
        label9999:
            string s1 = "", s2 = "";
            for(int ij = 1; ij <= IJEND; ij++)
            {
                s1 = s1 + NUEMIN[ij].ToString().PadLeft(8);
                s2 = s1 + NUEMAX[ij].ToString().PadLeft(8);
            }
            if (LIGHT[3] == 2) sw16.WriteLine(" NUEMIN[IJ] {0}", s1);   // (NUEMIN[IJ],IJ=1,IJEND);
            if (LIGHT[3] == 2) sw16.WriteLine(" NUEMAX[IJ] {0}", s2);   // (NUEMAX[IJ],IJ=1,IJEND);
            //9000 FORMAT(' NUEMIN[IJ] ',6I8)
            //9001 FORMAT(' NUEMAX[IJ] ',6I8)
            EEMF = 0.0;
            if (LIGHT[3] == 2) 
            {
                //sw16.WriteLine(" {0}{1}{2}{3}{4}{5} ", EDI.ToString("0.00000E+0").PadLeft(18),EH.ToString("0.00000E+0").PadLeft(18), EE.ToString("0.00000E+0").PadLeft(18),
                //    EEMF.ToString("0.00000E+0").PadLeft(18),EEM.ToString("0.00000E+0").PadLeft(18),EZAE.ToString("0.00000E+0").PadLeft(18));
            }
            IIFIX =0;
            IZOPT =0;
            EZOPT =0.0;
            
            for(IZ2 = 1; IZ2 <= 5; IZ2++)   //DO 8005 IZ2=1, 5
            {
                EE[IZ2] = 0.0;
                EEIFIX[IZ2] = 0.0;
            }   //8005 CONTINUE
            IZ2 = ITAPRF[1];
            UWA006("RDISC", 61,IZ2);
            UWA006("RDISC", 60,IZ2);
            II =IZEIG;
            
        label8000:
            II =II+1;
            L =UWA011(NUESTF[II+1]-1,12);
            if(II == IIEND) L = 1;
            if(L == 0) goto label8000;
            if(IIFIX != 0) goto label8010;
            IIFIX =II;
            IJ = IIOPT[IIFIX];
            if(IZEIG == 0) IZVOR =JANF-1;
            if(IZEIG != 0) IZVOR =IZAE[IZEIG];
            EZIST = (IZAE[IIFIX]-IZVOR);
            if (EABANZ[IJEND] < 0.0) return;
            if (!QEND) goto label8001;
            NUEMIN[IJ] = IEZTT[IEZTTO,IIFIX];
            NUEMAX[IJ] = NUEMIN[IJ];
            goto label8010;
            
        label8001:
            if (IOPTX == 99) goto label8010;
            if ( EPSI[IIFIX] > 2.0) goto label8002;
            if ( IZEIG != 0) NUEMIN[IJ] = IZAE[IZEIG]+1;
            if ( IZEIG == 0) NUEMIN[IJ] = JANF;
            
        label8002:
            if (QOPT&&IOPTX == 0) goto label8010;
            if (QOPT) goto label8060;
            NUEMIN[IJ] = IZAE[IIFIX];
            NUEMAX[IJ] = NUEMIN[IJ] + 1;
            IZ = IIFIX + 1;
            if (IZ > IIEND) goto label8010;
            
            for(IZ1 = IZ; IZ1 <= IIEND; IZ1++)      //DO 8070 IZ1=IZ, IIEND
            {
                IJ = IIOPT[IZ1];
                NUEMAX[IJ] = NUEMAX[IJ] + 1;
            }   //8070 CONTINUE
            goto label8010;
            
        label8060:
            NUEMIN[IJ] = IZAE[IIFIX];
            NUEMAX[IJ] = IZAE[IIFIX];
            
        label8010:
            IJ =IIOPT[II];
            IIAKT[II]=NUEMIN[IJ];
            
        label8050:
            if(II != IIEND) goto label8000;
            EEMF1 =0.0;
            II = IZEIG;
            
        label8100:
            II = II + 1;
            if (II == IIEND+1) goto label8300;
            L = UWA011(NUESTF[II+1]-1,12);
            if(II == IIEND) L =1;
            if(L  == 0) goto label8100;
            IZ =II;
            
        label8150:
            IZ =IZ-1;
            if(IZ == 0) goto label8200;
            L = UWA011(NUESTF[IZ+1]-1,12);
            if(L  == 0) goto label8150;
            IZVOR =IIAKT[IZ];
            goto label8250;
            
        label8200:
            IZVOR =JANF-1;
            
        label8250:
            EZAE = (IIAKT[II]-IZVOR);
            if((IIAKT[II]-IZVOR) < (II-IZ)) goto label8360;
            IZ = IZ + 1;
            A1 = 0.0;
            A2 = 1.0;
            A6 = 0.92;
            
            for(IZ1 = IZ; IZ1 <= II; IZ1++)     //DO 500 IZ1=IZ, II
                A1 = A1 + EZ[IZ1];
            A1 = EPSI[IZ] * A1/EZAE;
            if (A1 < 0.5) A1 = 0.5;
            
            for(IZ1 = IZ; IZ1 <= II; IZ1++)     //DO 510 IZ1=IZ, II
            {
                IZ10 = 0;
                IZ3 = ITAPRF[IZ1];
                
                if (IZ3 != IZ2) 
                    UWA006("RDISC", 61,IZ3);
                IX10 = NUESTF[IZ1+1]-1;
                IX9 = NUESTF[IZ1];
                IX1 = 2 * (IZ1-1) + 1;
                IX2 = 2 * (IZ1-1) + 2;
                C2 = 0.0;
                
                for(IZ4 = 1; IZ4 <= 2; IZ4++)   //DO 520 IZ4=1, 2
                {
                    IX4 = IX1;
                    if (IZ4 == 2) IX4 = IX2;
                    PHIOP = AC3 + AC4*EEPS[IX4];
                    ETAU0 = AC6 + AC7*Math.Pow((EEPS[IX4]-AC8),2);
                
                label516:
                    if (XYZXYZ == 0.0) goto label517;
                    if (IZ4 == 1) A6 = ETAUOP[IX9];
                    if (IZ4 == 2) A6 = ETAUOP[IX10];
                
                label517:
                    EPHI = (A6 *A1*A2+ 2.0)/(4.0 * Math.Sqrt(1.0- Math.Pow(EEPS[IX4],2))/EEPS[IX4]);
                    A4 = (A6 * EPSI[IZ1]+2.0)/(A6 *A1*A2+2.0);
                    ZETAR = (AK151+AK16*EEPS[IX4])/(EH[IX4]*A4/1.2/EBM[IZ1]+AK17);
                    PHIQ =EPHI/PHIOP;
                    EXB = AC21* Math.Pow((Math.Abs(PHIQ-1.0)),AC22);
                    EXA = EXB*AC23/(EH[IX4]*A4/1.2/EBM[IZ1]+AC24);
                    EXMA = 16.0 / Math.Log10(AC25);
                    if (EXB > EXMA ) EXB = EXMA;
                    if (EXA > EXMA ) EXA = EXMA;
                    A4 = 1.0 - 1.0 / Math.Pow(AC25,EXB) + 1.0/ Math.Pow(AC25,EXA);
                    if (PHIQ < 1.0) goto label550;
                    ETAQ = AC10+AC11* Math.Pow(PHIQ,AC12) + AC13*EEPS[IX4];
                    ETAQ = (1.0- Math.Pow((Math.Abs(1.0-1.0/PHIQ)),ETAQ)) *A4;
                    goto label560;
                    
                label550:
                    ETAQ = AC14+AC15* Math.Pow(PHIQ,AC16)+AC17*EEPS[IX4];
                    PHID = AC5 * EEPS[IX4]/Math.Sqrt(1.0 - EEPS[IX4]*EEPS[IX4])/(AC3+AC4*EEPS[IX4]);
                    ETAQ = (1.0-Math.Pow((Math.Abs((1.0-1.0/PHIQ)/(1.0-1.0/PHID))),ETAQ)) * A4;
                    
                label560:
                    EUM = (EDI[IX4]+EH[IX4])*XUPM *5.2359E-05;
                    CAX = EPHI*EUM;
                    if (IZ4 == 2) goto label530;
                    C0 = YC2GES[IX9-1];
                    goto label515;
                    
                label530:
                    C2 = Math.Sqrt(1.0-EEPS[IX4]*EEPS[IX4])/EEPS[IX4];
                    C2 = Math.Pow((C2*CAX - EUM),2);
                    C2 = Math.Sqrt(CAX*CAX+C2);
                    YC2GES[IX10] = C2;
                    C2 = (C0*C0 - C2*C2)/8.37225E+03;
                    A3 = (YDFAKT[IX10] + C2)/XDFAKT[IX10];
                    if (Math.Abs((A3-A2)/A2) < 0.005) goto label515;
                    A2 = (A3+A2)*0.5;
                    if (A1*A2 < 0.5) A2 = 0.5/A1;
                    IZ10 = IZ10+1;
                    if(IZ10 != 20) goto label516;
                    
                label515:
                    if (IZ4 == 1) EE[IZ1] = (ETAU0-ZETAR)*ETAQ;
                    if (IZ4 == 2) EE[IZ1] = 0.5*(EE[IZ1]+(ETAU0-ZETAR)*ETAQ)*(YDFAKT[IX10] + C2);
                }   //520 CONTINUE
                if (A1 <= 0.5) EE[IZ1] = 0.0;
                PSI[IX10] = A1 * A2;
                if (EE[IIFIX] >= EEIFIX[IIFIX]) EEMF1 = EEMF1 + EE[IZ1];
                if (IZ1 == IIFIX && EE[IZ1] > EEIFIX[IIFIX])
                    EEIFIX[IIFIX] = EE[IZ1];
                if (LIGHT[3] == 2)
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", IZ.ToString("0.00000E+0").PadLeft(18),II.ToString("0.00000E+0").PadLeft(18),
                        EEMF1.ToString("0.00000E+0").PadLeft(18),A1.ToString("0.00000E+0").PadLeft(18),EZAE.ToString("0.00000E+0").PadLeft(18),
                        XDFAKT[IX10].ToString("0.00000E+0").PadLeft(18), ETAU0.ToString("0.00000E+0").PadLeft(18),PHIQ.ToString("0.00000E+0").PadLeft(18),
                        ETAQ.ToString("0.00000E+0").PadLeft(18),C2.ToString("0.00000E+0").PadLeft(18),EE[IZ1].ToString("0.00000E+0").PadLeft(18),
                        A2.ToString("0.00000E+0").PadLeft(18),A3.ToString("0.00000E+0").PadLeft(18),A4.ToString("0.00000E+0").PadLeft(18),ZETAR.ToString("0.00000E+0").PadLeft(18));
            }   //510 CONTINUE
            goto label8100;
            
        label8300:
            if (QEND)
                goto label8310;
            if(IZAEHL < 2 || IZEIG != 0) goto label8302;
            IZ = 0;
            
            for(IZ1 = 1; IZ1 <= IIEND; IZ1++)       //DO 8303 IZ1=1, IIEND
                if (IIAKT[IZ1] != IZAE[IZ1])
                    IZ = 1;
            
            if (IZ != 0) goto label8302;
            if (EEMF1 < ELEIWB[IZAEHL-1]) goto label8302;
            ELEIWB[IZAEHL-1] = EEMF1;
            
            for(IZ1 = 1; IZ1 <= IIEND; IZ1++)   //DO 8304 IZ1=1, IIEND
                IEZTT[IZAEHL-1,IZ1] = IZAE[IZ1];
            
        label8302:
            if (IOPTX == 99) goto label8310;
            if (QOPT && IOPTX == 0) goto label8310;
            if (IOPTX > 10) IOPTX = 10;
            IJ = IIOPT[IIFIX];
            if (IIAKT[IIFIX] != NUEMIN[IJ]) goto label8310;
            IZ = IIFIX + 1;
            if (IZ > IIEND) goto label8370;
            IX1 = 0;
            
            for(IZ1 = IZ; IZ1 <= IIEND; IZ1++)      //DO 8380 IZ1=IZ, IIEND
                if (IIAKT[IZ1] != IZAE[IZ1])
                    IX1 = 1;
            
            if (IX1 != 0) goto label8305;
            
        label8370:
            if (IOPTX == 10 && EEMF1 <= ELEIST[10])
                goto label8305;
            IZAUSG[IOPTX] = NUEMIN[IJ];
            
            if (EEMF1 >= ELEIST[IOPTX]) 
                ELEIST[IOPTX] = EEMF1;
            
        label8305:
            if (QOPT) goto label8310;
            EEMF1 = 0.0;
            goto label8310;
            
        label8320:
            EEMF1 = 0.0;
            
            for(IZ1 = 1; IZ1 <= IOPTX; IZ1++)   //DO 8330 IZ1=1, IOPTX
            {
                if (ELEIST[IZ1] < EEMF1) continue;
                EEMF1 = ELEIST[IZ1];
                IZ = IZAUSG[IZ1];
            }   //8330 CONTINUE
            IJ = IIOPT[IIFIX];
            NUEMIN[IJ] = IZ;
            NUEMAX[IJ] = IZ;
            
            for(IZ1 = 1; IZ1 <= IOPTX; IZ1++)   //DO 8340 IZ1=1, IOPTX
            {
                ELEIST[IZ1] = 0.0;
                IZAUSG[IZ1] = 0;
            }   //8340 CONTINUE
            IOPTX = 99;
            goto label9999;
            
        label8310:
            if (EEMF1 < EEMF) goto label8350;
            IZOPT = IIAKT[IIFIX];
            EEMF =EEMF1;
            A5 = 0.0;
            IX9 = IZEIG + 1;
            
            for(II = IX9; II <= IIFIX; II++)    //DO 8301 II=IX9, IIFIX
            {
                IX10 = NUESTF[II+1] - 1;
                A5 = A5 + PSI[IX10];
            }
            EPSIN = A5 / (IIFIX-IZEIG);
            
        label8350:
            if (IIFIX != IIEND) goto label8351;
            II = IIEND;
            goto label8360;
            
        label8351:
            II = IIEND - 1;
            
        label8355:
            if(II  == IZEIG ) goto label8500;
            
        label8360:
            IIAKT[II]=IIAKT[II]+1;
            IJ =IIOPT[II];
            if(IIAKT[II] <= NUEMAX[IJ]) goto label8050;
            II =II-1;
            goto label8355;
            
        label8500:
            if (IOPTX == 99) goto label8510;
            if (QOPT&&IOPTX == 0) goto label8510;
            if (QOPT) goto label8320;
            
        label8510:
            if (IZOPT == 0) return;
            EKORR = (IZOPT-IZAE[IIFIX]);
            ELOPT[IIFIX]=ELOPT[IIFIX]+(EBM[IIFIX]+ESAX[IIFIX])*2.0 *EKORR;
            IJ =IIOPT[IIFIX];
            if(ELOPT[IIFIX] < ELMIN[IJ]) ELOPT[IIFIX]=ELMIN[IJ];
            if(ELOPT[IIFIX] > ELMAX[IJ]) ELOPT[IIFIX]=ELMAX[IJ];
            if(IZEIG == 0) IZVOR=JANF-1;
            if(IZEIG != 0) IZVOR=IZAE[IZEIG];
            EZOPT = (IZOPT -IZVOR);
            II =IZEIG;
            
        label8550:
            II =II+1;
            EPSI[II]=EPSIN;
            if(II != IIFIX) goto label8550;
            if (IIFIX != IIEND) goto label8341;
            if(!QTEND) QWEICH = false;
            if (QTEND && IOPTX != 0) QWEICH = false;
            if (IIEND == 1 && EZ[IIEND] == EZOPT) 
                QWEICH = true;
            
        label8341:
            if (LIGHT[3] == 2)
                sw16.WriteLine(" IIFIX ... {0}{1}{2} ", IIFIX.ToString().PadLeft(8),IZOPT.ToString().PadLeft(8),IZAE[IIFIX].ToString().PadLeft(8));

            if (LIGHT[3] == 2)
            {
                //sw16.WriteLine(" {0}{1}{2}{3}{4} ", EPSI.ToString("0.00000E+0").PadLeft(18), EEPS.ToString("0.00000E+0").PadLeft(18),
                //ELEIST.ToString("0.00000E+0").PadLeft(18), ELEIWB.ToString("0.00000E+0").PadLeft(18), IEZTT.ToString("0.00000E+0").PadLeft(18));
            }
            //9002 FORMAT(' IIFIX ... ',3I8)
            return;
        }   //END
        
                
        static void UWA068(ref int IENTLA, ref double[] ENTLAS, ref double[] EEPSMA, ref double[] EEPSMI, ref double HFIXE, ref double HC0C2E,
            ref double HC0C2A, ref int IK9, ref double[] EABANZ, ref double[] ELMIN, ref double [] EXMIN, ref int IJEND, ref int IIEND,
            ref double[] EZ, ref double[] EBM, ref double[] ESAX, ref int[] IIOPT)
        {
            //ENTRY ENDKOM (IENTLA,ENTLAS,EEPSMA,EEPSMI,HFIXE,HC0C2E,HC0C2A,IK9,EABANZ,ELMIN,EXMIN,IJEND,IIEND,EZ,EBM,ESAX,IIOPT)
            double SUMBM = 0, EZAE = 0, SUMH0 = 0, EUM = 0, A12 = 0, A11 = 0, SINBR = 0, SEHNEL = 0, SINBK = 0, SINB = 0, ETAU0 = 0, PJIOP = 0, 
                PHID = 0, PHOQ = 0, CAX = 0, PHIOP = 0, PHIQ = 0, C2 = 0, EXB = 0, EXA = 0, EXMA = 0, ETAQ = 0, ZETAS = 0, ZETAR = 0, ETAQR = 0, 
                C2R = 0, PHIQR = 0, ZETASR = 0, ZETARR = 0, ETAU0R = 0, ZETASK = 0, ETAQK = 0,C2K = 0, ZETARK = 0, ETAU0K =0;
            int KT7VOR = 0, IJ = 0, NPROF = 0, KT14VR = 0;
            double[] PSIFAK = new double[6];
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /ANZAPF/ NUESTF( 6)
            //COMMON /GEFFAK/ HFAKTE(15)

            if (EABANZ[IJEND] < 0.0 && IENTLA == 0) 
                goto label2801;
            
            SUMBM = 0.0;
            EZAE = 0.0;
            SUMH0 = 0.0;
            
            for(IZ4 = 1; IZ4 <= IIEND; IZ4++)   //DO 1000 IZ4=1, IIEND
            {
                PSIFAK[IZ4] = 1.0;
                IX10 = NUESTF[IZ4+1]-1;
                SUMH0 = SUMH0 + XDFAKT[IX10];
                EZAE = EZAE + EZ[IZ4];
                SUMBM = SUMBM + 2.0 * (EBM[IZ4]+ESAX[IZ4]);
            }   //1000 CONTINUE
            SUMH0 = SUMH0 + YC2GES[IX10]*YC2GES[IX10]/8.37225E+03;
            IZ5 = 0;
            A10 = 0.0;
            A5 = 1.0;
            IZ2 = IZ1;
            IZ3 = 0;
            
        label2760:
            IZ3 = IZ3 + 1;
            UWA010(IZ2,1);
            if (IZ2 < IZ1-1) goto label2770;
            A1 = ENTLAS[KT15];
            A2 = EEPSMA[KT15];
            goto label2780;
            
        label2770:
            if (IZ2 == IANF -1  || MUKASO[IZ2] == 3) goto label2790;
            A3 = EEPSMI[KT15];
            if (A3 < A5) A5 = A3;
            
        label2780:
            IZ2 = IZ2 - 1;
            goto label2760;
            
        label2790:
            IZ3 = IZ3 - 1;
            IZ2 = IZ1 - IZ3 + 1;
            IZ10 = 0;
            QTROM = false;
            KT7VOR = 9;
            
            if (IZ2 != IANF) goto label2021;
            IZ4 = NUESTF[1];
            KT7 = UWA011(IZ4-1,7);
            
            if (KT7 != 4 && KT7 != 9) 
                KT7VOR = 0;
            
        label2021:
            IZ9 = IZ2 - 1;
            
        label2020:
            for(IZ4 = IZ9; IZ4 <= IZ1; IZ4++)   //DO 2791 IZ4=IZ9, IZ1
            {
                if (IZ4 == IZ9 && KT7VOR == 0) continue;
                if (IZ4 > IZ2 && IZ4 < IZ1-2) continue;
                
                EUM = (STFDI[IZ4]+LS[IZ4])*XUPM*5.2359E-05;
                if (QTROM) goto label2025;
                if (IZ4 == IZ9 && KT7VOR == 0) goto label2025;
                XDFAKT[IZ4] = OEFFNG[IZ4];
                
            label2025:
                Z5 = 0.92;
                if (ETAUOP[IZ4] != 0.0 && XYZXYZ == 99.0) Z5 = ETAUOP[IZ4];
                Z6 = Math.Sqrt(1.0-XDFAKT[IZ4]*XDFAKT[IZ4])/XDFAKT[IZ4];
                PHI[IZ4] = (Z5*PSI[IZ4]+2.0)/(4.0*Z6);
                Z6 = Math.Pow((Z6*PHI[IZ4]*EUM-EUM),2);
                Z6 = Math.Sqrt(Math.Pow((PHI[IZ4]*EUM),2) + Z6);
                YC2GES[IZ4] = Z6;
                if (IZ4 == IZ2 && KT7VOR == 0) YC2GES[IZ4-1] = (PHI[IZ4]*EUM);
            }   //2791 CONTINUE
            if (QTROM) goto label2710;
            A12 = PSI[IZ1];
            HFIXE = HFIXE + ( Math.Pow(YC2GES[IZ2-1],2) - Math.Pow(YC2GES[IZ1],2))/8.37225E+03;
            
            if (IENTLA == IZ1 && XYZXYZ == 99.0) goto label2730;
            HC0C2E = 0.0;
            HC0C2A = 0.0;
            
        label2710:
            Z5 = (HC0C2E + HC0C2A + (Math.Pow(YC2GES[IZ1-2],2) - Math.Pow(YC2GES[IZ1],2)) / 8.37225E+03) * 0.5;
            HC0C2E = Z5 * 0.7;
            HC0C2A = Z5 * 0.3;
            
        label2730:
            Z5 = 1.0;
            Z6 = 1.0;
            if (IZ3 <= 3 || IENTLA == 0) goto label2750;
            if (QTROM) goto label2000;
            A9 = 1.0;
            if (STZHD2[1] != 1) goto label2003;
            A7 = ELMIN[IJEND] - EXMIN[IJEND];
            A8 = SUMBM / IIEND;
            A3 = EZAE - 1.0;
            A9 = A3 / (A3+A7/A8);
            
        label2003:
            A3 = ((STFDI[IZ1]+STFDI[IZ1-1])/2.0+LS[IZ1])*XUPM*5.2359E-05;
            A3 = A12 * A3*A3/8.37225E+03;
            A7 = A12 * A9;
            if (A7 <= 2.0) goto label2750;
            A7 = A1 * Math.Sqrt(A7-2.0);
            A8 = 1.0 - Math.Pow((OEFFNG[IZ1]/A2),2);
            Z4 = A2;
            IX1 = IZ1 - 2;
            
            for(IX2 = IZ2; IX2 <= IX1; IX2++)   //DO 2002 IX2=IZ2, IX1
                if (OEFFNG[IX2] < Z4)
                    Z4 = OEFFNG[IX2];   //2002 CONTINUE
            
            Z4 = (HFIXE-A3*A9) * (Math.Pow((Z4/A5),2) - 1.0) / (A3*A9);
            A10 = 1.0;
            if (A7 < A10) A10 = A7;
            if (A8 < A10) A10 = A8;
            if (Z4 < A10) A10 = Z4;
            A10 = A10 * A9;
            A11 = 1.0-A10;
            A8 = A10*A3;
            
        label2000:
            A9 = (HFIXE-A3+A8 )/(HFIXE-A3);
            Z4 = A9;
            A4 = A12*Z4;
            IX1 = IZ1 - 2;
            
            for(IX2 = IZ2; IX2 <= IX1; IX2++)   //DO 2001 IX2=IZ2, IX1
                PSI[IX2] = A4;      //2001 CONTINUE
            A9 = Math.Pow(A9,1.00);
            A4 = (STFDI[IZ1-1]+LS[IZ1-1]+STFDI[IZ1]+LS[IZ1])/2.0 / (STFDI[IZ1]+LS[IZ1]);
            A4 = A4*A4;
            Z10 = ((1.0-A10)*A3-HC0C2E-HC0C2A)/(A3 ) * A4;
            
            if (Z10 <= 0.0) Z10 = 0.1;
            if (Z10 < 1.0) goto label2751;
            Z10 = 1.0;
            Z5 = 1.0;
            Z6 = 1.0;
            goto label2795;
            
        label2751:
            Z5 = A11 * (0.5*A3+1.0*HC0C2E)/0.5/A3;
            Z6 = A11 * (0.5*A3+1.0*HC0C2A)/0.5/A3;
            PSI[IZ1-1] = A12*Z5;
            PSI[IZ1] = A12*Z6;
            goto label2795;
            
        label2750:
            HFAKTE[IK9] = 1.0;
            IENTLA = 0;
            
        label2795:
            if (LIGHT[3] == 2) 
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14} ", Math.Round(HFIXE,4).ToString().PadLeft(10), Math.Round(A11,4).ToString().PadLeft(10), 
                    Math.Round(A7,4).ToString().PadLeft(10), Math.Round(A8,4).ToString().PadLeft(10), Math.Round(A9,4).ToString().PadLeft(10), Math.Round(LS[IZ1],4).ToString().PadLeft(10), 
                    Math.Round(OEFFNG[IZ1],4).ToString().PadLeft(10), Math.Round(HFAKTE[IK9],4).ToString().PadLeft(10), Math.Round(HC0C2E,4).ToString().PadLeft(10), 
                    Math.Round(HC0C2A,4).ToString().PadLeft(10), Math.Round(A12,4).ToString().PadLeft(10), IENTLA.ToString().PadLeft(4),IZ1.ToString().PadLeft(4),
                    IZ3.ToString().PadLeft(4),IK9.ToString().PadLeft(4));
                //2806 FORMAT(' ',11F10.4,4I4)
            
            if (IENTLA == 0) goto label2802;
            IZ2 = IZ1 - IZ3 + 1;
            
            for(IZ4 = IZ2; IZ4 <= IZ1; IZ4++)   //DO 2800 IZ4=IZ2, IZ1
            {
                A1 = OEFFNG[IZ4];
                A1 = A1/Math.Sqrt(1.0 - A1*A1);
                A7 = 0.92;
                if (ETAUOP[IZ4] != 0.0 && XYZXYZ == 99.0)    A7 = ETAUOP[IZ4];
                A6 = A12;
                A4 = A6 * A9;
                if (IZ4 == IZ1-1) A4 = A6 * Z5;
                if (IZ4 == IZ1 ) A4 = A6 * Z6;
                A1 = A1 * (A6*A7+2.0)/(A4*A7+2.0);
                A1 = A1/Math.Sqrt(1.0+A1*A1);
                if (A1 < A5 && IZ4 < IZ1-1) A1 = A5;
                if (A1 > A2 && IZ4 >= IZ1-1) A1 = A2;
                XDFAKT[IZ4] = A1;
            }       //2800 CONTINUE
            
            if (QTROM) goto label2010;
            QTROM = true;
            goto label2005;
            
        label2010:
            if (Math.Abs((HFAKTE[IK9]-Z10)/Z10) < 0.001) goto label2803;
            
        label2005:
            HFAKTE[IK9] = Z10;
            IZ10 = IZ10 + 1;
            if (IZ10 > 10) goto label2803;
            goto label2020;
            
        label2803:
            for(IZ4 = IZ2; IZ4 <= IZ1; IZ4++)   //DO 2804 IZ4=IZ2, IZ1
                OEFFNG[IZ4] = XDFAKT[IZ4];
            
        label2802:
            if (STZHD2[1] != 1)     goto label2801;
            if (EABANZ[IJEND] < 0.0)    goto label2801;
            SUMH0 = SUMH0 - YC2GES[IZ1]*YC2GES[IZ1]/8.37225E+03;
            IX10 = IIEND - 1;
            if (IX10 == 0 && A12 <= 1.5) goto label2801;
            if (IX10 == 0) goto label1200;
            
            for(IZ4 = 1; IZ4 <= IX10; IZ4++)    //DO 1100 IZ4=1, IX10
            {
                IJ = IIOPT[IZ4];
                A1 = ELMIN[IJ] - EXMIN[IJ];
                if (A1 < 0.0) continue;
                A2 = 2.0 * (EBM[IZ4]+ESAX[IZ4]);
                A3 = EZ[IZ4]/(EZ[IZ4]+A1/A2);
                PSIFAK[IZ4] = PSIFAK[IZ4] * A3;
            }   //1100 CONTINUE
            
        label1200:
            A1 = ELMIN[IJEND] - EXMIN[IJEND];
            A2 = SUMBM/IIEND;
            A3 = EZAE - 1.0;
            A3 = A3/(A3+A1/A2);
            
            for(IZ4 = 1; IZ4 <= IIEND; IZ4++)   //DO 1210 IZ4=1, IIEND
                PSIFAK[IZ4] = PSIFAK[IZ4] * A3;
            // 2805 FORMAT(' ',I5,8F11.5,/1X,5X,8F11.5)
            if (LIGHT[3] == 2)
            {
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}", IIEND.ToString().PadLeft(5), Math.Round(SUMH0,5).ToString().PadLeft(11),
                    Math.Round(YC2GES[IZ1],5).ToString().PadLeft(11), Math.Round(A1,5).ToString().PadLeft(11), Math.Round(A2,5).ToString().PadLeft(11), 
                    Math.Round(A3,5).ToString().PadLeft(11), Math.Round(EZAE,5).ToString().PadLeft(11), Math.Round(SUMBM,5).ToString().PadLeft(11), Math.Round(EZ[IIEND],5).ToString().PadLeft(11));
                sw16.WriteLine("      {0} ", Math.Round(PSIFAK[1],5).ToString().PadLeft(11));
            }
            NPROF = 0;
            Z5 = 1.0;
            IZ10 = 0;
            
        label5521:
            KT14VR = 0;
            II = 0;
            
            for(IZ4 = IANF; IZ4 <= IZ1; IZ4++)  //DO 5500 IZ4=IANF, IZ1
            {
                KT15 = UWA011(IZ4,15);
                if (NPROF == KT15) goto label5510;
                NPROF = KT15;
                UWA006("RDISC",60,NPROF);
                UWA006("RDISC",61,NPROF);
                
            label5510:
                KT14 = UWA011(IZ4,14);
                if (KT14 != KT14VR) II = II + 1;
                KT14VR = KT14;
                A7 = PSI[IZ4];
                A8 = PSI[IZ4] * PSIFAK[II] * Z5;
                SINBR = OEFFNG[IZ4];
                SEHNEL = BRTLA[IZ4]/(AC30+AC31*OEFFNG[IZ4]);
                A9 = 0.92;
                if (ETAUOP[IZ4] != 0.0 && XYZXYZ == 99.0) A9 = ETAUOP[IZ4];
                SINBK = SINBR;
                
                for(IZ5 = 1; IZ5 <= 2; IZ5++)   //DO 5600 IZ5=1, 2
                {
                    SINB = SINBR;
                    if (IZ5 == 2) SINB = SINBK;
                    if (SINB < EEPSMI[NPROF]) SINB = EEPSMI[NPROF];
                    if (SINB > EEPSMA[NPROF]) SINB = EEPSMA[NPROF];
                    ETAU0 = AC6 + AC7* Math.Pow((SINB-AC8),2);
                    PHIOP = AC3 + AC4*SINB;
                    PHID = SINB / Math.Sqrt(1.0 - SINB*SINB);
                    PHID = AC5*PHID/PHIOP;
                    if (IZ5 == 1) A1 = A7;
                    if (IZ5 == 2) A1 = A8;
                    if (A1 < 1.5) A1 = 1.5;
                    PHIQ = A1*A9/(AC9+AC18*SINB) + PHID;
                    if (IZ4 != IZ1 ) goto label5550;
                    A10 = (STFDI[IZ4]+LS[IZ4])*XUPM*5.2359E-05;
                    CAX = PHIQ*PHIOP*A10;
                    A11 = Math.Sqrt(1.0-SINB*SINB)/SINB;
                    C2 = AC20*Math.Pow((A11*CAX-A10),2);
                    C2 = (AC19 * CAX*CAX+C2)/8.37225E+03;
                    
                label5550:
                    A3 = LS[IZ4];
                    if (IZ5 == 2 ) A3 = A3 * PHIQR/PHIQ;
                    EXB = AC21*Math.Pow((Math.Abs(PHIQ-1.0)),AC22);
                    EXA = EXB*AC23/(A3 /SEHNEL+AC24);
                    EXMA = 16.0/Math.Log10(AC25);
                    if (EXB > EXMA ) EXB = EXMA;
                    if (EXA > EXMA ) EXA = EXMA;
                    ETAQ = 1.0-1.0/Math.Pow(AC25,EXB)+1.0/Math.Pow(AC25,EXA);
                    if (PHIQ >= 1.0) goto label5560;
                    A1 = AC14+AC15* Math.Pow(PHIQ,AC16)+AC17*SINB;
                    ETAQ = ETAQ*(1.0-Math.Pow((Math.Abs((1.0-1.0/PHIQ)/(1.0-1.0/PHID))),A1));
                    goto label5570;
                    
                label5560:
                    A1 = AC10+AC11* Math.Pow(PHIQ,AC12)+AC13*SINB;
                    ETAQ = ETAQ*(1.0-Math.Pow((Math.Abs(1.0-1.0/PHIQ)),A1));
                    
                label5570:
                    A10 = TAZLE[KT14];
                    A11 = TAZLA[KT14];
                    
                    if (TAZLE[KT14] > 0.0) goto label1;
                    A10 = 0.1 * SEHNEL;
                    if (A10 < 2.0) A10 = 2.0;
                    if (A10 > 5.0) A10 = 5.0;
                    
                label1:
                    if (TAZLA[KT14] > 0.0) goto label2;
                    A11 = 0.1 * SEHNEL;
                    if (A11 < 2.0) A11 = 2.0;
                    if (A11 > 5.0) A11 = 5.0;
                    
                label2:
                    ZETAS = 1.0/Math.Sqrt(A10)+1.0/Math.Sqrt(A11);
                    ZETAS = (AK3/SINB-AK4)*(DELTLE+DELTLA)/2.0/A3*ZETAS;
                    ZETAR = (AK151+AK16*SINB)/(A3/SEHNEL+AK17);
                    if (IZ5 == 2) goto label5999;
                    ETAQR = ETAQ;
                    C2R = C2;
                    PHIQR = PHIQ;
                    ZETASR = ZETAS;
                    ZETARR = ZETAR;
                    ETAU0R = ETAU0;
                    continue;
                    
                label5999:
                    ZETASK = ZETAS;
                    ETAQK = ETAQ;
                    C2K = C2;
                    ZETARK = ZETAR;
                    ETAU0K = ETAU0;
                }   //5600 CONTINUE;
                PSTFMX[IZ4] = ETAQK/ETAQR * (ETAU0K-1.0/(1.0-0.9*SINBK*SINBK)*ZETARK-ZETASK) /(ETAU0R-1.0/(1.0-0.9*SINBR*SINBR)*ZETARR-ZETASR);
               
                if (LIGHT[3] == 2) 
                {
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}", IZ4.ToString().PadLeft(5), Math.Round(SINBK,5).ToString().PadLeft(11), Math.Round(SINBR,5).ToString().PadLeft(11),
                         Math.Round(ETAU0K,5).ToString().PadLeft(11), Math.Round(ETAU0R,5).ToString().PadLeft(11), Math.Round(ZETARK,5).ToString().PadLeft(11), Math.Round(ZETARR,5).ToString().PadLeft(11),
                         Math.Round(ZETASK,5).ToString().PadLeft(11), Math.Round(ZETASR,5).ToString().PadLeft(11));
                    sw16.WriteLine("      {0}{1}{2}{3}{4}{5}{6}{7} ", Math.Round(C2K,5).ToString().PadLeft(11), Math.Round(C2R,5).ToString().PadLeft(11),
                         Math.Round(A12,5).ToString().PadLeft(11), Math.Round(A3,5).ToString().PadLeft(11), Math.Round(A7,5).ToString().PadLeft(11),
                          Math.Round(A8,5).ToString().PadLeft(11), Math.Round(A9,5).ToString().PadLeft(11), Math.Round(A1,5).ToString().PadLeft(11));
                    //2805 FORMAT(' ',I5,8F11.5,/1X,5X,8F11.5)
                }
            }   //5500 CONTINUE
            
            if (IENTLA == 0 && IZ3 > 3) goto label2801;
            Z10 = (SUMH0+C2R-C2K)/SUMH0;
            if (Math.Abs((Z5-Z10)/Z10) < 0.001) goto label2810;
            Z5 = (Z10 + Z5)*0.5;
            IZ10 = IZ10 + 1;
            if (IZ10 > 10) goto label2810;
            goto label5521;
            
        label2810:
            TSTFMX[IZ1] = C2K/C2R;
            
        label2801:
            return;
        }    //END
        
                
        static void UWA070()
        {
            //ENTRY UPETAF
            double MEWIN, MEWIS, MW2X, LAMBC = 0, LAMBDA, KSLS, EGEGK = 0, DPDIFF = 0, FHALB = 0, KT7V = 0, PRET = 0, C0GE = 0,
                SINB2X = 0, OEFSTF = 0, H0DY = 0, E0STA = 0, TNULL = 0, SNULL = 0, VNULL = 0, UPMSTF = 0, TGEG = 0, EGEG = 0,
                VGEG = 0, H0STA = 0, TANB2 = 0, COTB2 = 0, PHISEN = 0, PHIQD = 0, PHIQC = 0, CAX = 0, W2STR = 0, SCHALL = 0,
                C2GE = 0, H2DY = 0, SEHNLE = 0, SEHNLA = 0, SEHNEL = 0, STLNG = 0, ZLE = 0, ZLA = 0, SAXP = 0, SAX0 = 0,
                SRADLE = 0, SRADLA = 0, KT9V = 0, KT14V = 0, KT14V2 = 0, KT7N = 0, KT9N = 0, KT14N = 0, DELHN = 0, DELHS = 0,
                DN1 = 0, DN2 = 0, HLA1 = 0, HLA2 = 0, DLAX = 0, PHIA = 0, PHIQ = 0, PHIAX = 0, PHIQX = 0, CAXX = 0, ZETAP0 = 0,
                REZAHL = 0, CHIR = 0, ZETAKS = 0, CHIM = 0, ZETAM = 0, ZETAH = 0, ZETAC = 0, W1W2 = 0, BETA1 = 0,
                BETAS = 0, BET1OP = 0, BETA1E = 0, ZETAAN = 0, ZETALT = 0, ZETAP = 0, ZETAF = 0, FSTU = 0, ZETAR = 0, ZETAX0 = 0,
                ZETAXB = 0, ZETAXP = 0, ZETAXI = 0, ZETAAX = 0, ZETMEN = 0, ZETMES = 0, ZETAME = 0, ETAKR = 0, ETAU = 0, PSIA = 0,
                ETAUC = 0, PSIC = 0, PSISRC = 0, FAKTC = 0, FAKT = 0, PSISTR = 0, ZETSLE = 0, ZETSLA = 0, PVLE = 0, VVLE = 0,
                PVLA = 0, PHLE = 0, VVLA = 0, PHLA = 0, SCHALA = 0, ZETASP = 0, ZETAX = 0, CHIV = 0, DELHV = 0, DELHK = 0, KT7END = 0,
                HKUE = 0, VKUE = 0, PHIK = 0, DELHVK = 0, HISTF = 0;
            bool QSTRA, QETAUC, QNDST, QENDST, QDIM, QANFST;
            //COMMON /ETAWTS/ WTSOLL,FETAE(7),FBEWE(7)
            //COMMON /ENTWCO/
            //1ACW1, ACW2, ACW3, ACW4, ACW5, ACW6, ACW7,TKUEL
            //EQUIVALENCE (NVENT(7), IZAEL)
            
            if (LIGHT[2] == 2) 
            {
                sw16.WriteLine(" **UPETAF**{0}     {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15} ", I.ToString().PadLeft(5),
                    KTAUFB.ToString().PadLeft(5),XPT[I-1].ToString().PadLeft(5),XPT[I].ToString().PadLeft(5),XE1T[I].ToString().PadLeft(5),
                    XC2GES[I-1].ToString().PadLeft(5),XC2GES[I].ToString().PadLeft(5),XG[I].ToString().PadLeft(5),PHI[I].ToString().PadLeft(5),
                    ETAUOP[I].ToString().PadLeft(5),ETAIOP[I].ToString().PadLeft(5),ETAI[I].ToString().PadLeft(5),OEFFNG[I].ToString().PadLeft(5),
                    BRTLE[I].ToString().PadLeft(5),BRTLA[I].ToString().PadLeft(5),STFDI[I].ToString().PadLeft(5));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n", LS[I].ToString("0.00000E+0").PadLeft(13),TAZLE[KT14].ToString("0.00000E+0").PadLeft(13),
                    TAZLA[KT14].ToString("0.00000E+0").PadLeft(13),DELTLE.ToString("0.00000E+0").PadLeft(13),DELTLA.ToString("0.00000E+0").PadLeft(13),
                    TASAX[KT14].ToString("0.00000E+0").PadLeft(13),STFDI[I-1].ToString("0.00000E+0").PadLeft(13),LS[I-1].ToString("0.00000E+0").PadLeft(13),
                    STFDI[I+1].ToString("0.00000E+0").PadLeft(13),LS[I+1].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7} \n", FLUT.ToString("0.00000E+0").PadLeft(13),TC1.ToString("0.00000E+0").PadLeft(13),TC2.ToString("0.00000E+0").PadLeft(13),
                    TC3.ToString("0.00000E+0").PadLeft(13),TC77.ToString("0.00000E+0").PadLeft(13),TC78.ToString("0.00000E+0").PadLeft(13),PSTFMX[I].ToString("0.00000E+0").PadLeft(13),
                    TSTFMX[I].ToString("0.00000E+0").PadLeft(13));
                    //1000 FORMAT (' ','**UPETAF**',I5,5X,15I5,4(/1X,10E13.5,/))
            }
            IZ10 = 0;
            IZ9 = 0;
            EGEGK = 0.0;
            DPDIFF = 0.0;
            QSTRA = false;
            QETAUC = false;
            QNDST = false;
            QENDST = false;
            QDIM = false;
            QANFST = false;
            if (KT1 > 1) PHI[75] = 0.0;
            if (KT1 > 1) PSI[75] = 0.0;
            if (KT1 > 1) XPT[75] = 0.0;
            FHALB = 1.0;
            if (KT7 >= 8) FHALB = 0.5;
            if (XYZXYZ == 99.0) QDIM = true;
            
            if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) 
                QNDST = true;
            if (KT1 == 3 && LSZ[KT10] != 0.0) QENDST = true;
            if (I  ==  ITTEND[KT6]-2 && KT7  ==  8 && LSZ[KT10]  !=  0.0 ) LS[I] = LSZ[KT10];
            if (I  ==  ITTEND[KT6]-2 && KT7  ==  8 && LSZ[KT10]  !=  0.0 ) QENDST = true;
            KT7V = UWA011(I-1,7);
            if (KT7V != 4 && KT7V <= 7) QANFST = true;
            PRET = XPT[I];
            C0GE = XC2GES[I-1];
            SINB2X = OEFFNG[I];
            OEFSTF = OEFFNG[I];
            
        label1:
            H0DY = C0GE*C0GE/8.37225E+03;
            E0STA = XE1T[I] - H0DY;
            TNULL = VISUM(XPT[I-1],E0STA,13);
            SNULL = VISUM(XPT[I-1],TNULL,12);
            VNULL = VISUM(XPT[I-1],TNULL,10);
            
            if (ETAUOP[I] == 0.0) ETAUOP[I] = 0.92;
            if (QDIM && IZAEL == 0) ETAUOP[I] = 0.92;
            UPMSTF = (STFDI[I]+LS[I])*XUPM*5.2359E-05;
            
        label30:
            TGEG = VISUM(PRET,SNULL,14);
            EGEG = VISUM(PRET,TGEG,11);
            if (IZ10 == 0 && IZ9 == 0 && KT1 > 1) EGEGK = EGEG;
            VGEG = VISUM(PRET,TGEG,10);
            H0STA = E0STA - EGEG;
            
        label40:
            TANB2 = SINB2X/Math.Sqrt(1.0-SINB2X*SINB2X);
            COTB2 = 1.0/TANB2;
            PHISEN = TANB2;
            PHIQD = TC67;
            PHIQC = TC68 * PHIQD;
            if (QNDST) goto label50;
            if (QENDST) goto label50;
            A1 = FHALB * (TC70 + TC71*Math.Pow(SINB2X,TC72))/ETAUOP[I];
            A4 = TC77*TC77 + TC78*TC78*COTB2*COTB2;
            A2 = UPMSTF *(A1 /PHISEN - 2.0*COTB2*TC78*TC87)/A4;
            A3 = UPMSTF*UPMSTF;
            A3 = (A1*PHIQD*A3 + H0STA*8.37225E+03 + C0GE*C0GE - TC87*TC87*A3)/A4;
            CAX = Math.Pow((A2/2.0),2) + A3;

            //1020 FORMAT (1X,'TURBFEHLER  ',I5,/1X,10E13.5)        
            //1010 FORMAT (' ','**UPETAF**',I5,8(/1X,10E13.5,/),/1X)
            if (CAX <= 0.0)
            {
                sw16.WriteLine(" TURBFEHLER  {0} ", I.ToString().PadLeft(5));
                sw16.WriteLine(" {0}{1}{2}{3}{4} ", A2.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),
                    CAX.ToString("0.00000E+0").PadLeft(13),C0GE.ToString("0.00000E+0").PadLeft(13),H0STA.ToString("0.00000E+0").PadLeft(13));
            }
            A3 = Math.Sqrt(CAX);
            CAX = -(A2/2.0) + A3;
            if (CAX <= 0.0) CAX = -(A2/2.0) - A3;
            goto label60;
            
        label50:
            CAX = XG[I]*VGEG/(STFDI[I]+LS[I])/LS[I]/FLUT * 8.841951E+04;
            
        label60:
            W2STR = CAX/OEFSTF;
            A2 = 357.0;
            if (TGEG < 0.0) A2 = 333.0;
            A1 = A2 * Math.Sqrt(PRET*VGEG);
            SCHALL = A1;
            if (W2STR < A1) goto label80;
            if (CAX > A1) goto label90;
            if (IZ10 > 0 && Math.Abs(CAX-A1)/A1 > 0.001) goto label90;
            
        label70:
            if (QSTRA) goto label80;
            SINB2X = OEFSTF * (1.0 + TC79* Math.Pow((CAX/OEFSTF/A1 - 1.0),TC80));
            QSTRA = true;
            goto label40;
            
        label90:
            if (IZ10 == 10) goto label70;
            IZ10 = IZ10 + 1;
            A3 = A2/100.0;
            A3 = A3*A3/9.81;
            PRET = PRET*Math.Pow((CAX/A1),A3);
            if (KT1 > 1) PHI[75] = PRET;
            goto label30;
            
        label80:
            C2GE = Math.Pow((TC77*CAX),2) + Math.Pow((TC78*CAX*COTB2 - TC87*UPMSTF),2);
            H2DY = C2GE/8.37225E+03;
            C2GE = Math.Sqrt(C2GE);
            if (KT1 <= 1) goto label120;
            A1 = CAX/SCHALL;
            if (A1 > 1.0) A1 = 1.0;
            A2 = TC92 + TC93*(A1-TC94) + TC95 * Math.Pow((A1-TC94),3);
            A3 = TSTFMX[I];
            if (A3 == 0.0) A3 = 1.0;
            A3 = -A2 * Math.Pow((CAX/91.5),2) * A3;
            A4 = EGEGK + A3;
            A6 = A4;
            A5 = VISUM(SNULL,A6,15);
            A6 = XPT[I] - A5;
            if (Math.Abs((A6-DPDIFF)/XPT[I]) < 0.0002) goto label82;
            IZ9 = IZ9 + 1;
            if (IZ9 > 10) goto label82;
            PRET = A5;
            DPDIFF = A6;
            PHI[75] = 0.0;
            IZ10 = 0;
            QSTRA = false;
            goto label30;
            
        label82:
            PSI[75] = PRET / XPT[I];
            XPT[75] = PRET;
            
            if (LIGHT[2] == 2 || IZ9 > 10) 
            {
                sw16.WriteLine(" **DIFFUSOR-WARNUNG**{0}{1}", IZ9.ToString().PadLeft(5),IZ10.ToString().PadLeft(5));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", PRET.ToString("0.00000E+0").PadLeft(13),PHI[75].ToString("0.00000E+0").PadLeft(13),
                    DPDIFF.ToString("0.00000E+0").PadLeft(13),EGEGK.ToString("0.00000E+0").PadLeft(13),A1.ToString("0.00000E+0").PadLeft(13),A2.ToString("0.00000E+0").PadLeft(13),
                    A3.ToString("0.00000E+0").PadLeft(13),A4.ToString("0.00000E+0").PadLeft(13),A5.ToString("0.00000E+0").PadLeft(13),A6.ToString("0.00000E+0").PadLeft(13));
                //83 FORMAT (' ','**DIFFUSOR-WARNUNG**',2I5,/1X,10E13.5)
            }
            
        label120:
            if (!QANFST) goto label100;
            C0GE = CAX;
            if (NVENT[KT6]  ==  -999 && IZAEL  >  1 && XC2GES[I-1]  >  0.0) 
                C0GE = XC2GES[I-1];
            H0DY = C0GE*C0GE/8.37225E+03;
            A1 = XC2GES[I-1];
            XC2GES[I-1] = C0GE;
            if (A1 == 0.0) goto label1;
            
        label100:
            XH0[I] = H0STA + H0DY - H2DY;
            PSI[I] = XH0[I]*8.37225E+03/UPMSTF/UPMSTF;
            if (QNDST) goto label130;
            if (QENDST) goto label130;
            A3 = Math.Pow(STFDI[I],3);
            A3 = XG[I]*VGEG/A3/XUPM/CAX * UPMSTF/FLUT * 1.687E+09;
            
            if (A3 < 0.010 || A3 > 4.0)
            {
                //sw16.WriteLine("",1020)I,XG[I],VGEG,STFDI[I],XUPM,CAX,UPMSTF,FLUT
                sw16.WriteLine(" TURBFEHLER  {0} ", I.ToString().PadLeft(5));
                sw16.WriteLine(" {0}{1}{2}{3}{4} ", XG[I].ToString("0.00000E+0").PadLeft(13),VGEG.ToString("0.00000E+0").PadLeft(13),
                    STFDI[I].ToString("0.00000E+0").PadLeft(13),XUPM.ToString("0.00000E+0").PadLeft(13),CAX.ToString("0.00000E+0").PadLeft(13),
                    UPMSTF.ToString("0.00000E+0").PadLeft(13),FLUT.ToString("0.00000E+0").PadLeft(13));
            }
            A3 = Math.Sqrt(A3);
            LS[I] = (((((.4598229E-01 *A3- .3348859E+00 )*A3+.9992216E+00 )*A3 - 0.1578235E+01)*A3+ .1373409E+01 )*A3-.4178106E-01 )*A3 +.1745900E-02;
            LS[I] = LS[I] * STFDI[I];
            A3 = STFDI[I] + LS[I];
            if (QDIM) goto label130;

            UWA064(XPT[1], XE1T[1], XPT[I], XE2T[I], OEFSTF, PSI[I], XG[I] / FLUT, GMAXG1, XUPM, LS[I], A3, KT15, ref BRTLE[I], ref BRTLA[I], ref SEHNLE, ref SEHNLA);
            
        label130:
            SEHNEL = (BRTLE[I]+BRTLA[I])/2.0/(TC65+TC66*OEFSTF);
            STLNG = SEHNEL * TC82;
            ZLE = TAZLE[KT14];
            if (ZLE <= -300.0) ZLE = ZLE + 300.0;
            if (ZLE <= -200.0) ZLE = ZLE + 200.0;
            if (ZLE <= -100.0) ZLE = ZLE + 100.0;
            ZLA = TAZLA[KT14];
            if (ZLA <= -300.0) ZLA = ZLA + 300.0;
            if (ZLA <= -200.0) ZLA = ZLA + 200.0;
            if (ZLA <= -100.0) ZLA = ZLA + 100.0;
            if (ZLE != 0.0) goto label13;
            ZLE = 0.1 * SEHNEL;
            if (ZLE < 2.0) ZLE = 2.0;
            if (ZLE > 5.0) ZLE = 5.0;
            if (TAZLE[KT14] == 0.0) goto label13;
            A1 = BRTLE[I]/ZLE/DELTLE;
            A1 = 0.4055 + (0.808-0.009*A1)*Math.Log(A1/5.0);
            ZLE = -Math.Exp(A1);
            
        label13:
            if (ZLA != 0.0) goto label14;
            ZLA = 0.1 * SEHNEL;
            if (ZLA < 2.0) ZLA = 2.0;
            if (ZLA > 5.0) ZLA = 5.0;
            if (TAZLA[KT14] == 0.0) goto label14;
            A1 = BRTLA[I]/ZLA/DELTLA;
            A1 = 0.4055 + (0.808-0.009*A1)*Math.Log(A1/5.0);
            ZLA = -Math.Exp(A1);
            
        label14:
            A1 = TC84 * SEHNEL + TC85;
            SAXP = TASAX[KT14];
            SAX0 = SAXP - A1;
            if (A1 > SAXP) SAX0 = 0.0;
            if (ZLE != 1.0 || ZLA != 1.0) goto label11;
            SAX0 = 0.0;
            goto label12;
            
        label11:
            if (ZLE == 1.0 || ZLA == 1.0) SAX0 = 0.5 * SAX0;
            
        label12:
            if (!QNDST) goto label10;
            SRADLE = HS1MIN[KT14];
            SRADLA = HS1MAX[KT14];
            goto label20;
            
        label10:
            SRADLE = DELTLE;
            SRADLA = DELTLA;
            
        label20:
            KT9V = UWA011(I-1,9);
            KT14V = UWA011(I-1,14);
            KT14V2 = UWA011(I-2,14);
            KT7N = UWA011(I+1,7);
            KT9N = UWA011(I+1,9);
            KT14N = UWA011(I+1,14);
            
            if (QANFST) goto label140;
            if (KT9  !=  KT9N ) goto label150;
            if (KT9  !=  KT9V ) goto label160;
            if (KT14 !=  KT14N) goto label170;
            if (KT14 !=  KT14V) goto label180;
            if (KT7  ==  8 ) goto label303;
            goto label302;
            
        label140:
            if (KT9  !=  KT9N ) goto label310;
            if (KT14 !=  KT14N) goto label310;
            if (KT7  ==  8 ) goto label304;
            if (KT7N ==  8 ) goto label301;
            goto label300;
            
        label150:
            if (KT14 !=  KT14V) goto label310;
            if (KT7  ==  9 ) goto label171;
            goto label302;
            
        label160:
            if (KT7  ==  8 ) goto label304;
            if (KT14 !=  KT14N) goto label310;
            if (KT7  !=  KT7N ) goto label301;
            goto label300;
            
        label170:
            if (KT7  ==  9 ) goto label171;
            if (KT14 !=  KT14V) goto label310;
            goto label302;
            
        label171:
            if (KT14 !=  KT14V2) goto label305;
            goto label306;
            
        label180:
            if (KT7  ==  8 ) goto label304;
            if (KT14 !=  KT14N ) goto label310;
            goto label300;
            
        label300:
            IZ1 = I;
            IZ2 = I + 1;
            goto label333;
            
        label301:
            IZ1 = I;
            IZ2 = I + 2;
            goto label333;
            
        label302:
            IZ1 = I-1;
            IZ2 = I;
            goto label333;
            
        label306:
            IZ1 = I - 2;
            IZ2 = I;
            goto label333;
            
        label303:
            IZ1 = I - 1;
            IZ2 = I + 1;
            
        label333:
            A1 = 1.0;
            A2 = 2.0;
            goto label350;
            
        label304:
            IZ1 = I;
            IZ2 = I + 1;
            goto label334;
            
        label305:
            IZ1 = I - 1;
            IZ2 = I;
        
        label334:
            A1 = 2.0;
            A2 = 1.0;
            goto label350;
            
        label310:
            MEWIN = 0.0;
            MEWIS = 0.0;
            DELHN = 0.0;
            DELHS = 0.0;
            goto label200;
            
        label350:
            DN1 = STFDI[IZ1];
            DN2 = STFDI[IZ2];
            HLA1 = LS[IZ1];
            HLA2 = LS[IZ2];
            DLAX = (BRTLE[IZ2]+BRTLA[IZ2])/A1 + A2*SAXP;
            MEWIN = Math.Abs((DN1-DN2)/2.0/DLAX);
            MEWIS = Math.Abs((DN1+2.0*HLA1-DN2-2.0*HLA2)/2.0/DLAX);
            A1 = (BRTLE[IZ2]+BRTLA[IZ2])/2.0;
            DELHN = MEWIN * A1;
            DELHS = MEWIS * A1;
            MEWIN = Math.Atan(MEWIN)/0.0174533;
            MEWIS = Math.Atan(MEWIS)/0.0174533;
            
        label200:
            PHIA = CAX/UPMSTF;
            PHIQ = PHIA/PHISEN;
            PHIAX = PHIA;
            PHIQX = PHIQ;
            CAXX = CAX;
            if (!QNDST) goto label210;
            if (PHIQ > PHIQC) goto label210;
            QETAUC = true;
            PHIQX = PHIQC;
            PHIAX = PHIQC * PHISEN;
            CAXX = PHIAX * UPMSTF;
            
        label210:
            ZETAP0 = TC1/OEFSTF + TC2/(OEFSTF-1.0) + TC3;
            A1 = TGEG;
            if (A1 <= 0.0) A1 = UW0011(PRET,1);
            A2 = UW0019(A1,VGEG);
            A3 = A2 * VGEG;
            REZAHL = SEHNEL*CAXX/SINB2X/A3 * 1.0E-03;
            KSLS = TC81/SEHNEL;
            A1 = TC14/REZAHL;
            if (KSLS < A1) KSLS = A1;
            A1 = KSLS * 1.0E+04;
            if (A1 > TC9) goto label220;
            A2 = TC7 - TC8*Math.Pow((TC9-A1),TC10);
            goto label230;
            
        label220:
            A2 = Math.Pow((TC13*(A1-TC9)),TC10);
            A2 = TC7 - TC11*(1.0- Math.Pow(TC12,(-A2)));
            
        label230:
            A1 = Math.Pow((TC6*KSLS),A2);
            CHIR = 1.0 + TC4*(1.0-Math.Pow(TC5,(-A1)));
            ZETAKS = ZETAP0 * (CHIR-1.0);
            MW2X = CAXX/SINB2X/SCHALL;
            if (MW2X > TC23) goto label240;
            CHIM = TC15 - TC16* Math.Pow(MW2X,TC17) + TC18*Math.Pow(MW2X,TC19);
            goto label250;
            
        label240:
            A1 = Math.Pow(MW2X,TC22);
            CHIM = TC20 + TC21*(1.0-Math.Exp(-A1));
            
        label250:
            ZETAM = ZETAP0 * (CHIM-1.0) * CHIR;
            ZETAKS = ZETAKS * CHIM;
            ZETAH = TC24*TC25/SINB2X * Math.Pow((TC25/SINB2X/(ZETAP0+ZETAKS+ZETAM)),TC26);
            ZETAC = Math.Pow((TC25/(1.0-TC25/SINB2X)),TC27);
            W1W2 = Math.Sqrt(PHIAX*PHIAX + Math.Pow((PHIAX*COTB2-1.0),2))/PHIAX*SINB2X;
            A1 = COTB2 - 1.0/PHIAX;
            if (Math.Abs(A1) > 0.00001) goto label260;
            A1 = 0.00001;
            
        label260:
            A1 = 1.0/A1;
            BETA1 = Math.Atan(A1)/0.0174533;
            if (BETA1 <= 0.0) BETA1 = 180.0 + BETA1;
            BETAS = TC33 + TC34*Math.Pow(OEFSTF,TC35);
            BET1OP = TC32 + TC36*Math.Pow(BETAS,TC86);
            A1 = BETA1 - BET1OP;
            if (A1 > 0.0) goto label270;
            A2 = TC28 * Math.Pow(Math.Abs(A1),TC29);
            goto label280;
            
        label270:
            A2 = TC30 * Math.Pow(Math.Abs(A1),TC31);
            
        label280:
            ZETAAN = A2 * (W1W2*W1W2);
            if (!QANFST) goto label281;
            BETA1E = 90.0;
            A1 = BETA1E - BET1OP;
            if (A1 > 0.0) goto label271;
            A2 = TC28 * Math.Pow(Math.Abs(A1),TC29);
            goto label282;
            
        label271:
            A2 = TC30 * Math.Pow(Math.Abs(A1),TC31);
            
        label282:
            ZETAAN = (ZETAAN + A2*(SINB2X*SINB2X))/2.0;
            
        label281:
            ZETALT = TC88 + TC89 * Math.Pow(Math.Abs(OEFSTF-TC90),TC91);
            ZETAP = ZETAP0 + ZETAKS + ZETAM + ZETAH + ZETAC + ZETAAN + ZETALT;
            ZETAF = 0.0;
            A1 = PHIAX * (0.5/PHIQD);
            A9 = Math.Pow((A1 /SINB2X),2);
            A8 = A1 *A1 + Math.Pow((A1 *COTB2-1.0),2);
            if (QANFST&&KT7 == 8) goto label290;
            A1 = 1.0;
            if (QANFST) A1 = 0.5;
            A5 = LS[I]/(STFDI[I]+LS[I]);
            ZETAF = A1 * TC37/OEFSTF * Math.Pow(A5,TC38);
            if (KT1 <= 1) goto label290;
            if (KT6  ==  NTTETB[KT10]) goto label284;
            if (NVENT[KT6+1]  ==  -999) goto label290;
            
        label284:
            if (QETAUC) goto label290;
            if (ETAUOP[I] <= 0.0) goto label290;
            if (PSI[I] < 0.10) goto label290;
            A2 = ETAUOP[I];
            A4 = A9*A2/(A9-(1.0-A2)*A8);
            FSTU = (1.0-A2)/(1.0-A4);
            A1 = TC39 * Math.Pow(A5,TC40) * H2DY/XH0[I]/FSTU / SINB2X;
            if (PHIQX >= 1.0) goto label285;
            A1 = A1* (1.0-Math.Pow((1.0-PHIQX),2)/Math.Pow((1.0-PHIQD),2));
            
        label285:
            ZETAF = ZETAF + A1;
            
        label290:
            A1 = 180.0 - (BETA1 + Math.Asin(SINB2X)/0.0174533);
            A1 = (TC42+TC43*Math.Pow(W1W2,TC44))*(A1+TC45)*1.0E-04;
            ZETAR = A1*STLNG/(LS[I]+TC41*STLNG);
            if (!QANFST) goto label291;
            A1 = 180.0 - (BETA1E + Math.Asin(SINB2X)/0.0174533);
            A1 = (TC42+TC43*Math.Pow(SINB2X,TC44))*(A1+TC45)*1.0E-04;
            ZETAR = (A1*STLNG/(LS[I]+TC41*STLNG) + ZETAR)/2.0;
            
        label291:
            ZETAX0 = TC46/SINB2X * SAX0/LS[I];
            ZETAXB = TC47/SINB2X * (SAXP-SAX0)/LS[I];
            A1 = TC49/SINB2X * (SAXP-SAX0)/SEHNEL;
            ZETAXP = TC48 * Math.Exp(A1)/SINB2X * SEHNEL/LS[I];
            A1 = TC51*SAXP/SEHNEL * TC82/TC83;
            ZETAXI = TC50 * Math.Exp(A1);
            if (!QANFST) goto label292;
            if (KT7 != 8) goto label293;
            ZETAX0 = ZETAX0 * Math.Pow(SINB2X,3);
            ZETAXB = 0.0;
            ZETAXP = ZETAXP * 0.50;
            ZETAXI = 0.0;
            goto label292;
            
        label293:
            ZETAX0 = 0.5 * ZETAX0 * (1.0 + Math.Pow(SINB2X,3));
            ZETAXB = 0.5 * ZETAXB;
            ZETAXP = 0.75 * ZETAXP;
            ZETAXI = 0.5 * ZETAXI;
            
        label292:
            ZETAAX = ZETAX0 + ZETAXB + ZETAXP + ZETAXI;
            ZETMEN = 0.0;
            ZETMES = 0.0;
            if (MEWIN <= 0.01) goto label400;
            A1 = Math.Pow(((TC52*TC83/TC82*Math.Pow(OEFSTF,TC54) + TC53)*MEWIN),TC55);
            ZETMEN = A1 * DELHN/LS[I] * (ZETAP + ZETAR + ZETAF);
            
        label400:
            if (MEWIS <= 0.01) goto label410;
            A1 = Math.Pow(((TC52*TC83/TC82*Math.Pow(OEFSTF,TC54) + TC53)*MEWIS),TC55);
            ZETMES = A1 * DELHS/LS[I] * (ZETAP + ZETAR + ZETAF);
            
        label410:
            ZETAME = ZETMEN + ZETMES;
            ETAKR = 1.0 - (ZETAP + ZETAF + ZETAR + ZETAAX + ZETAME);
            if (ETAKR < 0.00) ETAKR = 0.0;
            FSTU = A9/(A9 - ETAKR*A8);
            ETAU = 1.0 - FSTU * (1.0-ETAKR);
            LAMBDA = (TC70 + TC71*Math.Pow(SINB2X,TC72))*(PHIQX-PHIQD);
            A2 = ETAU;
            if (A2 < 0.40) A2 = 0.40;
            PSIA = LAMBDA/A2;
            if (!QETAUC) goto label420;
            ETAUC = ETAU;
            LAMBC = LAMBDA;
            PSIC = PSIA;
            LAMBDA = (TC70 + TC71* Math.Pow(SINB2X,TC72)) * (PHIQ-PHIQD);
            PSIA = TC69 + (PSIC-TC69) * PHIQ/PHIQC;
            ETAU = 0.0;
            if (PHIQ <= PHIQD) goto label421;
            ETAU = LAMBDA/PSIA/A2*ETAUC;
            
        label421:
            A2 = (C0GE*C0GE - C2GE*C2GE)/UPMSTF/UPMSTF;
            PSISRC = PSIC*FHALB - A2;
            if (PSISRC < 0.0010) PSISRC = 0.0010;
            FAKTC = PHIAX/Math.Sqrt(PSISRC) * OEFSTF/SINB2X;
            FAKTC = YDFAKT[I]/FAKTC;
            A1 = 1.0;
            FAKT = A1 + (FAKTC-A1)*PHIQ/PHIQC;
            XDFAKT[I] = YDFAKT[I]/FAKT;
            PSISTR = Math.Pow((PHIA/XDFAKT[I]),2);
            PSIA = (PSISTR + A2)/FHALB;
            goto label422;
            
        label420:
            PSISTR = PSIA * FHALB;
            PSISTR = PSISTR - (C0GE*C0GE - C2GE*C2GE)/UPMSTF/UPMSTF;
            if (PSISTR < 0.0010) PSISTR = 0.0010;
            XDFAKT[I] = PHIA/Math.Sqrt(PSISTR) * OEFSTF/SINB2X;
            
        label422:
            if ((QNDST) && !(QDIM) && IZAEL <= 1) XDFAKT[I] = 0.0;
            PHI[I] = PHIA;
            XC2GES[I] = C2GE;
            ETAUOP[I] = ETAU;
            ZETSLE = 0.0;
            ZETSLA = 0.0;
            if (ETAU <= 0.0) goto label500;
            if (KT7 != 4) goto label430;
            PVLE = XPT[I-1];
            VVLE = VNULL;
            PVLA = Math.Sqrt(PVLE*PRET);
            PHLE = PVLA;
            VVLA = Math.Sqrt(VVLE*VGEG);
            PHLA = PRET;
            goto label440;
        
        label430:
            if (KT7 != 8) goto label450;
            PVLE = XPT[I-1];
            VVLE = VNULL;
            PVLA = XPT[I];
            PHLE = PVLA;
            A1 = XE1T[I+1] - H2DY;
            A1 = VISUM(PVLA,A1,13);
            SCHALA = A1;
            VVLA = VISUM(PVLA,A1,10);
            PHLA = XPT[I+1];
            
            if (I == (ITTEND[KT6]-1) && PSI[75] != 0.0  ||  I == (ITTEND[KT6]-2) && PSI[75] != 0.0)
                PHLA = PSI[75]*PHLA;
            goto label440;
            
        label450:
            PVLE = XPT[I-2];
            A1 = XC2GES[I-2];
            A1 = XE1T[I-1] - A1*A1/8.37225E+03;
            A1 = VISUM(PVLE,A1,13);
            VVLE = VISUM(PVLE,A1,10);
            PVLA = XPT[I-1];
            PHLE = PVLA;
            VVLA = VNULL;
            PHLA = PRET;
            
        label440:
            if (PHLE >= PVLE) goto label460;
            A1 = TC97;
            if (ZLE < 0.0) A1 = 2.0;
            A1 = Math.Sqrt(1.0-Math.Pow((PHLE/PVLE),A1));
            if (ZLE > 0.0) goto label441;
            A2 = -ZLE * Math.Sqrt(SRADLE/BRTLE[I]);
            goto label442;
            
        label441:
            A2 = TC56/Math.Pow(ZLE,TC57);
            
        label442:
            A3 = A1 * A2;
            A6 = STFDI[I];
            if (KT7 == 9) A6 = STFDI[I-1];
            if (ZLE != 1.0) goto label470;
            A5 = 0.0;
            A1 = TC58 + TC59*OEFSTF;
            if (A1 < 1.0) A1 = 1.0;
            goto label480;
            
        label470:
            A5 = 0.15 * SEHNEL;
            if (A5 < 3.0) A5 = 3.0;
            A1 = 1.0;
            
        label480:
            A5 = 3.14159 * (A6 -A5) * SRADLE * 1.0E-06;
            ZETSLE = 3.6 * A5 * A3 * Math.Sqrt(0.980665E+05*PVLE/VVLE);
            ZETSLE = ZETSLE/(XG[I]/FLUT )/TC96 * A1;
            
        label460:
            if (PHLA >= PVLA) goto label500;
            A6 = STFDI[I];
            A7 = LS[I];
            if (KT7 != 8) goto label461;
            A6 = STFDI[I+1];
            A7 = LS[I+1];
            
        label461:
            if (!QNDST) goto label462;
            if (KT7 >= 8 && ZLA == 1.0) goto label520;
            
        label462:
            A1 = TC97;
            if (ZLA < 0.0) A1 = 2.0;
            A1 = Math.Sqrt(1.0-Math.Pow((PHLA/PVLA),A1));
            if (ZLA > 0.0) goto label463;
            A2 = - ZLA * Math.Sqrt(SRADLA/BRTLA[I]);
            goto label464;
            
        label463:
            A2 = TC56/Math.Pow(ZLA,TC57);
            
        label464:
            A3 = A1 * A2;
            if (ZLA != 1.0) goto label490;
            
            A5 = 0.0;
            A1 = TC58 + TC59*OEFSTF;
            if (A1 < 1.0) A1 = 1.0;
            goto label510;
            
        label490:
            A5 = 0.15 * SEHNEL;
            if (A5 < 3.0) A5 = 3.0;
            A1 = 1.0;
        
        label510:
            A5 = 3.14159 * (A6 + 2.0*(A7+A5)) * SRADLA*1.0E-06;
            ZETSLA = 3.6 * A5 * A3 * Math.Sqrt(0.980665E+05*PVLA/VVLA);
            ZETSLA = ZETSLA/(XG[I]/FLUT )/TC96 * A1;
            goto label500;
            
        label520:
            A5 = A6 + 2.0*A7;
            A2 = OEFSTF;
            if (KT7 == 8) A2 = OEFFNG[I+1];
            A5 = 4.0*A5*SRADLA/(A5*A5-A6*A6)/ A2;
            A1 = CAX;
            A2 = SCHALL;
            
            if (KT7 != 8) goto label521;
            A1 = PHI[I+1]*(STFDI[I+1]+LS[I+1])*XUPM*5.2359E-05;
            A2 = SCHALA;
            A2 = VISUM(PVLA,A2,12);
            A2 = VISUM(PHLA,A2,14);
            A3 = VISUM(PHLA,A2,10);
            A4 = 357.0;
            if (A2 < 0.0) A4 = 333.0;
            SCHALA = A4 * Math.Sqrt(PHLA*A3);
            A2 = SCHALA;
            
        label521:
            A1 = A1/A2/TC98;
            if (A1 < 0.3) A1 = 0.3;
            A2 = TC60/(Math.Pow(A1,TC61)+TC62);
            if (A2 < 1.0 && A2  !=  0.0) A2 = 1.0;
            ZETSLA = A5 * A2;
            
        label500:
            ZETASP = ZETSLE + ZETSLA;
            if (ZETASP > 1.0) ZETASP = 1.0;
            ZETAX = 0.0;
            if (ETAU <= 0.0) goto label600;
            if (TGEG > 0.0) goto label530;
            A1 = E0STA - TC64*H0STA;
            A2 = VISUM(SNULL,A1,05);
            if (A1 > 0.0) goto label530;
            ZETAX = TC63 * (1.0 + A1);
            goto label530;
            
        label600:
            ETAUOP[I] = 0.0;
            ETAIOP[I] = 0.0;
            ETAI[I] = 0.0;
            A1 = UPMSTF*UPMSTF/8.37225E+03;
            A2 = LS[I]/(STFDI[I]+LS[I]);
            A3 = PHIQD;
            if (PHIQ < PHIQD) A3 = TC73;
            A4 = PHIQD - A3 + A3* Math.Pow((PHIQ/PHIQD),(PHIQD/A3));
            CHIV = (TC70 + TC71 * Math.Pow(SINB2X,TC72))*(A4-PHIQD)*A4*TANB2;
            CHIV = CHIV * (1.0 + TC74*Math.Pow((PHIQD-PHIQ),2) * A2);
            DELHV = A1/PHIA * CHIV;
            if (XH0[I]  <  0.0) DELHV = DELHV + XH0[I]/FHALB;
            DELHK = 0.0;
            if (PHIQ >= PHIQD) goto label610;
            if (!QNDST) goto label610;
            IZ1 = ITTEND[KT6];
            KT7END = UWA011(IZ1,7);
            if (KT7END != 6) goto label610;
            HKUE = TKUEL;
            VKUE = VISUM(XPT[IZ1],HKUE,10);
            HKUE = VISUM(XPT[IZ1],HKUE,11);
            A3 = XE1T[I] - DELHV;
            PHIK = A2/TC75 * TC76 / Math.Pow(PHIQD,2) * Math.Pow((PHIQD-PHIQ),2) * TANB2;
            A1 = PHIK/VKUE;
            A2 = PHIA/VGEG;
            A4 = (A1*HKUE + A2*A3)/(A1 + A2);
            DELHK = (A3-A4) * FHALB;
            
        label610:
            DELHV = DELHV * FHALB;
            DELHVK = DELHV + DELHK;
            HISTF = DELHVK;
            ETAI[I] = DELHV - DELHVK;
            goto label550;
            
        label530:
            ETAIOP[I] = ETAUOP[I] * (1.0-ZETASP);
            A1 = PSTFMX[I];
            if (A1 < 1.0) A1 = 1.0;
            A1 = ETAIOP[I] * (1.0-ZETAX) * A1 * DETA * FETAE[KT6];
            if (KT6 == NTTETB[KT10] && STZNDT[KT10] > 0.0 && TC99 > 0.0)
                A1 = A1*TC99;
            if (FETAE[KT6] < 0.0) A1 = -FETAE[KT6];
            HISTF = XH0[I] * A1;
            if (KT1 == 0 && KT7V != 9) goto label540;
            if (!QDIM) goto label540;
            if (FETAE[KT6] < 0.0) goto label540;
            A2 = 1.0;
            if (KT1 != 0) A2 = TSTFMX[I];
            if (A2 == 0.0) A2 = 1.0;
            A3 = 1.0;
            if (KT7V == 9) A3 = TSTFMX[I-1];
            if (A3 == 0.0) A3 = 1.0;
            HISTF = (H0STA + H0DY*A3 - H2DY*A2)*A1;
            
        label540:
            ETAI[I] = HISTF/XH0[I];
            
        label550:
            XE2T[I] = XE1T[I] - HISTF;
            T2T[I] = VISUM(XPT[I],XE2T[I],03);
            VOLUME[I] = VGEG;
            if (LIGHT[2] == 2)
            {
                sw16.WriteLine(" **UPETAF**{0} ", I.ToString().PadLeft(5));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n", XE2T[I].ToString("0.00000E+0").PadLeft(13),ETAUOP[I].ToString("0.00000E+0").PadLeft(13),
                    ETAIOP[I].ToString("0.00000E+0").PadLeft(13),ETAI[I].ToString("0.00000E+0").PadLeft(13),PSI[I].ToString("0.00000E+0").PadLeft(13),PHI[I].ToString("0.00000E+0").PadLeft(13),
                    XC2GES[I].ToString("0.00000E+0").PadLeft(13),XDFAKT[I].ToString("0.00000E+0").PadLeft(13),SINB2X.ToString("0.00000E+0").PadLeft(13),VGEG.ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n", CAX.ToString("0.00000E+0").PadLeft(13),PHISEN.ToString("0.00000E+0").PadLeft(13),PHIQ.ToString("0.00000E+0").PadLeft(13),
                    ZETAP0.ToString("0.00000E+0").PadLeft(13),REZAHL.ToString("0.00000E+0").PadLeft(13),ZETAKS.ToString("0.00000E+0").PadLeft(13),MW2X.ToString("0.00000E+0").PadLeft(13),
                    ZETAM.ToString("0.00000E+0").PadLeft(13),ZETAH.ToString("0.00000E+0").PadLeft(13),ZETAC.ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n", ZETAF.ToString("0.00000E+0").PadLeft(13),W1W2.ToString("0.00000E+0").PadLeft(13),BETA1.ToString("0.00000E+0").PadLeft(13),
                    ZETAAN.ToString("0.00000E+0").PadLeft(13),ZETAR.ToString("0.00000E+0").PadLeft(13),ZETAX0.ToString("0.00000E+0").PadLeft(13),ZETAXB.ToString("0.00000E+0").PadLeft(13),
                    ZETAXP.ToString("0.00000E+0").PadLeft(13),ZETAXI.ToString("0.00000E+0").PadLeft(13),MEWIN.ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n", MEWIS.ToString("0.00000E+0").PadLeft(13),ZETMEN.ToString("0.00000E+0").PadLeft(13),ZETMES.ToString("0.00000E+0").PadLeft(13),
                    ETAKR.ToString("0.00000E+0").PadLeft(13),FSTU.ToString("0.00000E+0").PadLeft(13),ETAU.ToString("0.00000E+0").PadLeft(13),LAMBDA.ToString("0.00000E+0").PadLeft(13),
                    PSIA.ToString("0.00000E+0").PadLeft(13),PVLE.ToString("0.00000E+0").PadLeft(13),VVLE.ToString("0.00000E+0").PadLeft(13));
                
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n", PVLA.ToString("0.00000E+0").PadLeft(13),VVLA.ToString("0.00000E+0").PadLeft(13),PHLA.ToString("0.00000E+0").PadLeft(13),
                    ZETSLE.ToString("0.00000E+0").PadLeft(13),ZETSLA.ToString("0.00000E+0").PadLeft(13),ZETAX.ToString("0.00000E+0").PadLeft(13),CHIV.ToString("0.00000E+0").PadLeft(13),
                    DELHV.ToString("0.00000E+0").PadLeft(13),PHIK.ToString("0.00000E+0").PadLeft(13),DELHK.ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n", HISTF.ToString("0.00000E+0").PadLeft(13),H0STA.ToString("0.00000E+0").PadLeft(13),XH0[I].ToString("0.00000E+0").PadLeft(13),
                    LS[I].ToString("0.00000E+0").PadLeft(13),UPMSTF.ToString("0.00000E+0").PadLeft(13),SEHNEL.ToString("0.00000E+0").PadLeft(13),ETAUC.ToString("0.00000E+0").PadLeft(13),
                    PSISTR.ToString("0.00000E+0").PadLeft(13),SCHALL.ToString("0.00000E+0").PadLeft(13),KSLS.ToString("0.00000E+0").PadLeft(13));
                
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} \n", PHIQD.ToString("0.00000E+0").PadLeft(13),PHIQC.ToString("0.00000E+0").PadLeft(13),PHIQX.ToString("0.00000E+0").PadLeft(13),
                    CAXX.ToString("0.00000E+0").PadLeft(13),LAMBC.ToString("0.00000E+0").PadLeft(13),PSIC.ToString("0.00000E+0").PadLeft(13),DELHVK.ToString("0.00000E+0").PadLeft(13),
                    HKUE.ToString("0.00000E+0").PadLeft(13),VKUE .ToString("0.00000E+0").PadLeft(13),PSTFMX[I].ToString("0.00000E+0").PadLeft(13));

                sw16.WriteLine(" {0}{1}{2}{3}{4}{5} \n", ZETALT.ToString("0.00000E+0").PadLeft(13),PSISRC.ToString("0.00000E+0").PadLeft(13),FAKT .ToString("0.00000E+0").PadLeft(13),
                    FAKTC.ToString("0.00000E+0").PadLeft(13),PHI[I+1].ToString("0.00000E+0").PadLeft(13),SCHALA.ToString("0.00000E+0").PadLeft(13));
                //1020 FORMAT (1X,'TURBFEHLER ',I5,/1X,10E13.5)
                //1010 FORMAT (' ','**UPETAF**',I5,8(/1X,10E13.5,/),/1X)
            }
            return;
        }   //END
                
        
        static void UWA071()
        {
            //ENTRY UPETAT
            double MEWIN = 0, MEWIS = 0, MW2X = 0, LAMBC = 0, LAMBDA = 0, KSLS = 0, EGEGK = 0, DPDIFF = 0, FHALB = 0, KT7V = 0,
                SINB2X = 0, OEFSTF = 0, H0DY = 0, E0STA = 0, TNULL = 0, SNULL = 0, VNULL = 0, UPMSTF = 0, YUPM = 0, TGEG = 0,
                EGEG = 0, VGEG = 0, H0STA = 0, TANB2 = 0, COTB2 = 0, PHISEN = 0, PHIQD = 0, PHIQC = 0, PHIT = 0, CAX = 0,
                W2STR = 0, SCHALL = 0, C2GE = 0, H2DY = 0, SEHNEL = 0, STLNG = 0, ZLE = 0, ZLA = 0, SAXP = 0, SAX0 = 0,
                SRADLE = 0, SRADLA = 0, KT9V = 0, KT14V = 0, KT14V2 = 0, KT7N = 0, KT9N = 0, KT14N = 0, DELHN = 0, DELHS = 0,
                DN1 = 0, DN2 = 0, HLA1 = 0, HLA2 = 0, DLAX = 0, PHIA = 0, PHIQ = 0, PHIAX = 0, PHIQX = 0, CAXX = 0, ZETAP0 = 0,
                REZAHL = 0, CHIR = 0, ZETAKS = 0, CHIM = 0, ZETAM = 0, ZETAH = 0, ZETAC = 0, W1W2 = 0, BETA1 = 0, BETAS = 0,
                BET1OP = 0, ZETAAN = 0, BETA1E = 0, ZETALT = 0, ZETAP = 0, ZETAF = 0, FSTU = 0, ZETAR = 0, ZETAX0 = 0, 
                ZETAXP = 0, ZETAXB = 0, ZETAXI = 0, ZETAAX = 0, ZETMEN = 0, ZETMES = 0, ETAKR = 0, ZETAME = 0, ETAU = 0,
                PSIA = 0, ETAUC = 0, PSIC = 0, PSISRC = 0, FAKTC = 0, FAKT = 0, PSISTR = 0, ZETSLE = 0, ZETSLA = 0, PVLE = 0,
                PVLA = 0, VVLE = 0, PHLE = 0, VVLA = 0, PHLA = 0, SCHALA = 0, ZETASP = 0, ZETAX = 0, CHIV = 0, DELHV = 0, 
                DELHK = 0, KT7END = 0, HKUE = 0, VKUE = 0, PHIK = 0, DELHVK = 0, HISTF = 0,  PRET = 0, C0GE = 0;


            bool QSTRA, QETAUC, QNDST, QDIM, QANFST, QENDST;
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /ENTWCO/
            //1 ACW1, ACW2, ACW3, ACW4, ACW5, ACW6, ACW7,TKUEL
            //COMMON /ETAWTS/ WTSOLL,FETAE(7),FBEWE(7)
            
            if (LIGHT[4] == 2)
            {
                sw16.WriteLine(" **UPETAT**{0}     {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15} ",
                    I.ToString().PadLeft(5),KTAUFB.ToString().PadLeft(5),YPT[I-1].ToString().PadLeft(5),YPT[I].ToString().PadLeft(5),
                    YE1T[I].ToString().PadLeft(5),YC2GES[I-1].ToString().PadLeft(5),YC2GES[I].ToString().PadLeft(5),YG[I].ToString().PadLeft(5),
                    PHI[I].ToString().PadLeft(5),ETAUOP[I].ToString().PadLeft(5),ETAIOP[I].ToString().PadLeft(5),ETAI[I].ToString().PadLeft(5),
                    OEFFNG[I].ToString().PadLeft(5),BRTLE[I].ToString().PadLeft(5),BRTLA[I].ToString().PadLeft(5),STFDI[I].ToString().PadLeft(5));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", LS[I].ToString("0.00000E+0").PadLeft(13), TAZLE[KT14].ToString("0.00000E+0").PadLeft(13),
                    TAZLA[KT14].ToString("0.00000E+0").PadLeft(13),DELTLE.ToString("0.00000E+0").PadLeft(13),DELTLA.ToString("0.00000E+0").PadLeft(13),
                    TASAX[KT14].ToString("0.00000E+0").PadLeft(13),STFDI[I-1].ToString("0.00000E+0").PadLeft(13),LS[I-1].ToString("0.00000E+0").PadLeft(13),
                    STFDI[I+1].ToString("0.00000E+0").PadLeft(13),LS[I+1].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", FLUT.ToString("0.00000E+0").PadLeft(13),TC1.ToString("0.00000E+0").PadLeft(13),
                    TC2.ToString("0.00000E+0").PadLeft(13),TC3.ToString("0.00000E+0").PadLeft(13),TC77.ToString("0.00000E+0").PadLeft(13),TC78.ToString("0.00000E+0").PadLeft(13),
                    PSTFMX[I].ToString("0.00000E+0").PadLeft(13),TSTFMX[I].ToString("0.00000E+0").PadLeft(13),XG[I].ToString("0.00000E+0").PadLeft(13),XC2GES[I].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine(" {0}{1} ", VOLUME[I].ToString("0.00000E+0").PadLeft(13),XDFAKT[I].ToString("0.00000E+0").PadLeft(13));
                //1000 FORMAT (' ','**UPETAT**',I5,5X,15I5,4(/1X,10E13.5,/))
            }
            
            IZ10 = 0;
            IZ9 = 0;
            EGEGK = 0.0;
            DPDIFF = 0.0;
            QSTRA= false;
            QETAUC = false;
            QNDST = false;
            QENDST = false;
            QDIM = false;
            QANFST = false;
            if (KT1 > 1) PHI[75] = 0.0;
            if (KT1 > 1) PSI[75] = 0.0;
            FHALB = 1.0;
            if (KT7 >= 8) FHALB = 0.5;
            if (XYZXYZ == 99.0) QDIM = true;
            if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) QNDST = true;
            if (KT1 == 3 && LSZ[KT10] != 0.0) QENDST = true;
            KT7V = UWA011(I-1,7);
            if (KT7V != 4 && KT7V <= 7) QANFST = true;
            PRET = YPT[I];
            C0GE = YC2GES[I-1];
            SINB2X = OEFFNG[I];
            OEFSTF = OEFFNG[I];
            
        label1:
            H0DY = C0GE*C0GE/8.37225E+03;
            E0STA = YE1T[I] - H0DY;
            TNULL = VISUM(YPT[I-1],E0STA,13);
            SNULL = VISUM(YPT[I-1],TNULL,12);
            VNULL = VISUM(YPT[I-1],TNULL,10);
            UPMSTF = (STFDI[I]+LS[I])*YUPM*5.2359E-05;
            
        label30:
            TGEG = VISUM(PRET,SNULL,14);
            EGEG = VISUM(PRET,TGEG,11);
            if (IZ10 == 0 && IZ9 == 0 && KT1 > 1) EGEGK = EGEG;
            VGEG = VISUM(PRET,TGEG,10);
            H0STA = E0STA - EGEG;
            
        label40:
            TANB2 = SINB2X / Math.Sqrt(1.0-SINB2X*SINB2X);
            COTB2 = 1.0/TANB2;
            PHISEN = TANB2;
            PHIQD = TC67;
            PHIQC = TC68 * PHIQD;
            PHIT = PHI[I]*YG[I]*VGEG*XUPM/XG[I]/VOLUME[I]/YUPM;
            CAX = PHIT * UPMSTF;
            W2STR = CAX/OEFSTF;
            A2 = 357.0;
            if (TGEG < 0.0) A2 = 333.0;
            A1 = A2 * Math.Sqrt(PRET*VGEG);
            SCHALL = A1;
            if (W2STR < A1) goto label80;
            if (CAX > A1) goto label90;
            if (IZ10 > 0 && Math.Abs(CAX-A1)/A1 > 0.001) goto label90;
            
        label70:
            if (QSTRA) goto label80;
            SINB2X = OEFSTF * (1.0 + TC79* Math.Pow((CAX/OEFSTF/A1 - 1.0),TC80));
            QSTRA = true;
            goto label40;
            
        label90:
            if (IZ10 == 10) goto label70;
            IZ10 = IZ10 + 1;
            A3 = A2/100.0;
            A3 = A3*A3/9.81;
            PRET = PRET * Math.Pow((CAX/A1),A3);
            if (KT1 > 1) PHI[75] = PRET;
            goto label30;
            
        label80:
            C2GE = Math.Pow((TC77*CAX),2) + Math.Pow((TC78*CAX*COTB2 - TC87*UPMSTF),2);
            H2DY = C2GE/8.37225E+03;
            C2GE = Math.Sqrt(C2GE);
            if (KT1 <= 1) goto label120;
            A1 = CAX/SCHALL;
            if (A1 > 1.0) A1 = 1.0;
            A2 = TC92 + TC93*(A1-TC94) + TC95*Math.Pow((A1-TC94),3);
            A3 = TSTFMX[I];
            if (A3 == 0.0) A3 = 1.0;
            A3 = -A2 * Math.Pow((CAX/91.5),2) * A3;
            A4 = EGEGK + A3;
            A6 = A4;
            A5 = VISUM(SNULL,A6,15);
            A6 = YPT[I] - A5;
            if (Math.Abs((A6-DPDIFF)/YPT[I]) < 0.0002) goto label82;
            IZ9 = IZ9 + 1;
            if (IZ9 > 10) goto label82;
            PRET = A5;
            DPDIFF = A6;
            PHI[75] = 0.0;
            IZ10 = 0;
            QSTRA = false;
            goto label30;
            
        label82:
            PSI[75] = PRET/ YPT[I];
            if (LIGHT[4] == 2 || IZ9 > 10) 
            {
                sw16.WriteLine(" **DIFFUSOR-WARNUNG**{0}{1}", IZ9.ToString().PadLeft(5),IZ10.ToString().PadLeft(5));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", PRET.ToString("0.00000E+0").PadLeft(13),PHI[75].ToString("0.00000E+0").PadLeft(13),
                    DPDIFF.ToString("0.00000E+0").PadLeft(13),EGEGK.ToString("0.00000E+0").PadLeft(13),A1.ToString("0.00000E+0").PadLeft(13),
                    A2.ToString("0.00000E+0").PadLeft(13),A3.ToString("0.00000E+0").PadLeft(13),A4.ToString("0.00000E+0").PadLeft(13),
                    A5.ToString("0.00000E+0").PadLeft(13),A6.ToString("0.00000E+0").PadLeft(13));
                //83 FORMAT (' ','**DIFFUSOR-WARNUNG**',2I5,/1X,10E13.5)
            }

        label120:
            if (!QANFST) goto label100;
            C0GE = CAX;
            if (NVENT[KT6]  ==  -999 && LAUFEN  >  1 && YC2GES[I-1]  >  0.0) 
                C0GE = YC2GES[I-1];
            H0DY = C0GE*C0GE/8.37225E+03;
            A1 = YC2GES[I-1];
            YC2GES[I-1] = C0GE;
            if (A1 == 0.0) goto label1;
            
        label100:
            XH0[I] = H0STA + H0DY - H2DY;
            PSI[I] = XH0[I]*8.37225E+03/UPMSTF/UPMSTF;
            SEHNEL = (BRTLE[I]+BRTLA[I])/2.0/(TC65+TC66*OEFSTF);
            STLNG = SEHNEL * TC82;
            ZLE = TAZLE[KT14];
            if (ZLE <= -300.0) ZLE = ZLE + 300.0;
            if (ZLE <= -200.0) ZLE = ZLE + 200.0;
            if (ZLE <= -100.0) ZLE = ZLE + 100.0;
            ZLA = TAZLA[KT14];
            if (ZLA <= -300.0) ZLA = ZLA + 300.0;
            if (ZLA <= -200.0) ZLA = ZLA + 200.0;
            if (ZLA <= -100.0) ZLA = ZLA + 100.0;
            if (ZLE != 0.0) goto label13;
            ZLE = 0.1 * SEHNEL;
            if (ZLE < 2.0) ZLE = 2.0;
            if (ZLE > 5.0) ZLE = 5.0;
            if (TAZLE[KT14] == 0.0) goto label13;
            A1 = BRTLE[I]/ZLE/DELTLE;
            A1 = 0.4055 + (0.808-0.009*A1)*Math.Log(A1/5.0);
            ZLE = -Math.Exp(A1);
            
        label13:
            if (ZLA != 0.0) goto label14;
            ZLA = 0.1 * SEHNEL;
            if (ZLA < 2.0) ZLA = 2.0;
            if (ZLA > 5.0) ZLA = 5.0;
            if (TAZLA[KT14] == 0.0) goto label14;
            A1 = BRTLA[I]/ZLA/DELTLA;
            A1 = 0.4055 + (0.808-0.009*A1)*Math.Log(A1/5.0);
            ZLA = -Math.Exp(A1);
            
        label14:
            A1 = TC84 * SEHNEL + TC85;
            SAXP = TASAX[KT14];
            SAX0 = SAXP - A1;
            if (A1 > SAXP) SAX0 = 0.0;
            if (ZLE != 1.0 || ZLA != 1.0) goto label11;
            SAX0 = 0.0;
            goto label12;
        
        label11:
            if (ZLE == 1.0 || ZLA == 1.0) SAX0 = 0.5 * SAX0;
            
        label12:
            if (!QNDST) goto label10;
            SRADLE = HS1MIN[KT14];
            SRADLA = HS1MAX[KT14];
            goto label20;
            
        label10:
            SRADLE = DELTLE;
            SRADLA = DELTLA;
            
        label20:
            KT9V = UWA011(I-1,9);
            KT14V = UWA011(I-1,14);
            KT14V2 = UWA011(I-2,14);
            KT7N = UWA011(I+1,7);
            KT9N = UWA011(I+1,9);
            KT14N = UWA011(I+1,14);
            if (QANFST) goto label140;
            if (KT9  !=  KT9N ) goto label150;
            if (KT9  !=  KT9V ) goto label160;
            if (KT14 !=  KT14N) goto label170;
            if (KT14 !=  KT14V) goto label180;
            if (KT7  ==  8 ) goto label303;
            goto label302;
            
        label140:
            if (KT9  !=  KT9N ) goto label310;
            if (KT14 !=  KT14N) goto label310;
            if (KT7  ==  8 ) goto label304;
            if (KT7N ==  8 ) goto label301;
            goto label300;
            
        label150:
            if (KT14 !=  KT14V) goto label310;
            if (KT7  ==  9 ) goto label171;
            goto label302;
            
        label160:
            if (KT7  ==  8 ) goto label304;
            if (KT14 !=  KT14N) goto label310;
            if (KT7  !=  KT7N ) goto label301;
            goto label300;
            
        label170:
            if (KT7  ==  9 ) goto label171;
            if (KT14 !=  KT14V) goto label310;
            goto label302;
            
        label171:
            if (KT14 !=  KT14V2) goto label305;
            goto label306;
            
        label180:
            if (KT7  ==  8 ) goto label304;
            if (KT14 !=  KT14N ) goto label310;
            goto label300;
            
        label300:
            IZ1 = I;
            IZ2 = I + 1;
            goto label333;
            
        label301:
            IZ1 = I;
            IZ2 = I + 2;
            goto label333;
            
        label302:
            IZ1 = I-1;
            IZ2 = I;
            goto label333;
            
        label306:
            IZ1 = I - 2;
            IZ2 = I;
            goto label333;
            
        label303:
            IZ1 = I - 1;
            IZ2 = I + 1;
            
        label333:
            A1 = 1.0;
            A2 = 2.0;
            goto label350;
            
        label304:
            IZ1 = I;
            IZ2 = I + 1;
            goto label334;
            
        label305:
            IZ1 = I - 1;
            IZ2 = I;
            
        label334:
            A1 = 2.0;
            A2 = 1.0;
            goto label350;
            
        label310:
            MEWIN = 0.0;
            MEWIS = 0.0;
            DELHN = 0.0;
            DELHS = 0.0;
            goto label200;
            
        label350:
            DN1 = STFDI[IZ1];
            DN2 = STFDI[IZ2];
            HLA1 = LS[IZ1];
            HLA2 = LS[IZ2];
            DLAX = (BRTLE[IZ2]+BRTLA[IZ2])/A1 + A2*SAXP;
            MEWIN = Math.Abs((DN1-DN2)/2.0/DLAX);
            MEWIS = Math.Abs((DN1+2.0*HLA1-DN2-2.0*HLA2)/2.0/DLAX);
            A1 = (BRTLE[IZ2]+BRTLA[IZ2])/2.0;
            DELHN = MEWIN * A1;
            DELHS = MEWIS * A1;
            MEWIN = Math.Atan(MEWIN)/0.0174533;
            MEWIS = Math.Atan(MEWIS)/0.0174533;
            
        label200:
            PHIA = PHIT;
            PHIQ = PHIA/PHISEN;
            PHIAX = PHIA;
            PHIQX = PHIQ;
            CAXX = CAX;
            if (PHIQ > PHIQC) goto label210;
            QETAUC = true;
            PHIQX = PHIQC;
            PHIAX = PHIQC * PHISEN;
            CAXX = PHIAX * UPMSTF;
            
        label210:
            ZETAP0 = TC1/OEFSTF + TC2/(OEFSTF-1.0) + TC3;
            A1 = TGEG;
            if (A1 <= 0.0) A1 = UW0011(PRET,1);
            A2 = UW0019(A1,VGEG);
            A3 = A2 * VGEG;
            REZAHL = SEHNEL*CAXX/SINB2X/A3 * 1.0E-03;
            KSLS = TC81/SEHNEL;
            A1 = TC14/REZAHL;
            if (KSLS < A1) KSLS = A1;
            A1 = KSLS * 1.0E+04;
            if (A1 > TC9) goto label220;
            A2 = TC7 - TC8* Math.Pow((TC9-A1),TC10);
            goto label230;
            
        label220:
            A2 = Math.Pow((TC13*(A1-TC9)),TC10);
            A2 = TC7 - TC11*(1.0-Math.Pow(TC12,(-A2)));
            
        label230:
            A1 = Math.Pow((TC6*KSLS),A2);
            CHIR = 1.0 + TC4*(1.0-Math.Pow(TC5,(-A1)));
            ZETAKS = ZETAP0 * (CHIR-1.0);
            MW2X = CAXX/SINB2X/SCHALL;
            if (MW2X > TC23) goto label240;
            CHIM = TC15 - TC16 * Math.Pow(MW2X,TC17) + TC18 * Math.Pow(MW2X,TC19);
            goto label250;
            
        label240:
            A1 = Math.Pow(MW2X,TC22);
            CHIM = TC20 + TC21*(1.0-Math.Exp(-A1));
            
        label250:
            ZETAM = ZETAP0 * (CHIM-1.0) * CHIR;
            ZETAKS = ZETAKS * CHIM;
            ZETAH = TC24*TC25/SINB2X * Math.Pow((TC25/SINB2X/(ZETAP0+ZETAKS+ZETAM)), TC26);
            ZETAC = Math.Pow((TC25/(1.0-TC25/SINB2X)),TC27);
            W1W2 = Math.Sqrt(PHIAX*PHIAX + Math.Pow((PHIAX*COTB2-1.0),2))/PHIAX*SINB2X;
            A1 = COTB2 - 1.0/PHIAX;
            if (Math.Abs(A1) > 0.00001) goto label260;
            A1 = 0.00001;
            
        label260:
            A1 = 1.0/A1;
            BETA1 = Math.Atan(A1)/0.0174533;
            if (BETA1 <= 0.0) BETA1 = 180.0 + BETA1;
            BETAS = TC33 + TC34* Math.Pow(OEFSTF,TC35);
            BET1OP = TC32 + TC36* Math.Pow(BETAS,TC86);
            A1 = BETA1 - BET1OP;
            if (A1 > 0.0) goto label270;
            A2 = TC28* Math.Pow(Math.Abs(A1),TC29);
            goto label280;
            
        label270:
            A2 = TC30 * Math.Pow(Math.Abs(A1),TC31);
            
        label280:
            ZETAAN = A2 * (W1W2*W1W2);
            if (!QANFST) goto label281;
            BETA1E = 90.0;
            A1 = BETA1E - BET1OP;
            if (A1 > 0.0) goto label271;
            A2 = TC28*Math.Pow(Math.Abs(A1),TC29);
            goto label282;
            
        label271:
            A2 = TC30*Math.Pow(Math.Abs(A1),TC31);
            
        label282:
            ZETAAN = (ZETAAN + A2*(SINB2X*SINB2X))/2.0;
            
        label281:
            ZETALT = TC88 + TC89*Math.Pow(Math.Abs(OEFSTF-TC90),TC91);
            ZETAP = ZETAP0 + ZETAKS + ZETAM + ZETAH + ZETAC + ZETAAN + ZETALT;
            ZETAF = 0.0;
            A1 = PHIAX * (0.5/PHIQD);
            A9 = Math.Pow((A1 /SINB2X),2);
            A8 = A1 *A1 + Math.Pow((A1 *COTB2-1.0),2);
            
            if (QANFST && KT7 == 8) goto label290;
            A1 = 1.0;
            if (QANFST) A1 = 0.5;
            A5 = LS[I]/(STFDI[I]+LS[I]);
            ZETAF = A1 * TC37/OEFSTF * Math.Pow(A5,TC38);
            if (KT1 <= 1) goto label290;
            if (KT6  ==  NTTETB[KT10]) goto label284;
            if (NVENT[KT6+1]  ==  -999) goto label290;
            
        label284:
            if (QETAUC) goto label290;
            if (ETAUOP[I] <= 0.0) goto label290;
            if (PSI[I] < 0.10) goto label290;
            A2 = ETAUOP[I];
            A4 = A9*A2/(A9-(1.0-A2)*A8);
            FSTU = (1.0-A2)/(1.0-A4);
            A1 = TC39 * Math.Pow(A5,TC40) * H2DY/XH0[I]/FSTU / SINB2X;
            if (PHIQX >= 1.0) goto label285;
            A1 = A1*(1.0-Math.Pow((1.0-PHIQX),2)/Math.Pow((1.0-PHIQD),2));
            
        label285:
            ZETAF = ZETAF + A1;
            
        label290:
            A1 = 180.0 - (BETA1 + Math.Asin(SINB2X)/0.0174533);
            A1 = (TC42+TC43*Math.Pow(W1W2,TC44))*(A1+TC45)*1.0E-04;
            ZETAR = A1*STLNG/(LS[I]+TC41*STLNG);
            if (!QANFST) goto label291;
            A1 = 180.0 - (BETA1E + Math.Asin(SINB2X)/0.0174533);
            A1 = (TC42+TC43*Math.Pow(SINB2X,TC44))*(A1+TC45)*1.0E-04;
            ZETAR = (A1*STLNG/(LS[I]+TC41*STLNG) + ZETAR)/2.0;
            
        label291:
            ZETAX0 = TC46/SINB2X * SAX0/LS[I];
            ZETAXB = TC47/SINB2X * (SAXP-SAX0)/LS[I];
            A1 = TC49/SINB2X * (SAXP-SAX0)/SEHNEL;
            ZETAXP = TC48 * Math.Exp(A1)/SINB2X * SEHNEL/LS[I];
            A1 = TC51*SAXP/SEHNEL * TC82/TC83;
            ZETAXI = TC50 * Math.Exp(A1);
            if (!QANFST) goto label292;
            if (KT7 != 8) goto label293;
            ZETAX0 = ZETAX0 * Math.Pow(SINB2X,3);
            ZETAXB = 0.0;
            ZETAXP = ZETAXP * 0.50;
            ZETAXI = 0.0;
            goto label292;
            
        label293:
            ZETAX0 = 0.5 * ZETAX0 * (1.0 + Math.Pow(SINB2X,3));
            ZETAXB = 0.5 * ZETAXB;
            ZETAXP = 0.75 * ZETAXP;
            ZETAXI = 0.5 * ZETAXI;
            
        label292:
            ZETAAX = ZETAX0 + ZETAXB + ZETAXP + ZETAXI;
            ZETMEN = 0.0;
            ZETMES = 0.0;
            if (MEWIN <= 0.01) goto label400;
            A1 = Math.Pow(((TC52*TC83/TC82*Math.Pow(OEFSTF,TC54) + TC53)*MEWIN),TC55);
            ZETMEN = A1 * DELHN/LS[I] * (ZETAP + ZETAR + ZETAF);
            
        label400:
            if (MEWIS <= 0.01) goto label410;
            A1 = Math.Pow(((TC52*TC83/TC82*Math.Pow(OEFSTF,TC54) + TC53)*MEWIS),TC55);
            ZETMES = A1 * DELHS/LS[I] * (ZETAP + ZETAR + ZETAF);
            
        label410:
            ZETAME = ZETMEN + ZETMES;
            ETAKR = 1.0 - (ZETAP + ZETAF + ZETAR + ZETAAX + ZETAME);
            if (ETAKR < 0.00) ETAKR = 0.0;

            FSTU = A9/(A9 - ETAKR*A8);
            ETAU = 1.0 - FSTU * (1.0-ETAKR);
            LAMBDA = (TC70 + TC71* Math.Pow(SINB2X,TC72))*(PHIQX-PHIQD);
            A2 = ETAU;
            if (A2 < 0.40) A2 = 0.40;
            PSIA = LAMBDA/A2;
            if (!QETAUC) goto label420;
            ETAUC = ETAU;
            LAMBC = LAMBDA;
            PSIC = PSIA;
            LAMBDA = (TC70 + TC71*Math.Pow(SINB2X,TC72)) * (PHIQ-PHIQD);
            PSIA = TC69 + (PSIC-TC69) * PHIQ/PHIQC;
            ETAU = 0.0;
            if (PHIQ <= PHIQD) goto label421;
            ETAU = LAMBDA/PSIA/A2*ETAUC;
            
        label421:
            A2 = (C0GE*C0GE - C2GE*C2GE)/UPMSTF/UPMSTF;
            PSISRC = PSIC*FHALB - A2;
            if (PSISRC < 0.0010) PSISRC = 0.0010;
            FAKTC = PHIAX/Math.Sqrt(PSISRC) * OEFSTF/SINB2X;
            FAKTC = XDFAKT[I]/FAKTC;
            A1 = 1.0;
            FAKT = A1 + (FAKTC-A1)*PHIQ/PHIQC;
            YDFAKT[I] = XDFAKT[I]/FAKT;
            PSISTR = Math.Pow((PHIA/YDFAKT[I]),2);
            PSIA = (PSISTR + A2)/FHALB;
            goto label422;
            
        label420:
            PSISTR = PSIA * FHALB;
            PSISTR = PSISTR - (C0GE*C0GE - C2GE*C2GE)/UPMSTF/UPMSTF;
            if (PSISTR < 0.0010) PSISTR = 0.0010;
            YDFAKT[I] = PHIA/Math.Sqrt(PSISTR) * OEFSTF/SINB2X;
            
        label422:
            if (LAUFEN <= 1) YDFAKT[I] = 0.0;
            YH0[I] = PHIA;
            YC2GES[I] = C2GE;
            ETAUOP[I] = ETAU;
            ZETSLE = 0.0;
            ZETSLA = 0.0;
            if (ETAU <= 0.0) goto label500;
            if (KT7 != 4) goto label430;
            PVLE = YPT[I-1];
            VVLE = VNULL;
            PVLA = Math.Sqrt(PVLE*PRET);
            PHLE = PVLA;
            VVLA = Math.Sqrt(VVLE*VGEG);
            PHLA = PRET;
            goto label440;
            
        label430:
            if (KT7 != 8) goto label450;
            PVLE = YPT[I-1];
            VVLE = VNULL;
            PVLA = YPT[I];
            PHLE = PVLA;
            A1 = YE1T[I+1] - H2DY;
            A1 = VISUM(PVLA,A1,13);
            SCHALA = A1;
            VVLA = VISUM(PVLA,A1,10);
            PHLA = YPT[I+1];
            if (I == (ITTEND[KT6]-1) && PSI[75] != 0.0  || I == (ITTEND[KT6]-2) && PSI[75] != 0.0) 
                PHLA = PSI[75]*PHLA;
            goto label440;
            
        label450:
            PVLE = YPT[I-2];
            A1 = YC2GES[I-2];
            A1 = YE1T[I-1] - A1*A1/8.37225E+03;
            A1 = VISUM(PVLE,A1,13);
            VVLE = VISUM(PVLE,A1,10);
            PVLA = YPT[I-1];
            PHLE = PVLA;
            VVLA = VNULL;
            PHLA = PRET;
            
        label440:
            if (PHLE >= PVLE) goto label460;
            A1 = TC97;
            if (ZLE < 0.0) A1 = 2.0;
            A1 = Math.Sqrt(1.0-Math.Pow((PHLE/PVLE),A1 ));
            if (ZLE > 0.0) goto label441;
            A2 = -ZLE * Math.Sqrt(SRADLE/BRTLE[I]);
            goto label442;
            
        label441:
            A2 = TC56/Math.Pow(ZLE,TC57);
            
        label442:
            A3 = A1 * A2;
            A6 = STFDI[I];
            if (KT7 == 9) A6 = STFDI[I-1];
            if (ZLE != 1.0) goto label470;
            A5 = 0.0;
            A1 = TC58 + TC59*OEFSTF;
            if (A1 < 1.0) A1 = 1.0;
            goto label480;
            
        label470:
            A5 = 0.15 * SEHNEL;
            if (A5 < 3.0) A5 = 3.0;
            A1 = 1.0;
            
        label480:
            A5 = 3.14159 * (A6 -A5) * SRADLE * 1.0E-06;
            ZETSLE = 3.6 * A5 * A3 * Math.Sqrt(0.980665E+05*PVLE/VVLE);
            ZETSLE = ZETSLE/(YG[I]/FLUT )/TC96 * A1;
            
        label460:
            if (PHLA >= PVLA) goto label500;
            A6 = STFDI[I];
            A7 = LS[I];
            if (KT7 != 8) goto label461;
            A6 = STFDI[I+1];
            A7 = LS[I+1];
            
        label461:
            if (!QNDST) goto label462;
            if (KT7 >= 8&&ZLA == 1.0) goto label520;
            
        label462:
            A1 = TC97;
            if (ZLA < 0.0) A1 = 2.0;
            A1 = Math.Sqrt(1.0-Math.Pow((PHLA/PVLA),A1 ));
            if (ZLA > 0.0) goto label463;
            A2 = - ZLA * Math.Sqrt(SRADLA/BRTLA[I]);
            goto label464;
            
        label463:
            A2 = TC56/Math.Pow(ZLA,TC57);
            
        label464:
            A3 = A1 * A2;
            if (ZLA != 1.0) goto label490;
            A5 = 0.0;
            A1 = TC58 + TC59*OEFSTF;
            if (A1 < 1.0) A1 = 1.0;
            goto label510;
            
        label490:
            A5 = 0.15 * SEHNEL;
            if (A5 < 3.0) A5 = 3.0;
            A1 = 1.0;
            
        label510:
            A5 = 3.14159 * (A6 + 2.0*(A7+A5)) * SRADLA*1.0E-06;
            ZETSLA = 3.6 * A5 * A3 * Math.Sqrt(0.980665E+05*PVLA/VVLA);
            ZETSLA = ZETSLA/(YG[I]/FLUT )/TC96 * A1;
            goto label500;
            
        label520:
            A5 = A6 + 2.0*A7;
            A2 = OEFSTF;
            if (KT7 == 8) A2 = OEFFNG[I+1];
            A5 = 4.0*A5*SRADLA/(A5*A5-A6*A6)/ A2;
            A1 = CAX;
            A2 = SCHALL;
            if (KT7 != 8) goto label521;
            A1 = PHI[I+1]*(STFDI[I+1]+LS[I+1])*YUPM*5.2359E-05;
            A2 = SCHALA;
            A2 = VISUM(PVLA,A2,12);
            A2 = VISUM(PHLA,A2,14);
            A3 = VISUM(PHLA,A2,10);
            A4 = 357.0;
            if (A2 < 0.0) A4 = 333.0;
            SCHALA = A4 * Math.Sqrt(PHLA*A3);
            A2 = SCHALA;
            
        label521:
            A1 = A1/A2/TC98;
            if (A1 < 0.3) A1 = 0.3;
            A2 = TC60/(Math.Pow(A1,TC61)+TC62);
            if (A2 < 1.0 && A2  !=  0.0) A2 = 1.0;
            ZETSLA = A5 * A2;
            
        label500:
            ZETASP = ZETSLE + ZETSLA;
            if (ZETASP > 1.0) ZETASP = 1.0;
            ZETAX = 0.0;
            if (ETAU <= 0.0) goto label600;
            if (TGEG > 0.0) goto label530;
            A1 = E0STA - TC64*H0STA;
            A2 = VISUM(SNULL,A1,05);
            if (A1 > 0.0) goto label530;
            ZETAX = TC63 * (1.0 + A1);
            goto label530;
            
        label600:
            ETAUOP[I] = 0.0;
            ETAIOP[I] = 0.0;
            ETAI[I] = 0.0;
            A1 = UPMSTF*UPMSTF/8.37225E+03;
            A2 = LS[I]/(STFDI[I]+LS[I]);
            A3 = PHIQD;
            if (PHIQ < PHIQD) A3 = TC73;
            A4 = PHIQD - A3 + A3*Math.Pow((PHIQ/PHIQD),(PHIQD/A3));
            CHIV = (TC70 + TC71*Math.Pow(SINB2X,TC72))*(A4-PHIQD)*A4*TANB2;
            CHIV = CHIV * (1.0 + TC74*Math.Pow((PHIQD-PHIQ),2) * A2);
            DELHV = A1/PHIA * CHIV;
            if (XH0[I]  <  0.0) DELHV = DELHV + XH0[I]/FHALB;
            DELHK = 0.0;
            if (PHIQ >= PHIQD) goto label610;
            if (!QNDST) goto label610;
            IZ1 = ITTEND[KT6];
            KT7END = UWA011(IZ1,7);
            if (KT7END != 6) goto label610;
            HKUE = TKUEL;
            VKUE = VISUM(YPT[IZ1],HKUE,10);
            HKUE = VISUM(YPT[IZ1],HKUE,11);
            A3 = YE1T[I] - DELHV;
            PHIK = A2/TC75 * TC76/Math.Pow(PHIQD,2) * Math.Pow((PHIQD-PHIQ),2) * TANB2;
            A1 = PHIK/VKUE;
            A2 = PHIA/VGEG;
            A4 = (A1*HKUE + A2*A3)/(A1 + A2);
            DELHK = (A3-A4) * FHALB;
            
        label610:
            DELHV = DELHV * FHALB;
            DELHVK = DELHV + DELHK;
            HISTF = DELHVK;
            ETAI[I] = DELHV - DELHVK;
            goto label550;
            
        label530:
            ETAIOP[I] = ETAUOP[I] * (1.0-ZETASP);
            A1 = PSTFMX[I];
            if (A1 < 1.0) A1 = 1.0;
            A1 = ETAIOP[I] * (1.0-ZETAX) * A1 * DETA * FETAE[KT6];
            if (KT6 == NTTETB[KT10] && STZNDT[KT10] > 0.0 && TC100 > 0.0)
                A1 = A1*TC100;
            if (FETAE[KT6] < 0.0) A1 = -FETAE[KT6];
            HISTF = XH0[I] * A1;
            if (KT1 == 0 && KT7V != 9) goto label540;
            if (!QDIM) goto label540;
            if (FETAE[KT6] < 0.0) goto label540;
            A2 = 1.0;
            if (KT1 != 0) A2 = TSTFMX[I];
            if (A2 == 0.0) A2 = 1.0;
            A3 = 1.0;
            if (KT7V == 9) A3 = TSTFMX[I-1];
            if (A3 == 0.0) A3 = 1.0;
            HISTF = (H0STA + H0DY*A3 - H2DY*A2)*A1;
            
        label540:
            ETAI[I] = HISTF/XH0[I];
            
        label550:
            YE2T[I] = YE1T[I] - HISTF;
            if (LIGHT[4] == 2) 
            {
                sw16.WriteLine(" **UPETAT**{0}", I.ToString().PadLeft(5));
            
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",YE2T[I].ToString("0.00000E+0").PadLeft(13),ETAUOP[I].ToString("0.00000E+0").PadLeft(13),ETAIOP[I].ToString("0.00000E+0").PadLeft(13),ETAI[I].ToString("0.00000E+0").PadLeft(13),
                PSI[I].ToString("0.00000E+0").PadLeft(13),YH0[I].ToString("0.00000E+0").PadLeft(13),YC2GES[I].ToString("0.00000E+0").PadLeft(13),YDFAKT[I].ToString("0.00000E+0").PadLeft(13),SINB2X.ToString("0.00000E+0").PadLeft(13),VGEG.ToString("0.00000E+0").PadLeft(13));
            
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",CAX.ToString("0.00000E+0").PadLeft(13),PHISEN.ToString("0.00000E+0").PadLeft(13),PHIQ.ToString("0.00000E+0").PadLeft(13),ZETAP0.ToString("0.00000E+0").PadLeft(13),REZAHL.ToString("0.00000E+0").PadLeft(13),
                ZETAKS.ToString("0.00000E+0").PadLeft(13),MW2X.ToString("0.00000E+0").PadLeft(13),ZETAM.ToString("0.00000E+0").PadLeft(13),ZETAH.ToString("0.00000E+0").PadLeft(13),ZETAC.ToString("0.00000E+0").PadLeft(13));
            
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",ZETAF.ToString("0.00000E+0").PadLeft(13),W1W2.ToString("0.00000E+0").PadLeft(13),BETA1.ToString("0.00000E+0").PadLeft(13),ZETAAN.ToString("0.00000E+0").PadLeft(13),ZETAR.ToString("0.00000E+0").PadLeft(13),ZETAX0.ToString("0.00000E+0").PadLeft(13),
                ZETAXB.ToString("0.00000E+0").PadLeft(13),ZETAXP.ToString("0.00000E+0").PadLeft(13),ZETAXI.ToString("0.00000E+0").PadLeft(13),MEWIN.ToString("0.00000E+0").PadLeft(13));
            
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",MEWIS.ToString("0.00000E+0").PadLeft(13),ZETMEN.ToString("0.00000E+0").PadLeft(13),ZETMES.ToString("0.00000E+0").PadLeft(13),ETAKR.ToString("0.00000E+0").PadLeft(13),FSTU.ToString("0.00000E+0").PadLeft(13),ETAU.ToString("0.00000E+0").PadLeft(13),
                LAMBDA.ToString("0.00000E+0").PadLeft(13),PSIA.ToString("0.00000E+0").PadLeft(13),PVLE.ToString("0.00000E+0").PadLeft(13),VVLE.ToString("0.00000E+0").PadLeft(13));
            
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",PVLA.ToString("0.00000E+0").PadLeft(13),VVLA.ToString("0.00000E+0").PadLeft(13),PHLA.ToString("0.00000E+0").PadLeft(13),ZETSLE.ToString("0.00000E+0").PadLeft(13),ZETSLA.ToString("0.00000E+0").PadLeft(13),
                ZETAX.ToString("0.00000E+0").PadLeft(13),CHIV.ToString("0.00000E+0").PadLeft(13),DELHV.ToString("0.00000E+0").PadLeft(13),PHIK.ToString("0.00000E+0").PadLeft(13),DELHK.ToString("0.00000E+0").PadLeft(13));
            
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",HISTF.ToString("0.00000E+0").PadLeft(13),H0STA.ToString("0.00000E+0").PadLeft(13),XH0[I].ToString("0.00000E+0").PadLeft(13),LS[I].ToString("0.00000E+0").PadLeft(13),UPMSTF.ToString("0.00000E+0").PadLeft(13),
                SEHNEL.ToString("0.00000E+0").PadLeft(13),ETAUC.ToString("0.00000E+0").PadLeft(13),PSISTR.ToString("0.00000E+0").PadLeft(13),SCHALL.ToString("0.00000E+0").PadLeft(13),KSLS.ToString("0.00000E+0").PadLeft(13));
            
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ",PHIQD.ToString("0.00000E+0").PadLeft(13),PHIQC.ToString("0.00000E+0").PadLeft(13),PHIQX.ToString("0.00000E+0").PadLeft(13),CAXX.ToString("0.00000E+0").PadLeft(13),LAMBC.ToString("0.00000E+0").PadLeft(13),
                PSIC.ToString("0.00000E+0").PadLeft(13),DELHVK.ToString("0.00000E+0").PadLeft(13),HKUE.ToString("0.00000E+0").PadLeft(13),VKUE .ToString("0.00000E+0").PadLeft(13),PSTFMX[I].ToString("0.00000E+0").PadLeft(13));
            
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5} ",ZETALT.ToString("0.00000E+0").PadLeft(13),PSISRC.ToString("0.00000E+0").PadLeft(13),FAKT.ToString("0.00000E+0").PadLeft(13),
                FAKTC.ToString("0.00000E+0").PadLeft(13),PHI[I+1].ToString("0.00000E+0").PadLeft(13),SCHALA.ToString("0.00000E+0").PadLeft(13));
                //1010 FORMAT (' ','**UPETAT**',I5,8(/1X,10E13.5,/),/1X)
            }
            return;
        }   //END
        
        
        static double X_UWA073(double Y, double Z)
        {
            return ((((((-0.0231481481*Y +0.09708867521)*Y -0.1960915242)*Y + 0.2192331973)*Y +0.02658699171)*Y -0.01291301476)*
                Y +0.8892438228-(((((-0.02103365384*Y +0.09961392773)*Y -0.1722210081)*Y +0.1585008741)*Y -0.2515973193)*Y +0.650046620)*
                (((((((((0.5092113639*Z -3.388226221)*Z +8.660030123)*Z -9.171126646)*Z -1.039149696)*Z +12.89817083)*Z -14.11185536)*Z +
                7.603053305)*Z -3.193365038)*Z +1.230150087) -((((((((-0.03303868696*Z +0.3218264686)*Z -1.288545441)*Z +2.714582248)*Z -3.155905253)*Z
                +1.817862829)*Z -0.1636242004)*Z - 0.2051614834)*Z)*(((((((0.08518347032*Y -0.5974040749)*Y +1.677994388)*Y -
                2.613746838)*Y +2.639769555)*Y -1.201576774)*Y -0.9801852301)*Y +1.011900018));
        }
            

        static double F1_UWA073(double A) 
        {
            return ((((-0.1486013985978857E-7*A + 0.3432400932330117E-5)*A - 0.3325466200421637E-3)*A + 0.2173135198126349E-1)*A +0.7403846153846343E1);
        }
        

        static double F2_UWA073(double B) 
        {
            return (((((((((((-0.2537316983E-3*B + 0.7266793625E-2)*B -0.9050881615E-1)*B + 0.6425763192E0)*B - 0.2862519495E1)*B +
                0.8292054217E+1)*B - 0.1561635044E2)*B + 0.1839822854E2)*B - 0.1196532703E+2)*B + 0.2055659500E1)*B + 0.2139386386E1)*B - 0.212243E-3);
        }


        static void UWA073()
        {
            //COMMON /PUMDRU/
            //1 DELTPA(60),H0REGA(5),WD0A(5),WW0A(5),Q0A(5),HOA(5),PKESS,
            //2ETANUA(5),DREFAK,KART(5)
            //COMMON /DPWAS/ DPHD, DPND, PWA(60), LOESCH
            //COMMON /KPWAS/ KKONDP, KKENTG, KPW(60)
            //COMMON /AUSWAS/ DELTAI(10), PPUMPA(10), ETAPPA(10)
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /PUMP/ IPUMP(60)

            double DELPE = 0, DPLEIT = 0, HGEO = 0, Q0 = 0, GKESS = 0, QMAX = 0, PENDMA = 0, WW0 = 0, WD0 = 0, W0MAX = 0, H0GEO = 0,
                H0REG = 0, H = 0, AZW4 = 0, HO = 0, AZW3 = 0, B6 = 0, ETAQUE = 0, P = 0 , V = 0, S1 = 0, E1 = 0, E2 = 0, V1 = 0, V2 = 0,
                ETANUL = 0, AZW1 = 0, B1 = 0, B2 = 0, AZW2 = 0, VM = 0;

            int IENTG = 0, N = 0, ISP = 0, M2 = 0, M1 = 0, L = 0, M = 0, K4 = 0, K5 = 0, K6 = 0;
            if (LIGHT[2] == 8)
                sw16.WriteLine("0+++WASAUS+++ KENTG IHENDE INENDE LLTG(12) LLTG(14)   XPT(1)   PEMAX   DPHD   DPND\n");
                sw16.WriteLine("{0}     {1}     {2}     {3}       {4}      {5}  {6}{7}{8}   ",
                    KENTG.ToString().PadLeft(3),IHENDE.ToString().PadLeft(2),INENDE.ToString().PadLeft(2),LLTG[12].ToString().PadLeft(2),
                    LLTG[14].ToString().PadLeft(2),Math.Round(XPT[1],3).ToString().PadLeft(7),Math.Round(PEMAX,4).ToString().PadLeft(7),
                    Math.Round(DPHD,2).ToString().PadLeft(6),Math.Round(DPND,2).ToString().PadLeft(7));
                //I3,3(5X,I2),7X,I2,6X,F7.3,2X,F7.4,F6.2,F7.2)
            double B = 859.845;
            
            if (LLTG[9] == 1)
                B = 860.0;

            DELPE = 0.0;
            DPLEIT = 0.0;
            HGEO = 0.0;
            IENTG = 0;
            KKONDP = 0;
            KKENTG = 0;
            IEND = IHENDE;
            JJ = 0;
            
            if (LLTG[14] <= 3) goto label1;
            
            sw16.WriteLine("1 1 PUMPEN@FEHLER");
            LLTG[14] = 0;
            
        label1:
            I = IHENDE + 1;

        label2:
            I = I - 1;
            if (GWAS[I] == 0.0) GWAS[I] = GFDE[1];
            if (GWAS[I] == 0.0) GWAS[I] = 3 * TLSTGE[1];
            if (GWAS[I] == 0.0) GWAS[I] = 1000.0;
            N = NTYP[I];
            if (N == 18) goto label2;
            if(N != 2 && N != 21) goto label5;
            if (PWA[I] < 0.0) goto label4;
            if(JJ == 0) goto label3;
            DELPE = DELPE +DPND;
            DELTPA[I] = DPND/Math.Pow(PEMAX,2.0)/Math.Pow(GWAS[I],2.0);
            goto label2;
            
        label3:
            DELPE = DELPE + DPHD;
            DELTPA[I] = DPHD/Math.Pow(PEMAX,2.0)/Math.Pow(GWAS[I],2.0);
            goto label2;
            
        label4:
            DELTPA[I] = -PWA[I];
            DELPE = DELPE + DELTPA[I]*Math.Pow(PEMAX,2.0);
            DELTPA[I] = DELTPA[I]/Math.Pow(GWAS[I],2);
            goto label2;
            
        label5:
            if(N != 5 && N != 12) goto label7;
            if (PWA[I] < 0.0) goto label6;
            DELPE = DELPE + DPND;
            DELTPA[I] = DPND/Math.Pow(PEMAX,2.0)/Math.Pow(GWAS[I],2.0);
            goto label2;
            
        label6:
            DELTPA[I] = -PWA[I];
            DELPE = DELPE + DELTPA[I]* Math.Pow(PEMAX,2.0);
            DELTPA[I] = DELTPA[I]/Math.Pow(GWAS[I],2);
            goto label2;
            
        label7:
            if (N == 3) goto label8;
            if (N == 1) goto label50;
            if (I == 1) goto label60;
            DELTPA[I] = 0.0;
            if (N != 13) goto label2;
            A1 = 0.0;
            A2 = 0.0;
            if (PW[I-1] == 0.0 || TWAUS[I-1] == 0.0) goto label2;
            A8 = TWAUS[I-1];
            if (A8 < 0.0) A8 = UW0011(PW[I-1],1);
            A3 = VISUM(PW[I-1],A8,20);
            if (KATZE1[I] == 1) A1 = VERLP[I];
            if (KATZE1[I] == 2) A1 = PW[I-1] - PW[I-1]*(1.0-VERLP[I]/100.0);
            if (KATZE1[I]  > 2) A1 = SSTEU[I]*GWAS[I]*GWAS[I]*A3;
            A2 = QBZWM[I]/A3/10000.0;
            HGEO = HGEO - A2;
            DPLEIT = DPLEIT + A1;
            DELTPA[I] =-A1 + A2;
            goto label2;

        label8:
            JJ = JJ + 1;
            if (LOESCH == 1) goto label90;
            DELTAI[JJ] = 0.0;
            PPUMPA[JJ] = 0.0;
            ETAPPA[JJ] = 0.0;
            if (DTK[I] < 0.0) DELTAI[JJ] = Math.Abs(DTK[I]);
            if (DTK[I]  > 100.0) PPUMPA[JJ] = DTK[I]/1000.0;
            if (DTK[I]  > 0.0 && DTK[I] <= 100.0) ETAPPA[JJ] = DTK[I];
            
        label90:
            if(JJ == 1) ISP = I;
            GWAS[I] = GWAS[I]/IPUMP[I];
            if (NTYP[I-1] == 18) GWAS[I-1] = GWAS[I-1]/IPUMP[I];
            PPUMPA[JJ] = PPUMPA[JJ]/IPUMP[I];
            Q0 = GWAS[I] * PEMAX;
            Q0A[JJ] = Q0;
            if(JJ != 1) goto label21;

            PKESS = XPT[1];
            GKESS = GWAS[IHENDE]*PEMAX;
            IZ1 = UWA011(4,7);
            if(IZ1 == 4) PKESS = PKESS * PEMAX;
            if(LLTG[14] == 0) goto label10;
            if(LLTG[14] == 1) goto label9;

            QMAX = 1.1 * Q0;
            A1 = 1.1;
            PENDMA = PKESS*A1;
            WW0 = 2.0;
            WD0 = 0.5;
            W0MAX = (WW0+DELPE+WD0/A1)/Math.Pow((Q0/QMAX),2.0);
            H0GEO = 2.0;
            H0REG = 5.0;
            goto label11;
            
        label9:
            QMAX = 1.25 * Q0;
            A1 = 1.15;
            PENDMA = PKESS*A1;
            WW0 = 4.0;
            WD0 = PKESS*0.1;
            if (XPT[1] <= XPT[2]) WD0 = WD0 + XPT[1]*0.04;
            W0MAX = (WW0+DELPE+WD0/A1)/Math.Pow((Q0/QMAX),2.0);
            H0GEO = 3.0;
            H0REG = 5.0;
            goto label11;

        label10:
            QMAX = Q0;
            A1 = 1.133;
            PENDMA = PKESS*A1;
            WW0 = 7.0;
            A2 = 1.81818*PKESS-8.057785;
            if (A2 < 0.0) A2 = 0.0;
            WD0 = (20.0+Math.Sqrt(A2))/0.90909;
            if (XPT[1] <= XPT[2]) WD0 = WD0 + XPT[1]*0.04;
            W0MAX = (WW0+DELPE+WD0/A1)/Math.Pow((Q0/QMAX),2.0);
            H0GEO = 2.0;
            H0REG = 5.0;
            if (HGEO != 0.0) H0GEO = HGEO;

        label11:
            if (KRUECK[I]  > 5) goto label12;
            A7 = 1.0;
            
            if (IZ1 == 4) A7 = PEMAX;
            H = XPT[1] + WD0/Math.Pow(PEMAX,2.0)*A7 + (WW0+DELPE)/Math.Pow(PEMAX,2.0) + H0GEO + H0REG + DPLEIT;
            if (PWA[I] == 0.0) PW[I] = H;
            AZW4 = PW[I-1];
            if (NTYP[I-1] == 18) AZW4 = PW[I-2];
            if (AZW4 == 0.0) AZW4 = 15.0;
            if (PWA[I] < 0.0) PW[I] = AZW4 - PWA[I];
            A4 = DELPE/Math.Pow(PEMAX,2.0) + H0GEO + DPLEIT;
            A3 = (PW[I]-A4-XPT[1])/(H-A4-XPT[1]);
            WW0 = WW0*A3;
            WD0 = WD0*A3;
            H0REG = H0REG*A3;
            WW0A[JJ] = WW0/Math.Pow(GKESS,2.0);
            WD0A[JJ] = WD0/Math.Pow(GKESS,2.0);
            H0REGA[JJ] = H0GEO + H0REG;
            if (HGEO != 0.0) H0REGA[JJ] = H0REG;
            HO = PENDMA + WW0 + DELPE + WD0/A1 + H0GEO + H0REG + DPLEIT;
            HOA[JJ] = HO;
            H = XPT[1] + WD0/Math.Pow(PEMAX,2.0)*A7 + (WW0+DELPE)/Math.Pow(PEMAX,2.0) + H0GEO + H0REG + DPLEIT;
            goto label13;
            
        label12:
            A1 = GWAS[I]/QMAX;
            HO = PENDMA + W0MAX + H0GEO + H0REG + DPLEIT;
            H = HO*(((((-0.02504006410*A1 + 0.139769085)*A1 - 0.2264532342)*A1-0.2308238636)*A1+0.06489656177)*A1+1.277651515);
            if (PWA[I] == 0.0) PW[I] = H;
            AZW4 = PW[I-1];
            if (NTYP[I-1] == 18) AZW4 = PW[I-2];
            if (AZW4 == 0.0) AZW4 = 15.0;
            if (PWA[I] < 0.0) PW[I] = AZW4 - PWA[I];
            PKSP = PW[I];
            HO = HO * PW[I]/H;
            HOA[JJ] = HO;
            
        label13:
            AZW3 = PW[I];
            B6 = (GWAS[I]/QMAX)/Math.Sqrt(H/HO);
            ETAQUE = F2_UWA073(B6);
            if (NTYP[I-1] == 18 && (PW[I-1] == 0.0 || SSTEU[I-1] == 0.0))
                PW[I-1] = PW[I]*0.25;
            if (DELTAI[JJ] != 0.0) goto label14;
            if (PPUMPA[JJ] != 0.0) goto label16;
            if (ETAPPA[JJ] == 0.0) goto label18;
            DEKOND[I] = ETAPPA[JJ];
            ETANUA[JJ] = DEKOND[I]/ETAQUE;
            goto label40;
            
        label14:
            if (NTYP[I-1] == 18) goto label15;
            if (PW[I-1] == 0.0) PW[I-1] = 15.0;
            if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
            P = (PW[I]+PW[I-1])/2.0;
            V = VISUM(P,TWAUS[I-1],20);
            DEKOND[I]=(PW[I]-PW[I-1])*V*B*2.7240694/DELTAI[JJ];
            ETANUA[JJ] = DEKOND[I]/ETAQUE;
            goto label40;
            
        label15:
            if (PW[I-2] == 0.0) PW[I-2] = 15.0;
            if (TWAUS[I-2] == 0.0) TWAUS[I-2] = UW0011(PW[I-2],1);
            S1 = VISUM(PW[I-2],TWAUS[I-2],22);
            E1 = VISUM(PW[I-2],TWAUS[I-2],21);
            E2 = VISUM(PW[I],S1,24);
            E2 = VISUM(PW[I],E2,21);
            DEKOND[I] = (E2-E1)/DELTAI[JJ]*100.0;
            ETANUA[JJ] = DEKOND[I]/ETAQUE;
            goto label40;
            
        label16:
            if (NTYP[I-1] == 18) goto label17;
            if (PW[I-1] == 0.0) PW[I-1] = 15.0;
            if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
            P = (PW[I]+PW[I-1])/2.0;
            V = VISUM(P,TWAUS[I-1],20);
            DEKOND[I]=(PW[I]-PW[I-1])*V*GWAS[I]*2.7240694/PPUMPA[JJ];
            ETANUA[JJ] = DEKOND[I]/ETAQUE;
            goto label40;
            
        label17:
            if (PW[I-2] == 0.0) PW[I-2] = 15.0;
            if (TWAUS[I-2] == 0.0) TWAUS[I-2] = UW0011(PW[I-2],1);
            P = (PW[I]+PW[I-2])/2.0;
            V1 = VISUM(P,TWAUS[I-2],20);
            P = (PW[I-1]+PW[I-2])/2.0;
            V2 = VISUM(P,TWAUS[I-2],20);
            DEKOND[I] = ((PW[I]-PW[I-2])*V1*GWAS[I]+(PW[I-1]-PW[I-2])*V2*(GWAS[I-2]-GWAS[I]))*2.7240694/PPUMPA[JJ];
            ETANUA[JJ] = DEKOND[I]/ETAQUE;
            goto label40;
            
        label18:
            if(QMAX >= 1000.0) goto label19;
            A6 = QMAX/10.0;
            ETANUL = F1_UWA073(A6)*10.0;
            goto label20;
            
        label19:
            ETANUL = 82.0;
            
        label20:
            ETANUA[JJ] = ETANUL;
            DEKOND[I] = ETANUL*ETAQUE;
            goto label40;

        label21:
            QMAX = Q0;
            GKESS = GWAS[I]*IPUMP[I]*PEMAX;
            if (IENTG == 0) goto label29;

            WW0 = 5.0;
            H0GEO = 2.0;
            if (HGEO != 0.0) H0GEO = HGEO;
            H0REG = 2.0;
            if(KRUECK[I]  > 5) goto label22;
            H = AZW1/PEMAX + (WW0+DELPE)/Math.Pow(PEMAX,2.0) + H0GEO + H0REG + DPLEIT;
            if (PWA[I] == 0.0) PW[I] = H;
            AZW4 = PW[I-1];
            if (NTYP[I-1] == 18) AZW4 = PW[I-2];
            if (AZW4 == 0.0) AZW4 = 15.0;
            if (PWA[I] < 0.0) PW[I] = AZW4 - PWA[I];
            A4 = DELPE/Math.Pow(PEMAX,2.0) + H0GEO + DPLEIT;
            A3 = (PW[I]-A4-AZW1/PEMAX)/(H-A4-AZW1/PEMAX);
            WW0 = WW0*A3;
            H0REG = H0REG*A3;
            WW0A[JJ] = WW0/Math.Pow(GKESS,2.0);
            H0REGA[JJ] = H0REG + H0GEO;
            if (HGEO != 0.0) H0REGA[JJ] = H0REG;
            HO = 1.3*AZW1 + WW0 + DELPE + H0GEO + H0REG + DPLEIT;
            HOA[JJ] = HO;
            H = AZW1/PEMAX + (WW0+DELPE)/Math.Pow(PEMAX,2.0) + H0GEO + H0REG + DPLEIT;
            goto label23;
            
        label22:
            A1 = GWAS[I]/Q0;
            HO = 1.3*AZW1 + WW0 + DELPE + H0GEO + H0REG + DPLEIT;
            H =HO*(((((-0.02504006410*A1 + 0.139769085)*A1 - 0.2264532342)*A1-0.2308238636)*A1+0.06489656177)*A1+1.277651515);
            if (PWA[I] == 0.0) PW[I] = H;
            AZW4 = PW[I-1];
            if (NTYP[I-1] == 18) AZW4 = PW[I-2];
            if (AZW4 == 0.0) AZW4 = 15.0;
            if (PWA[I] < 0.0) PW[I] = AZW4 - PWA[I];
            HO = HO * PW[I]/H;
            HOA[JJ] = HO;
            H0REGA[JJ] = H0REG + H0GEO;
            if (HGEO != 0.0) H0REGA[JJ] = H0REG;
            
        label23:
            AZW3 = AZW1 + DELPE/Math.Pow(PEMAX,2.0) + H0GEO + DPLEIT;
            B6 = (GWAS[I]/Q0)/Math.Sqrt(H/HO);
            ETAQUE = F2_UWA073(B6);
            IENTG = 0;
            if (DELTAI[JJ] != 0.0) goto label24;
            if (PPUMPA[JJ] != 0.0) goto label25;
            if (ETAPPA[JJ] == 0.0) goto label26;
            DEKOND[I] = ETAPPA[JJ];
            ETANUA[JJ] = DEKOND[I]/ETAQUE;
            goto label40;
            
        label24:
            if (PW[I-1] == 0.0) PW[I-1] = AZW1;
            if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
            P = (PW[I]+PW[I-1])/2.0;
            V = VISUM(P,TWAUS[I-1],20);
            DEKOND[I]=(PW[I]-PW[I-1])*V*B*2.7240694/DELTAI[JJ];
            ETANUA[JJ] = DEKOND[I]/ETAQUE;
            goto label40;
            
        label25:
            if (PW[I-1] == 0.0) PW[I-1] = AZW1;
            if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
            P = (PW[I]+PW[I-1])/2.0;
            V = VISUM(P,TWAUS[I-1],20);
            DEKOND[I]=(PW[I]-PW[I-1])*V*GWAS[I]*2.7240694/PPUMPA[JJ];
            ETANUA[JJ] = DEKOND[I]/ETAQUE;
            goto label40;
            
        label26:
            if(QMAX >= 1000.0) goto label27;
            A6 = QMAX/10.0;
            ETANUL = F1_UWA073(A6)*10.0;
            goto label28;
            
        label27:
            ETANUL = 82.0;
            
        label28:
            ETANUA[JJ] = ETANUL;
            DEKOND[I] = ETANUL*ETAQUE;
            goto label40;

        label29:
            W0MAX = DELPE/Math.Pow((Q0/QMAX),2);
            M2=I + 1;
            
            for(M1 = M2; M1 <= IHENDE; M1++)    //DO 30 M1=M2,IHENDE
                if (NTYP[M1] == 3 || NTYP[M1] == 18) 
                    goto label31;       //30 CONTINUE
            
        label31:
            AZW1 = TWAUS[M1-1];
            if (AZW1 <= 0.0) AZW1 = 470.0;
            AZW1 = UW0011((AZW1+10.0),2);
            if (PWA[M1-1]  > 0.0) AZW1 = PW[M1-1];
            if (PWA[M1-1] < 0.0) AZW1 = PW[M1-2] + PWA[M1-1];
            if (PWA[M1-1] != 0.0 && AZW1 <= 0.0) AZW1 = 15.0;
            if(KRUECK[I]  > 5) goto label32;
            H = AZW1 + DELPE/Math.Pow(PEMAX,2.0 )+ HGEO + DPLEIT;
            if (PWA[I] == 0.0) PW[I] = H;
            AZW4 = PW[I-1];
            if (NTYP[I-1] == 18) AZW4 = PW[I-2];
            if (AZW4 == 0.0) AZW4 = 15.0;
            if (PWA[I] < 0.0) PW[I] = AZW4 - PWA[I];
            WW0 = PW[I] - H;
            WW0A[JJ] = WW0/Math.Pow(GKESS,2.0);
            H0REGA[JJ] = 0.0;
            W0MAX = (WW0+DELPE)/Math.Pow((Q0/QMAX),2.0);
            HO = AZW1*PEMAX + W0MAX + HGEO + DPLEIT;
            HOA[JJ] = HO;
            H = AZW1 + (WW0+DELPE)/Math.Pow(PEMAX,2.0) + HGEO + DPLEIT;
            goto label33;
            
        label32:
            A1 = GWAS[I]/Q0;
            HO = AZW1*PEMAX + W0MAX + HGEO + DPLEIT;
            H0REGA[JJ] = 0.0;
            H =HO*(((((-0.02504006410*A1 + 0.139769085)*A1 - 0.2264532342)*A1-0.2308238636)*A1+0.06489656177)*A1+1.277651515);
            if (PWA[I] == 0.0) PW[I] = H;
            AZW4 = PW[I-1];
            if (NTYP[I-1] == 18) AZW4 = PW[I-2];
            if (AZW4 == 0.0) AZW4 = 15.0;
            if (PWA[I] < 0.0) PW[I] = AZW4 - PWA[I];
            HO = HO*PW[I]/H;
            HOA[JJ] = HO;
            
        label33:
            AZW3 = PW[I];
            B6 = (GWAS[I]/QMAX)/Math.Sqrt(H/HO);
            ETAQUE = F2_UWA073(B6);
            
            if (NTYP[I-1] == 18 && (PW[I-1] == 0.0 || SSTEU[I-1] == 0.0))
                PW[I-1] = PW[I]*0.25;
            if (DELTAI[JJ] != 0.0) goto label14;
            if (PPUMPA[JJ] != 0.0) goto label16;
            if (ETAPPA[JJ] == 0.0) goto label18;
            DEKOND[I] = ETAPPA[JJ];
            ETANUA[JJ] = DEKOND[I]/ETAQUE;

        label40:
            DELPE = 0.0;
            HGEO = 0.0;
            DPLEIT = 0.0;
            if (LIGHT[2] == 8)
            {
                sw16.WriteLine(" +++WASAUS+++{0}{1}{2}{3}{4}{5}{6}{7}{8}{9},2I3,8E13.5", I.ToString().PadLeft(3),JJ.ToString().PadLeft(3),
                    WW0A[JJ].ToString("0.00000E+0").PadLeft(13),WD0A[JJ].ToString("0.00000E+0").PadLeft(13),H0REGA[JJ].ToString("0.00000E+0").PadLeft(13),
                    HOA[JJ].ToString("0.00000E+0").PadLeft(13),ETANUA[JJ].ToString("0.00000E+0").PadLeft(13),PW[I].ToString("0.00000E+0").PadLeft(13),
                    Q0.ToString("0.00000E+0").PadLeft(13),QMAX.ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("                   {0}{1}{2}{3}{4}{5}",HO.ToString("0.00000E+0").PadLeft(13),H.ToString("0.00000E+0").PadLeft(13),B6.ToString("0.00000E+0").PadLeft(13),
                    ETANUL.ToString("0.00000E+0").PadLeft(13),ETAQUE.ToString("0.00000E+0").PadLeft(13),DEKOND[I].ToString("0.00000E+0").PadLeft(13));
            }
            //103 FORMAT(1H/19X,6E13.5)
            if (LLTG[12] != 0) goto label42;
            if (JJ != 1 || N1[I] == 0) goto label42;
            
            for(IZ1 = 1; IZ1 <= ITRB; IZ1++)    //DO 41 IZ1=1,ITRB
            {
                if (NITRE[IZ1] != 7) continue;
                B1 = GWAS[I]/QMAX;
                B2 = PW[I]/HOA[JJ];
                DREFAK = X_UWA073(B1,B2);
            }   //41 CONTINUE
            
        label42:
            AZW1 = TWAUS[I-1];
            if(AZW1 <= 0) AZW1 = 470.0;
            AZW1 = UW0011((AZW1 + 10.0),2);
            GWAS[I] = GWAS[I]*IPUMP[I];
            if (NTYP[I-1] == 18) GWAS[I-1] = GWAS[I-1]*IPUMP[I];
            PPUMPA[JJ] = PPUMPA[JJ]*IPUMP[I];
            if (JJ == 1 && NTYP[IHENDE] == 3) goto label44;
            II = I + 1;
            
            for(J = II; J <= IEND; J++)     //DO 43 J=II,IEND
            {
                N = NTYP[J];
                if (N == 3 || N == 18) goto label44;
                A2 = PW[J-1];
                if(J == II) A2 = AZW3;
                if (N != 7) goto label1042;
                if (NDRUCK == 0) goto label1042;
                if (J == NDRUCK-1) PW[J] = PW[NDRUCK] - 2.0;
                if (J == NDRUCK+1) PW[J] = XPT[1] - 2.0;
                goto label1043;

            label1042:
                if (PWA[J] != 0.0)  continue;
                PW[J] = A2 - DELTPA[J]*Math.Pow(GWAS[J],2.0);
                if (N == 13) PW[J] = A2 + DELTPA[J];
                
            label1043:
                if (LIGHT[2] == 8)
                    sw16.WriteLine(" '+++WASAUS+++{0}{1}{2}{3}{4} ", J.ToString().PadLeft(5), Math.Round(DELTPA[J],6).ToString().PadLeft(10),
                        A2.ToString("0.00000E+0").PadLeft(13),PW[J].ToString("0.00000E+0").PadLeft(13),GWAS[J].ToString("0.00000E+0").PadLeft(13));
                    //104 FORMAT(' ',',I5,F10.6,3E13.5)
            }   //43 CONTINUE
            
        label44:
            IEND = I - 1;
            goto label2;

        label50:
            IENTG = 1;
            HGEO = 0.0;
            DPLEIT = 0.0;
            KKENTG = I;
            if (KENTG != 2) goto label51;
            if (EKONDW[I] != 0.0) PENTG0 = EKONDW[I];
            PW[I] = PENTG0;
            EKONDW[I] = PENTG0;
            AZW1 = PW[I];
            AZW2 = AZW1;
            goto label54;
            
        label51:
            PW[I] = 0.0;
            if (EKONDW[I] == 0.0) goto label52;
            PW[I] = EKONDW[I];
            AZW1 = PW[I];
            AZW2 = AZW1;
            goto label54;
            
        label52:
            IZ4 = N1[I];
            AZW1 = PLTG[IZ4] - DPLTG[IZ4] - DTK[I];
            if (AZW1 <= 0.0) goto label53;
            AZW2 = AZW1;
            AZW1 = AZW1 * PEMAX;
            goto label54;
            
        label53:
            AZW1 = 15.0;
            AZW2 = AZW1;
            
        label54:
            M = I + 1;
            
            for(L = M; L <= IHENDE; L++)    //DO 55 L=M,IHENDE
            {
                N = NTYP[L];
                if (N == 3 || N == 18) goto label56;
                if (PWA[L] == 0.0) PW[L] = AZW2;
                if (PWA[L] == 0.0 && NTYP[L-1] != 1) PW[L] = PW[L-1];
                if (PWA[L] == 0.0 && N == 8) PW[L] = AZW2*1.05;
                if (PWA[L] < 0.0 && N == 8) PW[L] = AZW2 - PWA[L];
                if (N != 13) continue;
                if (QBZWM[L] == 0.0) continue;
                A5 = PW[L-1];
                if (A5 == 0.0) A5 = AZW2;
                PW[L] = A5 + DELTPA[L];
            }   //55 CONTINUE
            
        label56:
            IEND = I - 1;
            if (LIGHT[2] == 8) 
                sw16.WriteLine(" +++WASAUS+++{0}{1}{2}", I.ToString("0.00000E+0").PadLeft(13),IENTG.ToString("0.00000E+0").PadLeft(13),AZW1.ToString("0.00000E+0").PadLeft(13));
            goto label2;

        label60:
            if( PW[I] == 0) PW[I] = 0.05;
            if (IENTG == 1) KKONDP = 1;
            if (KKONDP == 0 && JJ == 1) KKONDP = 1;
            if (KKONDP == 1 && KKENTG == 0) KKENTG = ISP;
            if(IHENDE == INENDE) goto label87;

            for(K3 = 1; K3 <= IHENDE; K3++)     //DO 79 K3=1,IHENDE
            {
                if(NTYP[K3] != 8) continue;
                K4 = N2[K3];
                if(K4 == 0) continue;
            label70:
                K5 = IHENDE + 1;
                
                for(K6 = K5; K6 <= INENDE; K6++)    //DO 78 K6 = K5,INENDE
                {
                    N = NTYP[K6];
                    if(NN1[K6] == 0 || NN1[K6] != K4) continue;
                    if (PWA[K6]  > 0.0) A1 = PWA[K6];
                    if (PWA[K6]  > 0.0) goto label77;
                    if (NN1[K6] == N2[K3]) A1 = PW[K3];
                    if (A1 == 0.0) goto label76;
                    if (GWAS[K6] == 0.0) goto label75;
                    if (N != 2 && N != 21) goto label73;
                    if (PWA[K6] < 0.0) goto label71;
                    if (K3 < ISP) goto label72;
                    if (K3  > IHENDE && A1 < 40.0) goto label72;
                    DELTPA[K6] = DPHD/Math.Pow(PEMAX,2.0)/Math.Pow(GWAS[K6],2.0);
                    PW[K6] = A1 - DELTPA[K6]* Math.Pow(GWAS[K6],2.0);
                    goto label77;
                    
                label71:
                    DELTPA[K6] = -PWA[K6]/Math.Pow(GWAS[K6],2.0);
                    PW[K6] = A1-DELTPA[K6]*Math.Pow(GWAS[K6],2.0);
                    goto label77;
                    
                label72:
                    DELTPA[K6] = DPND/Math.Pow(PEMAX,2.0)/Math.Pow(GWAS[K6],2.0);
                    PW[K6] = A1 - DELTPA[K6]*Math.Pow(GWAS[K6],2.0);
                    goto label77;
                    
                label73:
                    if (N != 5 && N != 12) goto label75;
                    if (PWA[K6] < 0.0) goto label74;
                    DELTPA[K6] = DPND/Math.Pow(PEMAX,2.0)/Math.Pow(GWAS[K6],2.0);
                    PW[K6] = A1 - DELTPA[K6]*Math.Pow(GWAS[K6],2.0);
                    goto label77;
                    
                label74:
                    DELTPA[K6] = -PWA[K6]/Math.Pow(GWAS[K6],2.0);
                    PW[K6] = A1-DELTPA[K6]*Math.Pow(GWAS[K6],2.0);
                    goto label77;
                    
                label75:
                    if (N != 13) goto label1075;
                    DELTPA[K6] = 0.0;
                    A3 = 0.0;
                    if (PLTG[K4] == 0.0 || ELTG[K4] == 0.0) goto label1075;
                    A3 = VISUM(PLTG[K4],ELTG[K4],03);
                    if (NN1[K6] == N2[K3]) A3 = TWAUS[K3];
                    if (A3 == 0.0) goto label1075;
                    A4 = 0.0;
                    A5 = 0.0;
                    VM = VISUM(A1,A3,20);
                    if (KATZE1[K6] == 1) A4 = VERLP[K6];
                    if (KATZE1[K6] == 2) A4 = A1 - A1*(1.0-VERLP[K6]/100.0);
                    if (KATZE1[K6]  > 2) A4 = SSTEU[K6]*Math.Pow(GWAS[K6],2.0)*VM;
                    A5 = QBZWM[K6]/VM/10000.0;
                    DELTPA[K6] = - A4 + A5;
                    PW[K6] = A1 + DELTPA[K6];
                    goto label77;
                    
                label1075:
                    DELTPA[K6] = 0.0;
                    if (PWA[K6] <= 0.0) PW[K6] = A1;
                    goto label77;
                    
                label76:
                    if (NTYP[K6] == 3 || NTYP[K6] == 8 || NTYP[K6] == 19 || NTYP[K6] == 23 || NTYP[K6] == 0) goto label77;
                    if (PWA[K6] != 0.0) goto label77;
                    KPW[K6] = 1;
                    
                label77:
                    K4 = NN2[K6];
                    if (LIGHT[2] == 8)
                        sw16.WriteLine(" +++WASAUS+++{0}{1}{2}{3}{4}{5}{6}{7}{8} ", K3.ToString().PadLeft(5),K4.ToString().PadLeft(5),
                            K5.ToString().PadLeft(5),K6.ToString().PadLeft(5),KPW[K6].ToString().PadLeft(5),Math.Round(DELTPA[K6],6).ToString().PadLeft(10),
                            A1.ToString("0.00000E+0").PadLeft(13),PW[K6].ToString("0.00000E+0").PadLeft(13),GWAS[K6].ToString("0.00000E+0").PadLeft(13));
                        //105 FORMAT(1H ,12H+++WASAUS+++,5I5,F10.6,3E13.5)
                    A1 = PW[K6];
                    goto label70;
                }       //78 CONTINUE
            }   //79 CONTINUE

            L = IHENDE + 1;
            for(I = L; I <= INENDE; I++)    //DO 86 I=L,INENDE
            {
                N = NTYP[I];
                if (N != 3) continue;
                JJ = JJ + 1;
                if (LOESCH == 1) goto label80;
                DELTAI[JJ] = 0.0;
                PPUMPA[JJ] = 0.0;
                ETAPPA[JJ] = 0.0;
                if (DTK[I] < 0.0) DELTAI[JJ] = Math.Abs(DTK[I]);
                if (DTK[I]  > 100.0) PPUMPA[JJ] = DTK[I]/1000.0;
                if (DTK[I]  > 0.0 && DTK[I] <= 100.0) ETAPPA[JJ] = DTK[I];
                
            label80:
                if (DELTAI[JJ] != 0.0) goto label81;
                if (PPUMPA[JJ] != 0.0) goto label83;
                if (ETAPPA[JJ] != 0.0) goto label85;
                sw16.WriteLine("01 PUMPEN-WARNING", I.ToString().PadLeft(6));
                //101 FORMAT('0','1 PUMPEN-WARNING',I6)
                DEKOND[I] = 82.0;
                continue;
                
            label81:
                if (NTYP[I-1] == 18) goto label82;
                if (PW[I-1] == 0.0) PW[I-1] = 15.0;
                if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
                P = (PW[I]+PW[I-1])/2.0;
                V = VISUM(P,TWAUS[I-1],20);
                DEKOND[I]=(PW[I]-PW[I-1])*V*B*2.7240694/DELTAI[JJ];
                continue;
                
            label82:
                if (PW[I-2] == 0.0) PW[I-2] = 15.0;
                if (PW[I-1] == 0.0) PW[I-1] = PW[I]*0.25;
                if (TWAUS[I-2] == 0.0) TWAUS[I-2] = UW0011(PW[I-2],1);
                S1 = VISUM(PW[I-2],TWAUS[I-2],22);
                E1 = VISUM(PW[I-2],TWAUS[I-2],21);
                E2 = VISUM(PW[I],S1,24);
                E2 = VISUM(PW[I],E2,21);
                DEKOND[I] = (E2-E1)/DELTAI[JJ]*100.0;
                continue;
                
            label83:
                if (NTYP[I-1] == 18) goto label84;
                if (PW[I-1] == 0.0) PW[I-1] = 15.0;
                if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
                P = (PW[I]+PW[I-1])/2.0;
                V = VISUM(P,TWAUS[I-1],20);
                DEKOND[I]=(PW[I]-PW[I-1])*V*GWAS[I]*2.7240694/PPUMPA[JJ];
                if (GWAS[I] == 0.0) DEKOND[I] = 82.0;
                continue;
                
            label84:
                if (PW[I-2] == 0.0) PW[I-2] = 15.0;
                if (PW[I-1] == 0.0) PW[I-1] = PW[I]*0.25;
                if (TWAUS[I-2] == 0.0) TWAUS[I-2] = UW0011(PW[I-2],1);
                P = (PW[I]+PW[I-2])/2.0;
                V1 = VISUM(P,TWAUS[I-2],20);
                P = (PW[I-1]+PW[I-2])/2.0;
                V2 = VISUM(P,TWAUS[I-2],20);
                DEKOND[I] = ((PW[I]-PW[I-2])*V1*GWAS[I]+(PW[I-1]-PW[I-2])*V2*(GWAS[I-2]-GWAS[I]))*2.7240694/PPUMPA[JJ];
                if (GWAS[I] == 0.0|| GWAS[I-2] == 0.0) DEKOND[I] = 82.0;
                continue;
                
            label85:
                DEKOND[I] = ETAPPA[JJ];
            }   //86 CONTINUE
            
        label87:
            LOESCH = 1;
            return;
        }   //END


        static void UWA075()
        {
            //ENTRY HOLMNG
            return;
        }   //END


        static void UWA076()
        {
            //ENTRY HOLRST
            return;
        }   //END
        
        
        static void UWA077(string ss)
        {
            double[] AB1 = new double[6], AB2 = new double[6], AB3 = new double[6], AB4 = new double[6], AB5 = new double[6], AB6 = new double[6],
                AB7 = new double[6], AB8 = new double[6], AB9 = new double[6], AB10 = new double[6], AB11 = new double[6], AB12 = new double[6],
                AB13 = new double[6], IAB = new double[6], AB14 = new double[6], AB15 = new double[6], EROS = new double[6];

            double KDR = 0, FH = 0, FG = 0, FD = 0, FM = 0, FK = 0, FF = 0, FT1 = 0, FT2 = 0, FVO = 0, FL = 0, FQ = 0, H0STAT = 0,
               KKK = 0, KT10VO = 0, EBKENZ = 0, F1 = 0, F2 = 0, X1 = 0, DDELTG = 0, DELTGW = 0, EROSKZ = 0, DELTG2 = 0, DISTTZ = 0,
               SAVTT = 0, SAVAS = 0, DISMDZ = 0, SNITT = 0, SCHUBK = 0, DELTG1 = 0, DELTGA = 0, P0BES = 0, SNIGR = 0, SAVGR = 0,
               DISGRZ = 0, SCHUBG = 0, KFLUT = 0, YUPM = 0, KT7ND = 0, A41 = 0, A43 = 0, A44 = 0, F3 = 0,
               F4 = 0, A47 = 0, A42 = 0, A45 = 0, A46 = 0, A48 = 0, A39 = 0, DELTGR = 0, DRESTW = 0, KT7VR = 0, EGES = 0, ESTAT = 0,
               TSTAT = 0, VSTAT = 0, PGES = 0, TGES = 0, VGES = 0, EGESDR = 0, TGESDR = 0, VGESDR = 0, EI0TT = 0, S0TTAV = 0,
               HCVTT = 0, KT7N = 0, P0TT = 0, T0TT = 0, E1STAT = 0, CVOR = 0, T1STAT = 0, S0STAT = 0, T2STAT = 0, E2STAT = 0,
               HI = 0, HNDIFF = 0, SNIST = 0, SNIEB = 0, A22 = 0, A21 = 0, CAX = 0, DP = 0, E2STT = 0, E2SMD = 0, S0EBAV = 0,
               E2STTG = 0, E2SMDG = 0, EI0EB = 0, SAVTTG = 0, SAVASG = 0, E2SEB = 0, SAVEB = 0, DISEBZ = 0, HCNTT = 0,
               SAVTT1 = 0, ETATT = 0, ETATT1 = 0, P2TT = 0, DLTBES = 0, S0BES = 0, E0BES = 0, E2OLE = 0, E2MLE = 0, ETABOL = 0,
               ETASOL = 0, ETABML = 0, ETASML = 0, T2OLE = 0, T2MLE = 0, P0EB = 0, T0EB = 0, SNIMD = 0, SAVMD = 0,
               SAVMD1 = 0, HCNEB = 0, P2EB = 0, DISEB = 0, SNIEB1 = 0, SAVEBI = 0, SAVEBE = 0, SAVEB1 = 0, ETAEB = 0, ETAEB1 = 0,
               ETAMD = 0, ETAMD1 = 0, F5 = 0, X2 = 0, X3 = 0, X4 = 0, HCVOR = 0, HCNACH = 0, ETAGR = 0, ETAGR1 = 0, KT1E = 0,
               KT14A = 0, KT14N = 0, EI0GR = 0, S0GR = 0, T0BES = 0, A50 = 0, A24 = 0, ZETAS = 0, EROSK = 0, A26 = 0, A25 = 0,
               A49 = 0, A13 = 0, A18 = 0, A19 = 0, A15 = 0, A11 = 0, A16 = 0, A20 = 0, A28 = 0, F6 = 0, F7 = 0, F8 = 0, X5 = 0,
               E2SGR = 0, SAVGR1 = 0, S0TROT = 0, E0TROG = 0, SUMLAX = 0, SUMUQA = 0, SUMZTX = 0, A31 = 0, A30 = 0, EM = 0, TM = 0,
               ZETA = 0, KT14NA = 0, DLTHTR = 0, A33 = 0, A34 = 0, A35 = 0, A36 = 0, A37 = 0, KT7R = 0, KT7D = 0, KT7A = 0,
               A27 = 0, BEAUF = 0, KFLUT0 = 0, F9 = 0, PSPER = 0;

            int IEBZ = 0, IMI = 0, IBLATT = 0, I1 = 0, I2 = 0, IZ = 0, JJVOR = 0, IENDKZ = 0, ITRONR = 0, ISTFNR = 0, IVENT = 0,
                IBAANF = 0, IZ11 = 0, IZ12 = 0, IBAZ = 0, IPAR = 0, IZ13 = 0, IX = 0, IENTWS = 0, NRPROF = 0, IRUECK = 0, K9VOR = 0,
                IN1 = 0, ITR = 0, ITROST = 0, I3 = 0, I4 = 0, I5 = 0, IN4 = 0, IN2 = 0, IDART = 0, IDARTL = 0, IDARTS = 0, IDARTD = 0,
                IN3 = 0;
            bool QEXPBE = false, QPRINT = false;
            string STEXT = "                        ";
            string S;
            string F27 = "                                         ", TEXT = "                           ";
            StringBuilder s;
            if(ss == "PRINTI")   goto PRINTI;
            if(ss == "PRINTF1")   goto PRINTF1;
            
        PRINTI:
            //ENTRY PRINTI
            
            return;

        PRINTF1:
            //ENTRY PRINTF1
            TEXT = "LASTPUNKT NRAUSLEGUNG   . P A R A L L E L T U R B I N E V.TURB  V.LEIT  N.RSTF  V.DRN.DRDRUCKVERLUSTDROSSELELEMENT   VOR- HINTER STUFE  H.KESS  H.TURB  VENTIL  GEDROSS.UNGEDROSS.  V.DUE";

            if (LIGHT[7] == 1 && K == 2) return;
            KDR=KDRTU;
            QPRINT = false;
            
        label8888:
            if(KDR > 99) goto label200;
            if(KDR > 9) goto label210;
            if(KDR > 0) goto label220;
            return;
            
        label200:
            FH=4.1868;
            FG=1;
            FD=0.980665;
            FM=3.6;
            FK=9.80665;
            FF=60;
            FT1=1;
            FT2=0;
            FVO=1;
            FL=1;
            FG=1;
            IWR=1;
            KDR=KDR-(KDR/100)*100;
            goto label9999;
            
        label210: 
            FH=1.8;
            FG = 3.28084;
            FD = 14.223315;
            FM = 1.0/2.204622;
            FK = 2.204622;
            FF=1;
            FT1=1.8;
            FT2=32;
            FVO=16.0185;
            FL=0.03937;
            IWR=2;
            KDR=KDR-(KDR/10)*10;
            goto label9999;
            
        label220:
            FH=1;
            FG=1;
            FD=1;
            FM=1;
            FK=1;
            FF=1;
            FT1=1;
            FT2=0;
            FVO=1;
            FL=1;
            FG=1;
            KDR=0;
            IWR=3;
            goto label9999;
            
        label9999:
            FQ=859.845;
            
            if (LLTG[9] == 1) FQ = 860.0;
            H0STAT = 0.0;
            UWA043(2);
            
            if(K == 1)      goto label60;
            KKK = IFALL;
            if (KKK >= 7) KKK = STWRT2;
            sw16.WriteLine("0{0}{1}     ", TEXT.Substring(0,12), KKK.ToString().PadLeft(3));
            
            if (QPRINT) goto label61;
            IZ1 = IENDST[ANZTRB];
            KT10VO = 0;
            
            for(IZ2 = 1; IZ2 <= IZ1; IZ2++)     //DO 750 IZ2 = 1,IZ1
            {
                UWA010(IZ2,1);
                if (KT7 != 1) goto label751;
                if (KT6  > 1) KT10VO = UWA011(IZ2-1,10);
                P0E[KT6] = XPT[IZ2];
                T0E[KT6] = T2T[IZ2];
                if (KT10  != KT10VO)  continue;
                PNE[KT6-1] = XPT[IZ2-1];
                continue;
                
            label751:
                if (KT7 != 6) continue;
                PNE[KT6] = XPT[IZ2-1];
                PN4[KT10] = XPT[IZ2];
            }   //750 CONTINUE
            goto label61;
            
        label60:
            sw16.WriteLine("0{0}{1}     {2}", TEXT.Substring(0,11), IFALL.ToString().PadLeft(3), TEXT.Substring(12,12));
            
        label61:
            JJVOR=1;
            //GOTO(610,611,612),
            if(IWR == 1)        goto label610;
            if(IWR == 2)        goto label611;
            if(IWR == 3)        goto label612;
            
        label610:
            sw16.WriteLine("+                                   ERGEBNISSE DER TURBINENRECHNUNG IM   I N T E R N A T I O N A L E N   MASSYSTEM");
            goto label613;
            
        label611:
            sw16.WriteLine("+                                   ERGEBNISSE DER TURBINENRECHNUNG IM ENGL.MASS-SYSTEM");
            goto label613;
            
        label612:
            sw16.WriteLine("+                                   ERGEBNISSE DER TURBINENRECHNUNG IM TECHN.MASS-SYSTEM");
            
        label613:
            IEBZ=1;
            EBKENZ = 0.0;
            for(IZ1 = 1; IZ1 <= ANZTRB; IZ1++)  //DO 700 IZ1=1,ANZTRB
            {
                IX9 = 0;
                if (STZMDT[IZ1] != 99)  goto label701;
                IX9 = 999;
                return;
                
            label701:
                IBLATT = 0;
                IMI = 0;
                sw16.WriteLine("\n\n                                        {0}{1} {2} MW ", IZ1,TEXT.Substring(24,31), Math.Round(ARBTA[IZ1],3).ToString().PadLeft(9));
                
                if (IZ1  > 1)    goto label1;
                IZ4 = 0;
                goto label2;
                
            label1:
                IZ4=NTTETB[IZ1-1];
                
            label2:
                IZ5=NTTETB[IZ1]-IZ4;
                sw16.WriteLine("0  P01   T01(-X)   PN1       P02   T02(-X)   PN2       P03   T03(-X)   PN3       P04   T04(-X)   PN4      PABD    TKW");
                
                //GOTO(230,240,250),
                if(IWR == 1)    goto label230;
                if(IWR == 2)    goto label240;
                if(IWR == 3)    goto label250;
                
            label230:
                sw16.WriteLine("   BAR    CEL(%)   BAR       BAR    CEL(%)   BAR        BAR    CEL(%)   BAR       BAR    CEL(%)   BAR       BAR    CEL");
                goto label260;
                
            label240:
                sw16.WriteLine("  PSIA      F     PSIA      PSIA      F     PSIA        PSIA     F     PSIA      PSIA      F     PSIA      PSIA      F");
                goto label260;
                
            label250:
                sw16.WriteLine("   AT     CEL(%)   AT        AT     CEL(%)   AT         AT     CEL(%)   AT        AT     CEL(%)   AT        AT     CEL");
                
            label260:
                QZEIC=false;
                STEXT = " ";
                IX1=IZ4+1;
                if(IZ5  > 4)    goto label91;
                IX2=NTTETB[IZ1];
                goto label90;
                
            label91:
                IX2=IZ4+4;
                
            label90:
                for(IZ3 = IX1; IZ3 <= IX2; IZ3++)   //DO 10 IZ3 = IX1,IX2
                {
                    IMI = IMI + 26;
                    A1 = T0E[IZ3]*100.0;
                    if (A1 > 0.0) A1 = A1/100.0-273.15;
                    F1 = P0E[IZ3] * FD;
                    F2 = PNE[IZ3] * FD;
                    X1 = A1;
                    
                    if (A1 > 0.0)    X1 = A1*FT1+FT2;
                    I1 = IMI - 26 + 1;
                    I2 = IMI - 26 + 6;
                    //WRITE (S,'(F6.2)') F1;
                    S = Math.Round(F1,2).ToString().PadLeft(6);
                    //STEXT(I1:I2) = S;
                    s = new StringBuilder(STEXT);
                    s.Remove(I1-1, I2-I1);
                    s.Insert(I1-1,S);
                    STEXT = s.ToString();
                    
                    //WRITE (S,'(F6.4)') F1;
                    S = Math.Round(F1,4).ToString().PadLeft(6);
                    
                    if (F1  <  9.9999)
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(I1-1, I2-I1);
                        s.Insert(I1-1,S);
                        STEXT = s.ToString();
                    }   
                    //WRITE (S,'(F6.1)') F1
                    S = Math.Round(F1,1).ToString().PadLeft(6);

                    if (F1  >=  999.99) 
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(I1-1, I2-I1);
                        s.Insert(I1,S);
                        STEXT = s.ToString();
                    } //    STEXT(I1:I2) = S;

                    I1 = IMI - 26 + 8;
                    I2 = IMI - 26 + 14;
                    //WRITE (S,'(F7.2)') X1
                    S = Math.Round(X1,2).ToString().PadLeft(7);
                    //STEXT(I1:I2) = S
                
                    s = new StringBuilder(STEXT);
                    s.Remove(I1-1, I2-I1);
                    s.Insert(I1-1,S);
                    STEXT = s.ToString();
                    
                    I1 = IMI - 26 + 17;
                    I2 = IMI - 26 + 22;
                    //WRITE (S,'(F6.2)') F2;
                    S = Math.Round(F2,2).ToString().PadLeft(6);
                    
                    //STEXT(I1:I2) = S;
                    s = new StringBuilder(STEXT);
                    s.Remove(I1-1, I2-I1);
                    s.Insert(I1-1,S);
                    STEXT = s.ToString();
                    
                    //WRITE (S,'(F6.4)') F2;
                    S = Math.Round(F2,4).ToString().PadLeft(6);
                    if (F2 < 9.9999)
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(I1 - 1, I2 - I1);
                        s.Insert(I1 - 1, S);
                        STEXT = s.ToString();
                    }
                }   //10 CONTINUE

                sw16.WriteLine(" {0} ", STEXT);
                //20 FORMAT (1H ,A)
                if(QZEIC)   goto label81;
                if(PN4[IZ1]*FD < 9.9999)    goto label40;
                
                //F23(13:16) = 'F6.2';
                goto label41;

            label40:
                //F23(13:16) = 'F6.4'

            label41:
                F1 = PN4[IZ1] * FD;
                X1=ETWK[IZ1]*FT1+FT2;
                if (ETWK[IZ1]  > 0.0) goto label42;
                sw16.WriteLine("+          {0}          'uwa077_F23_format'", Math.Round(F1,4).ToString().PadLeft(6));
                goto label43;

            label42:
                sw16.WriteLine("+          {0}          {1}          'uwa077_F23_format'", Math.Round(F1,4).ToString().PadLeft(6), Math.Round(X1,4).ToString().PadLeft(6));
                
            label43:
                if (IZ5 <= 4)       goto label81;
                QZEIC = true;
                IX1 = IZ4 + 5;
                IX2 = NTTETB[IZ1];
                sw16.WriteLine("0  P05     T05     PN5       P06     T06     PN6        P07     T07     PN7");
                goto label90;

            label81:
                sw16.WriteLine("0\n");
                DDELTG = 0.0;
                DELTGW = 0.0;
                
                for(IZ = 1; IZ <= 5; IZ++)      //DO 82 IZ=1, 5
                    EROS[IZ] = 0.0;

                IX5=NTTETB[IZ1];
                JJ = JJVOR - 1;
                
            label600:
                JJ = JJ + 1;
                if (JJ  >  IX5 ) goto label601;
                QEXPBE = false;
                EROSKZ = 0.0;
                IENDKZ = 0;
                DELTG2 = 0.0;
                DISTTZ = 0.0;
                SAVTT = 0.0;
                SAVAS = 0.0;
                DISMDZ = 0.0;
                SNITT=0.0;
                SCHUBK = 0.0;
                DELTG1 = 0.0;
                DELTGA = 0.0;
                ITRONR = 0;
                ISTFNR = 0;
                P0BES = 0.0;
                IVENT =0;
                SNIGR=0.0;
                SAVGR = 0.0;
                DISGRZ = 0.0;
                SCHUBG = 0.0;
                K9VOR=0;
                NRPROF=0;
                UWA006("RDISC", 52,JJ);
                UWA006("RDISC", 59,JJ);
                IZ9=ITTEND[JJ];
                QTROM=false;
                IX3=1;
                IX4=IZ9;
                
            label534:
                I = IX3- 1;
                
            label500:
                I = I+1;
                
                if (I  > IX4) goto label602;
                if(QTROM)   goto label533;
                UWA010(I,1);
                
                if(KT9 == K9VOR)goto label1402;
                UWA006("RDISC", 53,KT9);
                UWA006("RDISC", 56,KT9);
                KFLUT = FLUT;
                if(K  > 1)
                    YUPM=XUPM*DREQUE[KT10];
                
            label1402:
                if (IZ1  > 1) goto label1430;
                goto label1435;
            
            label1430:
                if ((NTTETB[IZ1]-NTTETB[IZ1-1]) == 1) goto label1401;
                
            label1435:
                if (NTTETB[IZ1] == 1) goto label1401;
                if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label1440;
                goto label1401;
                
            label1440:
                if (KT7 != 1 && KT7 != 7) goto label1401;
                if (KT7 == 7) goto label1446;
                if (I == 1) goto label1446;
                goto label1401;
                
            label1446:
                QEXPBE = true;
                if (KT7 == 7) QEXPBE = false;
                if (QEXPBE) goto label1445;
                goto label1401;
                
            label1445:
                KT7ND = UWA011(3,7);
                if (KT7ND == 5 || KT7ND == 3) QEXPBE = false;
                if (KT7ND == 5 || KT7ND == 3) EBKENZ = 0.0;
                if (IZ1  > 1) QEXPBE = false;
                if (KT5 == 0) goto label1401;
                UWA044(1,1);
                for(IZ = 1; IZ <= 10; IZ++)     //DO 1450 IZ=1, 10
                    if (LZUT[IZ] >= 41 && LZUT[IZ] <= 46)
                        QEXPBE = false;     //1450 CONTINUE
                
            label1401:
                if (I == 1) DELTGA = DDELTG;
                if (KT7 != 1 && KT7 != 7) goto label1408;
                if (KT7 == 7) goto label1442;
                if (I == 1) goto label1442;
                goto label1408;
                
            label1442:
                if (JJ == JJVOR) goto label1412;
                if ((NTTETB[KT10]-1) == KT6 && STZNDT[KT10] != 0) goto label1404;
                
            label1412:
                A1 = 1.0;
                if (EBKENZ  !=  98.0) A1 = 0.0;
                if (KT10  > 1 && NITRE[KT10] == 8) EBKENZ = 99.0;
                if (KT10  > 1 && NITRE[KT10] == 9) EBKENZ = 99.0;
                if (JJ == JJVOR && EBKENZ != 99.0) goto label1407;
                if (EBKENZ != 99.0) goto label1405;
                sw16.WriteLine(" P A R A L L E L E R   D A M P F S T R A N G {0}", KT10.ToString().PadLeft(3));
                sw16.WriteLine(" ");

                if (KT10  > 2) EBKENZ = 0.0;
                if (KT10  > 1 && STZNDT[KT10] != 0) EBKENZ = 0.0;
                if (KT10  > 1 && NTTETB[1] != 3) EBKENZ = 0.0;
                goto label1409;

            label1404:
                if (NITRE[KT10+1] == 8 || NITRE[KT10+1] == 9) EBKENZ = 98.0;
                IZ = NTTETB[KT10] + 1;
                if (EBKENZ == 98.0 && (PNE[IZ] < PNE[KT6]*0.99  ||  PNE[IZ]  > PNE[KT6]*1.01 )) EBKENZ = 0.0;
                
            label1405:
                if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label1406;
                goto label1411;
                
            label1406:
                if (QEXPBE) goto label1409;
                
            label1411:
                sw16.WriteLine(" ");
                IEBZ = IEBZ - 1;
                sw16.WriteLine(" EXPANSIONSBEREICH{0}                                P0G   T0G(-X)   P2     DLTHS   ETA-I   ETAEX    E-AB    SUMPI", IEBZ.ToString().PadLeft(3));
                IEBZ = IEBZ + 1;

                IZ = KT6 - IBAANF;
                //goto label(6,7,8) ,
                if(IZ == 1)     goto label6;
                if(IZ == 2)     goto label7;
                if(IZ == 3)     goto label8;
                
            label6:
                sw16.WriteLine("+                      (BER.-ABSCHNITT {0})", IBAANF.ToString().PadLeft(2));
                goto label9;
                
            label7:
                IZ11 = IBAANF + 1;
                sw16.WriteLine("+                      (BER.-ABSCHNITT {0} UND {1})", IBAANF.ToString().PadLeft(2),IZ11.ToString().PadLeft(2));
                goto label9;
                
            label8:
                IZ11 = IBAANF + 1;
                IZ12 = IBAANF + 2;
                sw16.WriteLine("+                      (BER.-ABSCHNITT {0},{1} UND{2})", IBAANF.ToString().PadLeft(2),IZ11.ToString().PadLeft(1),IZ12.ToString().PadLeft(2));

            label9:
                //GOTO(231,241,251),
                if(IWR == 1)    goto label231;
                if(IWR == 2)    goto label241;
                if(IWR == 3)    goto label251;
                
            label231:
                sw16.WriteLine("                                                     PSIA      F     PSIA   BTU/LB     %       %     BTU/LB    MW ");
                goto label261;

            label241:
                sw16.WriteLine("                                                     PSIA      F     PSIA   BTU/LB     %       %      BTU/LB    MW ");
                goto label261;

            label251:
                sw16.WriteLine("                                                      AT     CEL(%)   AT    KCAL/KG    %       %      KCAL/KG    MW ");

            label261:
                sw16.WriteLine(" ");
                //if (A41*FD < 9.9999)  F103(21:24) = 'F8.4'
                //if (A41*FD >= 9.9999) F103(21:24) = 'F8.2'
                //if (A43*FD < 9.9999)  F103(33:36) = 'F8.4'
                //if (A43*FD >= 9.9999) F103(33:36) = 'F8.2'
                
                F1 = A41 * FD;
                F2 = A43 * FD;
                F3 = A44 * FH;
                F4 = A47 * FH;
                if(A42 < 0) goto label360;
                X1=A42*FT1+FT2;
                goto label361;
                
            label360:
                X1=A42;

            label361:
                sw16.WriteLine("                                            EXPBER{0}{1}{2}{3}  {4}{5} {6}{7}  ", Math.Round(F1,2).ToString().PadLeft(8),Math.Round(X1,1).ToString().PadLeft(8),
                    Math.Round(F2,2).ToString().PadLeft(8),Math.Round(F3,2).ToString().PadLeft(8),Math.Round(A45,2).ToString().PadLeft(8),Math.Round(A46,2).ToString().PadLeft(8),
                    Math.Round(F4,3).ToString().PadLeft(9),Math.Round(A48,3).ToString().PadLeft(9));
                
            label1407:
                if (IBLATT == 0) goto label2000;
                UWA043(2);
                sw16.WriteLine(" ");
                sw16.WriteLine(" ");
                
            label2000:
                IBLATT = 1;
                sw16.WriteLine(" E X P A N S I O N S B E R E I C H {0}", IEBZ.ToString().PadLeft(3));
                IEBZ = IEBZ + 1;
                IBAZ = KT6;
                IBAANF = KT6;
                sw16.WriteLine(" ");

            label1409:
                if (QEXPBE) goto label2010;
                goto label2020;
                
            label2010:
                UWA043(2);
                sw16.WriteLine(" ");
                sw16.WriteLine(" ");
                
            label2020:
                sw16.WriteLine(" BERECHNUNGSABSCHNITT{0}", IBAZ.ToString().PadLeft(3));
                IBAZ = IBAZ + 1;
                IPAR = 0;
                
                for(IZ = IZ1; IZ <= ANZTRB; IZ++)   //DO 3 IZ=IZ1,ANZTRB
                {
                    IZ11 = IZ + 1;
                    if (IZ11  > ANZTRB)     continue;
                    if (NITRE[IZ11] != 8 && NITRE[IZ11] != 9) continue;
                    IZ12 = NTTETB[IZ1] + 1;
                    IZ13 = NTTETB[IZ11];
                    
                    for(IX = IZ12; IX <= IZ13; IX++)    //DO 4 IX=IZ12,IZ13
                    {
                        if (IPAR != 0) continue;
                        if (PNE[IX] >= PNE[KT6]*.99 && PNE[IX] <= PNE[KT6]*1.01)
                            IPAR = IZ11;
                        if (KT6 == (IZ12-1) && STZNDT[KT10] != 0 && IZ12 == IZ13 && STZNDT[IZ11] != 0) 
                            IPAR = IZ11;
                        if (P0E[IX]  > PNE[KT6]*1.01 && P0E[IX] < P0E[KT6]*1.01)
                            IPAR = IZ11;
                    }   //4 CONTINUE
                }   //3 CONTINUE
                if (IPAR == 0) goto label5;
                sw16.WriteLine(" ");
                sw16.WriteLine(" (HIERZU PARALLELER DAMPFSTRANG{0})", IPAR.ToString().PadLeft(2));
                
            label5:
                if (EBKENZ == 99.0 && NTTETB[1] == 1) A44 = 0.0;
                if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label1579;
                if (IZ1 == 1) goto label1408;
                IZ = NTTETB[KT10-1] - 1;
                if (IZ == 1 || IZ1  > 2) EBKENZ = 0.0;
                if (IZ == 0) IZ = 1;
                if (EBKENZ == 99.0 && (PN4[KT10] < PNE[IZ]*0.99  ||  PN4[KT10] > PNE[IZ]*1.01 ))
                    EBKENZ = 0.0;
                goto label1408;
                
            label1579:
                IZ = (int)UPM[1]/100;
                IZ11 = STZNDT[KT10]/10;
                A39 = IZ11;
                A39 = A39/10.0;
                IZ11 = IZ11*10;
                IZ11 = STZNDT[KT10] - IZ11;
                sw16.WriteLine("0(N-TEILTURBINE  N{0}-{1}X{1} ", IZ.ToString().PadLeft(3),KFLUT.ToString().PadLeft(1),Math.Round(A39,1).ToString().PadLeft(4));
                
                if (EBKENZ == 99.0 && STZNDT[KT10-1] == 0)
                    EBKENZ = 0.0;
                if (IZ11 == 0) goto label1585;
                sw16.WriteLine("+                           -{0}", IZ11);
                goto label1408;

            label1585:
                sw16.WriteLine("+                              )");

            label1408:
                if (KT5 == 0) goto label50;

                if (KT7 == 3) DELTGR = DELTG2;
                UWA044(I,1);
                DRESTW = 0.0;
                if (DELTGW != 0.0) DRESTW = DELTGW;
                DELTGW = 0.0;
                IENTWS = 1;
                GSTOBU = 0.0;
                
                for(IZ = 1; IZ <= 10; IZ++)     //DO 1410 IZ=1, 10
                {
                    if (LABT[IZ] >= 70 && LABT[IZ] <= 99) DELTGA=DELTGA+GABT[IZ];
                    if (LABT[IZ] >=  1 && LABT[IZ] <= 40) GSTOBU = GSTOBU + GABT[IZ];
                    if (LABT[IZ] >=  1 && LABT[IZ] <= 40) IENTWS = 0;
                    if (LABT[IZ] >= 49 && LABT[IZ] <= 69) DELTGW = GABT[IZ];
                }   //1410 CONTINUE
                if (IENTWS == 1 && DELTGW != 0.0) DELTGA = DELTGA + DELTGW;
                if (IENTWS == 0 && DRESTW != 0.0) DELTGA = DELTGA - DRESTW;
                if (IENTWS == 1) DELTGW = DELTGW + DRESTW;
                if (IENTWS == 0) DELTGW = 0.0;

                for(IZ = 1; IZ <= 10; IZ++)     //DO 1420 IZ=1, 10
                    if (LZUT[IZ] >= 70 && LZUT[IZ] <= 98)
                        DELTGA=DELTGA-GZUT[IZ];     //1420 CONTINUE
                
            label50:
                if(KT2 == 0)goto label70;
                PSTOB[KT2]=PT[I,K];
                ESTOB[KT2]=E2T[I,K];
                
            label70:
                if(KT3 == 0)goto label71;
                PSTOB[KT3] = PT[I,K];
                ESTOB[KT3]=E2T[I,K];
                
            label71:
                if (KT7 == 4 || KT7 == 8 || KT7 == 9) goto label1000;
                A1=T2T[I]*100.0;
                if(KT7 == 7)    A1=100.0*T1T[I];
                if(A1  > 0.0)   A1=A1/100.0 -273.15;
                Z1=VISUM(PT[I,K],T2T[I],00);
                if (I != 1) goto label1052;
                IZ = 3;
                if (KT7 == 7) IZ = 4;
                KT7VR = UWA011(IZ,7);
                
                if (KT7VR == 4 || KT7VR == 8)
                    IZ = IZ - 1;
                
            label1053:
                EGES = E1T[IZ+1,K];
                if (KT7VR == 3) EGES = E2T[IZ,K];
                ESTAT = EGES - Math.Pow(C2GES[IZ,K],2)/8.37225E+03;
                TSTAT = VISUM(PT[IZ,K],ESTAT,13);
                VSTAT = VISUM(PT[IZ,K],TSTAT,10);
                PGES = VISUM(PT[IZ,K],TSTAT,12);
                TGES = EGES;
                PGES = VISUM(PGES,TGES,15);
                VGES = VISUM(PGES,TGES,10);
                if (KT7VR != 5) goto label1054;
                EGESDR = E2T[IZ,K];
                TGESDR = VISUM(PGES,EGESDR,13);
                VGESDR = VISUM(PGES,TGESDR,10);
                TGESDR = TGESDR*100.0;
                
                if (TGESDR  > 0.0) TGESDR = TGESDR/100.0-273.15;
                
            label1054:
                TGES = TGES*100.0;
                if (TGES  > 0.0) TGES = TGES/100.0-273.15;
                TSTAT = TSTAT*100.0;
                if (TSTAT  > 0.0) TSTAT = TSTAT/100.0-273.15;
                goto label1050;
                
            label1052:
                if (KT7 != 2 || I <= 3) goto label1050;
                IZ = I;
                goto label1053;

            label1050:
                if (KT7 != 1) goto label1010;
                EI0TT = E1T[I,K];
                S0TTAV = VISUM(PT[I,K],E1T[I,K],13);
                S0TTAV = VISUM(PT[I,K],S0TTAV,12);
                HCVTT = 0.0;
                KT7N = UWA011(I+2,7);
                P0TT = PT[I,K];
                T0TT = A1;
                if (KT7N == 4 && PT[I,K] == PT[I+1,K]) goto label1011;
                if (KT7N == 8 && PT[I,K] == PT[I+1,K]) goto label1011;
                goto label1010;
                
            label1011:
                S0TTAV = Math.Pow(C2GES[I+1,K],2)/8.37225E+03;
                HCVTT = S0TTAV;
                S0TTAV = EI0TT - S0TTAV;
                S0TTAV = VISUM(PT[I,K],S0TTAV,13);
                S0TTAV = VISUM(PT[I,K],S0TTAV,12);
                T0TT = EI0TT;
                P0TT = VISUM(S0TTAV,T0TT,15);
                T0TT = T0TT*100.0;
                
                if (T0TT  > 0.0) T0TT = T0TT/100.0- 273.15;
                
            label1010:
                DELTG1 = DELTGA;
                DELTG2 = DELTGA - DDELTG;
                
                if (KT7 != 3) goto label492;
                E1STAT = E1T[I,K];
                goto label1012;
                
            label1000:
                if(NRPROF == KT15)  goto label85;
                NRPROF=KT15;
                UWA006("RDISC", 60,NRPROF);
                UWA006("RDISC", 63,NRPROF);
                
            label85:
                CVOR=C2GES[I-1,K];
                KT7VR = UWA011(I-1,7);
                CVOR=CVOR*CVOR/8.37225E+03;
                A1 = CVOR;
                
                if (KT7VR == 9 && TSTFMX[I-1] != 0.0) CVOR = CVOR*TSTFMX[I-1];
                if (ETAUOP[I]  > 0.0 && KT7VR == 9)
                    ETAI[I] = ETAI[I] * XH0[I]/(XH0[I]-A1+CVOR);
                E1STAT=E1T[I,K]-CVOR;
                
            label1012:
                T1STAT=VISUM(PT[I-1,K],E1STAT,13);
                S0STAT=VISUM(PT[I-1,K],T1STAT,12);
                if (T2T[I]  > 0.0) goto label2080;
                T2STAT=VISUM(PT[I,K],S0STAT,14);
                if (T2STAT  > 0.0) goto label2080;
                E2STAT = VISUM(PT[I,K],T2STAT,11);
                H0STAT=E1STAT-E2STAT;
                
            label2080:
                HI = E1T[I,K] - E2T[I,K];
                if (ETAUOP[I] <= 0.0) HI = HI + ETAI[I];

                if (KT1 <= 1) goto label2081;
                A1 = PSI[75] * PT[I,K];
                T2STAT = VISUM(A1 ,S0STAT,14);
                E2STAT = VISUM(A1 ,T2STAT,11);
                A1 = VISUM(PT[I,K],S0STAT,14);
                A1 = VISUM(PT[I,K],A1,11);
                HNDIFF = E2STAT - A1;
                H0STAT = E1STAT - E2STAT;

            label2081:
                SNIST = HI/FQ *G[I,K];
                SNITT = SNITT + SNIST;
                if (QEXPBE) SNIEB = SNIEB + SNIST;
                if (KT7 == 3) goto label1013;

                A1 = Math.Pow(C2GES[I,K],2)/8.37225E+03;
                A22 = A1;
                A1 = E2T[I,K] - A1;
                if (KT1 == 0) goto label1020;
                if (TSTFMX[I] == 0.0) TSTFMX[I] = 1.0;
                
            label1020:
                A21 = A1;
                Z1 = PT[I,K];
                if (KT1  > 1) 
                    Z1 = PSI[75] * Z1;
                A1 = VISUM(Z1,A1,13);
                Z1 = VISUM(Z1,A1,10);
                if (KT1 == 3) 
                    CAX = G[I,K] *Z1/3.6/((STFDI[I]+LS[I])*LS[I] *3.1416E-06)/KFLUT;
                A1 = A1*100.0;
                
                if (A1  > 0.0) A1 = A1/100.0-273.15;

            label1013:
                if (KT1  > 1) goto label1015;
                if (KT5 == 0) goto label492;
            label1015:
                DP = PT[I,K];
                if (KT7 == 3) goto label1016;
                if (TAFDP[KT14] == 0.0) goto label1016;
                DP = VISUM(DP,T2T[I],10);
                DP = 0.393E-06*Math.Pow((TAFDP[KT14]*GSTOBU),2)*DP;
                if (DP < 0.0) DP = 0.0;
                if (DP  > 0.46 * PT[I,K]) 
                    DP = 0.46*PT[I,K];
                DP = PT[I,K] -DP;
            label1016:
                E2STT = VISUM(DP,S0TTAV,14);
                E2STT = VISUM(DP,E2STT,11);
                if (EBKENZ != 99.0) goto label1019;
                E2SMD = VISUM(DP,S0EBAV,14);
                E2SMD = VISUM(DP,E2SMD,11);
            
            label1019:
                if (KT1  > 1) goto label1017;
                goto label1014;
            label1017:
                if (PT[I,K] == DP) goto label1018;
                E2STTG = VISUM(PT[I,K],S0TTAV,14);
                E2STTG = VISUM(PT[I,K],E2STTG,11);
                E2STTG = EI0TT - E2STTG;
                if (EBKENZ != 99.0) goto label1014;
                E2SMDG = VISUM(PT[I,K],S0EBAV,14);
                E2SMDG = VISUM(PT[I,K],E2SMDG,11);
                E2SMDG = EI0EB - E2SMDG;
                if (STZNDT[KT10] != 0) E2SMDG = E2SMDG - A44;
                goto label1014;
                
            label1018:
                E2STTG = EI0TT - E2STT;
                if (EBKENZ == 99.0) E2SMDG = EI0EB - E2SMD;
                if (STZNDT[KT10] != 0 && EBKENZ == 99.0) E2SMDG = E2SMDG -A44;
                
            label1014:
                E2STT = EI0TT - E2STT;
                if (KT7 == 3) goto label2030;
                SAVTT = SAVTT + (E2STT-DISTTZ)*(G[I,K]+DELTG2);
                if (KT1  > 1) SAVTTG = SAVTT-(E2STT-E2STTG)*(G[I,K]+DELTG2);
                goto label2040;
            
            label2030:
                SAVTT = SAVTT + (E2STT-DISTTZ)*(G[I,K]+DELTGR);
                if (KT1  > 1) SAVTTG = SAVTT;
                
            label2040:
                DISTTZ = E2STT;
                if (EBKENZ != 99.0) goto label1601;
                E2SMD = EI0EB - E2SMD;
                if (STZNDT[KT10] != 0) E2SMD = E2SMD - A44;
                if (KT7 == 3) goto label2050;
                SAVAS = SAVAS + (E2SMD-DISMDZ)*(G[I,K]+DELTG2);
                if (KT1  > 1) SAVASG = SAVAS-(E2SMD-E2SMDG)*(G[I,K]+DELTG2);
                goto label2060;
            label2050:
                SAVAS = SAVAS + (E2SMD-DISMDZ)*(G[I,K]+DELTGR);
                if (KT1  > 1) SAVASG = SAVAS;
                
            label2060:
                DISMDZ = E2SMD;
                
            label1601:
                if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label1100;
                if (KT1  > 1) goto label1110;
                DELTG1 = DELTGA;
                DELTG2 = DELTGA - DDELTG;
                goto label1110;
                
            label1100:
                if (IZ1  > 1) goto label1105;
                goto label1125;
                
            label1105:
                if ((NTTETB[IZ1]-NTTETB[IZ1-1]) == 1) goto label1115;
                
            label1125:
                if (NTTETB[IZ1] == 1) goto label1115;
                if (QEXPBE) goto label1123;
                goto label1115;

            label1123:
                E2SEB = VISUM(DP,S0EBAV,14);
                E2SEB = VISUM(DP,E2SEB,11);
                E2SEB = EI0EB - E2SEB;
                SAVEB = SAVEB + (E2SEB-DISEBZ)*(G[I,K]+DELTG1);
                DISEBZ = E2SEB;
                
            label1115:
                if (KT1  > 1) goto label1110;
                DELTG1 = DELTGA;
                DELTG2 = DELTGA - DDELTG;
                
            label1110:
                if (KT1 < 2) goto label492;
                if (KT1 == 3 && T2T[I] < 0.0) EROSKZ = 99.0;

                HCNTT = A22 * TSTFMX[I] + HNDIFF;
                SAVTT1 = SAVTTG - HCNTT*(G[I,K]+DELTG2);
                ETATT = SNITT*FQ /SAVTTG;
                ETATT1 = SNITT*FQ /SAVTT1;
                if (ETATT < 0.0) ETATT = 0.0;
                if (ETATT1 < 0.0) ETATT1 = 0.0;
                P2TT = PT[I,K];

                DLTBES = VISUM(P2TT,S0BES,14);
                DLTBES = VISUM(P2TT,DLTBES,11);
                DLTBES = E0BES - DLTBES;
                E2OLE = E2T[I,K];
                E2MLE = E2OLE;
                IRUECK = 0;
                if (KT5 == 0) goto label1170;
                UWA044(I,1);
                A7 = 0.0;
                A6 = 0.0;
                A2 = 0.0;
                A3 = 0.0;
                A4 = 0.0;
                A5 = 0.0;
                
                for(IZ = 1; IZ <= 10; IZ++)     //DO 1175 IZ=1,10
                {
                    if (LABT[IZ] == 0) goto label1171;
                    if (LABT[IZ] < 70 || LABT[IZ]  > 92) goto label1171;
                    A6 = A6 + GABT[IZ];
                    A7 = A7 + GABT[IZ]*EABT[IZ];
                    
                label1171:
                    if (LZUT[IZ] == 0) continue;
                    if (LZUT[IZ] <= 100) goto label1173;
                    
                    for(IZ11 = 1; IZ11 <= 4; IZ11++ )   //DO 1172 IZ11=1,4
                    {
                        if (NITRE[IZ11] != 8 && NITRE[IZ11] != 9) 
                            continue;
                        if (LZUT[IZ] == NRMVAE[IZ11] + 100) goto label1174;
                    }   //1172 CONTINUE
                    
                label1173:
                    if (LZUT[IZ] < 70 || LZUT[IZ] > 100) continue;
                    if (LZUT[IZ] >= 93 && LZUT[IZ] <= 98) goto label1174;
                    A2 = A2 + GZUT[IZ]*EZUT[IZ];
                    A3 = A3 + GZUT[IZ];
                    continue;
                    
                label1174:
                    A4 = A4 + GZUT[IZ]*EZUT[IZ];
                    A5 = A5 + GZUT[IZ];
                    if (LZUT[IZ]  > 100) IRUECK = 1;
                }   //1175 CONTINUE
                A8 = G[I,K] + A3 - A6;
                if (A8  > G[I,K])   A8 = G[I,K];
                E2OLE = (A8*E2T[I,K] + A4)/(A8 + A5);
                E2MLE = (G[I,K]*E2T[I,K] + A2 + A4 - A7)/(G[I,K] + A3 + A5 - A6);
                
            label1170:
                ETABOL = (EI0TT-E2OLE)/E2STTG;
                ETABML = (EI0TT-E2MLE)/E2STTG;
                ETASOL = (E0BES-E2OLE)/DLTBES;
                ETASML = (E0BES-E2MLE)/DLTBES;
                T2OLE = VISUM(P2TT,E2OLE,13);
                T2OLE = T2OLE*100.0;
                
                if (T2OLE  > 0.0) T2OLE = T2OLE/100.0 - 273.15;
                T2MLE = VISUM(P2TT,E2MLE,13);
                T2MLE = T2MLE*100.0;
                if (T2MLE  > 0.0) T2MLE = T2MLE/100.0 - 273.15;
                if (EBKENZ == 99.0) goto label2100;
                if (EBKENZ == 98.0 && NTTETB[KT10] == KT6) goto label2100;

                A41 = P0TT;
                A42 = T0TT;
                A43 = P2TT;
                A44 = E2STTG;
                A45 = SNITT*FQ /(SAVTTG + DDELTG*A44);
                A46 = SNITT*FQ /(SAVTTG + DDELTG*A44 - HCNTT*(G[I,K]+DELTG2 + DDELTG));
                if (A45 < 0.0) A45 = 0.0;
                if (A46 < 0.0) A46 = 0.0;
                A47 = HCNTT;
                A48 = SNITT;
                if (KT10 != 1 || NTTETB[KT10] != 1) goto label2100;
                EI0EB = EI0TT;
                S0EBAV = S0TTAV;
                P0EB = A41;
                T0EB = A42;
                SNIEB = A48;
                SAVEB = SAVTT + DDELTG*DISTTZ;
                DISEBZ = DISTTZ;
                SNIMD = A48;
                SAVMD = SAVTTG;
                SAVMD1 = SAVTT1;
                HCNEB = A47;
                P2EB = A43;
                DISEB = DISEBZ;
                SNIEB1 = SNIEB;
                SAVEBI = SAVEB;
                SAVEBE = SAVEB - HCNEB*(G[I,K]+DELTG1);
                
            label2100:
                if (NTTETB[KT10] == 1) goto label1130;
                if ((NTTETB[KT10]-1) == KT6) goto label1120;
                goto label1130;
                
            label1120:
                EI0EB = EI0TT;
                S0EBAV = S0TTAV;
                P0EB = P0TT;
                T0EB = T0TT;
                SNIEB = SNITT;
                SAVEB = SAVTT + DDELTG*DISTTZ;
                DISEBZ = DISTTZ;
                SNIMD = SNITT;
                SAVMD = SAVTTG;
                SAVMD1 = SAVTT1;
                
            label1130:
                if (KT1 == 3) goto label1140;
                DDELTG = DELTGA;
                goto label1150;
                
            label1140:
                if (IZ1  > 1) goto label1142;
                goto label1144;
                
            label1142:
                if ((NTTETB[IZ1]-NTTETB[IZ1-1]) == 1) goto label1150;
            
            label1144:
                if (NTTETB[IZ1] == 1) goto label1150;
                HCNEB = HCNTT;
                SAVEB1 = SAVEB - HCNEB*(G[I,K]+DELTG1);
                ETAEB = SNIEB*FQ /SAVEB;
                ETAEB1 = SNIEB*FQ /SAVEB1;
                if (ETAEB < 0.0) ETAEB = 0.0;
                if (ETAEB1 < 0.0) ETAEB1 = 0.0;
                P2EB = PT[I,K];
                DISEB = DISEBZ;
                SNIEB1 = SNIEB;
                SAVEBI = SAVEB;
                SAVEBE = SAVEB1;
                goto label492;
                
            label1150:
                if (KT10  > 1 && NITRE[KT10] == 8) goto label1160;
                if (KT10  > 1 && NITRE[KT10] == 9) goto label1160;
                goto label492;
                
            label1160:
                if (EBKENZ != 99.0) goto label492;
                if (STZNDT[KT10] != 0) goto label2110;
                SNIMD = SNIMD + SNITT;
                SAVMD = SAVMD + SAVASG;
                SAVMD1 = SAVMD1 + SAVASG - HCNTT*(G[I,K]+DELTG2);
                SNIEB = SNIEB1+SNITT;
                SAVEB = SAVEBI + SAVAS + (DISEBZ - E2SMDG)*DELTGA;
                SAVEB1 = SAVEBE + SAVAS + (DISEBZ - E2SMDG - HCNEB)*DELTGA;
                goto label2120;
                
            label2110:
                SNIEB = SNIEB1 + SNITT;
                SNIEB1 = SNIEB;
                SAVEB = SAVEBI + SAVAS;
                SAVEBI = SAVEB;
                SAVEB1 = SAVEBE + SAVAS - HCNTT*(G[I,K]+DELTG2);
                SAVEBE = SAVEB1;
                
            label2120:
                DISEBZ = DISEB;
                ETAMD = SNIMD*FQ /SAVMD;
                ETAMD1 = SNIMD*FQ /SAVMD1;
                ETAEB = SNIEB*FQ /SAVEB;
                ETAEB1 = SNIEB*FQ /SAVEB1;
                if (ETAMD < 0.0) ETAMD = 0.0;
                if (ETAMD1 < 0.0) ETAMD1 = 0.0;
                if (ETAEB < 0.0) ETAEB = 0.0;
                if (ETAEB1 < 0.0) ETAEB1 = 0.0;
                EBKENZ = 99.0;
                
            label492:
                if(KT9 == K9VOR)goto label501;
                if(K9VOR == 0)goto label503;
                
            label533:
                if( JJ == IX5)goto label100;
                IEND=I-1;
                goto label101;
                
            label100:
                IEND=IZ9-1;
            label101:
                sw16.WriteLine(" ");
                sw16.WriteLine(" TROMMELTEILDATEN   ");
                sw16.WriteLine(" NR    P0    T0(-X)  DLTHSG    E-ZU    E-AB   ETA-I     ZT-X     PI     PSIMG   Z    SAX      BM      LAX   Z-LE   Z-LA     SCHUB");
                //GOTO(232,242,252),
                if(IWR == 1)        goto label232;
                if(IWR == 2)        goto label242;
                if(IWR == 3)        goto label252;
            
            label232:
                sw16.WriteLine("  -   BAR    CEL(%)   KJ/KG   KJ/KG   KJ/KG     %        %       MW       -     -     MM      MM       MM   (B*)   (B*)      N");
                goto label262;
            
            label242:
                sw16.WriteLine("  -   PSIA     F     BTU/LB  BTU/LB   BTU/LB    %        %       MW       -     -   INCH    INCH     INCH   (B*)   (B*)      LB");
                goto label262;
                
            label252:
                sw16.WriteLine("  -    AT    CEL(%) KCAL/KG  KCAL/KG KCAL/KG    %        %       MW       -     -     MM      MM       MM   (B*)   (B*)      KP");
                
            label262:
                for(IZ = 1; IZ <= ITRONR; IZ++)     //DO 1220 IZ=1 ,ITRONR
                {
                    //if (AB1[IZ]*FD < 9.9999) F100( 9:12) = 'F8.4';
                    //if (AB1[IZ]*FD >= 9.9999) F100( 9:12) = 'F8.2';
                    //if (AB9[IZ] < 99.9) F100(41:44) = 'F8.3';
                    //if (AB9[IZ] >= 99.9) F100(41:44) = 'F8.1';
                    F1 = AB1[IZ] * FD;
                    F2 = AB3[IZ] * FH;
                    F3 = AB4[IZ] * FH;
                    F4 = AB5[IZ] * FH;
                    F5 = AB13[IZ] * FK;
                    if(AB2[IZ] < 0) goto label362;
                    X1=AB2[IZ]*FT1+FT2;
                    goto label363;
                    
                label362:
                    X1=AB2[IZ];
                    
                label363:
                    X2=AB10[IZ]*FL;
                    X3=AB11[IZ]*FL;
                    X4=AB12[IZ]*FL;

                    A3 = AB14[IZ];
                    if (AB14[IZ] <= -300.0) AB14[IZ] = AB14[IZ] + 300.0;
                    if (AB14[IZ] <= -200.0) AB14[IZ] = AB14[IZ] + 200.0;
                    if (AB14[IZ] <= -100.0) AB14[IZ] = AB14[IZ] + 100.0;
                    A2 = AB15[IZ];
                    if (AB15[IZ] <= -300.0) AB15[IZ] = AB15[IZ] + 300.0;
                    if (AB15[IZ] <= -200.0) AB15[IZ] = AB15[IZ] + 200.0;
                    if (AB15[IZ] <= -100.0) AB15[IZ] = AB15[IZ] + 100.0;
                    STEXT = " ";
                    //DATA F100 = 74H(    I2,F8.2,F8.1,3F8.2,2P2F8.2,0PF9.3, F8.1,I4,F7.1,F8.1,F9.1,2F7.2,F9.0)
                    //WRITE(STEXT,F100) IZ,F1,X1,F2,F3,F4,AB6[IZ],AB7[IZ],AB8[IZ],AB9[IZ],IAB[IZ],X2,X3,X4,AB14[IZ],AB15[IZ],F5;
                    STEXT = IZ.ToString().PadLeft(2) + Math.Round(F1,2).ToString().PadLeft(8) + Math.Round(X1,1).ToString().PadLeft(8) + Math.Round(F2,2).ToString().PadLeft(8) + 
                        Math.Round(F3,2).ToString().PadLeft(8) + Math.Round(F4,2).ToString().PadLeft(8) + Math.Round(AB6[IZ],2).ToString().PadLeft(8) + Math.Round(AB7[IZ],2).ToString().PadLeft(8) +
                        Math.Round(AB8[IZ],3).ToString().PadLeft(9) + Math.Round(AB9[IZ],1).ToString().PadLeft(8) + IAB[IZ].ToString().PadLeft(4) + Math.Round(X2,1).ToString().PadLeft(7) + 
                        Math.Round(X3,1).ToString().PadLeft(8) + Math.Round(X4,1).ToString().PadLeft(9) + Math.Round(AB14[IZ],2).ToString().PadLeft(7) + Math.Round(AB15[IZ],2).ToString().PadLeft(7) + Math.Round(F5,0).ToString().PadLeft(9);

                    if ((AB14[IZ]-300.0) == A3) //STEXT (105:106) = 'D*';
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(104, 2);
                        s.Insert(104,"D*");
                        STEXT = s.ToString();
                    }
                    if ((AB14[IZ]-200.0) == A3) //STEXT (105:106) = 'S*';
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(104, 2);
                        s.Insert(104,"S*");
                        STEXT = s.ToString();
                    }
                    if ((AB14[IZ]-100.0) == A3) //STEXT (105:106) = 'L*';
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(104, 2);
                        s.Insert(104,"L*");
                        STEXT = s.ToString();
                    }
                    if ((AB15[IZ]-300.0) == A2) //STEXT (112:113) = 'D*';
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(111, 2);
                        s.Insert(111,"D*");
                        STEXT = s.ToString();
                    }
                    if ((AB15[IZ]-200.0) == A2) //STEXT (112:113) = 'S*';
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(111, 2);
                        s.Insert(111,"S*");
                        STEXT = s.ToString();
                    }
                    if ((AB15[IZ]-100.0) == A2) //STEXT (112:113) = 'L*';
                    {
                        //STEXT(I1:I2) = S;
                        s = new StringBuilder(STEXT);
                        s.Remove(111, 2);
                        s.Insert(111,"L*");
                        STEXT = s.ToString();
                    }
                    sw16.WriteLine("{0}", STEXT);
                    IX8 = UWA011(I-1,9);
                    PSIGMT[IX8,IZ] = AB9[IZ];
                }   //1220 CONTINUE

                IX8 = UWA011(I-1,9);
                NZTROM[IX8] = ITRONR;
                if (STZHD2[1] != 1 || XYZXYZ != 99.0) goto label1225;
                if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label1225;
                sw16.WriteLine(" ");
                sw16.WriteLine(" ETA-RECHNUNG MIT KOMMASTUFEN ");
                
            label1225:
                sw16.WriteLine("0                DLTHS*   ETA-I   ETAEX    E-ZU    E-AB    SUMPI    SCHUB  AUSGEF. LAENGE  VORGEG. LAENGE         MMAX/M11   MMIN/M11");

                //GOTO(233,243,253),
                if(IWR == 1)    goto label233;
                if(IWR == 2)    goto label243;
                if(IWR == 3)    goto label253;

            label233:
                sw16.WriteLine("                  KJ/KG     %       %     KJ/KG   KJ/KG      MW         N             MM              MM ");
                goto label263;
            
            label243:
                sw16.WriteLine("                 BTU/LB     %       %    BTU/LB   BTU/L B    MW        LB            INCH            INCH");
                goto label263;
                
            label253:
                sw16.WriteLine("                 KCAL/KG    %       %    KCAL/KG KCAL/K G    MW         KP            MM              MM ");

            label263:
                if (KT9 != K9VOR) 
                    UWA006("RDISC", 56,K9VOR);
                F1 = DISGRZ * FH;
                F2 = HCVOR * FH;
                F3 = HCNACH * FH;
                F4 = SCHUBG * FK;
                X1=TAZLE[6]*FL;
                X2=TAZLA[6]*FL;
                sw16.WriteLine(" WELLENBEREICH {0}{1}{2}{3}{4}{5}{6}{7}{8}              -         -  ", Math.Round(F1,2).ToString().PadLeft(8),
                    Math.Round(ETAGR,2).ToString().PadLeft(8),Math.Round(ETAGR1,2).ToString().PadLeft(8),Math.Round(F2,2).ToString().PadLeft(8), Math.Round(F3,2).ToString().PadLeft(8),
                    Math.Round(SNIGR,3).ToString().PadLeft(9),Math.Round(F4,0).ToString().PadLeft(9),Math.Round(X1,2).ToString().PadLeft(16),Math.Round(X2,2).ToString().PadLeft(16));
                ETAWB[KT9] = ETAGR;
                if (KT9 != K9VOR)   UWA006("RDISC", 56,KT9);
                if(QTROM)goto label535;
                sw16.WriteLine(" ");
                SNIGR=0.0;
                SAVGR = 0.0;
                DISGRZ = 0.0;
                SCHUBG = 0.0;
                ITRONR = 0;
                ISTFNR = 0;
                
            label523:
                if (KT7 != 4 && KT7 != 8) goto label504;
                
            label536:
                IANF=I;
                KT14E=IANF+NSTFZ[KT9]-1;
                IZ11 = 1;
                
                for(IZ = IANF; IZ <= KT14E; IZ++)   //DO 1530 IZ=IANF, KT14E
                {
                    KT1E = UWA011(IZ,1);
                    KT14A = UWA011(IZ,14);
                    KT14N = UWA011(IZ+1,14);
                    if (KT1E  > 0) goto label1531;
                    if (KT14A == KT14N) continue;
                    IZ11 = IZ11+1;
                }   //1530 CONTINUE
                
            label1531:
                KT14E = IZ11;
                HCVOR=C2GES[IANF-1,K];
                HCVOR=HCVOR*HCVOR/8.37225E+03;
                KT7VR = UWA011(IANF-1,7);
                
                if (KT7VR == 9 && TSTFMX[IANF-1] != 0.0)
                    HCVOR = HCVOR * TSTFMX[IANF-1];
                EI0GR = E1T[IANF,K];
                S0GR = VISUM(PT[IANF-1,K],EI0GR-HCVOR,13);
                S0GR = VISUM(PT[IANF-1,K],S0GR,12);
                if (P0BES  !=  0.0) goto label833;
                E0BES = EI0TT;
                P0BES = PGES;
                if (KT7VR != 2 && KT7VR != 3 && KT7VR != 5) goto label833;
                if (KT7VR == 3) P0BES = PT[IANF-2,K];
                T0BES = VISUM(P0BES,E0BES,13);
                S0BES = VISUM(P0BES,T0BES,12);
                T0BES = T0BES * 100.0;
                if (T0BES  > 0.0) T0BES = T0BES/100.0 - 273.15;
                
            label833:
                if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label831;
                IZ = NSTFZ[KT9];
                IN1 = IANF + IZ;
                IZ11 = UWA011(IN1-1,7);
                if (IZ11 == 8) STFDIZ = STFDI[IN1];
                goto label832;
            
            label831:
                IZ = NSTFZ[KT9] - 1;
                STFDI1 = STFDI[IANF];
                IN1 = IANF + IZ;
                IN1 = UWA011(IN1,7);
                if (IN1 == 4) IZ = IZ + 1;
                IN1 = IANF + IZ;
                STFDIZ = STFDI[IN1];
                DELTLE = 0.0;
                DELTLA = 0.0;
                
            label832:
                F1 = UPM[K]/FF;
                X1=STFDI1*FL;
                X2=STFDIZ*FL;
                X3=DELTLE*FL;
                X4=DELTLA*FL;
                //goto label(434,435,436),
                if(IWR == 1)        goto label434;
                if(IWR == 2)        goto label435;
                if(IWR == 3)        goto label436;
                
            label434:
                //sw16.WriteLine("",650)KT9,IZ,KFLUT,KT14E,F1,X1,X2,X3,X4;
                sw16.WriteLine("0{0}.WELLENBEREICH   {1} STUFEN   {2}-FLUTIG   {3} TROM-TEILE   {4} S-1    DI-A {5}MM   DI-O {6}MM   S-LE {7}MM   S-LA {8}MM",
                    KT9.ToString().PadLeft(2),IZ.ToString().PadLeft(3),KFLUT.ToString().PadLeft(1),KT14E.ToString().PadLeft(1),Math.Round(F1,2).ToString().PadLeft(6),
                    Math.Round(X1,0).ToString().PadLeft(6),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(X3,2).ToString().PadLeft(5),Math.Round(X4,2).ToString().PadLeft(5));
                goto label867;
                
            label435:
                //sw16.WriteLine("",414)KT9,IZ,KFLUT,KT14E,F1,X1,X2,X3,X4;
                sw16.WriteLine("0{0}.WELLENBEREICH   {1} STUFEN   {2}-FLUTIG   {3} TROM-TEILE   {4} RPM   DI-A {5} INCH DI-0 {6}INCH S-LE {7}INCH S-LA {8}INCH",
                    KT9.ToString().PadLeft(2),IZ.ToString().PadLeft(3),KFLUT.ToString().PadLeft(1),KT14E.ToString().PadLeft(1),Math.Round(F1,0).ToString().PadLeft(6),
                    Math.Round(X1,2).ToString().PadLeft(6),Math.Round(X2,2).ToString().PadLeft(6),Math.Round(X3,2).ToString().PadLeft(5),Math.Round(X4,3).ToString().PadLeft(4));
                goto label867;
                
            label436:
                //sw16.WriteLine("",413)KT9,IZ,KFLUT,KT14E,F1,X1,X2,X3,X4;
                sw16.WriteLine("0{0}.WELLENBEREICH   {1} STUFEN   {2}-FLUTIG   {3} TROM-TEILE   {4} MIN-1  DI-A {5}MM   DI-0 {6}MM    S-LE {7}MM   S-LA {8}MM",
                    KT9.ToString().PadLeft(2),IZ.ToString().PadLeft(3),KFLUT.ToString().PadLeft(1),KT14E.ToString().PadLeft(1),
                    Math.Round(F1,0).ToString().PadLeft(6),Math.Round(X1,0).ToString().PadLeft(6),Math.Round(X2,0).ToString().PadLeft(6),
                    Math.Round(X3,2).ToString().PadLeft(5),Math.Round(X4,2).ToString().PadLeft(5));
                
            label867:
                //sw16.WriteLine("",655);
                sw16.WriteLine("0  VOR      HINTER  STUFE ");
                sw16.WriteLine("   H0G     P2   T2(-X)    H2      V2      H2G  DLTHW  DLTHSG    M      DI-2    H-2    BM   EPS  PNR ETA-I ZT-SP   PHI   PSIG  E-AB SNR");
                //GOTO(234,244,254),
                if(IWR == 1)        goto label234;
                if(IWR == 2)        goto label244;
                if(IWR == 3)        goto label254;
                
            label234:
                sw16.WriteLine("  KJ/KG   BAR   CEL(%)   KJ/KG  M3/KG   KJ/KG  KJ/KG  KJ/KG   KG/S       MM     MM   MM    -    -    %     %      -      -   KJ/KG  -/");
                goto label501;
                
            label244:
                sw16.WriteLine(" BTU/LB   PSIA    F     BTU/LB  FT3/LB BTU/LB BTU/LB BT U/LB   LBS/H    INCH   INCH  INCH   -    -    %     %      -      -   BTU/LB - ");
                sw16.WriteLine("                                                              *1000 ");
                goto label501;
                
            label254:
                sw16.WriteLine(" KCAL/KG   AT   CEL(%) KCAL/KG  M3/KG  KCAL/KG KCAL/KG KCAL/KG T/H      MM      MM   MM    -    -    %     %      -       -  KCAL/KG -");
                
            label501:
                //if (PT[I,K]*FD < 9.9999) F30(17:20) = 'F6.4';
                //if (PT[I,K]*FD >= 9.9999) F30(17:20) = 'F6.2';
                //if(PT[I,K]*FD >= 999.99) F30(17:20) = 'F6.1';
                //if(Z1*FVO < 9.9999) F30(37:40) = 'F6.4';
                //if(Z1*FVO >= 9.9999) F30(37:40) = 'F6.2';
                if (KT7 == 6) goto label490;
                A50=PHI[I];
                if(K  > 1) A50 = YH0[I];
                A24 = ETAI[I];
                if (ETAUOP[I] <= 0.0) A24 = 0.0;
                if (A24 < 0.0) A24 = 0.0;
                ZETAS = 0.0;
                if (ETAUOP[I]  > 0.0) ZETAS = 1.0 - ETAIOP[I]/ETAUOP[I];
                if (KT1 <= 1) goto label1597;
                PT[I,K] = PSI[75] * PT[I,K];
                
            label1597:
                if (KT7 == 4 || KT7 == 8) ISTFNR = ISTFNR + 1;
                if (NTTETB[KT10] != KT6) goto label860;
                if (KT1 == 3) goto label880;
                if (STZNDT[KT10] == 0) goto label860;
                if (KT7 == 8) goto label860;
                IZ11 = UWA011(ITTEND[KT6]-2,7);
                IZ = 6;
                if (IZ11 == 4) IZ = 5;
                if (I >= ITTEND[KT6]-IZ && KT15 >= 9) goto label880;
                goto label860;
                
            label880:
                EROSK = VISUM(PT[I-1,K], Math.Pow(E1T[I,K]-C2GES[I-1,K], 2/8.37225E+03), 13);
                A26 = PT[I-1,K];
                if (KT7 != 9) goto label890;
                EROSK = VISUM(PT[I-2,K],Math.Pow(E1T[I-1,K]-C2GES[I-2,K],2/8.37225E+03),13);
                A26 = PT[I-2,K];
                
            label890:
                if (EROSK < 0.0) goto label900;
                EROSK = 0.0;
                goto label865;
                
            label900:
                EROSK = Math.Pow((1.0+EROSK),2)*Math.Pow((UPM[K]/3000.0* (STFDI[I]+2.0*LS[I]) /1000.0),3)/A26;
                
            label865:
                IZ11 = ITTEND[KT6] - I - 1;
                if (IZ == 5) IZ11 = IZ11 + 1;
                if (IZ11  > 5) IZ11 = 5;
                if (KT1 == 3) IZ11 = 1;
                IZ11 = 6 - IZ11;
                EROS[IZ11] = EROSK;
                
            label860:
                if (KT7 == 8) goto label840;
                A25 = Math.Sqrt(PT[I-1,K]*PT[I,K]);
                if (KT7 == 9) A25 = PT[I-1,K];
                if (KT7VR != 4 && KT7VR != 8 && KT7VR != 9) 
                    STFDI[I-1]=STFDI[I];
                A25 = 0.78505E-02*((Math.Pow((STFDI[I]+2.0*LS[I]),2) - Math.Pow(STFDI[I-1],2))*A25-(Math.Pow((STFDI[I]+2.0*LS[I]),2) - Math.Pow(STFDI[I],2))*PT[I,K])*AK36;
                if (KT7 == 9) A25 = A25 + G[I,K]*(STFDI[I]+LS[I])*UPM[K]* 5.2359E-05*(A49-A50)/3.6/9.81/KFLUT;
                SCHUBK = SCHUBK + A25;
                SCHUBG = SCHUBG + A25;
                goto label850;
                
            label840:
                A49 = A50;
                A25 = 0.0;
                
            label850:
                if (KT7 == 8) goto label800;
                if (KT7 == 9) goto label820;
                goto label830;
                
            label820:
                A13 = VISUM(PT[I,K],A13,14);
                A13 = VISUM(PT[I,K],A13,11);
                A18 = A11 - A13 - A22;
                A19 = A15 + HI;
                if (A19 <= 0.0) goto label1590;
                A19 = A19 /(A11 - A13 -A22*TSTFMX[I]);
                goto label1591;
                
            label1590:
                A19 = 0.0;
                A16 = 0.0;
                goto label822;
                
            label1591:
                if (ETAIOP[I]  > 0.0) A16 = A16 + HI/ETAIOP[I]*ETAUOP[I];
                if (ETAIOP[I] <= 0.0) A16 = A16 + HI;
                if (A16  > 0.0) goto label821;
                A16 = 0.0;
                goto label822;
                
            label821:
                A16 = 1.0 - (A15+HI )/A16;
                
            label822:
                A20 = A18 * 8.37225E+03/Math.Pow(((STFDI[I]+LS[I])*UPM[K]*5.2359E-05),2);
                //if (A20 < 99.9) F30(109:112) = 'F7.3';
                //if (A20 >= 99.9) F30(109:112) = 'F7.1';
                A28 = (BRTLE[I]+BRTLA[I])*0.5;
                F1 = A11 * FH;
                F2 = PT[I,K] * FD;
                F3 = A21 * FH;
                F4 = E2T[I,K] * FH;
                F5 = DI[I] * FH;
                F6 = A18 * FH;
                F7 = G[I,K]/FM;
                F8 = A22 * FH;
                if(A1 < 0) goto label364;
                X1 = A1*FT1+FT2;
                goto label365;
                
            label364:
                X1=A1;
                
            label365:
                X2=Z1*FVO;
                X3=STFDI[I]*FL;
                X4=LS[I]*FL;
                X5=A28*FL;
                //DATA F30 = (1H ,F7.2,1X,F6.2,F7.1,F8.2,2X,F6.2,F8.2,F6.2,    F7.2,F9.3,F7.1,F7.1,F6.1,F6.3,I3,2PF7.2,F6.2,0PF7.3,F7.3,F6.2,I3)
                sw16.WriteLine(" {0} {1}{2}{3}  {4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}", Math.Round(F1,2).ToString().PadLeft(7),Math.Round(F2,2).ToString().PadLeft(6),
                    Math.Round(X1,1).ToString().PadLeft(7),Math.Round(F3,2).ToString().PadLeft(8),Math.Round(X2,2).ToString().PadLeft(6),Math.Round(F4,2).ToString().PadLeft(8),
                    Math.Round(F5,2).ToString().PadLeft(2),Math.Round(F6,2).ToString().PadLeft(7),Math.Round(F7,3).ToString().PadLeft(9),Math.Round(X3,1).ToString().PadLeft(7),
                    Math.Round(X4,1).ToString().PadLeft(7),Math.Round(X5,1).ToString().PadLeft(6),OEFFNG[I].ToString().PadLeft(3),
                    KT15.ToString().PadLeft(7),Math.Round(A19,2).ToString().PadLeft(7),Math.Round(A16,2).ToString().PadLeft(6),
                    Math.Round(A50,3).ToString().PadLeft(7),Math.Round(A20,3).ToString().PadLeft(7),Math.Round(F8,2).ToString().PadLeft(6) ,ISTFNR.ToString().PadLeft(3));
                
                if (A19 == 0.0) 
                    sw16.WriteLine("+                                                                                                 XXXXXXXXXXXXX");
                if (A19 == 0.0) IVENT = 1;
                goto label810;
                
            label800:
                A11 = E1T[I,K];
                A13 = S0STAT;
                A15 = HI;
                A16 = 0.0;
                if (ETAIOP[I]  > 0.0) A16 = HI/ETAIOP[I]*ETAUOP[I];
                goto label810;
                
            label830:
                A28 = (BRTLE[I]+BRTLA[I])*0.5;
                //if (PSI[I] < 99.9) F30(109:112) = 'F7.3';
                //if (PSI[I] >= 99.9) F30(109:112) = 'F7.1';
                F1 = E1T[I,K] * FH;
                F2 = PT[I,K] * FD;
                F3 = A21 * FH;
                F4 = E2T[I,K] * FH;
                F5 = DI[I] * FH;
                F6 = XH0[I] * FH;
                F7 = G[I,K]/FM;
                F8 = A22 * FH;
                if(A1 < 0) goto label374;
                X1=A1*FT1+FT2;
                goto label375;
                
            label374:
                X1=A1;
                
            label375:
                X2=Z1*FVO;
                X3=STFDI[I]*FL;
                X4=LS[I]*FL;
                X5=A28*FL;
                //sw16.WriteLine("",F30) F1,F2,X1,F3,X2,F4,F5,F6,F7,X3,X4,X5,OEFFNG[I],KT15,A24,ZETAS,A50,PSI[I],F8 ,ISTFNR;
                sw16.WriteLine(" {0} {1}{2}{3}  {4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}", Math.Round(F1,2).ToString().PadLeft(7),Math.Round(F2,2).ToString().PadLeft(6),
                    Math.Round(X1,1).ToString().PadLeft(7),Math.Round(F3,2).ToString().PadLeft(8),Math.Round(X2,2).ToString().PadLeft(6),Math.Round(F4,2).ToString().PadLeft(8),
                    Math.Round(F5,2).ToString().PadLeft(2),Math.Round(F6,2).ToString().PadLeft(7),Math.Round(F7,3).ToString().PadLeft(9),Math.Round(X3,1).ToString().PadLeft(7),
                    Math.Round(X4,1).ToString().PadLeft(7),Math.Round(X5,1).ToString().PadLeft(6),OEFFNG[I].ToString().PadLeft(3),
                    KT15.ToString().PadLeft(7),Math.Round(A24,2).ToString().PadLeft(7),Math.Round(ZETAS,2).ToString().PadLeft(6),
                    Math.Round(A50,3).ToString().PadLeft(7),Math.Round(PSI[I],3).ToString().PadLeft(7),Math.Round(F8,2).ToString().PadLeft(6) ,ISTFNR.ToString().PadLeft(3));
                if (A24 == 0.0) 
                    sw16.WriteLine("+                                                                                                 XXXXXXXXXXXXX");
                if (A24 == 0.0) IVENT = 1;
                
            label810:
                SNIGR = SNIGR + SNIST;
                if (KT1 < 2 || IVENT == 0) goto label811;
                if (KT15 <= 9) sw16.WriteLine(" EINE ODER MEHRERE STUFEN VENTILIEREN");
                if (KT15  > 9) sw16.WriteLine("EINE ODER MEHRERE STUFEN VENTILIEREN (RUECKSTROEMUNGSE FFEKTE BERUECKSICHTIGT");
                
            label811:
                if (E2T[I,K] == 1000.0) sw16.WriteLine(" LEISTUNG FALSCH, I,S-TAFEL-BEREICH UEBERSCHRITTEN");
                if (KT1  > 0) goto label2090;
                if (KT5 == 0) goto label980;
                
            label2090:
                E2SGR = VISUM(PT[I,K],S0GR,14);
                E2SGR = VISUM(PT[I,K],E2SGR,11);
                E2SGR = EI0GR-E2SGR;
                SAVGR = SAVGR+(E2SGR-DISGRZ)*G[I,K];
                DISGRZ = E2SGR;
                if (KT1  > 0) goto label1300;
                goto label980;
                
            label1300:
                HCNACH = A22 *TSTFMX[I];
                SAVGR1 = SAVGR-HCNACH*G[I,K];
                if (SNIGR <= 0.0) goto label1596;
                ETAGR = SNIGR*FQ /SAVGR;
                ETAGR1 = SNIGR*FQ /SAVGR1;
                goto label980;
                
            label1596:
                ETAGR = 0.0;
                ETAGR1 = 0.0;
                
            label980:
                if (ISTFNR == 1 && KT7 != 9) goto label910;
                if (ITRONR == ITR) goto label920;
                
            label910:
                ITROST = 0;
                ITRONR = ITRONR + 1;
                S0TROT = S0STAT;
                AB1[ITRONR] = PT[I-1,K];
                AB2[ITRONR] = 100.0*T1STAT;
                if (AB2[ITRONR]  > 0.0) 
                    AB2[ITRONR] = AB2[ITRONR]/100.0-273.15;
                E0TROG = E1T[I,K];
                AB4[ITRONR] = CVOR;
                SUMLAX = 0.0;
                SUMUQA = 0.0;
                SUMZTX = 0.0;
                AB6[ITRONR] = 0.0;
                AB7[ITRONR] = 0.0;
                A31 = SNIGR - SNIST;
                AB13[ITRONR] = SCHUBG - A25;
                
            label920:
                ITROST = ITROST + 1;
                if (KT7 == 8) ITROST = ITROST - 1;
                A30 = BRTLA[I]+BRTLE[I];
                if (KT7 != 4) A30 = 0.5*A30;
                SUMLAX = SUMLAX + A30;
                if (KT7 == 8) goto label930;
                SUMUQA = SUMUQA+Math.Pow(((STFDI[I]+LS[I])*UPM[K]*5.2359E-05),2);
                
            label930:
                if ( HI  <= 0.0) goto label932;
                if (T2T[I]  > 0.0) goto label932;
                if (T2STAT  > 0.0) goto label932;
                EM = E1STAT - TC64*H0STAT;
                TM = VISUM(S0STAT,EM,05);
                if (EM  > 0.0) goto label932;
                ZETA = TC63 * (1.0+EM);
                SUMZTX = SUMZTX + SNIST/(1.0-ZETA);
                goto label931;
                
            label932:
                SUMZTX = SUMZTX + SNIST;
                
            label931:
                if (KT1  > 0) goto label941;
                KT14NA = UWA011(I+1,14);
                
                if (KT14NA == KT14 && KT5 == 0) goto label940;
                
            label941:
                AB5[ITRONR] = A22;
                if (KT1  > 0) AB5[ITRONR] = A22 * TSTFMX[I];
                DLTHTR = VISUM(PT[I,K],S0TROT,14);
                DLTHTR = VISUM(PT[I,K],DLTHTR,11);
                DLTHTR = E0TROG - DLTHTR - AB5[ITRONR] - AB7[ITRONR];
                if (KT1  > 0) goto label944;
                if (KT14NA == KT14 && KT5 != 0) goto label943;
                goto label944;
                
            label943:
                AB6[ITRONR] = DLTHTR * G[I,K] + AB6[ITRONR];
                AB7[ITRONR] = DLTHTR + AB7[ITRONR];
                goto label940;
                
            label944:
                AB3[ITRONR] = DLTHTR + AB7[ITRONR];
                AB8[ITRONR] = SNIGR - A31;
                if (AB8[ITRONR] <= 0.0) goto label1592;
                AB6[ITRONR] = AB6[ITRONR] + DLTHTR*G[I,K];
                if (AB6[ITRONR] == 0.0) goto label945;
                AB6[ITRONR] = AB8[ITRONR]*FQ /AB6[ITRONR];
                goto label946;
                
            label945:
                AB6[ITRONR] = (E0TROG - E2T[I,K])/DLTHTR;
                
            label946:
                AB7[ITRONR]= 1.0 - AB8[ITRONR]/SUMZTX;
                if (AB7[ITRONR] < 0.00005) AB7[ITRONR] = 0.0;
                goto label1593;
                
            label1592:
                AB6[ITRONR] = 0.0;
                AB7[ITRONR] = 0.0;
                
            label1593:
                AB9[ITRONR] = AB3[ITRONR]*8.37225E+03/SUMUQA;
                IAB[ITRONR] = ITROST;
                AB10[ITRONR] = TASAX[KT14];
                AB11[ITRONR] = SUMLAX*0.5/(ITROST);
                AB12[ITRONR] = SUMLAX+(2.0*(ITROST)-1.0)*TASAX[KT14];
                AB13[ITRONR] = SCHUBG - AB13[ITRONR];
                AB14[ITRONR] = TAZLE[KT14];
                AB15[ITRONR] = TAZLA[KT14];
                if (KT1  > 0) goto label841;
                goto label842;
                
            label841:
                if (KFLUT == 2 || KFLUT == 4 || KFLUT == 6 || KFLUT == 8 || KFLUT == 10 || KFLUT == 12)
                    SCHUBK = SCHUBK - SCHUBG;
                
            label842:
                if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label950;
                goto label960;
                
            label950:
                AB10[ITRONR] = 0.0;
                AB11[ITRONR] = 0.0;
                AB12[ITRONR] = 0.0;
                AB14[ITRONR] = 0.0;
                AB15[ITRONR] = 0.0;
                
            label960:
                ITR = ITRONR + 1;
                if (KT1 == 0) sw16.WriteLine(" ");
                goto label970;
                
            label940:
                ITR = ITRONR;
                
            label970:
                goto label509;
                
            label490:
                IENDKZ = 99;
                A33 = PT[I,K];
                A34 = A1;
                A35 = E1T[I,K];
                A36 = Z1;
                A37 = G[I,K];
                
            label509:
                K9VOR=KT9;
                goto label500;
                
            label504:
                IANF=I+1;
                KT14E = IANF+NSTFZ[KT9]-1;
                IZ11 = 1;
                
                for(IZ = IANF; IZ <= KT14E; IZ++)   //DO 1540 IZ=IANF, KT14E
                {
                    KT1E = UWA011(IZ,1);
                    KT14A = UWA011(IZ,14);
                    KT14N = UWA011(IZ+1,14);
                    if (KT1E  > 0) goto label1541;
                    if (KT14A == KT14N) continue;
                    IZ11 = IZ11+1;
                }   //1540 CONTINUE
                
            label1541:
                KT14E = IZ11;
                sw16.WriteLine("0{0}", TEXT.Substring(88,12));
                sw16.WriteLine("", 645);
                //GOTO(235,245,255),
                if(IWR == 1)    goto label235;
                if(IWR == 2)    goto label245;
                if(IWR == 3)    goto label255;
                
            label235:
                sw16.WriteLine("            BAR  CEL(%)   KJ/KG   M3/KG    KG/S");
                goto label264;
                
            label245:
                sw16.WriteLine("            PSIA   F     BTU/LB   FT3/LB  LBS/H");
                sw16.WriteLine("                                          *1000");
                goto label264;
                
            label255:
                sw16.WriteLine("            AT   CEL(%)  KCAL/KG  M3/KG    T/H ");
                
            label264:
                F1 = PGES*FD;
                //if (F1 < 9.9999) F27(13:16) = 'F6.4';
                //if (F1 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F1 >= 99.999) F27(13:16) = 'F6.2';
                //if (F1 >= 999.99) F27(13:16) = 'F6.1';
                F2 = EGES * FH;
                F3 = G[I+1,K]/FM;
                
                if(TGES < 0) goto label366;
                X1=TGES*FT1+FT2;
                goto label367;
                
            label366:
                X1=TGES;
                
            label367:
                X2=VGES*FVO;
                //(1H, A ,1X,F6.2,F7.1,F8.2,    F8.4,F10.3,F8.2,2PF7.2,0PF7.3,F7.1,F7.3,F6.1,F6.2,F6.3,F7.3,F8.3)
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(64,8), Math.Round(F1,2).ToString().PadLeft(8),Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8),Math.Round(X2,4).ToString().PadLeft(8),Math.Round(F3,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 GESAMTZUSTAND ");
                F1 = PT[I,K] * FD;
                //if (F1 < 9.9999) F27(13:16) = 'F6.4';
                F2 = ESTAT * FH;
                if(TSTAT < 0) goto label368;
                X1=TSTAT*FT1+FT2;
                goto label369;
                
            label368:
                X1=TSTAT;
                
            label369:
                X2=VSTAT*FVO;
                //sw16.WriteLine("",F27) TEXT(65:72),F1,X1,F2,X2,F3;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(64,8), Math.Round(F1,2).ToString().PadLeft(8),Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8),Math.Round(X2,4).ToString().PadLeft(8),Math.Round(F3,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 STAT. ZUSTAND");
                
                if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label835;
                IZ = NSTFZ[KT9];
                IN1 = IANF + IZ;
                IZ11 = UWA011(IN1-1,7);
                if (IZ11 == 8) STFDIZ = STFDI[IN1];
                goto label836;
                
            label835:
                IZ = NSTFZ[KT9] - 1;
                STFDI1 = STFDI[IANF];
                IN1 = IANF + IZ;
                IN1 = UWA011(IN1,7);
                
                if (IN1 == 4) IZ = IZ + 1;
                IN1 = IANF + IZ;
                STFDIZ = STFDI[IN1];
                DELTLE = 0.0;
                DELTLA = 0.0;
                
            label836:
                F1 = UPM[K]/FF;
                X1=STFDI1*FL;
                X2=STFDIZ*FL;
                X3=DELTLE*FL;
                X4=DELTLA*FL;
                
                //goto label(437,438,439),
                if(IWR == 1)    goto label437;
                if(IWR == 2)    goto label438;
                if(IWR == 3)    goto label439;
                
            label437:
                sw16.WriteLine("0{0}.WELLENBEREICH   {1} STUFEN   {2}-FLUTIG   {3} TROM-TEILE   {4} S-1    DI-A {5}MM   DI-O {6}MM   S-LE {7}MM   S-LA {8}MM",
                    KT9.ToString().PadLeft(2),IZ.ToString().PadLeft(3),KFLUT.ToString().PadLeft(1),KT14E.ToString().PadLeft(1),Math.Round(F1,2).ToString().PadLeft(6),
                    Math.Round(X1,0).ToString().PadLeft(6),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(X3,2).ToString().PadLeft(5),Math.Round(X4,2).ToString().PadLeft(5));
                goto label868;
                
            label438:
                sw16.WriteLine("0{0}.WELLENBEREICH   {1} STUFEN   {2}-FLUTIG   {3} TROM-TEILE   {4} RPM   DI-A {5} INCH DI-0 {6}INCH S-LE {7}INCH S-LA {8}INCH",
                    KT9.ToString().PadLeft(2),IZ.ToString().PadLeft(3),KFLUT.ToString().PadLeft(1),KT14E.ToString().PadLeft(1),Math.Round(F1,0).ToString().PadLeft(6),
                    Math.Round(X1,2).ToString().PadLeft(6),Math.Round(X2,2).ToString().PadLeft(6),Math.Round(X3,2).ToString().PadLeft(5),Math.Round(X4,3).ToString().PadLeft(4));
                goto label868;
                
            label439:
                sw16.WriteLine("0{0}.WELLENBEREICH   {1} STUFEN   {2}-FLUTIG   {3} TROM-TEILE   {4} MIN-1  DI-A {5}MM   DI-0 {6}MM    S-LE {7}MM   S-LA {8}MM",
                    KT9.ToString().PadLeft(2),IZ.ToString().PadLeft(3),KFLUT.ToString().PadLeft(1),KT14E.ToString().PadLeft(1),
                    Math.Round(F1,0).ToString().PadLeft(6),Math.Round(X1,0).ToString().PadLeft(6),Math.Round(X2,0).ToString().PadLeft(6),
                    Math.Round(X3,2).ToString().PadLeft(5),Math.Round(X4,2).ToString().PadLeft(5));
                
            label868:
                sw16.WriteLine("0  VOR      HINTER  STUFE ");
                sw16.WriteLine("   H0G     P2   T2(-X)    H2      V2      H2G  DLTHW  DLTHSG    M      DI-2    H-2    BM   EPS  PNR ETA-I ZT-SP   PHI   PSIG  E-AB SNR");
                //GOTO(332,342,352),
                if(IWR == 1)    goto label332;
                if(IWR == 2)    goto label342;
                if(IWR == 3)    goto label352;
                
            label332:
                sw16.WriteLine("  KJ/KG   BAR   CEL(%)   KJ/KG  M3/KG   KJ/KG  KJ/KG  J/KG   KG/S       MM     MM   MM    -    -    %     %      -       -   KJ/KG  -");
                goto label273;
                
            label342:
                sw16.WriteLine(" BTU/LB   PSIA    F     BTU/LB  FT3/LB BTU/LB BTU/LB BT U/LB   LBS/H    INCH   INCH  INCH   -    -    %     %      -       -   BTU/LB -");
                sw16.WriteLine("                                                    *1000");
                goto label273;
                
            label352:
                sw16.WriteLine(" KCAL/KG   AT   CEL(%) KCAL/KG  M3/KG  KCAL/KG KCAL/KG  KCAL/KG T/H      MM      MM   MM    -    -    %     %      -       -  KCAL/KG -");
            
            label273:
                HCVOR=C2GES[IANF-1,K];
                HCVOR = Math.Pow(HCVOR,2)/8.37225E+03;
                KT7VR = UWA011(IANF-1,7);
                if (KT7VR == 9 && TSTFMX[IANF-1] != 0.0)
                    HCVOR = HCVOR * TSTFMX[IANF-1];
                
                EI0GR = E1T[IANF,K];
                S0GR = VISUM(PT[IANF-1,K],EI0GR-HCVOR,13);
                S0GR = VISUM(PT[IANF-1,K],S0GR,12);
                goto label509;
                
            label503:
                F1 = PT[I,K] * FD;
                F2 = E1T[I,K] * FH;
                F3 = G[I,K]/FM;
                F4 = PGES * FD;

                if(JJ == 1)
                    goto label400;
                KT7R = UWA011(3,7);
                KT7D=UWA011(2,7);
                goto label401;
                
            label400:
                KT7R = UWA011(4,7);
                KT7D = UWA011(3,7);
                
            label401:
                //if (F1 < 9.9999) F27(13:16) = 'F6.4';
                //if (F1 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F1 >= 99.999) F27(13:16) = 'F6.2';
                //if (F1 >= 999.99) F27(13:16) = 'F6.1';
                //goto label(517,517,470,517,410,517,517,517,517),
                if(KT7R == 1)       goto label517;
                if(KT7R == 2)       goto label517;
                if(KT7R == 3)       goto label470;
                if(KT7R == 4)       goto label517;
                if(KT7R == 5)       goto label410;
                if(KT7R == 6)       goto label517;
                if(KT7R == 7)       goto label517;
                if(KT7R == 8)       goto label517;
                if(KT7R == 9)       goto label517;
                
            label470:
                if(JJ == 1)goto label480;
                //goto label(520,521,522,523),
                if(I == 1)      goto label520;
                if(I == 2)      goto label521;
                if(I == 3)      goto label522;
                if(I == 4)      goto label523;
                
            label520:
                I3 = 3;
                I4 = 57;
                I5 = 64;
                goto label483;
                
            label521:
                for(I1 = 1; I1 <= 5; I1++)      //DO 318 I1 = 1, 5
                    if (GVENT[I1] == 0.0) 
                        goto label319;  //318 CONTINUE
                
            label319:
                I1 = I1 - 1;
                if (I1 != 1 || DELTAP[I1] == PT[I,K]) 
                    goto label320;
                A1 = VISUM(DELTAP[I1],E1T[I,K],13);
                Z1 = VISUM(DELTAP[I1],A1,10);
                A1 = A1 * 100.0;
                
                if (A1  > 0.0) 
                    A1 = A1/100.0- 273.15;
                
            label320:
                F5 = E2T[I+1,K] * FH;
                F6 = G[I+2,K]/FM;
                
                if(A1 < 0) goto label376;
                X1=A1*FT1+FT2;
                goto label377;
                
            label376:
                X1=A1;
                
            label377:
                X2=Z1*FVO;

                
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(180,8), Math.Round(F1,2).ToString().PadLeft(6),
                     Math.Round(X1,1).ToString().PadLeft(7), Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), 
                     Math.Round(F3,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                
                if(TGES < 0) goto label378;
                X1=TGES*FT1+FT2;
                goto label379;
                
            label378:
                X1=TGES;
                
            label379:
                X2=VGES*FVO;
                //if (F4 < 9.9999) F27(13:16) = 'F6.4';
                //if (F4 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F4 >= 99.999) F27(13:16) = 'F6.2';
                //if (F4 >= 999.99) F27(13:16) = 'F6.1';
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(72,8), Math.Round(F4,2).ToString().PadLeft(6),Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F5,2).ToString().PadLeft(8),Math.Round(X2,4).ToString().PadLeft(8),Math.Round(F6,3).ToString().PadLeft(10));
                //sw16.WriteLine("",1586)
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label522:
                KT7A = UWA011(1,7);
                A27 = STFDI[3] + LS[3];
                if (KT7A == 7) A27 = STFDI[4] + LS[4];
                A27 = Math.Pow((A27 * UPM[K]*5.2359E-05),2);
                A27 = H0[I,K]*8.37225E+03/A27;
                //if (A27 < 99.5) F27(77:80) = 'F6.2';
                //if (A27 >= 99.5) F27(77:80) = 'F6.0';
                if (ETAIOP[I] < 0.0) ETAIOP[I] = 0.0;
                F5 = ESTAT * FH;
                F6 = G[I+1,K]/FM;
                F7 = H0[I,K] * FH;
                F8 = H0[I,K]*G[I,K]/FQ*ETAIOP[I];
                if(TSTAT < 0) goto label380;
                X1=TSTAT*FT1+FT2;
                goto label381;
                
            label380:
                X1=TSTAT;
                
            label381:
                X2=VSTAT*FVO;
                X3=LS[I]*FL;
                X4=BRTLA[I]*FL;
                //DATA F27 =  96H(1H, A ,1X,F6.2,F7.1,F8.2,    F8.4,F10.3,F8.2,2PF7.2,0PF7.3,F7.1,F7.3,F6.1,F6.2,F6.3,F7.3,F8.3)
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17} ", TEXT.Substring(72,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,7).ToString().PadLeft(1),
                    Math.Round(F5,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F6,3).ToString().PadLeft(10), Math.Round(F7,2).ToString().PadLeft(8), Math.Round(ETAIOP[I],2).ToString().PadLeft(7), 
                    Math.Round(F8,2).ToString().PadLeft(7), Math.Round(X3,3).ToString().PadLeft(7), Math.Round(OEFFNG[I],1).ToString().PadLeft(7), Math.Round(X4,3).ToString().PadLeft(7),
                    Math.Round(A27,1).ToString().PadLeft(6), Math.Round(BEPS[K],2).ToString().PadLeft(6), Math.Round(EPSMAX,3).ToString().PadLeft(6), Math.Round(EPSMIN,3).ToString().PadLeft(7));
                sw16.WriteLine("+                                                                                                                      STAT. ZUSTAND");
                
                for(I1 = 1; I1 <= 5; I1++)      //DO 316 I1 =1,5
                {
                    if(GVENT[I1] == 0.0)
                        continue;
                    sw16.WriteLine("0           NR      D      M       BEA     C    P-V.DUE");
                    //GOTO(236,246,256),
                    if(IWR == 1)        goto label236;
                    if(IWR == 2)        goto label246;
                    if(IWR == 3)        goto label256;
                    
                label236:
                    sw16.WriteLine("             -     MM    KG/S       -     M/S      BAR ");
                    goto label265;
                    
                label246:
                    sw16.WriteLine("             -    INCH  LBS/H       -     FT/S    PSIA ");
                    sw16.WriteLine("                         *1000");
                    goto label265;
                    
                label256:
                    sw16.WriteLine("             -     MM     T/H       -     M/S       AT ");
                    
                label265:
                    goto label317;
                }   //316 CONTINUE
                
            label317:
                for(I1 = 1; I1 <= 5; I1++)      //DO 300 I1 = 1,5
                {
                    if(GVENT[I1] == 0.0)
                        continue;
                    F5 = GVENT[I1]/FM;
                    F6 = DELTAP[I1] * FD;
                    if(I1 != 1) 
                        goto label314;
                    BEAUF=BEAUFG[I1];
                    goto label315;
                    
                label314:
                    BEAUF=BEAUFG[I1]-BEAUFG[I1-1];
                    
                    if (BEAUF < 0.0) 
                        BEAUF = 0.0;
                    
                label315:
                    if(DELTAP[I1] == PT[I-1,K])goto label312;
                    X1=VENDUR[I1]*FL;
                    X2=CVENT[I1]*FG;
                    
                    if (BEAUF != 0.0) goto label321;
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}   ", TEXT.Substring(152,8), I1.ToString().PadLeft(5), Math.Round(X1,1).ToString().PadLeft(8),
                         Math.Round(F5,3).ToString().PadLeft(9), Math.Round(BEAUF,3).ToString().PadLeft(8), Math.Round(X2,1).ToString().PadLeft(7));
                    sw16.WriteLine("+                                                               UEBERLAST IN DEN RADRAUM");
                    //322 FORMAT('+',63X,'UEBERLAST IN DEN RADRAUM')
                    continue;
                    
                label321:
                    //sw16.WriteLine("",311)TEXT(153:160),I1,X1,F5,BEAUF,X2,F6,TEXT(161:168)
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}         {7}  ", TEXT.Substring(152,8), I1.ToString().PadLeft(5), Math.Round(X1,1).ToString().PadLeft(8),
                         Math.Round(F5,3).ToString().PadLeft(9), Math.Round(BEAUF,3).ToString().PadLeft(8), Math.Round(X2,1).ToString().PadLeft(7),
                         Math.Round(F6,2).ToString().PadLeft(9), TEXT.Substring(160,8));
                    continue;
                    
                label312:
                    X1=VENDUR[I1]*FL;
                    X2=CVENT[I1]*FG;
                    //sw16.WriteLine("",311)TEXT(153:160),I1,X1,F5,BEAUF,X2,F6,TEXT(169:180)
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}         {7}  ", TEXT.Substring(152,8), I1.ToString().PadLeft(5), Math.Round(X1,1).ToString().PadLeft(8),
                         Math.Round(F5,3).ToString().PadLeft(9), Math.Round(BEAUF,3).ToString().PadLeft(8), Math.Round(X2,1).ToString().PadLeft(7),
                         Math.Round(F6,2).ToString().PadLeft(9), TEXT.Substring(168,12));
                }   //300 CONTINUE
                
                if (NSTFZ[KT9] == 0 && I >= IZ9) 
                    goto label599;
                if (NSTFZ[KT9] == 0) sw16.WriteLine(" ");
                goto label500;
                
            label480:
                //GOTO(481,482,521,522,523),
                if(I == 1)      goto label481;
                if(I == 2)      goto label482;
                if(I == 3)      goto label521;
                if(I == 4)      goto label522;
                if(I == 5)      goto label523;
                
            label481:
                I3 = 4;
                I4 = 137;
                I5 = 144;
                
            label483:
                KFLUT0 = KFLUT;
                if (PSTFMX[I3]  > 0.0) 
                    KFLUT0 = PSTFMX[I3];
                F5 = UPM[K]/FF;
                X1=STFDI[I3]*FL;
                
                //goto label(431,432,433),
                if(IWR == 1)        goto label431;
                if(IWR == 2)        goto label432;
                if(IWR == 3)        goto label433;
            
            label431:
                sw16.WriteLine("0REGELSTUFE              {0}-KRAENZIG        {1}-FLUTIG       {2}{3} S-1 DI  MM",
                    KRANZZ[JJ].ToString().PadLeft(1), KFLUT0.ToString().PadLeft(1), Math.Round(F5,2).ToString().PadLeft(6), Math.Round(X1,2).ToString().PadLeft(6));
                goto label866;
                
            label432:
                sw16.WriteLine(" REGELSTUFE             {0}-KRAENZIG        {1}-FLUTIG      {2} RPM          DI {3} INCH",
                    KRANZZ[JJ].ToString().PadLeft(1), KFLUT0.ToString().PadLeft(1), Math.Round(F5,2).ToString().PadLeft(8), Math.Round(X1,2).ToString().PadLeft(6));
                goto label866;
                
            label433:
                sw16.WriteLine(" REGELSTUFE             {0}-KRAENZIG        {1}-FLUTIG     {2} MIN-1         DI {3} MM ", KRANZZ[JJ].ToString().PadLeft(1),
                    KFLUT0.ToString().PadLeft(1),Math.Round(F5,2).ToString().PadLeft(8), Math.Round(X1,0).ToString().PadLeft(6));
                
            label866:
                sw16.WriteLine("0            P    T(-X)   ENTH     VOL       M     DL THS  ETA-I  PIRSTF  H-LA   EPS   B-LA   PSI  BEA  BEAMAX  BEAMIN");
                //goto label(346,347,348 ),
                if(IWR == 1)        goto label346;
                if(IWR == 2)        goto label347;
                if(IWR == 3)        goto label348;
                
            label346:
                sw16.WriteLine("            BAR  CEL(%)   KJ/KG   M3/KG    KG/S    KJ/KG    %       MW     MM     -     MM     -    -      -       -  \n");
                goto label349;
                
            label347:
                sw16.WriteLine("            PSIA   F     BTU/LB  FT3/LB   LBS/H   BTU/LB    %       MW    INCH    -    INCH    -    -      -       -  ");
                sw16.WriteLine("                                           *1000");
                goto label349;
                
            label348:
                sw16.WriteLine("            AT   CEL(%) KCAL/KG   M3/KG     T/H   KCAL/KG   %       MW     MM     -     MM     -    -      -       -  \n");
                
            label349:
                if(A1 < 0) goto label382;
                X1=A1*FT1+FT2;
                goto label383;
                
            label382:
                X1=A1;
            
            label383:
                X2=Z1*FVO;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", 
                    TEXT.Substring(I4-1,I5-I4-1), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7), Math.Round(F2,2).ToString().PadLeft(8), 
                    Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label482:
                if (PGES  > PT[I,K]) goto label2200;
                if(A1 < 0) goto label384;
                X1=A1*FT1+FT2;
                goto label385;
                
            label384:
                X1=A1;
                
            label385:
                X2=Z1*FVO;
                //sw16.WriteLine("",F27) TEXT(57:64),F1,X1,F2,X2,F3;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", 
                    TEXT.Substring(56,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7), Math.Round(F2,2).ToString().PadLeft(8),
                    Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                //sw16.WriteLine("",1586);
                sw16.WriteLine("+                                                 GESAMTZUSTAND ");
                goto label500;
                
            label410:
                if(JJ == 1)     goto label420;
                //goto label(525,526,527,523),
                if(I == 1)      goto label525;
                if(I == 2)      goto label526;
                if(I == 3)      goto label527;
                if(I == 4)      goto label523;
                
            label525:
                sw16.WriteLine("0 {0}", TEXT.Substring(100,16));
                I4 = 0;
                
                for(I5 = 1; I5 <= 5; I5++)  //DO 524 I5 = 1,5
                {
                    if (VENDUR[I5]  ==  0.0) goto label528;
                    I4 = I4 + 1;
                }   //524 CONTINUE
                
            label528:
                X1 = CVENT[1] * FG;
                X2 = VENDUR[1] * FL;
                
                if (I4  ==  5  &&  EPSMAX  ==  0.0) I4 = 4;
                //goto label( 869, 870, 871),
                if(IWR == 1)    goto label869;
                if(IWR == 2)    goto label870;
                if(IWR == 3)    goto label871;
                
            label869:
                if(VENDUR[1]  > 0) sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3} ",
                    Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label872;
                
            label870:
                if(VENDUR[1]  > 0) sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} FT/S     BEZUGSQUERSCHNITT = {1} X {2} INCH     ZETA = {3}  ",
                    Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label872;
                
            label871:
                if(VENDUR[1]  > 0) sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3}   ",
                    Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                
            label872:
                sw16.WriteLine("0            P    T(-X)   ENTH     VOL       M");
                //GOTO(238,248,258),
                if(IWR == 1)    goto label238;
                if(IWR == 2)    goto label248;
                if(IWR == 3)    goto label258;
                
            label238:
                sw16.WriteLine("            BAR  CEL(%)   KJ/KG   M3/KG    KG/S\n");
                goto label267;
                
            label248:
                sw16.WriteLine("            PSIA   F     BTU/LB   FT3/LB  LBS/H  ");
                sw16.WriteLine("                                          *1000  ");
                goto label267;
                
            label258:
                sw16.WriteLine("            AT   CEL(%)  KCAL/KG  M3/KG    T/H ");
                
            label267:
                if (PGES  > PT[I,K]) goto label2200;
                if(A1 < 0) goto label386;
                X1=A1*FT1+FT2;
                goto label387;
                
            label386:
                X1=A1;
                
            label387:
                X2=Z1*FVO;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(56,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label526:
                if (PT[I,K] == PT[I+1,K]) goto label2130;
                X1 = A1;
                
                if (A1  > 0.0) X1 = A1*FT1 + FT2;
                X2 = Z1 * FVO;
                //F27(10:10) = '5'
                s = new StringBuilder(F27);
                s.Remove(9, 1);
                s.Insert(9,"5");
                F27 = s.ToString();
                //sw16.WriteLine("",F27) TEXT(81:84),F1,X1,F2,X2,F3
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(80,4), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                //F27(10:10) = '1'
                s = new StringBuilder(F27);
                s.Remove(9, 1);
                s.Insert(9,"1");
                F27 = s.ToString();
                goto label2131;
                
            label2130:
                if(TGESDR < 0) goto label390;
                X1=TGESDR*FT1+FT2;
                goto label391;
                
            label390:
                X1=TGESDR;
                
            label391:
                X2=VGESDR*FVO;
                //if (F4 < 9.9999) F27(13:16)  = 'F6.4';
                //if (F4 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F4 >= 99.999) F27(13:16) = 'F6.2';
                //if (F4 >= 999.99) F27(13:16) = 'F6.1';
                //F27(10:10) = '5';
                s = new StringBuilder(F27);
                s.Remove(9, 1);
                s.Insert(9,"5");
                F27 = s.ToString();
                //sw16.WriteLine("",F27) TEXT(81:84),F4,X1,F2,X2,F3;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(80,4), Math.Round(F4,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                
                //F27(10:10) = '1';
                s = new StringBuilder(F27);
                s.Remove(9, 1);
                s.Insert(9,"1");
                F27 = s.ToString();
                
            label2131:
                //sw16.WriteLine("",1586);
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label527:
                F5 = G[I+1,K]/FM;
                F6 = ESTAT * FH;
                if(TGES < 0) goto label392;
                X1=TGES*FT1+FT2;
                goto label393;
                
            label392:
                X1=TGES;
                
            label393:
                X2=VGES*FVO;
                //if (F4 < 9.9999) F27(13:16) = 'F6.4';
                //if (F4 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F4 >= 99.999) F27(13:16) = 'F6.2';
                //if (F4 >= 999.99) F27(13:16) = 'F6.1';
                F2 = EGES * FH;
                //sw16.WriteLine("",F27) TEXT(65:72),F4,X1,F2,X2,F5
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(64,8), Math.Round(F4,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F5,3).ToString().PadLeft(10));
                
                //sw16.WriteLine("",1586)
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                if(TSTAT < 0) goto label394;
                X1=TSTAT*FT1+FT2;
                goto label395;
                
            label394:
                X1=TSTAT;
                
            label395:
                X2=VSTAT*FVO;
                //if (F1 < 9.9999) F27(13:16) = 'F6.4';
                //if (F1 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F1 >= 99.999) F27(13:16) = 'F6.2';
                //if (F1 >= 999.99) F27(13:16) = 'F6.1';
                //sw16.WriteLine("",F27) TEXT(65:72),F1,X1,F6,X2,F5;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(64,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F6,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F5,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 STAT. ZUSTAND");
                if(NSTFZ[KT9] == 0 && I >= IZ9)goto label599;
                if(NSTFZ[KT9] == 0)sw16.WriteLine(" ");
                goto label500;
                
            label420:
                //GOTO(421,422,526,527,523),
                if(I == 1)      goto label421;
                if(I == 2)      goto label422;
                if(I == 3)      goto label526;
                if(I == 4)      goto label527;
                if(I == 5)      goto label523;
                
            label421:
                sw16.WriteLine("0 {0}", TEXT.Substring(100,16));
                I4 = 0;
                for(I5 = 1; I5 <= 5; I5++)  //DO 423 I5 = 1,5
                {
                    if (VENDUR[I5]  ==  0.0) 
                        goto label424;
                    I4 = I4 + 1;
                }   //423 CONTINUE
                
            label424:
                X1 = CVENT[1] * FG;
                X2 = VENDUR[1] * FL;
                if (I4  ==  5  &&  EPSMAX  ==  0.0)     I4 = 4;
                //goto label( 873, 874, 875),
                if(IWR == 1)        goto label873;
                if(IWR == 2)        goto label874;
                if(IWR == 3)        goto label875;
                
            label873:
                if(VENDUR[1]  > 0)
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label876;
                
            label874:
                if(VENDUR[1]  > 0) sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} FT/S     BEZUGSQUERSCHNITT = {1} X {2} INCH     ZETA = {3} ",
                    Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                //X1,I4,X2,ZETAV;
                goto label876;
                
            label875:
                if(VENDUR[1]  > 0)      //sw16.WriteLine("",1400) Math.Round(X1,I4,Math.Round(X2,Math.Round(ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                
            label876:
                sw16.WriteLine("0            P    T(-X)   ENTH     VOL       M  ");
                //goto label(402,403,404),
                if(IWR == 1)        goto label402;
                if(IWR == 2)        goto label403;
                if(IWR == 3)        goto label404;
                
            label402:
                sw16.WriteLine("            BAR  CEL(%)   KJ/KG   M3/KG    KG/S\n");
                goto label405;
                
            label403:
                sw16.WriteLine("            PSIA   F     BTU/LB   FT3/LB  LBS/H ");
                sw16.WriteLine("                                           *1000");
                goto label405;
                
            label404:
                sw16.WriteLine("            AT   CEL(%)  KCAL/KG  M3/KG    T/H \n");
                
            label405:
                if(A1 < 0) goto label396;
                X1=A1*FT1+FT2;
                goto label397;
                
            label396:
                X1=A1;
                
            label397:
                X2=Z1*FVO;
                //sw16.WriteLine("",F27) TEXT(137:144),F1,X1,F2,X2,F3;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(136,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label422:
                if (PGES  > PT[I,K]) goto label2200;
                if(A1 < 0) goto label398;
                X1=A1*FT1+FT2;
                goto label399;
                
            label398:
                X1=A1;
                
            label399:
                X2=Z1*FVO;
                ///sw16.WriteLine("",F27) TEXT(57:64),F1,X1,F2,X2,F3;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(56,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                //sw16.WriteLine("",1586);
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label517:
                if(KT7D == 2)goto label450;
                if(KT7D == 4)goto label430;
                sw16.WriteLine(" FEHLER");
                //16 FORMAT(1X,'FEHLER');
                
            label430:
                if(JJ == 1)goto label440;
                //goto label(530,523),
                if(I == 1)      goto label530;
                if(I == 2)      goto label523;
                
            label530:
                sw16.WriteLine("0 {0}", TEXT.Substring(88,12));
                I4 = 0;
                
                for(I5 = 1; I5 <= 5; I5++)      //DO 529 I5 = 1,5
                {
                    if (VENDUR[I5]  ==  0.0) goto label537;
                    I4 = I4 + 1;
                }   //529 CONTINUE
                
            label537:
                X1 = CVENT[1] * FG;
                X2 = VENDUR[1] * FL;
                if (I4  ==  5  &&  EPSMAX  ==  0.0) I4 = 4;
                
                //goto label(1055,1056,1057),
                if(IWR == 1)        goto label1055;
                if(IWR == 2)        goto label1056;
                if(IWR == 3)        goto label1057;
                
            label1055:
                if(VENDUR[1]  > 0) 
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label1058;
                
            label1056:
                if(VENDUR[1]  > 0)
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} FT/S     BEZUGSQUERSCHNITT = {1} X {2} INCH     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label1058;
                
            label1057:
                if(VENDUR[1]  > 0) 
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3}",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                
            label1058:
                sw16.WriteLine("0            P    T(-X)   ENTH     VOL       M");
                //GOTO(291,292,293),
                if(IWR == 1)    goto label291;
                if(IWR == 2)    goto label292;
                if(IWR == 3)    goto label293;
                
            label291:
                sw16.WriteLine("            BAR  CEL(%)   KJ/KG   M3/KG    KG/S");
                goto label269;
                
            label292:
                sw16.WriteLine("            PSIA   F     BTU/LB   FT3/LB  LBS/H ");
                sw16.WriteLine("                                           *1000");
                goto label269;
                
            label293:
                sw16.WriteLine("            AT   CEL(%)  KCAL/KG  M3/KG    T/H ");
                
            label269:
                if(PGES  > PT[I,K]) goto label2200;
                if(A1 < 0) goto label540;
                X1=A1*FT1+FT2;
                goto label541;
                
            label540:
                X1=A1;
                
            label541:
                X2=Z1*FVO;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(56,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                    //Math.Round(F1, Math.Round(X1, Math.Round(F2, Math.Round(X2, Math.Round(F3;
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label440:
                //GOTO(441,442,523),
                if(I == 1)      goto label441;
                if(I == 2)      goto label442;
                if(I == 3)      goto label523;
                
            label441:
                sw16.WriteLine(" {0}", TEXT.Substring(88,12));
                I4 = 0;
                
                for(I5 = 1; I5 <= 5; I5++)      //DO 443 I5 = 1,5
                {
                    if (VENDUR[I5]  ==  0.0) goto label444;
                    I4 = I4 + 1;
                }   //443 CONTINUE
                
            label444:
                X1 = CVENT[1] * FG;
                X2 = VENDUR[1] * FL;
                if (I4  ==  5  &&  EPSMAX  ==  0.0) I4 = 4;
                //goto label(1059,1060,1061),
                if(IWR == 1)    goto label1059;
                if(IWR == 2)    goto label1060;
                if(IWR == 3)    goto label1061;
                
            label1059:
                if(VENDUR[1]  > 0) 
                    //sw16.WriteLine("",1400) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label1062;
                
            label1060:
                if(VENDUR[1]  > 0) //sw16.WriteLine("",415) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} FT/S     BEZUGSQUERSCHNITT = {1} X {2} INCH     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label1062;
                
            label1061:
                if(VENDUR[1]  > 0) //sw16.WriteLine("",1400) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3}",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                
            label1062:
                sw16.WriteLine("0            P    T(-X)   ENTH     VOL       M");
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label442:
                if (PGES  > PT[I,K]) goto label2200;
                if(A1 < 0) goto label544;
                X1=A1*FT1+FT2;
                goto label545;
                
            label544:
                X1=A1;
                
            label545:
                X2=Z1*FVO;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(56,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label450:
                if(JJ == 1)     goto label460;
                //goto label(531,532,536),
                if(I == 1)      goto label531;
                if(I == 2)      goto label532;
                if(I == 3)      goto label536;
                
            label531:
                sw16.WriteLine(" {0} ", TEXT.Substring(88,12));
                I4 = 0;
                
                for(I5 = 1; I5 <= 5; I5++)  //DO 451 I5 = 1,5
                {
                    if (VENDUR[I5]  ==  0.0) 
                        goto label452;
                    I4 = I4 + 1;
                }   //451 CONTINUE
                
            label452:
                X1 = CVENT[1] * FG;
                X2 = VENDUR[1] * FL;
                if (I4  ==  5  &&  EPSMAX  ==  0.0)     I4 = 4;
                //goto label(1063,1064,1065),
                if(IWR == 1)        goto label1063;
                if(IWR == 2)        goto label1064;
                if(IWR == 3)        goto label1065;
                
            label1063:
                if(VENDUR[1]  > 0) //sw16.WriteLine("",1400) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label1066;
                
            label1064:
                if(VENDUR[1]  > 0)  //sw16.WriteLine("",415) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} FT/S     BEZUGSQUERSCHNITT = {1} X {2} INCH     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label1066;
                
            label1065:
                if(VENDUR[1]  > 0) //sw16.WriteLine("",1400) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3}",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                
            label1066:
                sw16.WriteLine("0            P    T(-X)   ENTH     VOL       M");
                //GOTO(330,340,350),
                if(IWR == 1)    goto label330;
                if(IWR == 2)    goto label340;
                if(IWR == 3)    goto label350;
                
            label330:
                sw16.WriteLine("            BAR  CEL(%)   KJ/KG   M3/KG    KG/S\n");
                goto label271;
                
            label340:
                sw16.WriteLine("            PSIA   F     BTU/LB   FT3/LB  LBS/H");
                sw16.WriteLine("                                           *1000");
                goto label271;
                
            label350:
                sw16.WriteLine("            AT   CEL(%)  KCAL/KG  M3/KG    T/H ");
                
            label271:
                if(PGES  > PT[I,K]) goto label2200;
                if(A1 < 0) goto label546;
                X1 = A1 * FT1 + FT2;
                goto label547;
                
            label546:
                X1=A1;
                
            label547:
                X2=Z1*FVO;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(56,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label532:
                F5 = G[I+1,K]/FM;
                F6 = ESTAT * FH;
                if(TGES < 0) goto label548;
                X1=TGES*FT1+FT2;
                goto label549;
                
            label548:
                X1=TGES;
                
            label549:
                X2=VGES*FVO;
                //if (F4 < 9.9999) F27(13:16) = 'F6.4';
                //if (F4 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F4 >= 99.999) F27(13:16) = 'F6.2';
                //if (F4 >= 999.99) F27(13:16) = 'F6.1';
                F2 = EGES * FH;
                //sw16.WriteLine("",F27) TEXT(65:72),F4,X1,F2,X2,F5;
                //sw16.WriteLine("",1586);
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(64,8), Math.Round(F4,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F5,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                if(TSTAT < 0) goto label550;
                X1=TSTAT*FT1+FT2;
                goto label551;
                
            label550:
                X1=TSTAT;
                
            label551:
                X2=VSTAT*FVO;
                //if (F1 < 9.9999) F27(13:16) = 'F6.4';
                //if (F1 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F1 >= 99.999) F27(13:16) = 'F6.2';
                //if (F1 >= 999.99) F27(13:16) = 'F6.1';
                //sw16.WriteLine("",F27) TEXT(65:72),F1,X1,F6,X2,F5;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(64,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F6,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F5,3).ToString().PadLeft(10));
                sw16.WriteLine("+                                                 STAT. ZUSTAND");
                goto label500;
                
            label460:
                //GOTO(461,462,532,523),
                if(I == 1)      goto label461;
                if(I == 2)      goto label462;
                if(I == 3)      goto label532;
                if(I == 4)      goto label523;
                
            label461:
                sw16.WriteLine(" {0}", TEXT.Substring(88,12));
                I4 = 0;
                
                for(I5 = 1; I5 <= 5; I5++)      //DO 463 I5 = 1,5
                {
                    if (VENDUR[I5]  ==  0.0) goto label464;
                    I4 = I4 + 1;
                }   //463 CONTINUE
                
            label464:
                X1 = CVENT[1] * FG;
                X2 = VENDUR[1] * FL;
                if (I4  ==  5  &&  EPSMAX  ==  0.0) I4 = 4;
                
                //goto label(1067,1068,1069),
                if(IWR == 1)        goto label1067;
                if(IWR == 2)        goto label1068;
                if(IWR == 3)        goto label1069;
                
            label1067:
                if(VENDUR[1]  > 0) //sw16.WriteLine("",1400) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label1070;
                
            label1068:
                if(VENDUR[1]  > 0) //sw16.WriteLine("",415) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} FT/S     BEZUGSQUERSCHNITT = {1} X {2} INCH     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));
                goto label1070;
                
            label1069:
                if(VENDUR[1]  > 0) //sw16.WriteLine("",1400) X1,I4,X2,ZETAV;
                    sw16.WriteLine(" GESCHWINDIGKEIT IM BEZUGSQUERSCHNITT ={0} M/S     BEZUGSQUERSCHNITT = {1} X {2} MM     ZETA = {3} ",
                        Math.Round(X1,1).ToString().PadLeft(6),I4.ToString().PadLeft(2),Math.Round(X2,0).ToString().PadLeft(6),Math.Round(ZETAV,2).ToString().PadLeft(6));

            label1070:
                sw16.WriteLine("0            P    T(-X)   ENTH     VOL       M");
                //GOTO(406,407,408),
                if(IWR == 1)        goto label406;
                if(IWR == 2)        goto label407;
                if(IWR == 3)        goto label408;
            
            label406:   
                sw16.WriteLine("            BAR  CEL(%)   KJ/KG   M3/KG    KG/S");
                goto label409;
                
            label407:
                sw16.WriteLine("            PSIA   F     BTU/LB   FT3/LB  LBS/H ");
                sw16.WriteLine("                                           *1000");
                goto label409;
                
            label408:
                sw16.WriteLine("            AT   CEL(%)  KCAL/KG  M3/KG    T/H ");
                
            label409:
                if(A1 < 0) goto label552;
                X1=A1*FT1+FT2;
                goto label553;
                
            label552:
                X1=A1;
                
            label553:
                X2=Z1*FVO;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(136,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7), Math.Round(F2,2).ToString().PadLeft(8),
                    Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                //sw16.WriteLine("",1586);
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label2200:
                A1 = VISUM(PGES,E1T[I,K],13);
                Z1 = VISUM(PGES,A1,10);
                A1 = 100.0*A1;
                if (A1  > 0.0) A1 = A1/100.0 - 273.15;
                if (A1 < 0.0) goto label554;
                X1 = A1*FT1+FT2;
                goto label555;
                
            label554:
                X1=A1;
                
            label555:
                X2= Z1 *FVO;
                //if (F4 < 9.9999) F27(13:16) = 'F6.4';
                //if (F4 >= 9.9999) F27(13:16) = 'F6.3';
                //if (F4 >= 99.999) F27(13:16) = 'F6.2';
                //if (F4 >= 999.99) F27(13:16) = 'F6.1';
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(56,8), Math.Round(F4,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7), 
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                //sw16.WriteLine("",1586);
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label462:
                if (PGES  > PT[I,K]) goto label2200;
                if(A1 < 0) goto label556;
                X1=A1*FT1+FT2;
                goto label557;
                
            label556:
                X1=A1;
                
            label557:
                X2=Z1*FVO;
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5} ", TEXT.Substring(56,8), Math.Round(F1,2).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7), 
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10));
                //sw16.WriteLine("",1586)
                sw16.WriteLine("+                                                 GESAMTZUSTAND");
                goto label500;
                
            label602:
                QTROM=true;
                IX3=I;
                IX4=IX3;
                goto label534;
                
            label535:
                F1 = E2STTG * FH;
                F2 = HCVTT * FH;
                F3 = HCNTT * FH;
                F4 = SCHUBK * FK;
                A1 = P2TT * FD;
                X3 = PSI[75] * FD * P2TT;
                X1 = GMAXG1;
                X2 = GMING1;
                PELGEH[KT6] = SNITT;
                //sw16.WriteLine("",675)
                
                sw16.WriteLine(" BER.-ABSCHNITT{0}{1}{2}{3}{4}{5}{6}  PHENDST ={7}   PHTURB ={8}{9} {10}",Math.Round(F1,2).ToString().PadLeft(8),Math.Round(ETATT,2).ToString().PadLeft(8),Math.Round(ETATT1,2).ToString().PadLeft(8),
                Math.Round(F2,2).ToString().PadLeft(8),Math.Round(F3,2).ToString().PadLeft(8),Math.Round(SNITT,3).ToString().PadLeft(9),
                Math.Round(F4,0).ToString().PadLeft(9),Math.Round(X3,4).ToString().PadLeft(9),Math.Round(A1,4).ToString().PadLeft(9),
                Math.Round(X1,2).ToString().PadLeft(9),Math.Round(X2,2).ToString().PadLeft(9));
                ETABA[KT6] = ETATT;
                WABB[KT6] = HCNACH;
                F1 = P0TT * FD;
                F2 = T0TT;
                
                if (F2 >= 0.0) F2 = F2*FT1 + FT2;
                F3 = EI0TT * FH;
                X1 = P0BES * FD;
                X2 = T0BES;
                
                if (X2 >= 0.0) X2 = X2*FT1 + FT2;
                F4 = P2TT * FD;
                F5 = T2OLE;
                
                if (F5 >= 0.0) F5 = F5*FT1 + FT2;
                F6 = E2OLE * FH;
                F7 = T2MLE;
                
                if (F7 >= 0.0) F7 = F7*FT1 + FT2;
                F8 = E2MLE * FH;
                F9 = E2STTG * FH;
                X3 = DLTBES * FH;
                sw16.WriteLine(" ");
                sw16.WriteLine(" D A T E N   F U E R   M E S S W E R T V E R G L E I C H  (BA)  :");
                sw16.WriteLine(" ");
                sw16.WriteLine("      EINTRITT                          VOR BESCHAUFLUNG        AUSTRITT                                           ENTH.-DIFF.");
                sw16.WriteLine("      DRUCK     TEMP.     ENTH.         DRUCK     TEMP.         DRUCK  TEMP-O.L  ENTH-O.L  TEMP-M.L  ENTH-M.L      DLTHS-BA  DLTHS-BS");
                //goto label(1320,1321,1322) ,
                if(IWR == 1)    goto label1320;
                if(IWR == 2)    goto label1321;
                if(IWR == 3)    goto label1322;
                
            label1320:
                sw16.WriteLine("        BAR    CEL(%)     KJ/KG           BAR    CEL(%)           BAR    CEL(%)     KJ/KG    CEL(%)     KJ/KG         KJ/KG     KJ/KG");
                goto label1330;
                
            label1321:
                sw16.WriteLine("       PSIA      F(%)    BTU/LB          PSIA      F(%)          PSIA      F(%)    BTU/LB      F(%)    BTU/LB        BTU/LB    BTU/LB");
                goto label1330;
                
            label1322:
                sw16.WriteLine("         AT    CEL(%)   KCAL/KG            AT    CEL(%)            AT    CEL(%)   KCAL/KG    CEL(%)   KCAL/KG       KCAL/KG   KCAL/KG");
                
            label1330:
                sw16.WriteLine(" {0}{1}{2}    {3}{4}    {5}{6}{7}{8}{9}    {10}{11} ",
                    Math.Round(F1,4).ToString().PadLeft(10),Math.Round(F2,2).ToString().PadLeft(10),Math.Round(F3,2).ToString().PadLeft(10),
                    Math.Round(X1,4).ToString().PadLeft(10),Math.Round(X2,2).ToString().PadLeft(10),Math.Round(F4,4).ToString().PadLeft(10),
                    Math.Round(F5,2).ToString().PadLeft(10),Math.Round(F6,2).ToString().PadLeft(10),Math.Round(F7,2).ToString().PadLeft(10),
                    Math.Round(F8,2).ToString().PadLeft(10),Math.Round(F9,2).ToString().PadLeft(10),Math.Round(X3,2).ToString().PadLeft(10));

                sw16.WriteLine("0                                    BER.ABSCHNITT  BESCHAUFLUNG");
                sw16.WriteLine(" ETAI OHNE LECKDAMPFZUMISCHUNG   {0}{1}                 %", Math.Round(ETABOL,2).ToString().PadLeft(14), Math.Round(ETASOL,2).ToString().PadLeft(14));
                if (IRUECK != 0) 
                    sw16.WriteLine("+                                                                    (MIT RUECKFUEHRUNG PARALLELTURBINE)");
                sw16.WriteLine(" ETAI  MIT LECKDAMPFZUMISCHUNG   {0}{1}                 %", Math.Round(ETABML,2).ToString().PadLeft(14), Math.Round(ETASML,2).ToString().PadLeft(14));
                if (IRUECK != 0) //sw16.WriteLine("",1325);
                    sw16.WriteLine("+                                                                    (MIT RUECKFUEHRUNG PARALLELTURBINE)");
                A1 = DETA * FETAE[KT6];

                sw16.WriteLine("0F ={0}", Math.Round(A1,4).ToString().PadLeft(7));
                
                if (FETAR[KT6]  > 0.0) 
                    sw16.WriteLine("+               F RE ={0}", Math.Round(FETAR[KT6],4).ToString().PadLeft(7));
                //1599 FORMAT(1H+,15X,'F RE =',F7.4)
                if (IENDKZ == 99) goto label1560;
                goto label1570;
                
            label1560:
                sw16.WriteLine("0            P   TG(-X)   ENTHG    VOLG      M     CAX ");
                //GOTO(333,343,353),
                if(IWR == 1)    goto label333;
                if(IWR == 2)    goto label343;
                if(IWR == 3)    goto label353;
                
            label333:
                sw16.WriteLine("            BAR  CEL(%)  KJ/KG   M3/KG     KG/S     M/S \n");
                goto label274;
                
            label343:
                sw16.WriteLine("           PSIA    F    BTU/LB    FT3/LB  LBS/H   FT/S ");
                sw16.WriteLine("                                           *1000");
                goto label274;
                
            label353:
                sw16.WriteLine("            AT   CEL(%) KCAL/KG  M3/KG      T/H     M/S \n");
                
            label274:
                F1=A33*FD;
                F2 = A35 * FH;
                F3 = A37 / FM;
                
                //if (F1  < 9.9999) F27BB(13:16) = 'F6.4';
                //if (F1  >= 9.9999) F27BB(13:16) = 'F6.3';
                //if (F1  >= 99.999) F27BB(13:16) = 'F6.2';
                //if (F1  >= 999.99) F27BB(13:16) = 'F6.1';
                if(A34 < 0) goto label370;
                X1=A34*FT1+FT2;
                goto label371;
                
            label370:
                X1=A34;
            
            label371:
                X2=A36*FVO;
                X3=CAX*FG;
                //(1H, A ,1X,F6.4,F7.1,F8.2,     F8.4,   F10.3,F7.1 )
                sw16.WriteLine(" {0} {1}{2}{3}{4}{5}{6}{7} ", TEXT.Substring(144,8), Math.Round(F1,4).ToString().PadLeft(6), Math.Round(X1,1).ToString().PadLeft(7),
                    Math.Round(F2,2).ToString().PadLeft(8), Math.Round(X2,4).ToString().PadLeft(8), Math.Round(F3,3).ToString().PadLeft(10), Math.Round(X3,1).ToString().PadLeft(7));
                CAXT[KT10] = CAX;
                CAX = 0.0;
                
            label1570:
                sw16.WriteLine(" ");
                PSPER = 0.0;
                
                if (PHI[75] != 0.0) PSPER = PHI[75]* FD;
                if (PSPER != 0.0) PHI[75] = 0.0;
                
            label599:
                goto label600;
                
            label601:
                if (IZ1  > 1) goto label1375;
                goto label1380;
                
            label1375:
                if ((NTTETB[IZ1]-NTTETB[IZ1-1]) == 1) goto label1370;
                
            label1380:
                if (NTTETB[IZ1] == 1) goto label1370;
                if (QEXPBE) goto label1390;
                goto label1370;
                
            label1390:
                if (STZNDT[IZ1] != 0) goto label1510;
                
            label1370:
                if (EBKENZ == 99.0) goto label1500;
                if (IZ1  > 1) goto label1520;
                P0EB = A41;
                T0EB = A42;
                P2EB = A43;
                DISEBZ = A44;
                ETAEB = A45;
                ETAEB1 = A46;
                HCNEB = A47;
                SNIEB = A48;
                goto label1500;
                
            label1510:
                if (EBKENZ == 98.0) goto label1525;
                
            label1500:
                F1 = P0EB * FD;
                F2 = P2EB * FD;
                F3 = DISEBZ * FH;
                F4 = HCNEB * FH;
                
                //if (F1  < 9.9999) F103(21:24) = 'F8.4';
                //if (F1  >= 9.9999) F103(21:24) = 'F8.2';
                //if (F2  < 9.9999) F103(33:36) = 'F8.4';
                //if (F2  >= 9.9999) F103(33:36) = 'F8.2';
                IEBZ = IEBZ - 1;
                sw16.WriteLine(" EXPANSIONSBEREICH{0}                                 P0G   T0G(-X)   P2     DLTHS   ETA-I   ETAEX    E-AB    SUMPI", IEBZ.ToString().PadLeft(3));
                IEBZ = IEBZ + 1;

                IZ = KT6 - IBAANF + 1;
                if (IZ <= 0 || IZ  > 3) goto label1514;
                //goto label(1511,1512,1513) ,
                if(IZ == 1)     goto label1511;
                if(IZ == 2)     goto label1512;
                if(IZ == 3)     goto label1513;
                
            label1511:
                sw16.WriteLine("+                      (BER.-ABSCHNITT{0})", IBAANF.ToString().PadLeft(2));
                goto label1514;
                
            label1512:
                IZ11 = IBAANF + 1;
                sw16.WriteLine("+                      (BER.-ABSCHNITT{0} UND{1})", IBAANF.ToString().PadLeft(2),IZ11.ToString().PadLeft(2));
                goto label1514;
                
            label1513:
                IZ11 = IBAANF + 1;
                IZ12 = IBAANF + 2;
                sw16.WriteLine("+                      (BER.-ABSCHNITT{0}{1} UND{2})", IBAANF.ToString().PadLeft(2),IZ11.ToString().PadLeft(1),IZ12.ToString().PadLeft(2));
                
            label1514:
                //GOTO(334,344,354),
                if(IWR == 1)    goto label334;
                if(IWR == 2)    goto label344;
                if(IWR == 3)    goto label354;
                
            label334:
                sw16.WriteLine("                                                      BAR    CEL(%)  BAR     KJ/KG     %       %     KJ/KG     MW ");
                goto label275;
                
            label344:
                sw16.WriteLine("                                                     PSIA      F     PSIA   BTU/LB     %       %    BTU/LB    MW ");
                goto label275;
                
            label354:
                sw16.WriteLine("                                                      AT     CEL(%)   AT    KCAL/KG    %       %    KCAL/KG    MW ");
                
            label275:
                sw16.WriteLine(" ");
                if (EBKENZ == 99.0) 
                    sw16.WriteLine("                                            PAR-TUR    -        -      -       -  {0}{1}{1} \n", 
                        Math.Round(ETAMD,2).ToString().PadLeft(8),Math.Round(ETAMD1,2).ToString().PadLeft(8),Math.Round(SNIMD,3).ToString().PadLeft(9));
                if(T0EB < 0) goto label372;
                X1=T0EB*FT1+FT2;
                goto label373;
                
            label372:
                X1=T0EB;
                
            label373:
                sw16.WriteLine("                                            EXPBER{0}{1}{2}{3}{4}{5}{6}{7} ",  
                    Math.Round(F1,2).ToString().PadLeft(8),Math.Round(X1,1).ToString().PadLeft(8),Math.Round(F2,2).ToString().PadLeft(8),Math.Round(F3,2).ToString().PadLeft(8),
                    Math.Round(ETAEB,2).ToString().PadLeft(8),Math.Round(ETAEB1,2).ToString().PadLeft(8),Math.Round(F4,2).ToString().PadLeft(8),Math.Round(SNIEB,3).ToString().PadLeft(9));
                
            label1520:
                EBKENZ = 0.0;
                
            label1525:
                sw16.WriteLine(" ");
                sw16.WriteLine(" ");
                if (EROSKZ != 99.0) goto label1521;
                sw16.WriteLine(" EROSIONSKENNZ. DER LETZTEN 5 STUFEN   {0}{1}{2}{3}{4} ", Math.Round(EROS[1],3).ToString().PadLeft(8),
                    Math.Round(EROS[2],3).ToString().PadLeft(8),Math.Round(EROS[3],3).ToString().PadLeft(8),Math.Round(EROS[4],3).ToString().PadLeft(8),
                    Math.Round(EROS[5],3).ToString().PadLeft(8));
                EROS[5] = EROS[5] * 1220.0;
                sw16.WriteLine(" US EROSION-COEFFICIENT  LSB                                          {0}", Math.Round(EROS[5],3).ToString().PadLeft(9));
                
            label1521:
                if (PSPER != 0.0) 
                    sw16.WriteLine(" ENDSTUFE GESPERRT (MACHZAHL DER AXIALGESCHW. > 1 ) DRUCK HINTER STUFE ={0}", Math.Round(PSPER,4).ToString().PadLeft(8));
                if(IZ1 == ANZTRB)goto label72;
                if (STZMDT[IZ1+1] == 99)
                    continue;
                JJVOR=JJ;
                UWA043(2);
            }   //700 CONTINUE
            
        label72:
            for(IN4 = 1; IN4 <= 15; IN4++)  //DO 73 IN4 = 1,15
            {
                if (LTGAB[1,IN4]  ==  0)
                    continue;
                goto label78;
            }   //73 CONTINUE
            goto label79;
            
        label78:
            UWA043(2);
            sw16.WriteLine("0ERGEBNISSE DER WELLENDICHTUNGS-RECHNUNG : \n\n");
            sw16.WriteLine(" NR      PVOR       ENT      M-DI      D-DI      S-DI  DART     Z-DI      L-DI     BETA*   LTG      PABS      MABS");
            //GOTO(335,345,355),
            if(IWR == 1)    goto label335;
            if(IWR == 2)    goto label345;
            if(IWR == 3)    goto label355;

        label335:
            sw16.WriteLine("  -       BAR     KJ/KG      KG/S        MM        MM   -         -         MM       -       -        BAR      KG/S \n");
            goto label276;
            
        label345:
            sw16.WriteLine("  -      PSIA    BTU/LB     LBS/H      INCH      INCH   -         -       INCH       -      -       PSIA     LBS/H ");
            sw16.WriteLine("                            *1000                                                                            *1000");
            goto label276;
            
        label355:
            sw16.WriteLine("  -        AT   KCAL/KG       T/H        MM        MM   -         -         MM       -      -         AT       T/H \n");
            
        label276:
            for(IN1 = IN4; IN1 <= 15; IN1++)    //DO 74 IN1= IN4,15
            {
                if(LTGAB[1,IN1] == 0)
                    continue;
                UWA006("RDISC", 54,IN1);
                GSTOBU= 0.0;
                
                for(IN2 = 1; IN2 <= 6; IN2++)   //DO 75 IN2=1,6
                {
                    IX1=LTGAB[IN2,IN1];
                    if(IX1 == 0)    goto label76;
                    IZWZ[IN2] = IX1;
                    ANIND[IN2] = GLTG[IX1];
                    A10 = PSTOB[IN1];
                    if (IN2 <= 1) 
                        goto label62;
                    JJVOR = LTGAB[IN2-1,IN1];
                    A10 = PLTG[JJVOR];
                label62:
                    if(A10 < PLTG[IX1] || ILTG[IX1]  > 9999) 
                        ANIND[IN2] =-ANIND[IN2];
                    GSTOBU = GSTOBU + ANIND[IN2];
                }   //75 CONTINUE
                
            label76:
                IX1 = IZWZ[1];
                F1 = PSTOB[IN1] * FD;
                F2 = ESTOB[IN1] * FH;
                F3 = GSTOBU/FM;
                F4 = PLTG[IX1] * FD;
                F5 = ANIND[1]/FM;
                X1=DMAST[1];
                X2=SPAST[1];

                if (ZZAST[1] >= 1000.0) goto label110;

                IDART = IDARTL;
                X3 = ZZAST[1];
                X4 = 0.0;
                X5 = 0.0;
                goto label140;
                
            label110:
                if (ZZAST[1] >= 2000.0) goto label120;
                IDART = IDARTL;
                X3 = 0.0;
                X4 = ZZAST[1] - 1000.0;
                goto label135;
                
            label120:
                if (ZZAST[1] >= 3000.0) 
                    goto label130;
                IDART = IDARTS;
                X3 = 0.0;
                X4 = ZZAST[1] - 2000.0;
                goto label135;
                
            label130:
                IDART = IDARTD;
                X3 = 0.0;
                X4 = ZZAST[1] - 3000.0;
                
            label135:
                X5 = -FASTB[1]/11.20E-06/X1/X2/Math.Sqrt(X2/X4);
                
            label140:
                X1 = X1 * FL;
                X2 = X2 * FL;
                X4 = X4 * FL;
                //(1H0,I2,F10.3,F10.2,F10.4,F10.1,F10.2,5X,A1,F10.1,F10.1,F10.3,I6,F10.3,F10.4)
                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}     {6}{7}{8}{9}{10}{11}{12} ", IN1.ToString().PadLeft(2),Math.Round(F1,3).ToString().PadLeft(10),Math.Round(F2,2).ToString().PadLeft(10),
                Math.Round(F3,4).ToString().PadLeft(10),Math.Round(X1,1).ToString().PadLeft(10),Math.Round(X2,2).ToString().PadLeft(10),
                IDART,Math.Round(X3,1).ToString().PadLeft(10),Math.Round(X4,1).ToString().PadLeft(10),Math.Round(X5,3).ToString().PadLeft(10),
                IX1.ToString().PadLeft(6),Math.Round(F4,3).ToString().PadLeft(10),Math.Round(F5,4).ToString().PadLeft(10));
                IN2=IN2-1;
                if(IN2 == 1)
                    continue;       //goto label74;
                
                for(IN3 = 2; IN3 <= IN2; IN3++)     //DO 77 IN 3 = 2,IN2
                {
                    IX1 = IZWZ[IN3];
                    F1 = PLTG[IX1] * FD;
                    F2 = ANIND[IN3]/FM;
                    X1=DMAST[IN3];
                    X2=SPAST[IN3];

                    if (ZZAST[IN3] >= 1000.0) 
                        goto label150;
                    IDART = IDARTL;
                    X3 = ZZAST[IN3];
                    X4 = 0.0;
                    X5 = 0.0;
                    goto label180;
                    
                label150:
                    if (ZZAST[IN3] >= 2000.0) 
                        goto label160;
                    IDART = IDARTL;
                    X3 = 0.0;
                    X4 = ZZAST[IN3] - 1000.0;
                    goto label175;
                    
                label160:
                    if (ZZAST[IN3] >= 3000.0) goto label170;
                    IDART = IDARTS;
                    X3 = 0.0;
                    X4 = ZZAST[IN3] - 2000.0;
                    goto label175;
                    
                label170:
                    IDART = IDARTD;
                    X3 = 0.0;
                    X4 = ZZAST[IN3] - 3000.0;
                    
                label175:
                    X5 = -FASTB[IN3]/11.20E-06/X1/X2/Math.Sqrt(X2/X4);
                    
                label180:
                    X1 = X1 * FL;
                    X2 = X2 * FL;
                    X4 = X4 * FL;
                    //(1H ,32X,F10.1,F10.2,5X,A1,F10.1,F10.1,F10.3,I6,F10.3,F10.4)
                    sw16.WriteLine("                                 {0}{1}     {2}{3}{4}{5}{6}{7}{8} ",
                        Math.Round(X1,1).ToString().PadLeft(10),Math.Round(X2,2).ToString().PadLeft(10),IDART,Math.Round(X3,1).ToString().PadLeft(10),
                        Math.Round(X4,1).ToString().PadLeft(10),Math.Round(X5,3).ToString().PadLeft(10),IX1.ToString().PadLeft(6),
                        Math.Round(F1,3).ToString().PadLeft(10),Math.Round(F2,4).ToString().PadLeft(10));
                }   //77 CONTINUE
            }   //74 CONTINUE
            
        label79:
            QPRINT = true;
            goto label8888;
        }   //END


        static double X_UWA078(double Y, double Z)
        {
            return ((((((-0.0231481481*Y +0.09708867521)*Y -0.1960915242)*Y + 0.2192331973)*Y + 0.02658699171)*Y -0.01291301476)*Y +
            0.8892438228-(((((-0.02103365384*Y +0.09961392773)*Y -0.1722210081)*Y + 0.1585008741)*Y -0.2515973193)*Y +0.650046620)*
            (((((((((0.5092113639*Z -3.388226221)*Z +8.660030123)*Z - 9.171126646)*Z -1.039149696)*Z +12.89817083)*Z -14.11185536)*Z +
            7.603053305)*Z -3.193365038)*Z +1.230150087) - ((((((((-0.03303868696*Z +0.3218264686)*Z -1.288545441)*Z +
            2.714582248)*Z -3.155905253)*Z +1.817862829)*Z -0.1636242004)*Z - 0.2051614834)*Z) * (((((((0.08518347032*Y -0.5974040749)*Y +1.677994388)*Y -
            2.613746838)*Y +2.639769555)*Y -1.201576774)*Y -0.9801852301)*Y + 1.011900018));
        }


        static double F1_UWA078(double A)
        {
            return (((((-0.0250400641*A + 0.139769085)*A - 0.2264532342)*A - 0.2308238636)*A+0.06489656177)*A+1.277651515);
        }


        static void UWA078()
        {
            //ENTRY WASTEI
            //COMMON /PUMDRU/
            //1 DELTPA(60),H0REGA[5],WD0A[5],WW0A[5],Q0A[5],HOA[5],PKESS,
            //2ETANUA[5],DREFAK,KART[5]
            //COMMON /WASTL/ LOEST, PWT(60), DTKT(60)
            //COMMON /KPWAS/ KKONDP, KKENTG, KPW(60)
            //COMMON /TEIWAS/ DELTTI(10), PPUMPT(10), ETAPPT(10)
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /PUMP/ IPUMP(60)

            double D, HGEO = 0, DELPE = 0, DPLEIT = 0, GKESS = 0, QMAX = 0, H = 0, AZW4 = 0, B= 0, ETAQUE = 0, AZW3 = 0,
                P =0, V = 0, S1 = 0, E1 = 0, E2 = 0, V1 = 0, V2 = 0, AZW1 = 0, B1 = 0, B2 = 0, DP = 0, AZW2 = 0, VM = 0;

            int IENTG = 0, N = 0, L = 0, M = 0, K4 = 0, K5 = 0, K6 = 0;
                
            
            D = 859.845;            
            if (LLTG[9] == 1)   D = 860.0;
            IENTG = 0;
            HGEO = 0.0;
            DELPE = 0.0;
            DPLEIT = 0.0;
            JJ = 0;
            IEND = IHENDE;
            I = IHENDE + 1;
            
        label1:
            I = I - 1;
            if (GWAS[I] == 0.0) GWAS[I] = GFDE[1];
            if (GWAS[I] == 0.0) GWAS[I] = 3*TLSTGE[1];
            if (GWAS[I] == 0.0) GWAS[I] = 1000.0;
            N = NTYP[I];
            if (N == 3) goto label2;
            if (N == 1) goto label30;
            if (I == 1) goto label40;
            if (N != 13) goto label1001;
            A1 = 0.0;
            A2 = 0.0;
            
            if (PW[I-1] == 0.0 || TWAUS[I-1] == 0.0) goto label1;
            A8 = TWAUS[I-1];
            if (A8 < 0.0) A8 = UW0011(PW[I-1],1);
            A3 = VISUM(PW[I-1],A8,20);
            if (KATZE1[I] == 1) A1 = VERLP[I];
            if (KATZE1[I] == 2) A1 = PW[I-1] - PW[I-1]*(1.0-VERLP[I]/100.0);
            if (KATZE1[I]  > 2) A1 = SSTEU[I]*GWAS[I]*GWAS[I]*A3;
            A2 = QBZWM[I]/A3/10000.0;
            DELTPA[I] =-A1 + A2;
            HGEO = HGEO - A2;
            DPLEIT = DPLEIT + A1;
            goto label1;

        label1001:
            DELPE = DELPE + DELTPA[I]* Math.Pow(GWAS[I],2.0);
            goto label1;

        label2:
            JJ = JJ + 1;
            if (GLTG[26+JJ]  > 0.0)     GWAS[I] = GWAS[I]+GLTG[26+JJ];
            if (LOEST == 1) goto label3;
            DELTTI[JJ] = 0.0;
            PPUMPT[JJ] = 0.0;
            ETAPPT[JJ] = 0.0;
            if (DTKT[I] < 0.0) DELTTI[JJ] = Math.Abs(DTKT[I]);
            if (DTKT[I]  > 100.0) PPUMPT[JJ] = DTKT[I]/1000.0;
            if (DTKT[I]  > 0.0 && DTKT[I] <= 100.0) ETAPPT[JJ] = DTKT[I];
            
        label3:
            GWAS[I] = GWAS[I]/IPUMP[I];
            if (NTYP[I-1] == 18) GWAS[I-1] = GWAS[I-1]/IPUMP[I];
            PPUMPT[JJ] = PPUMPT[JJ]/IPUMP[I];
            if (JJ != 1) goto label14;

            GKESS = GWAS[IHENDE];
            if (LLTG[14] == 0) goto label4;
            if (LLTG[14] == 1) goto label5;
            QMAX = Q0A[JJ]*1.1;
            goto label6;
            
        label4:
            QMAX = Q0A[JJ];
            goto label6;
            
        label5:
            QMAX = Q0A[JJ]*1.25;
            
        label6:
            if (KART[JJ]  > 5) goto label7;
            A7 = PKESS/XPT[1];
            H = XPT[1] + WD0A[JJ] * Math.Pow(GKESS,2.0) * A7 + WW0A[JJ]* Math.Pow(GKESS,2.0) + DELPE + H0REGA[JJ] + DPLEIT + HGEO;
            goto label8;
            
        label7:
            A1 = GWAS[I]/QMAX;
            if (A1  > 1.5)
                sw16.WriteLine("02 PUMPEN-FEHLER");
            
            if (A1  > 1.5) A1 = 1.5;
            H = HOA[JJ]*F1_UWA078(A1);
            
        label8:
            if (PWT[I] == 0.0) PW[I] = H;
            AZW4 = PW[I-1];
            if (NTYP[I-1] == 18) AZW4 = PW[I-2];
            if (AZW4 == 0.0) AZW4 = 15.0;
            if (PWT[I] < 0.0) PW[I] = AZW4 - PWT[I];
            B = (GWAS[I]/QMAX)/Math.Sqrt(PW[I]/HOA[JJ]);
            ETAQUE= ((((((((((-0.2537316983E-3*B + 0.7266793625E-2)*B - 0.9050881615E-1)*B + 0.6425763192E0)*B - 0.2862519495E1)*B +
                0.8292054217E+1)*B - 0.1561635044E2)*B + 0.1839822854E2)*B - 0.1196532703E+2)*B + 0.2055659500E1)*B + 0.2139386386E1)*B - 0.212243E-3;
            AZW3 = PW[I];
            
            if (NTYP[I-1] == 18 && (PW[I-1] == 0.0|| SSTEU[I-1] == 0.0))
                PW[I-1] = PW[I]*0.25;
            if (DELTTI[JJ] != 0.0) goto label9;
            if (PPUMPT[JJ] != 0.0) goto label11;
            if (ETAPPT[JJ] == 0.0) goto label13;
            DEKOND[I] = ETAPPT[JJ];
            goto label25;
            
        label9:
            if (NTYP[I-1] == 18) goto label10;
            if (PW[I-1] == 0.0) PW[I-1] = 15.0;
            if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
            P = (PW[I]+PW[I-1])/2.0;
            V = VISUM(P,TWAUS[I-1],20);
            DEKOND[I]=(PW[I]-PW[I-1])*V*D*2.7240694/DELTTI[JJ];
            goto label25;
            
        label10:
            if (PW[I-2] == 0.0) PW[I-2] = 15.0;
            if (TWAUS[I-2] == 0.0) TWAUS[I-2] = UW0011(PW[I-2],1);
            S1 = VISUM(PW[I-2],TWAUS[I-2],22);
            E1 = VISUM(PW[I-2],TWAUS[I-2],21);
            E2 = VISUM(PW[I],S1,24);
            E2 = VISUM(PW[I],E2,21);
            DEKOND[I] = (E2-E1)/DELTTI[JJ]*100.0;
            goto label25;
            
        label11:
            if (NTYP[I-1] == 18) goto label12;
            if (PW[I-1] == 0.0) PW[I-1] = 15.0;
            if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
            P = (PW[I]+PW[I-1])/2.0;
            V = VISUM(P,TWAUS[I-1],20);
            DEKOND[I]=(PW[I]-PW[I-1])*V*GWAS[I]*2.7240694/PPUMPT[JJ];
            goto label25;
            
        label12:
            if (PW[I-2] == 0.0) PW[I-2] = 15.0;
            if (TWAUS[I-2] == 0.0) TWAUS[I-2] = UW0011(PW[I-2],1);
            P = (PW[I]+PW[I-2])/2.0;
            V1 = VISUM(P,TWAUS[I-2],20);
            P = (PW[I-1]+PW[I-2])/2.0;
            V2 = VISUM(P,TWAUS[I-2],20);
            DEKOND[I] = ((PW[I]-PW[I-2])*V1*GWAS[I]+(PW[I-1]-PW[I-2])*V2*(GWAS[I-2]-GWAS[I]))*2.7240694/PPUMPT[JJ];
            goto label25;
            
        label13:
            DEKOND[I] = ETAQUE*ETANUA[JJ];
            goto label25;

        label14:
            GKESS = GWAS[I]*IPUMP[I];
            if (IENTG == 0) goto label20;
            IENTG = 0;
            if (KART[JJ]  > 5) goto label15;
            H = AZW1 + WW0A[JJ]*Math.Pow(GKESS,2.0) + DELPE + H0REGA[JJ] + DPLEIT+HGEO;
            goto label16;
            
        label15:
            A1 = GWAS[I]/Q0A[JJ];
            if (A1  > 1.5) 
                sw16.WriteLine("02 PUMPEN-FEHLER");
            if (A1  > 1.5) A1 = 1.5;
            H = HOA[JJ]*F1_UWA078(A1);
            
        label16:
            if (PWT[I] == 0.0) PW[I] = H;
            AZW4 = PW[I-1];
            if (NTYP[I-1] == 18) AZW4 = PW[I-2];
            if (AZW4 == 0.0) AZW4 = 15.0;
            if (PWT[I] < 0.0) PW[I] = AZW4 - PWT[I];
            
            B = (GWAS[I]/Q0A[JJ])/Math.Sqrt(PW[I]/HOA[JJ]);
            
            ETAQUE= ((((((((((-0.2537316983E-3*B + 0.7266793625E-2)*B -0.9050881615E-1)*B + 0.6425763192E0)*B - 0.2862519495E1)*B +
                0.8292054217E+1)*B - 0.1561635044E2)*B + 0.1839822854E2)*B - 0.1196532703E+2)*B + 0.2055659500E1)*B + 0.2139386386E1)*B -0.212243E-3;
            AZW3 = AZW1 + DELPE + H0REGA[JJ] - 2.0 + DPLEIT + HGEO;
            //102 FORMAT(1H0,12H+++WASTEI+++,2I5,6E13.5//22X,4E13.5)
            if (LIGHT[4] == 3)
            {
                sw16.WriteLine("0+++WASTEI+++{0}{1}{2}{3}{4}{5}{6}{7}", I.ToString().PadLeft(5),JJ.ToString().PadLeft(5),
                    AZW3.ToString("0.00000E+0").PadLeft(13),AZW1.ToString("0.00000E+0").PadLeft(13),DELPE.ToString("0.00000E+0").PadLeft(13),
                    H0REGA[JJ].ToString("0.00000E+0").PadLeft(13),DPLEIT.ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("                      {0}  ", HGEO.ToString("0.00000E+0").PadLeft(13));
            }
            if (DELTTI[JJ] != 0.0) goto label17;
            if (PPUMPT[JJ] != 0.0) goto label18;
            if (ETAPPT[JJ] == 0.0) goto label19;
            DEKOND[I] = ETAPPT[JJ];
            goto label25;
            
        label17:
            if (PW[I-1] == 0.0) PW[I-1] = AZW1;
            if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
            P = (PW[I]+PW[I-1])/2.0;
            V = VISUM(P,TWAUS[I-1],20);
            DEKOND[I]=(PW[I]-PW[I-1])*V*D*2.7240694/DELTTI[JJ];
            goto label25;
            
        label18:
            if (PW[I-1] == 0.0) PW[I-1] = AZW1;
            if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
            P = (PW[I]+PW[I-1])/2.0;
            V = VISUM(P,TWAUS[I-1],20);
            DEKOND[I]=(PW[I]-PW[I-1])*V*GWAS[I]*2.7240694/PPUMPT[JJ];
            goto label25;
            
        label19:
            DEKOND[I] = ETAQUE*ETANUA[JJ];
            goto label25;

        label20:
            if (KART[JJ]  > 5) goto label21;
            H = AZW1 + DELPE + WW0A[JJ]*Math.Pow(GKESS,2.0) + H0REGA[JJ] + DPLEIT+HGEO;
            goto label22;
            
        label21:
            A1 = GWAS[I]/Q0A[JJ];
            if (A1  > 1.5) 
                sw16.WriteLine("02 PUMPEN-FEHLER");
            if (A1  > 1.5) A1 = 1.5;
            H = HOA[JJ]*F1_UWA078(A1);
            
        label22:
            QMAX = Q0A[JJ];
            goto label8;

        label25:
            AZW1 = TWAUS[I-1];
            if (AZW1 <= 0.0) AZW1 = 470.0;
            AZW1 = UW0011((AZW1 + 10.0),2);
            if (PWT[I-1]  > 0.0) AZW1 = PW[I-1];
            if (PWT[I-1] < 0.0) AZW1 = PW[I-2] + PWT[I-1];
            if (AZW1 <= 0.0) AZW1 = 15.0;
            if (LIGHT[4] == 3)
            {
                sw16.WriteLine("0+++WASTEI+++{0}{1}{2}{3}{4}{5}{6}{7}", I.ToString().PadLeft(5),JJ.ToString().PadLeft(5),PW[I].ToString("0.00000E+0").PadLeft(13),
                    PW[I-1].ToString("0.00000E+0").PadLeft(13),H.ToString("0.00000E+0").PadLeft(13),HOA[JJ].ToString("0.00000E+0").PadLeft(13),GWAS[I].ToString("0.00000E+0").PadLeft(13),
                    Q0A[JJ].ToString("0.00000E+0").PadLeft(13));
                sw16.WriteLine("                      {0}{1}{2}{3} ",ETANUA[JJ].ToString("0.00000E+0").PadLeft(13),ETAQUE.ToString("0.00000E+0").PadLeft(13),DEKOND[I].ToString("0.00000E+0").PadLeft(13),AZW1.ToString("0.00000E+0").PadLeft(13));
                //102 FORMAT(1H0,12H+++WASTEI+++,2I5,6E13.5//22X,4E13.5)
            }
            if(LLTG[12] != 0) goto label27;
            if (JJ != 1 || N1[I] == 0) goto label27;
            
            for(IZ1 = 1; IZ1 <= ITRB; IZ1++)    //DO 26 IZ1=1,ITRB
            {
                if (NITRE[IZ1] != 7) continue;
                B1 = GWAS[I]/QMAX;
                B2 = PW[I]/HOA[JJ];

                if (B1  > 1.5) B1 = 1.5;
                A10 = 2.20 - 0.68*B1;
                if (B2  > A10) B2 = A10;
                DREQUE[IZ1] = X_UWA078(B1,B2)/DREFAK;
            }   //26 CONTINUE
            
        label27:
            GWAS[I] = GWAS[I]*IPUMP[I];
            if (GLTG[26+JJ]  > 0.0) GWAS[I] = GWAS[I]-GLTG[26+JJ];
            if (NTYP[I-1] == 18) GWAS[I-1] = GWAS[I-1]*IPUMP[I];
            PPUMPT[JJ] = PPUMPT[JJ]*IPUMP[I];
            II = I + 1;
            if (JJ == 1 && NTYP[IHENDE] == 3) goto label29;

            for(J = II; J <= IEND; J++)     //DO 28 J=II,IEND
            {
                N = NTYP[J];
                if (N != 7) goto label1027;
                if (NDRUCK == 0) goto label1027;
                if (J == NDRUCK-1) PW[J] = PW[NDRUCK] - 2.0;
                if (J == NDRUCK+1) PW[J] = XPT[1] - 2.0;
                goto label1028;

            label1027:
                if (PWT[J] != 0.0) continue;
                A1 = PW[J-1];
                if (J == II) A1 = AZW3;
                DP = DELTPA[J]*Math.Pow(GWAS[J],2.0);
                if (DP >= A1) DP = A1*0.5;
                PW[J] = A1 - DP;
                if (N == 13) PW[J] = A1 + DELTPA[J];
                if (PW[J] <= 0.0) PW[J] = A1;
                
            label1028:
                if (LIGHT[4] == 3)
                    sw16.WriteLine(" +++WASTEI+++{0}{1}{2}{3}{4} ", J.ToString().PadLeft(3),PW[J].ToString("0.00000E+0").PadLeft(13),
                        A1.ToString("0.00000E+0").PadLeft(13),Math.Round(DELTPA[J],6).ToString().PadLeft(10),GWAS[J].ToString("0.00000E+0").PadLeft(13));
                //101 FORMAT(' ','+++WASTEI+++',I3,2E13.5,F10.6,E13.5)
            }   //28 CONTINUE
            
        label29:
            IEND = I-1;
            DPLEIT = 0.0;
            DELPE = 0.0;
            HGEO = 0.0;
            goto label1;

        label30:
            IENTG = 1;
            IEND = I - 1;
            IZ4 = N1[I];
            if (GLTG[IZ4] == 0.0001) AZW1 = PW[I];
            if (GLTG[IZ4] == 0.0001) goto label34;
            if (KENTG != 2) goto label31;
            if (EKONDW[I] != 0.0) PENTG0 = EKONDW[I];
            PW[I] = PENTG0;
            if (EKONDW[I] != 0.0) PEMIN = EKONDW[I];
            EKONDW[I] = PENTG0;
            AZW1 = PW[I];
            goto label33;
            
        label31:
            PW[I] =0.0;
            if (EKONDW[I] == 0.0) goto label32;
            PW[I] = EKONDW[I];
            PEMIN = EKONDW[I];
            AZW1 = PW[I];
            goto label33;
            
        label32:
            AZW1 = PLTG[IZ4] - DPLTG[IZ4] - DTK[I];
            if (AZW1 <= 0.0) AZW1 = 15.0;
            
        label33:
            if (IZ4 == 33 || IZ4 == 34) AZW1 = PEMIN;
            if (AZW1 < PEMIN) AZW1 = PEMIN;
            
        label34:
            DPLEIT = 0.0;
            HGEO = 0.0;
            AZW2 = AZW1;
            M = I + 1;
            
            for(L = M; L <= IHENDE; L++)    //DO 35 L=M,IHENDE
            {
                N = NTYP[L];
                if (N == 3 || N == 18) goto label1;
                if (PWT[L] == 0.0) PW[L] = AZW1;
                if (PWT[L] == 0.0 && NTYP[L-1] != 1) PW[L] = PW[L-1];
                if (PWT[L] == 0.0 && N == 8) PW[L] = AZW1*1.05;
                if (PWT[L] < 0.0 && N == 8) PW[L] = AZW1 - PWT[L];
                if (N != 13) continue;
                A5 = PW[L-1];
                if (A5 <= 0.0) A5 = AZW2;
                PW[L] = A5 + DELTPA[L];
            }   //35 CONTINUE
            if (LIGHT[4] == 3)  //sw16.WriteLine("",101) I,AZW1,PW[I],EKONDW[I],PEMIN;
                sw16.WriteLine(" +++WASTEI+++{0}{1}{2}{3}{4} ", I.ToString().PadLeft(3),AZW1.ToString("0.00000E+0").PadLeft(13),
                        PW[I].ToString("0.00000E+0").PadLeft(13),Math.Round(EKONDW[I],6).ToString().PadLeft(10),PEMIN.ToString("0.00000E+0").PadLeft(13));
            goto label1;

        label40:
            if (PW[I] == 0.0) PW[I] = 0.05;
            if(IHENDE == INENDE) goto label56;

            for(K3 = 1; K3 <= IHENDE; K3++)     //DO 44 K3=1,IHENDE
            {
                if(NTYP[K3] != 8) continue;
                if (KKONDP == 1 && K3 < KKENTG) continue;
                K4 = N2[K3];
                if (K4 == 0) continue;
                if (PW[K3] == 0.0) continue;
                if (PLTG[K4] == 0.0) PLTG[K4] = PW[K3];
                
            label41:
                K5 = IHENDE + 1;
                
                for(K6 = K5; K6 <= IHENDE; K6++)    //DO 43 K6=K5,INENDE
                {
                    N = NTYP[K6];
                    if(NN1[K6] == 0 || NN1[K6] != K4) continue;
                    if (PWT[K6] != 0.0) goto label42;
                    if (N == 3) goto label42;
                    K1 = NN1[K6];
                    A1 = PLTG[K1];
                    if (NN1[K6] == N2[K3]) A1 = PW[K3];
                    if (N != 13) goto label1041;
                    DELTPA[K6] = 0.0;
                    A3 = 0.0;
                    if (PLTG[K4] == 0.0 || ELTG[K4] == 0.0) goto label1041;
                    A3 = VISUM(PLTG[K4],ELTG[K4],03);
                    if (NN1[K6] == N2[K3]) A3 = TWAUS[K3];
                    if (A3 == 0.0) goto label1041;
                    A4 = 0.0;
                    A5 = 0.0;
                    VM = VISUM(A1,A3,20);
                    if (KATZE1[K6] == 1) A4 = VERLP[K6];
                    if (KATZE1[K6] == 2) A4 = A1 - A1*(1.0-VERLP[K6]/100.0);
                    if (KATZE1[K6]  > 2) A4 = SSTEU[K6]* Math.Pow(GWAS[K6],2.0)*VM;
                    A5 = QBZWM[K6]/VM/10000.0;
                    DELTPA[K6] = - A4 + A5;
                    PW[K6] = A1 + DELTPA[K6];
                    goto label42;
                    
                label1041:
                    DP = DELTPA[K6]* Math.Pow(GWAS[K6],2.0);
                    if (DP >= A1) DP = A1*0.5;
                    PW[K6] = A1 - DP;
                    
                label42:
                    K4 = NN2[K6];
                    PLTG[K4] = PW[K6];
                    goto label41;
                }   //43 CONTINUE
            }   //44 CONTINUE

            L = IHENDE + 1;
            for(I = L; I <= INENDE; I++)    //DO 55 I=L,INENDE
            {
                N = NTYP[I];
                if (N != 3) continue;
                JJ = JJ + 1;
                if (LOEST == 1) goto label50;
                DELTTI[JJ] = 0.0;
                PPUMPT[JJ] = 0.0;
                ETAPPT[JJ] = 0.0;
                if (DTKT[I] < 0.0) DELTTI[JJ] = Math.Abs(DTKT[I]);
                if (DTKT[I]  > 100.0) PPUMPT[JJ] = DTKT[I]/1000.0;
                if (DTKT[I]  > 0.0&& DTKT[I] <= 100.0) ETAPPT[JJ] = DTKT[I];
                
            label50:
                if (DELTTI[JJ] != 0.0) goto label51;
                if (PPUMPT[JJ] != 0.0) goto label53;
                if (ETAPPT[JJ] != 0.0) DEKOND[I] = ETAPPT[JJ];
                continue;
                
            label51:
                if (NTYP[I-1] == 18) goto label52;
                if (PW[I-1] == 0.0) PW[I-1] = 15.0;
                if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
                P = (PW[I]+PW[I-1])/2.0;
                V = VISUM(P,TWAUS[I-1],20);
                DEKOND[I]=(PW[I]-PW[I-1])*V*D*2.7240694/DELTTI[JJ];
                continue;
                
            label52:
                if (PW[I-2] == 0.0) PW[I-2] = 15.0;
                if (PW[I-1] == 0.0) PW[I-1] = PW[I]*0.25;
                if (TWAUS[I-2] == 0.0) TWAUS[I-2] = UW0011(PW[I-2],1);
                S1 = VISUM(PW[I-2],TWAUS[I-2],22);
                E1 = VISUM(PW[I-2],TWAUS[I-2],21);
                E2 = VISUM(PW[I],S1,24);
                E2 = VISUM(PW[I],E2,21);
                DEKOND[I] = (E2-E1)/DELTTI[JJ]*100.0;
                continue;
                
            label53:
                if (NTYP[I-1] == 18) goto label54;
                if (PW[I-1] == 0.0) PW[I-1] = 15.0;
                if (TWAUS[I-1] == 0.0) TWAUS[I-1] = UW0011(PW[I-1],1);
                P = (PW[I]+PW[I-1])/2.0;
                V = VISUM(P,TWAUS[I-1],20);
                DEKOND[I]=(PW[I]-PW[I-1])*V*GWAS[I]*2.7240694/PPUMPT[JJ];
                if (GWAS[I] == 0.0) DEKOND[I] = 82.0;
                continue;
                
            label54:
                if (PW[I-2] == 0.0) PW[I-2] = 15.0;
                if (PW[I-1] == 0.0) PW[I-1] = PW[I]*0.25;
                if (TWAUS[I-2] == 0.0) TWAUS[I-2] = UW0011(PW[I-2],1);
                P = (PW[I]+PW[I-2])/2.0;
                V1 = VISUM(P,TWAUS[I-2],20);
                P = (PW[I-1]+PW[I-2])/2.0;
                V2 = VISUM(P,TWAUS[I-2],20);
                DEKOND[I] = ((PW[I]-PW[I-2])*V1*GWAS[I]+(PW[I-1]-PW[I-2])*V2*(GWAS[I-2]-GWAS[I]))*2.7240694/PPUMPT[JJ];
                if (GWAS[I] == 0.0|| GWAS[I-2] == 0.0) DEKOND[I] = 82.0;
            }   //55 CONTINUE
            
        label56:
            LOEST = 1;
            return;
        }   //END

        
        static void UWA079()
        {
            //ENTRY WASAUS
            //DIMENSION TEXT0(20),TEXT1(24),TEXT2[6]
            //COMMON /PUMDRU/ DELTPA(60),H0REGA[5],WD0A[5],WW0A[5],Q0A[5],
            //1 HOA[5],PKESS,ETANUA[5],DREFAK,KART[5]
            //COMMON /PUMP/ IPUMP(60)
            //COMMON /KONDER/ GKONDA[4], GKONDT[4], TKONDA[4], TKONDT[4] ,
            //1 PKONDA[4], PKONDT[4], DTKONA[4], DTKONT[4] ,
            //2 TKONAA[4], TKONAT[4], DKONDA[4], DKONDT[4]
            //COMMON /KONDPL/ KKONDR,ITKW,IMKW,TKWEIN,GKWEIN,IDAMPF,XDAMPF,NN4
            //COMMON /KONDPA/ TKWAUS
            //COMMON /PRINT/ IWR,TX0,TX13,TX14,TX15,TX16,TX17,TX18
            //COMMON /GMINP/ GPMIN[4]
            //COMMON /KONDFL/ FAKTKF[4]

            int L = 0, IENTG = 0, N = 0;

            double QMAXA = 0, B1 = 0, B2 = 0, B3 = 0;

            string[] TEXT0 = {"", "BENS","ONKE","SSEL",")   ","    ","TROM","MELK", "ESSE","L)  ","    ","SIED","EWAS","SERR",
                                 "EAKT", "OR) ","DRUC","KWAS","SERR","EAKT","OR) "};
            string[] TEXT1 = {"",  "SPEI","SEPU","MPE ","    ","ZWIS","CHEN","PUMP", "E   ","KOND","ENS.","PUMP","E   ","VORP","UMPE",
                                 "    ","    ","U/MI","N =C","ONST",".   ","U/MI","N=VA","RIAB",".   "};
            string[] TEXT2 = {"", "AUST","RITT","EINT","RITT","ENTN","AHME"};
 
            for(L = 1; L <= IHENDE; L++)    //DO 10 L=1,IHENDE
            {
                if (NTYP[L] != 3) 
                    continue;
                KK = KK + 3;
                if (NTYP[L-1] == 18) KK = KK + 1;
            }   //10 CONTINUE
            if (KK == 0) goto label1000;

            IZ1 = IZ1 + KK + 10;
            K2 = LLTG[14] + 1;
            K1 = K2*5 - 4;
            K2 = K1 + 4;
            IENTG = 0;
            JJ = 0;
            I = IHENDE + 1;
            
        label100:
            I = I - 1;
            if (I == 1) goto label1000;
            N = NTYP[I];
            if (N == 1) IENTG = 1;
            if (N != 3) goto label100;
            if (JJ != 0) goto label200;

            if (IZ1 <= 68) goto label110;
            UWA043(2);
            IZ1 = 10 + KK;
            
        label110:
            string s = "";
            for(int i = K1; i <= K2; i++)
                s = s + TEXT0[i].PadLeft(4);
            sw16.WriteLine("0\n");      //(TEXT0[L],L=K1,K2)
            sw16.WriteLine("                  KENNDATEN DER PUMPEN IM HAUPTZWEIG DER VORWAERMS TRECKE (DAMPFERZEUGER {0} ", s);    //'5A4
            sw16.WriteLine("                  ------------------------------------------------------\n");
            sw16.WriteLine("                               DRUCK TEMP. ENTH. MM MAX ETAPU PKUP. ETAMO ETAGE ETARE ETATR");
            
            //goto label(130,150,170),
            if(IWR == 1)        goto label130;
            if(IWR == 2)        goto label150;
            if(IWR == 3)        goto label170;
            
        label130:
            sw16.WriteLine("                                BAR        C     KJ/KG    KG/S      KG/S     %               MW        %      %      %      %");
            goto label200;
            
        label150:
            sw16.WriteLine("                                PSIA       F    BTU/LB    LBS/H     LBS/H    %     MW        %      %      %      % ");
            sw16.WriteLine("                                                         *1000     *1000 ");
            goto label200;
            
        label170:
            sw16.WriteLine("                                 AT        C    KCAL/KG    T/H       T/H     %               MW        %      %      %      %");

        label200:
            JJ = JJ + 1;
            if (K == 1) KART[JJ] = KRUECK[I];
            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            A7 = 0.0;
            A8 = 0.0;
            A9 = 0.0;
            A10 = 0.0;
            Z1 = 0.0;

            if (JJ != 1) goto label210;

            K1 = 1;
            K2 = 4;
            goto label250;

        label210:
            if (IENTG == 0) goto label220;
            IENTG = 0;
            K1 = 9;
            K2 = 12;
            goto label250;

        label220:
            if (N2[I] == 999) goto label230;

            K1 = 5;
            K2 = 8;
            goto label250;

        label230:
            K1 = 13;
            K2 = 16;

        label250:
            A1 = PW[I]*TX2;
            A2 = (TWAUS[I]-273.15)*TX0+TX5;
            A3 = EWAUS[I]*TX1;
            if (GPMIN[JJ] != 0.0) GWAS[I] = GWAS[I] + GLTG[JJ+26];
            A4 = GWAS[I]*TX3;
            QMAXA = Q0A[JJ];
            if (JJ  > 1) goto label270;
            if (LLTG[14] == 0) goto label270;
            if (LLTG[14] == 1) goto label260;
            QMAXA = QMAXA*1.10;
            goto label270;

        label260:
            QMAXA = QMAXA*1.25;

        label270:
            A5 = QMAXA*TX3;
            A6 = DEKOND[I];
            Z3 = TWAUS[I-1];
            
            if ((NTYP[I-1] == 2 || NTYP[I-1] == 21) && N2[I-1] == 0)
                Z3 = EKONDW[I-1];
            if (Z3 < 0.0) Z3 = UW0011(PW[I-1],1);
            Z2 = PW[I-1];
            if (NTYP[I-1] != 18) goto label280;

            Z3 = TWAUS[I-2];
            if ((NTYP[I-2] == 2 || NTYP[I-2] == 21) && N2[I-2] == 0)
                Z3 = EKONDW[I-2];
            if (Z3 < 0.0) Z3 = UW0011(PW[I-2],1);
            Z2 = PW[I-2];

        label280:
            Z4 = (PW[I] + Z2)/2.0;
            Z5 = VISUM(Z4,Z3,20);
            Z8 = (QMAXA*IPUMP[I]*(HOA[JJ]-Z2)*Z5)/ETANUA[JJ]*2.7240694 + QBZWM[I]*0.5;
            A7 = (GWAS[I]*(PW[I]-Z2)*Z5)/DEKOND[I]*2.7240694+QBZWM[I]*0.5;
            if (NTYP[I-1] != 18) goto label290;
            
            Z4 = (PW[I-1] + Z2)/2.0;
            Z5 = VISUM(Z4,Z3,20);
            Z6 = GWAS[I-2];
            if ((NTYP[I-2] == 2 || NTYP[I-2] == 21) && N2[I-2] == 0)
                Z6 = QBZWM[I-2];
            A7 = A7 + (Z6-GWAS[I])*(PW[I-1]-Z2)*Z5/DEKOND[I]*2.7240694;

        label290:
            Z7 = A7/Z8;
            if (Z7  > 1.0) Z7 = 1.0;
            KK = (int)KART[JJ];
            if (KK != 1 && KK != 2 && KK != 3 && KK != 6 && KK != 7)
                goto label300;
            
            Z1 = 99.5;
            A8 = (((0.2786086164*Z7 - 0.6416128598)*Z7 + 0.4987448426) *Z7 + 0.8303943034)*100.0;
            
        label300:
            if (KK != 1 && KK != 2 && KK != 4 && KK != 5) goto label310;
            B1 = GWAS[I]/(QMAXA*IPUMP[I]);
            B2 = PW[I]/HOA[JJ];
            
            B3 = (((((-0.0231481481*B1+0.09708867521)*B1-0.1960915242)*B1+
                0.2192331973)*B1+0.02658699171)*B1-0.01291301476)*B1+0.8892438228- 
                (((((-0.02103365384*B1+0.09961392773)*B1-0.1722210081)*B1+
                0.1585008741)*B1-0.2515973193)*B1+0.650046620)*
                 (((((((((0.5092113639*B2-3.388226221)*B2+8.660030123)*B2-
                9.171126646)*B2-1.039149696)*B2+12.89817083)*B2-14.11185536)*B2+
                7.603053305)*B2-3.193365038)*B2+1.230150087)-
                ((((((((-0.03303868696*B2+0.3218264686)*B2-1.288545441)*B2+
                2.714582248)*B2-3.155905253)*B2+1.817862829)*B2-0.1636242004)*B2-
                0.2051614834)*B2)*
                (((((((0.08518347032*B1-0.5974040749)*B1+1.677994388)*B1-
                2.613746838)*B1+2.639769555)*B1-1.201576774)*B1-0.9801852301)*B1+
                1.011900018);
            
            A10 = B3*98.0;
            
        label310:
            if (KK != 2 && KK != 5 && KK != 7 && KK != 9) goto label320;
            A9 = (((0.02853535353*Z7-0.07861471861)*Z7+0.08388564213)*Z7+0.9462785714)*100.0;
            
        label320:
            if (KK != 3) goto label330;
            A10 = 96.0;

        label330:
            string ss = "";
            for(int i = K1; i <= K2; i++)
                ss = ss + TEXT1[i].ToString().PadLeft(4);
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} {10}{11}{12}{13}", ss, TEXT2[1].ToString().PadLeft(4),TEXT2[2].ToString().PadLeft(4),
                Math.Round(A1,4).ToString().PadLeft(13),Math.Round(A2,2).ToString().PadLeft(8),Math.Round(A3,2).ToString().PadLeft(8),Math.Round(A4,3).ToString().PadLeft(10),Math.Round(A5,3).ToString().PadLeft(10),Math.Round(A6,2).ToString().PadLeft(6),Math.Round(A7,3).ToString().PadLeft(8),Math.Round(A8,2).ToString().PadLeft(7),
                    Math.Round(A9,2).ToString().PadLeft(7),Math.Round(A10,2).ToString().PadLeft(7),Math.Round(Z1,2).ToString().PadLeft(7));
            //340 FORMAT(1H0,6A4,F13.4,2F8.2,2F10.3,F6.2,F8.3,1X,4F7.2)

            if (NTYP[I-1] != 18) goto label400;

            A1 = PW[I-1]*TX2;
            A2 = TWAUS[I-1];
            if (A2 < 0.0) A2 = UW0011(PW[I-1],1);
            A2 = (A2 - 273.15)*TX0 + TX5;
            A3 = EWAUS[I-1]*TX1;
            Z6 = GWAS[I-2];
            if ((NTYP[I-2] == 2 || NTYP[I-2] == 21) && N2[I-2] == 0)
                Z6 = QBZWM[I-2];
            A4 = (Z6-GWAS[I])*TX3;
            sw16.WriteLine("                {0}{1}{2}{3}{4}{5} ", TEXT2[5].ToString().PadLeft(4), TEXT2[6].ToString().PadLeft(4), 
                Math.Round(A1,4).ToString().PadLeft(13), Math.Round(A2,2).ToString().PadLeft(8), Math.Round(A3,2).ToString().PadLeft(8), Math.Round(A4,3).ToString().PadLeft(10));
            //350 FORMAT(' ',16X,2A4,F13.4,2F8.2,F10.3)

        label400:
            if (NTYP[I-1] == 18) goto label410;
            A1 = PW[I-1]*TX2;
            A2 = TWAUS[I-1];
            if (A2 < 0.0) A2 = UW0011(PW[I-1],1);
            A2 = (A2 - 273.15)*TX0 + TX5;
            A3 = EWAUS[I-1]*TX1;
            if ((NTYP[I-1] == 2 || NTYP[I-1] == 21) && N2[I-1] == 0)
                A2 = (EKONDW[I-1] - 273.15)*TX0 + TX5;
            if ((NTYP[I-1] == 2 || NTYP[I-1] == 21) && N2[I-1] == 0)
                A3 = DEKOND[I-1]*TX1;
            goto label420;

        label410:
            A1 = PW[I-2]*TX2;
            A2 = TWAUS[I-2];
            if (A2 < 0.0) A2 = UW0011(PW[I-2],1);
            A2 = (A2 - 273.15)*TX0 + TX5;
            A3 = EWAUS[I-2]*TX1;
            if ((NTYP[I-2] == 2 || NTYP[I-2] == 21) && N2[I-2] == 0)
                A2 = (EKONDW[I-2] - 273.15)*TX0 + TX5;
            if ((NTYP[I-2] == 2 || NTYP[I-2] == 21) && N2[I-2] == 0)
                A3 = DEKOND[I-2]*TX1;
            
        label420:
            if (KK  > 5) goto label430;

            K1 = 21;
            K2 = 24;
            goto label440;

        label430:
            K1 = 17;
            K2 = 20;
            
        label440:
            string s1 = "";
            for(int i = K1; i <= K2; i++)
                s1 = s1 + TEXT1[i].ToString().PadLeft(4);
            sw16.WriteLine(" {0}{1}{2}{3}{4}{5} ", s1, TEXT2[3].ToString().PadLeft(4), TEXT2[4].ToString().PadLeft(4), Math.Round(A1,4).ToString().PadLeft(13), Math.Round(A2,2).ToString().PadLeft(8), Math.Round(A3,2).ToString().PadLeft(8));
            //450 FORMAT(1H ,6A4,F13.4,2F8.2)
            
            if (GLTG[26+JJ]  > 0.0) 
                GWAS[I] = GWAS[I]-GLTG[26+JJ];
            goto label100;

        label1000:
            if (K == 1) return;
            KK = 0;
            
            for(L = 1; L <= ANZTRB; L++)    //DO 1010 L = 1,ANZTRB
            {
                if (GKONDA[L] == 0.0) continue;
                if (PKONDT[L] == 0.0) continue;
                KK = KK + 2;
            }   //1010 CONTINUE
            if (KK == 0) return;
            
            IZ1 = IZ1 + 10 + KK;
            if (IZ1 <= 68) goto label1020;
            
            UWA043(2);
            IZ1 = 10 + KK;
            
        label1020:
            //sw16.WriteLine("",1030)
            sw16.WriteLine("0\n");
            sw16.WriteLine("                                    KENNDATEN  DER  K O N D E N S A T O R E N ");
            sw16.WriteLine("                                    ----------------------------------------- \n");
            sw16.WriteLine("                  M - KUEHLW.M - ABDAMPF    T-EIN - KUEHLW.  T-AUS - KUEHLW.    T - KOND. P - KOND.      GRAEDIGKEIT");
            
            //goto label(1040,1060,1080),
            if(IWR == 1)    goto label1040;
            if(IWR == 2)    goto label1060;
            if(IWR == 3)    goto label1080;
            
        label1040:
            sw16.WriteLine("                     KG/S               KG/S              C               C                C             BAR                C");
            goto label1100;
            
        label1060:
            sw16.WriteLine("                  1000 LBS/H         1000 LBS/H           F               F                F            IN.HG               F");
            goto label1100;
            
        label1080:
            sw16.WriteLine("                      T/H                T/H              C               C                C              AT                C");
            
        label1100:
            sw16.WriteLine("                 AUSL.   LASTP.    AUSL.   LASTP.     AUSL. LASTP.     AUSL. LASTP.    AUSL. LASTP.   AUSL.  LASTP.     AUSL. LASTP.");
            
            KK = 0;
            for(L = 1; L <= ANZTRB; L++)    //DO 1200 L=1,ANZTRB
            {
                if (GKONDA[L] == 0.0) continue;
                KK = KK + 1;
                A1 = GKONDA[L]*TX3;
                A2 = GKONDT[L]*TX3;
                A3 = DKONDA[L]*TX3;
                A4 = DKONDT[L]*TX3;
                A5 = TKONDA[L]*TX0 + TX5;
                A6 = TKONDT[L]*TX0 + TX5;
                A7 = TKONAA[L]*TX0 + TX5;
                A8 = TKONAT[L]*TX0 + TX5;
                A9 = (UW0011(PKONDA[L],1) - 273.15)*TX0 + TX5;
                A10 = (UW0011(PKONDT[L],1) - 273.15)*TX0 + TX5;
                Z1 = PKONDA[L]*TX17;
                Z2 = PKONDT[L]*TX17;
                Z3 = DTKONA[L]*TX0;
                Z4 = DTKONT[L]*TX0;

                sw16.WriteLine("0KONDENSATOR{0} {1}{2} {3}{4} {5}{6}   {7}{8}  {9}{10} {11}{12} {13}{14} ", 
                    KK.ToString().PadLeft(2), Math.Round(A1,0).ToString().PadLeft(8), Math.Round(A2,0).ToString().PadLeft(8), 
                    Math.Round(A3,2).ToString().PadLeft(9), Math.Round(A4,2).ToString().PadLeft(9), Math.Round(A5,2).ToString().PadLeft(7), Math.Round(A6,2).ToString().PadLeft(7),
                    Math.Round(A7,2).ToString().PadLeft(7), Math.Round(A8,2).ToString().PadLeft(7), Math.Round(A9,2).ToString().PadLeft(7), Math.Round(A10,2).ToString().PadLeft(7),
                    Math.Round(Z1,4).ToString().PadLeft(8), Math.Round(Z2,4).ToString().PadLeft(8), Math.Round(Z3,2).ToString().PadLeft(7), Math.Round(Z4,2).ToString().PadLeft(7));
                //1120 FORMAT(1H0,'KONDENSATOR',I2,1X,2F8.0,1X,2F9.2,1X,2F7.2,3X,2F7.2,2X,2F7.2,1X,2F8.4,1X,2F7.2);

                if (L == 1 && ITKW  > 0) TKWEIN = TKONDT[L];
                if (L == 1 && ITKW == 2) TKWAUS = TKONAT[L];
                if (L == 1 && IMKW  > 0) GKWEIN = GKONDT[L];

                if (FAKTKF[L] <= 1.01) continue;

                A1 = 1.0/FAKTKF[L];
                sw16.WriteLine("               ,,*  RECHNUNG MIT {0} - FACHER KONDENSATORFLAECHE ,,*", Math.Round(A1,2).ToString().PadLeft(4));
            }   //1200 CONTINUE
            return;
        }   //END

        
        static void UWA083()
        {
            //ENTRY UPETAG
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /ETAWTS/ WTSOLL,FETAE(7),FBEWE(7)
            double ZL0 = 0, GNULL = 0, PGEG = 0, STFI = 0, PNULL = 0, ENULL = 0, TNULL = 0, SNULL = 0, TGEG = 0, EGEG = 0,
                VGEG = 0, HNULL = 0, ETANUL = 0, EPS = 0, FAKT = 0, C6 = 0, C7 = 0, Z11 = 0, C0UXOP = 0, ETAU = 0, TAU = 0, C0UX = 0,
                FSTOB = 0, HISTF = 0, AV = 0, TX33 = 0, Z66 = 0, Z22 = 0, Z33 = 0;

            ZL0 = LS[I];
            STFI = STFDI[I];
            GNULL = G [I,K]/FLUT;
            PNULL = PT[I-1,K];
            PGEG = PT[I ,K];
            ENULL = E1T[I ,K];
            TNULL = VISUM (PNULL,ENULL,13);
            SNULL = VISUM (PNULL,TNULL,12);
            TGEG = VISUM (PGEG ,SNULL,14);
            EGEG = VISUM (PGEG ,TGEG ,11);
            VGEG = VISUM (PGEG ,TGEG ,10);
            HNULL = ENULL - EGEG;
            ETANUL = 0.925;
            if (DETA != 1.0) ETANUL = ETANUL*DETA;
            if (FETAE[KT6] != 1.0) ETANUL = ETANUL*FETAE[KT6];
            PIN60 = UPM[K]* 3.14159/60000.0;
            EPS = PGEG/PNULL;
            FAKT = 1.0;
            XH0[I] = HNULL;
            VOLUME[I] = VGEG;
            
            if (K  > 1) goto label1;
            if (NTTETB[KT10] == KT6 && STZNDT[KT10] != 0) goto label1;
            if (KT1 == 3 && LSZ[KT10] != 0.0)goto label4;
            ZL0 = GNULL*VGEG/(STFI*STFI*XUPM)* 4.225E+09;
            ZL0 = ((0.374*STFI)/(0.42*STFI + ZL0)+0.11)*ZL0;
            LS[I]= ZL0;
            
        label4:
            UWA084();
            if (K  > 1) goto label1;
            IZ1 = UWA011(I+1,7);
            if (IZ1 != 6) goto label1;
            VGEG = VISUM(XPT[I+1],TGEG,10);
            C6 = STFI + ZL0;
            C7 = GNULL * VGEG / (11.315E-06*C6*ZL0);
            YDFAKT[I+1] = 1.5E-06*C7*C7/Math.Pow((GNULL*VGEG),2)*1.0E+08;
            if (XPT[I+1]  > 0.2) YDFAKT[I+1] = 0.0;
            
        label1:
            C6 = -1.8;
            C7 = -1.2;
            Z11= 0.4*ZL0 + STFI;
            C0UXOP = 1.98 - 0.4*ZL0/(ZL0+ STFI);
            ETAU = -1.3/(ZL0 +1.0/ETANUL) + ETANUL;
            A3 = STFI + ZL0;
            ETAU = (1.0-0.25*Math.Pow((ZL0/A3),2)-0.2E-03*A3/ZL0) * ETAU;
            if (TGEG  > 0.0) goto label2;
            A1 = 1.0 -1.2*(1.0 + TGEG - 0.8E-03 * HNULL);
            if (A1 < 1.0) ETAU = A1 * ETAU;
            
        label2:
            TAU = 1.0;
            IZ1 = UWA011 (I-1,7);
            if (IZ1 == 4) TAU = 1.03;
            if (HNULL < 0.1) HNULL = 0.1;
            C0UX = 91.53 * Math.Sqrt(HNULL*TAU)/PIN60/(STFI+ 0.4*ZL0);
            YH0[I] = 91.53*Math.Sqrt(HNULL*TAU)/PIN60/(STFI + ZL0);
            if (K != 1) goto label3;
            PHI[I] = C0UX;
            C7 = 0.0;
            
        label3:
            A1 = 1.0/ PHI[I];
            A2 = 1.0/ C0UX;
            A4 = 1.0/ C0UXOP;
            A4 = Math.Pow((A2 - A4),2) * C6 + Math.Pow((A2 - A1),2) *C7 + 1.0;
            if (KT1 == 3 && XPT[I+1] <= 0.2) A4 = 1.0;
            ETAU = ETAU * A4;
            PSI[I] = C0UX * C0UX;
            //C F(SPALT)
            FSTOB = (1.0-4.0*TASAX[KT14]*DELTLE/(A3*ZL0*Math.Sqrt(TAZLE[KT14]))*DELTLA);
            ETAIOP[I] = FSTOB;
            ETAU = ETAU * FSTOB;
            //C F (B/L)
            if (BRTLA[I]  > 0.0) ETAU = (1.0 - 0.025*(BRTLA[I]-15.0-0.15*ZL0)/ ZL0)* ETAU;
            //C F (P[I]/ P[I-1]
            if (EPS < 0.4) FAKT = (0.2*EPS + 0.92);
            ETAU = ETAU * FAKT;
            //C F (B / DF)
            A1 = BRTLA[I]/ STFI;
            if (A1  > 0.1) ETAU = (-0.5*A1 + 1.05) * ETAU;
            HISTF = HNULL * ETAU;
            if (ETAU < 0.0) ETAU =0.0;
            ETAI[I] = ETAU;
            E2T[I,K] = E1T[I,K] - HISTF;
            DFAKT[I,K] = 1.0;
            AV = 0.0;
            C2GES[I,K] = 0.0;
            T2T[I] = VISUM (PGEG,E2T[I,K],03);
            if (KT1 <= 1) goto label1002;
            VGEG = VISUM (PGEG,T2T[I],10);
            A1 = GNULL*VGEG/(A3 * ZL0);
            if (KT1 == 3 && XPT[I+1] <= 0.2) goto label1069;
            TX33 = 0.935E+06 *Math.Pow(A1,2);
            AV = TX33 * ETAU;
            goto label1003;
            
        label1069:
            Z66 = -ETAU/A4 + 1.0;
            A1 = A1/1.131E-05;
            Z11 =(STFI+ZL0)*UPM[K]*0.5236E-04*0.625;
            if (A1  > 385.0) A1 = 385.0;
            Z22 = (Math.Pow((A1/385.0),4) * Z66*(-0.5)+1.0)* Math.Pow(A1,2);
            Z33 = A3 * PIN60;
            A4 = Math.Pow((Z11 - A1), 2);
            if (A1  > Z11) A4 = 0.0;
            AV = (A4/Z11/A1*Z33*Z33*0.8 + Z22)/8378.0;
            
        label1003:
            if (AV  > 50.0) AV = 50.0;
            C2GES[I,K] = 91.5 * Math.Sqrt(AV);
            E2T [I,K] = E2T[I,K] + AV;
            T2T [I] = VISUM (PGEG,E2T[I,K],03);
            
        label1002:
            ETAUOP[I] = C0UX/C0UXOP;
            if (UWA011(I+1,7) == 6) 
                XDFAKT[I+1] = YDFAKT[I+1];
            return;
        }   //END
                    
        
        static void UWA084()
        {
            //ENTRY TBRUP
            double BB = 0, TZ1 = 0, C7 = 0, C6 = 0, HPOL = 0, DELTA = 0, ZL0 = 0;

            BB = GMAXG1;
            if (BB < 1.03) BB = 1.15;
            TZ1 = LS[I];
            Z1 = 40.0;
            A1 = 0.5 * TASAX[KT14];
            A2 = A1 + 25.0;
            A4 = 0.5 * STFDI[I] - A2;
            A5 = 0.5 * A4 + A2;
            A6 = 10.0;
            C7 = T1T[I] + A6;
            if (T1T[I] <= 0.0) C7 = UW0011(XPT[I]*BB, 1);
            C6 = 2.5;
            if (C7  > 775.0) C6 = 2.0;
            if (C7 < 723.0) C6 = 3.0;
            A6 = (-C7*9.33 + 2.3769E04)/ 2.15;
            A4 = A4 / A5;
            
            Z7 = (XPT[I-1] - XPT[I])*BB/ 100.0;
            A5 = 2.0*LS[I] + STFDI[I];
            
        label274:
            A3 = (A5 + Z1) * 0.5;
            Z2 = Z1*0.5 + A3;
            Z3 = Math.Pow((A2/Z2-1.0),2) * 1.94 + 1.0;
            Z4 = (Z1/A3 + A4) * Z1 * Z1 * Z1 * A6;
            Z5 = A3 - A2;
            Z6 = A3 - A1;
            Z4 = (2.0* A1 + A3) * Z6 * Z6 * Z5 * Z3 * Z7 / Z4;
            if (Z4 <= C6) goto label371;
            Z1 = Z1 + 10.0;
            goto label274;
            
        label371:
            HPOL = XH0[I] * ETAI[I];
            if (HPOL <= 0.0) HPOL = XH0[I]* 0.85;
            TX1 = 2.27E06 * XG[I] * HPOL/ ((STFDI[I] + LS[I])*FLUT * XUPM);
            BRTLE[I] = Z1;
            Z1 = 1.751;
            if (KT1  > 0 || KT5  > 0) Z1 = 2.022;
            if (XPT[I] >= 4.7 && T1T[I] <= 0.0) Z1 = 2.02;
            if (XPT[I] < 4.7 && T1T[I] < 473.0) Z1 =2.475;
            BRTLA[I] = Math.Sqrt(TX1*BB * LS[I]/ STFDI[I]) * Z1;
            if (LS[I]/BRTLA[I]  > 5.8) BRTLA[I] = LS[I]/ 5.8;
            DELTA = BRTLA[I] - ((BRTLA[I]/10.0)*10);
            BRTLA[I] = BRTLA[I] - DELTA;
            if (DELTA  > 0.1*BRTLA[I]) BRTLA[I] = BRTLA[I] + 10.0;
            if (BRTLA[I] < 18.0) BRTLA[I] = 20.0;
            if (UWA011(I-1,7) != 4) goto label373;
            ZL0 = LS[I] - LS[I-1];
            if (ZL0 < 20.0|| KT9 != UWA011(I-1,9)) goto label373;
            TX1 = BRTLE[I]/ZL0;
            if (TX1 >= 2.0) goto label373;
            TX1 = (2.0 - TX1) *0.5 + TX1;
            BRTLE[I] = TX1 * ZL0;
            if (TX1 >= 1.4) goto label373;
            BRTLE[I] = 1.4 * ZL0;
            
        label373:
            if (UWA011(I+1,7) == 6 && LSZ[KT10] != 0.0) BRTLE[I] = 0.0;
            return;
        }   //END             
        
                
        static void UWA085 (ref double FLUT, ref int M1, ref int M2, ref int M3)
        {
            //ENTRY STEIN (FLUT,M1,M2,M3)
            //INTEGER F
            //DATA N/2HN /, F/2HF /
            int N = 'F';
            
            FLUT = M3*0.15/FLUT;
            if (M1 == N) goto label1;
            if (M1 == F) goto label2;
            
        label99:
            sw16.WriteLine("0++++ UNZULAESSIGE VENTILVORGABE ++++");

            FORERR();    //CHNERR();
            return;
            
        label1:
            if(M2 == 125 || M2 == 160) goto label99;
            if (M2 == 200) goto label200;
            if (M2 == 250) goto label250;
            if(M2 == 280) goto label280;
            goto label99;
            
        label200:
            M1 = 68;
            M2 = 52;
            M3 = 20;
            goto label9;
            
        label250:
            M1 = 88;
            M2 = 68;
            M3 = 24;
            goto label9;
            
        label280:
            M1 = 96;
            M2 = 76;
            M3 = 28;
            goto label9;
            
        label2:
            if (M2 == 160) goto label16;
            if (M2 == 200) goto label20;
            if (M2 == 250) goto label25;
            if (M2 == 320) goto label32;
            if (M2 == 400) goto label40;
            if (M2 == 500) goto label50;
            if (M2 == 560) goto label56;
            if (M2 == 630) goto label63;
            if (M2 == 710) goto label71;
            if (M2 == 800) goto label80;
            if (M2 == 900) goto label90;
            goto label99;
            
        label16:
            M1 = 24;
            M2 = 12;
            M3 = 12;
            goto label9;
            
        label20:
            M1 = 32;
            M2 = 12;
            M3 = 16;
            goto label9;
            
        label25:
            M1 = 40;
            M2 = 16;
            M3 = 20;
            goto label9;
            
        label32:
            M1 = 48;
            M2 = 20;
            M3 = 24;
            goto label9;
            
        label40:
            M1 = 60;
            M2 = 28;
            M3 = 32;
            goto label9;
            
        label50:
            M1 = 76;
            M2 = 32;
            M3 = 40;
            goto label9;
            
        label56:
            M1 = 88;
            M2 = 36;
            M3 = 44;
            goto label9;
            
        label63:
            M1 = 96;
            M2 = 44;
            M3 = 48;
            goto label9;
            
        label71:
            M1 =108;
            M2 = 48;
            M3 = 56;
            goto label9;
            
        label80:
            M1 =124;
            M2 = 52;
            M3 = 60;
            goto label9;
            
        label90:
            M1 =140;
            M2 = 60;
            M3 = 68;
            
        label9:
            return;
        }   //END
            
                
        static void UWA087(ref int K1, ref int KZ3, ref string FELD)
        {
            //ENTRY EINDRU (K1,KZ3,FELD)
            //IMPLICIT INTEGER (Z)
            double[] T11NT = new double[4], T11PD = new double[4], T12P = new double[5], T12T = new double[5], T12PN = new double[5],
                T13FE1 = new double[5], T13FBE = new double[5], T21EGT = new double[5], T22GMA = new double[4], T22GMI = new double[4],
                T22UEL = new double[5], T23EPS = new double[5], T23VEN = new double[6], I3L = new double[9], T7DW = new double[4],
                T7SPI = new double[4], T7Z = new double[4], T7T = new double[4], T7PAB = new double[4],
                I7LTG = new double[4], I02S1 = new double[18], L0LTG = new double[4], L0MUE = new double[4], L0LGST = new double[4],
                R0G = new double[4], R0P = new double[4], R0TI2 = new double[4], INLTG = new double[11],
                S2P = new double[5], S2T = new double[5], I2V = new double[5], S4FET = new double[5], S4FBEW = new double[5],
                I1LTG = new double[4], R1G = new double[4], R1P = new double[4], R1I = new double[4],
                TMKUEL = new double[11], T13R1 = new double[4], S4R1 = new double[4];
            int[] IPL = new int[4], I13FR1 = new int[4],  I4FR1 = new int[4],  MOD = new int[4],
                I03LT1 = new int[12], I03LT2 = new int[12], I04LT1 = new int[12], I04LT2 = new int[12];
            string VV, FELDS, FELDT = "     ";
            string[] A01KRL = new string[11], T7ART = new string[4], R0TI1 = new string[4], R1T = new string[4], P1UEBE = new string[9],
                P2UEBE = new string[11], P22UEB = new string[11], BESCHR = new string[16];
            //COMMON /LESEN/ NLESEN,KZ2,KV,MVAR,IVAR,JVAR
            //COMMON /CORE/ CORE(20)

            int ZELT23 = 0, ZELT3N = 0, ZELT5N = 0, ZELT7N = 0, ZELL0N = 0, ZELHNN = 0, ZELK1N = 0, ZELK2N = 0, ZELWNN = 0, ZELS20 = 0,
                ZELS30 = 0, ZELS40 = 0, ZELL1N = 0, ZELUA1 = 0, ZELUA2 = 0, ZELPAR = 1, ZELUT1 = 0, ZELUE1 = 0, ZELUE2 = 0, ZELV01 = 0,
                ZELV02 = 0, ZELPNN = 0, ZELP1N = 0, ZELP2N = 0, ZELP3N = 0, ZELP4N = 0, ZELMNN = 0, ZELM1N = 0, ZELG1N = 0,
                ZELG2N = 0, ZELG3N = 0, ZELG4N = 0, ZELG5N = 0, ZELPGN = 0, KTTXX = 0, IL1 = 0, IUE = 0, I13DEF = 0,
                I21FI = 0, I21LFI = 0, I21LVA = 0, I21IT = 0, I22N1H = 0, I22K1H = 0, I22K2 = 0, I22N1M = 0, I22K1M = 0,
                I22N1N = 0, I22FLN = 0, I22STF = 0, I22NR = 0, I23ASV = 0, I23NRV = 0, I23AES = 0, I23NUV = 0, I23ZV = 0,
                I23FDV = 0, I23ZV1 = 0, I3L1N = 0, I3L2N = 0, I3STKZ = 0, I3FL = 0, I3ZLE = 0, I3ZLA = 0, I3PRO = 0,
                I5LFNR = 0, I5K = 0, I5PRNR = 0, I5Z = 0, I7LFNR = 0, I01NV = 0, I01NHD = 0, I01NND = 0, I01KE = 0,
                INTYP = 0, INL1 = 0, INL2 = 0, INNR = 0, INKZ = 0, INKZ1 = 0, INRW = 0, ITYP = 0, IWNKZ = 0, IWNKZ1 = 0,
                I3LFIX = 0, I3LVAR = 0, I3IT = 0, I3K = 0, I3J = 0, I3NZ = 0, I4DEF = 0, IMEN1 = 0, IMEN2 = 0, IMEN3 = 0,
                IGET = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0, I5 = 0, I6 = 0, I7 = 0, I8 = 0, I9 = 0, I10 = 0, I11 = 0, 
                I12 = 0, I13 = 0, I14 = 0, I15 = 0, I16 = 0, I17 = 0, I18 = 0, I19 = 0, I20 = 0, I21 = 0;

            double T11PK = 0, T11TK = 0, T11IK = 0, T11DP = 0, T11DI = 0, T11NTH = 0, T13W = 0, T13FEG = 0, T21FDM = 0, T21ABD = 0,
                T21NMX = 0, T21NNM = 0, T21NMI = 0, T21NME = 0, T21GFI = 0, T22FL = 0, T23DPB = 0, T23DSV = 0, T23ZSV = 0, T23ZET = 0,
                T23DEI = 0, T23ZEI = 0, T3N = 0, T3SAX = 0, T3SLA = 0, T3SLE = 0, T3DP = 0, T3DIA = 0, T3DIO = 0, T3EPS = 0, T3HW = 0,
                T3PGEG = 0, T3EMAX = 0, T3EPS1 = 0, T5LAMI = 0, T5LAMA = 0, T5DLA = 0, T5SAX = 0, T5EPS = 0, T5ZLE = 0, T5ZLA = 0,
                T5KFA = 0, T5KFO = 0, T5DANZ = 0, T5ZETA = 0, T5HAMI = 0, T5HAMA = 0, T5HOMI = 0, T5HOMA = 0, A01PE = 0, A01PEN = 0,
                A01TPM = 0, A01PMI = 0, A01NPR = 0, A01DPH = 0, A01DPN = 0, AMFM1 = 0, AMFM2 = 0, AMFM3 = 0, AMFM4 = 0, L0NUE = 0, HNP = 0,
                HNT = 0, HNETA = 0, HNQM = 0, HNDP = 0, HNDQ = 0, R1TKW = 0, R1W = 0, R1WK = 0, R1V = 0, R1L = 0, R1DA = 0, R1S = 0, R1F = 0,
                R1Z = 0, R1B = 0, R1TH = 0, R1TV = 0, R1KO = 0, R1HVOR = 0, R1NK = 0, R1WFL = 0, K1AFG = 0, K1GWK = 0, K1KTFA = 0, K1KH = 0,
                K1KP = 0, R2WER1 = 0, R2WER2 = 0, R2WER3 = 0, R2WER4 = 0, R2DTM = 0, R2FRAD = 0, R2GVER = 0, R2TVER = 0, WPW = 0,
                WTEW = 0, WMW = 0, WPD = 0, WHD = 0, WMD = 0, WHK = 0, WMK = 0, WDT = 0, WDTK = 0, WNDP = 0, WNDQ = 0, S1PK = 0, S1TK = 0,
                S1IK = 0, S1DPK = 0, S1NTH = 0, S1DI = 0, S2PN = 0, S2DP1 = 0, S2DP2 = 0, S2DP3 = 0, S3FRDM = 0, S3ABDM = 0, S3N = 0,
                S3NME = 0, S3ETAG = 0, S3GFIX = 0, S3TKW = 0, S3WA = 0, S3KF = 0, S3NA = 0, S4WS = 0, S4ETA = 0, KDRPL1 = 0, KDRPL2 = 0,       
                KDRPL3 = 0, P2ELEK = 0, P4PGEN = 0, P4VGEN = 0, P4COPI = 0, P4GLR = 0, P4H2 = 0, P4GKSV = 0, P4MU = 0, P4HEND = 0,
                M1K1 = 0, M1K2 = 0, TM = 0, A11 = 0;

            string[] FMTM = { "(1H ", ",2X,", "3A1,", "2(3X", ",I1)", ",10(", "F10.", "2), ", "9X,F", "9.4)" };
            string FMTX1 = "2), ", FMTX2 = "3), ", FMTX3 = "4), ", T22DAH = "", T22TPH = "", T22K2H = "",
                T22K3H = "", T22TP = "", T22DAM = "", T22TPM = "", T22K2M = "", T22K3M = "", T22DAN = "",
                T22K3N = "", T22TPN = "", T23TPF = "", T23TPN = "", T3TYP = "", T5ART = "", A02E = "",
                R2ROR1 = "", R2ROR2 = "", I2OPT = "", P1NR1 = "", P1NR2 = "", P1NAME = "", P2NR1 = "", 
                P2NR2 = "", P2INDE = "";

            //WRITE (VV,'(20A4)') FELD
            VV = FELD;
            if (VV.Substring(0,1)  ==  "X") goto label170;
            if (VV.Substring(0,1)  ==  "C") goto label300;
            if (VV.Substring(0,1)  ==  "Z") goto label180;
            if (VV.Substring(0,1)  ==  " ") goto label270;
            if (VV.Substring(0,1)  ==  "U") goto label150;
            if (KV == 1) goto label200;
            if (KV == 2) goto label250;
            
        label100:
            //READ (VV, 110,ERR=120) K2,K3;
            //110 FORMAT (1X,2I1);
            K2 = Convert.ToInt32(VV.Substring(1,1));
            K2 = Convert.ToInt32(VV.Substring(2,1));

            if (VV.Substring(0,1)  ==  "T") goto label340;
            if (VV.Substring(0,1)  ==  "H") goto label1470;
            if (VV.Substring(0,1)  ==  "N") goto label1470;
            if (VV.Substring(0,1)  ==  "L") goto label1390;
            if (VV.Substring(0,1)  ==  "K") goto label1580;
            if (VV.Substring(0,1)  ==  "A") goto label1180;
            if (VV.Substring(0,1)  ==  "W") goto label1730;
            if (VV.Substring(0,1)  ==  "S") goto label1810;
            if (VV.Substring(0,1)  ==  "P") goto label2140;
            if (VV.Substring(0,1)  ==  "M") goto label2480;
            if (VV.Substring(0,1)  ==  "G") goto label2580;
            
        label120:
            sw16.WriteLine("   {0}", FELD);
            //130 FORMAT (3X,20A4)
            sw16.WriteLine(" ***UNZULAESSIGE DATENEINGABE");
            //140 FORMAT (1H ,'***UNZULAESSIGE DATENEINGABE')
            goto label2880;
            
        label150:
            if (ZELUE1 != 0) goto label300;
            if (KV != 0) goto label300;
            sw16.WriteLine("0");
            sw16.WriteLine("   ZUSAETZLICHE UEBERSCHRIFTSKARTEN");
            sw16.WriteLine("   --------------------------------\n");
            //160 FORMAT(1H0,/,1X,2X,'ZUSAETZLICHE UEBERSCHRIFTSKARTEN',/,3X,32('-'),/);
            
            ZELUE1=1;
            goto label300;
            
        label170:
            KTTXX = 1;
            goto label300;
            
        label180:
            ZELV01=0;
            ZELV02=0;
            KTTXX=0;
            
        label190:
            ZELS30=0;
            ZELS40=0;
            ZELL1N=0;
            ZELUT1=0;
            ZELUA2=0;
            ZELHNN=0;
            ZELWNN=0;
            ZELK1N=0;
            ZELK2N=0;
            ZELL0N=0;
            ZELS20=0;
            ZELUE1=0;
            ZELUE2=0;
            ZELT23=0;
            ZELT5N=0;
            ZELT7N=0;
            ZELS30=0;
            ZELS40=0;
            ZELT3N=0;
            ZELPNN=0;
            ZELP1N=0;
            ZELP2N=0;
            ZELP3N=0;
            ZELP4N=0;
            ZELMNN=0;
            ZELM1N=0;
            ZELG1N=0;
            ZELG2N=0;
            ZELG3N=0;
            ZELG4N=0;
            ZELG5N=0;
            ZELPGN=0;

            if (KV != 0 && KZ3 != 2) 
                return;
            goto label300;
            
        label200:
            if (ZELV01 != 0) goto label100;
            sw16.WriteLine("0\n");
            //210 FORMAT(1H0,/);
            sw16.WriteLine("                                    E I N G A B E D A T E N - V A R I A N T E N R E C H N U N G");
            sw16.WriteLine("                                    -----------------------------------------------------------");
            //220 FORMAT(1H ,35X,'E I N G A B E D A T E N - V A R I A N T E N',' R E C H N U N G')
            //230 FORMAT(1H ,35X,61('-'))
            sw16.WriteLine("                                                     BASISSTAPEL - UNVERAENDERT");
            //240 FORMAT(1H ,52X,'BASISSTAPEL - UNVERAENDERT')
            ZELV01=1;
            goto label100;
            
        label250:
            if (ZELV02 != 0) 
                goto label100;
            sw16.WriteLine("0\n");
            sw16.WriteLine("                                    E I N G A B E D A T E N - V A R I A N T E N R E C H N U N G");
            sw16.WriteLine("                                    -----------------------------------------------------------");
            sw16.WriteLine("                                     BASISSTAPEL - GEAENDERT");
            //sw16.WriteLine("",260)
            //260 FORMAT(1H ,54X,'BASISSTAPEL - GEAENDERT')
            ZELV02=1;
            goto label100;
            
        label270:
            if (VV.Substring(2,0)  ==  " ") goto label300;
            if (ZELUE2 != 0) goto label300;
            if (KV != 0) goto label300;
            sw16.WriteLine("0\n");
            sw16.WriteLine("   NAMELIST-KARTEN");
            sw16.WriteLine("   ---------------");
            //290 FORMAT(1H0,/,1X,2X,'NAMELIST-KARTEN',/,3X,15('-'),/)
            ZELUE2=1;
            
        label300:
            if(KZ3 == 2)goto label310;
            if(KZ3 == 0  &&  KV  ==  0) 
                sw16.WriteLine("   {0}", FELD);
            goto label330;
            
        label310:
            sw16.WriteLine(" > {0}", FELD);
            //320 FORMAT(1X,'> ',20A4)
            
        label330:
            return;
            
        label340:
            if (ZELUA1 != 0) goto label380;
            if (KV != 0) goto label380;
            //sw16.WriteLine("",210)
            sw16.WriteLine("0\n");
            sw16.WriteLine("                                              E I N G A B E D A T E N - A U S L E G U N G");
            sw16.WriteLine("                                              -------------------------------------------");
            sw16.WriteLine("0\n");
            sw16.WriteLine("  {0} .PARALLELTURBINE", ZELPAR.ToString().PadLeft(2));
            sw16.WriteLine("   -------------------");
            //350 FORMAT(1H ,46X,'E I N G A B E D A T E N - A U S L E G U N G')
            //360 FORMAT(1H ,46X,45('-'))
            //370 FORMAT(1H0,/,2X,I2,' .PARALLELTURBINE',/,3X,18('-'))
            ZELUA1=1;
            ZELPAR=ZELPAR-1;
            
        label380:
            //GOTO(390,640,880,880,960,960,1050,1050),
            if(K2 == 1)     goto label390;
            if(K2 == 2)     goto label640;
            if(K2 == 3)     goto label880;
            if(K2 == 4)     goto label880;
            if(K2 == 5)     goto label960;
            if(K2 == 6)     goto label960;
            if(K2 == 7)     goto label1050;
            if(K2 == 8)     goto label1050;

        label390:
            //GOTO(400,530,590),
            if(K3 == 1)     goto label400;
            if(K3 == 2)     goto label530;
            if(K3 == 3)     goto label590;
            
        label400:
            if (KV != 0 && KZ3 != 2)    return;
            sw16.WriteLine("0");
            sw16.WriteLine("         PKES    TKES     HKES    DP %      DH   PTH(1/1)  PTH[1]/PTH(1/1)  PTH[2]/PTH(1/1)  PTH[3]/PTH(1/1)  PDE[1]  PDE[2]  PDE[3]");

            //410 FORMAT(1H0,/,1X,9X,'PKES',4X,'TKES',5X,'HKES',4X,'DP %',6X,'DH',
            //&3X,'PTH(1/1)',2X,'PTH[1]/PTH(1/1)',2X,'PTH[2]/PTH(1/1)',2X,
            //&'PTH[3]/PTH(1/1)',2X,'PDE[1]',2X,'PDE[2]',2X,'PDE[3]')
            sw16.WriteLine("+     |       |       |        |       |       |          |                |                |                |       |       |       |");
            //420 FORMAT(1H+,5X,'|',2(7X,'|'),8X,'|',2(7X,'|'),10X,3('|',16X),3('|',7X))
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //430 FORMAT(1H ,2X,65('--'))
            sw16.WriteLine("+     |       |       |        |       |       |          |                |                |                |       |       |       |");
            //sw16.WriteLine("",420)
            //READ(VV, 440)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            T11PK = Convert.ToDouble(VV.Substring(3,6));
            T11TK = Convert.ToDouble(VV.Substring(9,6));
            T11IK = Convert.ToDouble(VV.Substring(15,7));
            T11DP = Convert.ToDouble(VV.Substring(22,6));
            T11DI = Convert.ToDouble(VV.Substring(28,6));
            T11NTH = Convert.ToDouble(VV.Substring(34,9));
            T11NT[1] = Convert.ToDouble(VV.Substring(43,6));
            T11NT[2] = Convert.ToDouble(VV.Substring(49,6));
            T11NT[3] = Convert.ToDouble(VV.Substring(55,6));
            T11PD[1] = Convert.ToDouble(VV.Substring(61,6));
            T11PD[2] = Convert.ToDouble(VV.Substring(67,6));
            T11PD[3] = Convert.ToDouble(VV.Substring(73,6));
            //440 FORMAT (3A1,2F6.0,F7.0,2F6.0,F9.0,6F6.0)
            //WRITE(FELDS, 450)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "  " + Math.Round(T11PK,2).ToString().PadLeft(6) + "  " +
                Math.Round(T11TK,2).ToString().PadLeft(6) + "  " + Math.Round(T11IK,2).ToString().PadLeft(7) + Math.Round(T11DP,2).ToString().PadLeft(8) +
                Math.Round(T11DI,3).ToString().PadLeft(8) + "  " + Math.Round(T11NTH,3).ToString().PadLeft(9) + "           " + Math.Round(T11NT[1],4).ToString().PadLeft(6)
                + "           " + Math.Round(T11NT[2],4).ToString().PadLeft(6) +  "           " + Math.Round(T11NT[3],4).ToString().PadLeft(6) + "  " +
                Math.Round(T11PD[1],2).ToString().PadLeft(6) + "  " + Math.Round(T11PD[2],2).ToString().PadLeft(6) + "  " + Math.Round(T11PD[3],2).ToString().PadLeft(6);
            //450 FORMAT (1H ,2X,3A1,2X,F6.2,2X,F6.2,2X,F7.2,F8.3,F8.3,2X,F9.3,3(11X,F6.4),3(2X,F6.2))
            //WRITE(FELDT,420)
            FELDT = "+     |       |       |        |       |       |          |                |                |                |       |       |       |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS);
            //460 FORMAT (A)
            
        label470:
            if(KZ3 == 2)goto label480;
            if(KZ3 == 1)goto label500;
            goto label520;
            
        label480:
            sw16.WriteLine("+> ");
            //490 FORMAT(1H+,'> ')
            goto label520;
            
        label500:
            sw16.WriteLine("* ");
            //510 FORMAT(1H+,'* ')
            
        label520:
            return;

        label530:
            ZELT7N=0;
            ZELT5N=0;
            ZELT3N=0;
            if (KV != 0 && KZ3 != 2) return;
            if (KV != 0) goto label540;
            ZELPAR=ZELPAR+1;
            if (ZELPAR <= 1) goto label540;
            //sw16.WriteLine("",370) ZELPAR;
            sw16.WriteLine("0\n");
            sw16.WriteLine("  {0} .PARALLELTURBINE", ZELPAR.ToString().PadLeft(2));
            sw16.WriteLine("   -------------------");
            
        label540:
            sw16.WriteLine("0");
            sw16.WriteLine("            P10      T10       P1N        P20      T20        P2N        P30      T30       P3N        P40      T40       P4N     NRT");
            //550 FORMAT(1H0,/,1X,11X,'P10',6X,'T10',7X,'P1N',8X,'P20',6X,'T20',8X,'P2N',8X,'P30',6X,'T30',7X,'P3N',8X,'P40',6X,'T40',7X,'P4N',5X,'NRT')
            sw16.WriteLine("+     |        |        |         |          |        |          |          |        |         |          |        |         |");
            //sw16.WriteLine("",430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",560)
            sw16.WriteLine("+     |        |        |         |          |        |          |          |        |         |          |        |         |");
            
            //READ(VV, 570)
            //570 FORMAT (3A1,12F6.0,4X,I1)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            T12P[1] = Convert.ToDouble(VV.Substring(3,6));
            T12T[1] = Convert.ToDouble(VV.Substring(9,6));
            T12PN[1] = Convert.ToDouble(VV.Substring(15,6));
            T12P[2] = Convert.ToDouble(VV.Substring(21,6));
            T12T[2] = Convert.ToDouble(VV.Substring(27,6));
            T12PN[2] = Convert.ToDouble(VV.Substring(33,6));
            T12P[3] = Convert.ToDouble(VV.Substring(39,6));
            T12T[3] = Convert.ToDouble(VV.Substring(45,6));
            T12PN[3] = Convert.ToDouble(VV.Substring(51,6));
            T12P[4] = Convert.ToDouble(VV.Substring(57,6));
            T12T[4] = Convert.ToDouble(VV.Substring(63,6));
            T12PN[4] = Convert.ToDouble(VV.Substring(69,6));
            IUE = Convert.ToInt32(VV.Substring(79,1));
            //570 FORMAT (3A1,12F6.0,4X,I1)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(T12P[1],3).ToString().PadLeft(9) +
                Math.Round(T12T[1],2).ToString().PadLeft(9) + Math.Round(T12PN[1],4).ToString().PadLeft(10) + Math.Round(T12P[2],4).ToString().PadLeft(11) +
                Math.Round(T12T[2],2).ToString().PadLeft(9) + Math.Round(T12PN[2],4).ToString().PadLeft(11)+ Math.Round(T12P[3],4).ToString().PadLeft(11) +
                Math.Round(T12T[3],2).ToString().PadLeft(9) + Math.Round(T12PN[3],4).ToString().PadLeft(10)+ Math.Round(T12P[4],4).ToString().PadLeft(11) +
                Math.Round(T12T[4],2).ToString().PadLeft(9) + Math.Round(T12PN[4],4).ToString().PadLeft(10) + "       " + IUE;
            //580 FORMAT (1H ,2X,3A1,F9.3,F9.2,F10.4,F11.4,F9.2,F11.4,F11.4,F9.2,F10.4,F11.4,F9.2,F10.4,7X,I1)
            //WRITE(FELDT,560)
            FELDT = "+     |        |        |         |          |        |          |          |        |         |          |        |         |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label590:
            if (KV != 0 && KZ3 != 2) return;
            sw16.WriteLine("0");
            sw16.WriteLine("          WSOLL DEF FETA GES   FETA 1   FBEW 1   FETA 2   FBEW 2   FETA 3   FBEW 3   FETA 4   FBEW 4 R1 FETA R1 R2 FETA R2 R3 FETA R3");
            //610 FORMAT (1H+,5X,'|',8X,'|',3X,9('|',8X),3('|  |',7X))
            sw16.WriteLine("+     |        |   |        |        |        |        |        |        |        |        |        |  |       |  |       |  |       ");
            //sw16.WriteLine("",430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",610)  
            sw16.WriteLine("+     |        |   |        |        |        |        |        |        |        |        |        |  |       |  |       |  |       ");
            
            //READ(VV, 620)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            T13W = Convert.ToDouble(VV.Substring(3,7));
            I13DEF = Convert.ToInt32(VV.Substring(10,2));
            T13FEG = Convert.ToDouble(VV.Substring(12,5));
            T13FE1[1] = Convert.ToDouble(VV.Substring(17,5));
            T13FBE[1] = Convert.ToDouble(VV.Substring(22,5));
            T13FE1[2] = Convert.ToDouble(VV.Substring(27,5));
            T13FBE[2] = Convert.ToDouble(VV.Substring(32,5));
            T13FE1[3] = Convert.ToDouble(VV.Substring(37,5));
            T13FBE[3] = Convert.ToDouble(VV.Substring(42,5));
            T13FE1[4] = Convert.ToDouble(VV.Substring(47,5));
            T13FBE[4] = Convert.ToDouble(VV.Substring(52,5));
            I13FR1[1] = Convert.ToInt32(VV.Substring(57,1));
            T13R1[1] = Convert.ToDouble(VV.Substring(58,5));
            I13FR1[2] = Convert.ToInt32(VV.Substring(63,1));
            T13R1[2] = Convert.ToDouble(VV.Substring(64,5));
            I13FR1[3] = Convert.ToInt32(VV.Substring(69,1));
            T13R1[3] = Convert.ToDouble(VV.Substring(70,5));
            //620 FORMAT (3A1,F7.0,I2,9F5.4,3(I1,F5.4))
            //WRITE(FELDS, 630)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(T13W,2).ToString().PadLeft(9) + I13DEF.ToString().PadLeft(4) + 
                Math.Round(T13FEG,4).ToString().PadLeft(9) + Math.Round( T13FE1[1],4).ToString().PadLeft(9) + Math.Round(T13FBE[1],4).ToString().PadLeft(9)
                 + Math.Round(T13FE1[2],4).ToString().PadLeft(9) + Math.Round(T13FBE[2],4).ToString().PadLeft(9) + Math.Round(T13FE1[3],4).ToString().PadLeft(9) +
                 Math.Round(T13FBE[3],4).ToString().PadLeft(9) + Math.Round(T13FE1[4],4).ToString().PadLeft(9) + Math.Round(T13FBE[4],4).ToString().PadLeft(9) +
                 I13FR1[1].ToString().PadLeft(3) + Math.Round(T13R1[1],4).ToString().PadLeft(8) + I13FR1[1].ToString().PadLeft(3) + Math.Round(T13R1[1],4).ToString().PadLeft(8) +
                 I13FR1[1].ToString().PadLeft(3) + Math.Round(T13R1[1],4).ToString().PadLeft(8);
            //630 FORMAT (1H ,2X,3A1,F9.2,I4,9F9.4,3(I3,F8.4))
            //WRITE(FELDT,610)
            FELDT = "+     |        |   |        |        |        |        |        |        |        |        |        |  |       |  |       |  |       ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label640:
            //GOTO(650,720,790,790,790,790),
            if(K3 == 1)     goto label650;
            if(K3 == 2)     goto label720;
            if(K3 == 3)     goto label790;
            if(K3 == 4)     goto label790;
            if(K3 == 5)     goto label790;
            if(K3 == 6)     goto label790;

        label650:
            if (KV != 0 && KZ3 != 2) return;
            sw16.WriteLine("0");
            sw16.WriteLine("                                                                 G E N E R A T O R W I R K U N G S G R A D");
            sw16.WriteLine("+                                                              |                                           |");
            //670 FORMAT(1H+,61X,'|',43X,'|')
            sw16.WriteLine("             M FD      M ABD   P GEN      P KL          DPMECH         100%       75%       50%       25%      M FIX  LFIX  LVAR   IT");
            sw16.WriteLine("+     |          |          |       |         |       |       |             |         |         |         |         |     |     |");
            //sw16.WriteLine("",430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",710)
            sw16.WriteLine("+     |          |          |       |         |       |       |             |         |         |         |         |     |     |");
            
            //READ(VV, 690)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            T21FDM = Convert.ToDouble(VV.Substring(3,9));
            T21ABD = Convert.ToDouble(VV.Substring(12,9));
            T21NMX = Convert.ToDouble(VV.Substring(21,6));
            T21NNM = Convert.ToDouble(VV.Substring(27,9));
            T21NMI = Convert.ToDouble(VV.Substring(36,6));
            T21NME = Convert.ToDouble(VV.Substring(42,6));
            T21EGT[1] = Convert.ToDouble(VV.Substring(48,4));
            T21EGT[2] = Convert.ToDouble(VV.Substring(52,4));
            T21EGT[3] = Convert.ToDouble(VV.Substring(56,4));
            T21EGT[4] = Convert.ToDouble(VV.Substring(60,4));
            T21GFI = Convert.ToDouble(VV.Substring(64,9));
            I21LFI = Convert.ToInt32(VV.Substring(73,2));
            I21LVA = Convert.ToInt32(VV.Substring(75,2));
            I21IT = Convert.ToInt32(VV.Substring(77,1));
            //690 FORMAT (3A1,2F9.0,F6.0,F9.0,2F6.0,4F4.4,F9.0,2I3,I1)
            
            //WRITE(FELDS, 700)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + " "+ Math.Round(T21FDM,3).ToString().PadLeft(9) + "  " +
                Math.Round(T21ABD,3).ToString().PadLeft(9) + "  " + Math.Round(T21NMX,1).ToString().PadLeft(6) + "  " + Math.Round(T21NNM,3).ToString().PadLeft(8) + "  " + 
                Math.Round(T21NMI,1).ToString().PadLeft(6) + "  "  + Math.Round(T21NME,3).ToString().PadLeft(6) + "        "  + Math.Round(T21EGT[1],4).ToString().PadLeft(5) + "     "  +
                Math.Round(T21EGT[2],4).ToString().PadLeft(5) + "     "  + Math.Round(T21EGT[3],4).ToString().PadLeft(5) + "     "  + Math.Round(T21EGT[4],4).ToString().PadLeft(5) + "  "  +
                Math.Round(T21GFI,3).ToString().PadLeft(9) + "   " + I21LFI.ToString().PadLeft(3) + "   " + I21LVA.ToString().PadLeft(3) + "    " + I21IT.ToString().PadLeft(1);
            //700 FORMAT (1H ,2X,3A1,2X,F9.3,2X,F9.3,2X,F6.1,2X,F8.3,2X,F6.1,2X,F6.3,8X,F5.4,3(5X,F5.4),2X,F9.3,2(3X,I3),4X,I1)
            
            FELDT = "+     |          |          |       |         |       |       |             |         |         |         |         |     |     |";
            //710 FORMAT(1H+,5X,'|',2(10X,'|'),7X,'|',9X,'|',2(7X,'|'),13X,'|',4(9X,'|'),2(5X,'|'))
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label720:
            if (KV != 0 && KZ3 != 2) return;
            sw16.WriteLine("0");
            sw16.WriteLine("        MAX1  MIN1  MAX2  MIN2  MAX3  MIN3   UEBERLAST-EINLEITUNG   D T H-TEILTURB K          D T M-TEILTURB K  D T   N-TEILTURB ST K");
            //sw16.WriteLine("",740)
            sw16.WriteLine("+     |     |     |     |     |     |     |                       |                 |       |                 |");
            //sw16.WriteLine("",750)
            sw16.WriteLine("         /M    /M    /M    /M    /M    /M  1.BA1 2.BA1   BA2   BA3  A Y  N  K1  K2 3 TYP  K2  A Y  N  K1  K2 3 A Y N F ND NR FZ 3");
            //sw16.WriteLine("",760)
            sw16.WriteLine("+     |     |     |     |     |     |     |     |     |     |     |                 |       |                 |");
            //sw16.WriteLine("",430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",760)
            sw16.WriteLine("+     |     |     |     |     |     |     |     |     |     |     |                 |       |                 |");
            //READ(VV,770)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            T22GMA[1] = Convert.ToDouble(VV.Substring(3,3));
            T22GMI[1] = Convert.ToDouble(VV.Substring(6,3));
            T22GMA[2] = Convert.ToDouble(VV.Substring(8,3));
            T22GMI[2] = Convert.ToDouble(VV.Substring(12,3));
            T22GMA[3] = Convert.ToDouble(VV.Substring(15,3));
            T22GMI[3] = Convert.ToDouble(VV.Substring(18,3));
            T22UEL[1] = Convert.ToDouble(VV.Substring(21,4));
            T22UEL[2] = Convert.ToDouble(VV.Substring(25,4));
            T22UEL[3] = Convert.ToDouble(VV.Substring(29,4));
            T22UEL[4] = Convert.ToDouble(VV.Substring(33,4));
            T22DAH = VV.Substring(37,1);
            T22TPH = VV.Substring(38,1);
            I22N1H = Convert.ToInt32(VV.Substring(39,2));
            I22K1H = Convert.ToInt32(VV.Substring(41,3));
            T22K2H = VV.Substring(44,3);
            T22K3H = VV.Substring(47,1);
            T22TP = VV.Substring(49,1);
            I22K2 = Convert.ToInt32(VV.Substring(54,3));
            T22DAM = VV.Substring(57,1);
            T22TPM = VV.Substring(58,1);
            I22N1M = Convert.ToInt32(VV.Substring(59,1));
            I22K1M = Convert.ToInt32(VV.Substring(61,3));
            T22K2M = VV.Substring(64,3);
            T22K3M = VV.Substring(67,1);
            T22DAN = VV.Substring(68,1);
            T22TPN = VV.Substring(69,1);
            I22N1N = Convert.ToInt32(VV.Substring(70,2));
            I22FLN = Convert.ToInt32(VV.Substring(72,1));
            T22FL = Convert.ToDouble(VV.Substring(73,3));
            I22NR = Convert.ToInt32(VV.Substring(76,1));
            I22STF = Convert.ToInt32(VV.Substring(77,2));
            T22K3N = VV.Substring(79,1);
            //770 FORMAT (3A1,6F3.2,4F4.0,2A1,I2,I3,A3,A1,1X,A1,4X,I3, 2A1,I2,I3,A3,A1,2A1,I2,I1,F3.1,I1,I2,A1)
            
            //WRITE(FELDS,780)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + " " + Math.Round(T22GMA[1],2).ToString().PadLeft(5) + " " + 
                Math.Round(T22GMI[1],2).ToString().PadLeft(5) + " " + Math.Round(T22GMA[2],2).ToString().PadLeft(5) + " " + Math.Round(T22GMI[2],2).ToString().PadLeft(5) + " " +
                Math.Round(T22GMA[3],2).ToString().PadLeft(5) + " " + Math.Round(T22GMI[3],2).ToString().PadLeft(5) + Math.Round(T22UEL[1],1).ToString().PadLeft(6) +
                Math.Round(T22UEL[2],1).ToString().PadLeft(6) + Math.Round(T22UEL[3],1).ToString().PadLeft(6) + Math.Round(T22UEL[4],1).ToString().PadLeft(6) + "  " + T22DAH.ToString().PadLeft(1) + " " +
                T22TPH.ToString().PadLeft(1) + I22N1H.ToString().PadLeft(3) + I22K1H.ToString().PadLeft(4) + " " + T22K2H.ToString().PadLeft(3) + " " + 
                T22K3H.ToString().PadLeft(1) + "   " + T22TP.ToString().PadLeft(1) + " " + I22K2.ToString().PadLeft(3) + "  " + T22DAM.ToString().PadLeft(1) + " " +
                T22TPM.ToString().PadLeft(1) + I22N1M.ToString().PadLeft(3) + I22K1M.ToString().PadLeft(4) + " " + T22K2M.ToString().PadLeft(3) + " " + 
                T22K3M.ToString().PadLeft(1) + "  " + T22DAN.ToString().PadLeft(1) + " " + T22TPN.ToString().PadLeft(1) + " " + I22N1N.ToString().PadLeft(2) + " " + 
                I22FLN.ToString().PadLeft(1) + " " + Math.Round(T22FL,1).ToString().PadLeft(4) + "  " + I22NR.ToString().PadLeft(1) + " " + I22STF.ToString().PadLeft(2) + T22K3N.ToString().PadLeft(1);
            //780 FORMAT (1H ,2X,3A1,6(1X,F5.2),4F6.1,2X,A1,1X,A1,I3,I4,1X,A3,1X,A1,
            //&3X,A1,1X,I3,2X,A1,1X,A1,I3,I4,1X,A3,1X,A1,2X,2(A1,1X),I2,1X,I1,1X,
            //&F4.1,2X,I1,1X,I2,1X,A1)
            
            //WRITE(FELDT,760)
            FELDT = "+     |     |     |     |     |     |     |     |     |     |     |                 |       |                 |              ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            
            sb = new StringBuilder(FELDS);
            if (FELDS.Substring(72,2)  ==  " 0") 
            {
                //FELDS( 73: 74) = "  ";
                sb.Remove(72,2);
                sb.Insert(72,"  ");
            }
            if (FELDS.Substring(76,2)  ==  " 0")    //FELDS( 77: 78) = "  ";
            {
                sb.Remove(76,2);
                sb.Insert(76,"  ");
            }
            if (FELDS.Substring(102,2)  ==  " 0")   //FELDS(103:104) = "  ";
            {
                sb.Remove(102,2);
                sb.Insert(102,"  ");
            }
            if (FELDS.Substring(106,2)  ==  " 0")   //FELDS(107:108) = "  ";
            {
                sb.Remove(106,2);
                sb.Insert(106,"  ");
            }
            if (FELDS.Substring(131,2)  ==  " 0")   //FELDS(132:133) = "  ";
            {
                sb.Remove(131,2);
                sb.Insert(131,"  ");
            }
            FELDS = sb.ToString();
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;
            
        label790:
            ZELT3N=0;
            ZELT5N=0;
            ZELT7N=0;
            if (KV != 0 && KZ3 != 2) return;
            if(ZELT23 != 0) goto label850;
            sw16.WriteLine("0");
            sw16.WriteLine("               SS - VENTILE    S T E L L  -  V E N T I L E          BEAUFSCHL. DER REGELSTUFE    EINSTROEMUNG  NUVD - 3    FDV - 3");
            sw16.WriteLine("+            |             |                                   |             |          |");
            //810 FORMAT(1H+,12X,'|',13X,'|',35X,'|',31X,'|',13X,'|',10X,'|')
            sw16.WriteLine("        DP %  Z    O   ZETA   O 1   O 2   O 3   O 4   O 5  ZETA Z    B1    B2    B3    B4    B5 Z    O   ZETA TYP   O ZV TYP   O ZV");
            //820 FORMAT (1H ,7X,'DP % Z O ZETA O 1 O 2 O 3 O 4',' O 5 ZETA Z B1 B2 B3 B4 B5 Z O ZETA ','TYP O ZV TYP O ZV')
            sw16.WriteLine("+     |      | |   / |     |  /  |  /  |  /  |  /  |  /  |     | |     |     |     |     |     | |   / |     |      /   |      /    ");
            //830 FORMAT(1H+,5X,'|',6X,'| | / | |',5(2X,'/ |'),5X,'| |',5(5X,'|'),' | / | |',6X,'/ |',6X,'/')
            //sw16.WriteLine("",430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |      |  |     |     |     |     |     | |     |     |     |     | |     |     |          |      ");
            //840 FORMAT(1H+,5X,'|',6X,'| |',8(5X,'|'),' |',5(5X,'|'),' |',2(5X,'|'),10X,'|')
            ZELT23=1;
            
        label850:
            //READ(VV, 860)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            T23DPB = Convert.ToDouble(VV.Substring(3,5));
            I23ASV = Convert.ToInt32(VV.Substring(8,1));
            T23DSV = Convert.ToDouble(VV.Substring(9,4));
            T23ZSV = Convert.ToDouble(VV.Substring(13,4));
            T23VEN[1] = Convert.ToDouble(VV.Substring(17,4));
            T23VEN[2] = Convert.ToDouble(VV.Substring(21,4));
            T23VEN[3] = Convert.ToDouble(VV.Substring(25,4));
            T23VEN[4] = Convert.ToDouble(VV.Substring(29,4));
            T23VEN[5] = Convert.ToDouble(VV.Substring(33,4));
            T23ZET = Convert.ToDouble(VV.Substring(37,4));
            I23NRV = Convert.ToInt32(VV.Substring(41,1));
            T23EPS[1] = Convert.ToDouble(VV.Substring(42,5));
            T23EPS[2] = Convert.ToDouble(VV.Substring(47,5));
            T23EPS[3] = Convert.ToDouble(VV.Substring(52,5));
            T23EPS[4] = Convert.ToDouble(VV.Substring(57,5));
            T23EPS[5] = Convert.ToDouble(VV.Substring(62,5));
            I23AES = Convert.ToInt32(VV.Substring(67,1));
            T23DEI = Convert.ToDouble(VV.Substring(68,4));
            T23ZEI = Convert.ToDouble(VV.Substring(72,4));
            T23TPN = VV.Substring(76,1);
            I23NUV = Convert.ToInt32(VV.Substring(77,4));
            I23ZV = Convert.ToInt32(VV.Substring(81,2));
            T23TPF = VV.Substring(83,1);
            I23FDV = Convert.ToInt32(VV.Substring(84,4));
            I23ZV1 = Convert.ToInt32(VV.Substring(88,2));
            //860 FORMAT (3A1,F5.0,I1,F4.0,F4.2,5F4.0,F4.2,I1,5F3.3,I1,F4.0,F4.2,2(A1,I4,I2))

            //WRITE(FELDS, 870)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(T23DPB,3).ToString().PadLeft(7) + I23ASV.ToString().PadLeft(2) +
                Math.Round(T23DSV,0).ToString().PadLeft(6) + Math.Round(T23ZSV,2).ToString().PadLeft(6) + Math.Round(T23VEN[1],0).ToString().PadLeft(6) + Math.Round(T23VEN[2],0).ToString().PadLeft(6) +
                Math.Round(T23VEN[3],0).ToString().PadLeft(6) + Math.Round(T23VEN[4],0).ToString().PadLeft(6) + Math.Round(T23VEN[5],0).ToString().PadLeft(6) +
                Math.Round(T23ZET,2).ToString().PadLeft(6) + I23NRV.ToString().PadLeft(2) +  Math.Round(T23EPS[1],3).ToString().PadLeft(6) +  Math.Round(T23EPS[2],3).ToString().PadLeft(6) +
                Math.Round(T23EPS[3],3).ToString().PadLeft(6) +  Math.Round(T23EPS[4],3).ToString().PadLeft(6) + Math.Round(T23EPS[5],3).ToString().PadLeft(6) + I23AES.ToString().PadLeft(2) + 
                Math.Round(T23DEI,0).ToString().PadLeft(6) + Math.Round(T23ZEI,2).ToString().PadLeft(6) + "  " + T23TPN.ToString().PadLeft(1) + I23NUV.ToString().PadLeft(5) +
                I23ZV.ToString().PadLeft(3) + "  " + T23TPF.ToString().PadLeft(1) + I23FDV.ToString().PadLeft(5) + I23ZV1.ToString().PadLeft(3);
            //870 FORMAT (1H ,2X,3A1,F7.3,I2,F6.0,F6.2,5F6.0,F6.2,I2,5F6.3,I2,F6.0,F6.2,2(2X,A1,I5,I3))
            //WRITE(FELDT,840)
            FELDT = "+     |      |  |     |     |     |     |     | |     |     |     |     | |     |     |          |      ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;
            
        label880:
            ZELT23=0;
            ZELT5N=0;
            ZELT7N=0;
            if (KV != 0 && KZ3 != 2)    return;
            if(ZELT3N != 0)     goto label930;
            
            sw16.WriteLine("0");
            sw16.WriteLine("                 DP STFZ                                    B-  B-                  AB- AB- AB- AB- Z- Z-                  P");
            sw16.WriteLine("+             |    |    |    |    |                                  |   |   |               |   |   |   |   |  |  |                | |");
            sw16.WriteLine("       LTG LTG    % /KRZ  DI E  DI A   EPS     H FL   P-GEG MAX 1/1 LTG LTG LTG LTG LTG LTG LTG LTG LE LA  S-LE  S-LA  SAX N    N TYP");
            sw16.WriteLine("+     |   |   |    |    |     |     |     |     |  |       |   |   |   |   |   |   |   |   |   |   |  |  |     |     |    | |     |");
            //sw16.WriteLine("",430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |   |   |    |    |     |     |     |     |  |       |   |   |   |   |   |   |   |   |   |   |  |  |     |     |    | |     |");
            ZELT3N=1;
            
        label930:
            //READ(VV, 940)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            I3L1N = Convert.ToInt32(VV.Substring(3,3));
            I3L2N = Convert.ToInt32(VV.Substring(6,3));
            T3DP = Convert.ToDouble(VV.Substring(9,2));
            I3STKZ = Convert.ToInt32(VV.Substring(11,2));
            T3DIA = Convert.ToDouble(VV.Substring(13,4));
            T3DIO = Convert.ToDouble(VV.Substring(17,4));
            T3EPS = Convert.ToDouble(VV.Substring(21,4));
            T3HW = Convert.ToDouble(VV.Substring(25,4));
            I3FL = Convert.ToInt32(VV.Substring(29,2));
            T3PGEG = Convert.ToDouble(VV.Substring(31,6));
            T3EMAX = Convert.ToDouble(VV.Substring(37,2));
            T3EPS1 = Convert.ToDouble(VV.Substring(39,2));
            I3L[1] = Convert.ToInt32(VV.Substring(41,3));
            I3L[2] = Convert.ToInt32(VV.Substring(44,3));
            I3L[3] = Convert.ToInt32(VV.Substring(47,3));
            I3L[4] = Convert.ToInt32(VV.Substring(50,3));
            I3L[5] = Convert.ToInt32(VV.Substring(53,2));
            I3L[6] = Convert.ToInt32(VV.Substring(55,2));
            I3L[7] = Convert.ToInt32(VV.Substring(57,2));
            I3L[8] = Convert.ToInt32(VV.Substring(59,2));
            I3ZLE = Convert.ToInt32(VV.Substring(61,1));
            I3ZLA = Convert.ToInt32(VV.Substring(62,1));
            T3SLE = Convert.ToDouble(VV.Substring(63,3));
            T3SLA = Convert.ToDouble(VV.Substring(66,3));
            T3SAX = Convert.ToDouble(VV.Substring(69,3));
            I3PRO = Convert.ToInt32(VV.Substring(72,1));
            T3N = Convert.ToDouble(VV.Substring(73,4));
            T3TYP = VV.Substring(77,1);
            //940 FORMAT (3A1,2I3,F2.1,I2,2F4.0,F4.4,F4.0,I2,F6.0,2F2.2,4I3,4I2,2I1,2F3.2,F3.1,I1,F4.0,A1)
            
            //WRITE(FELDS, 950)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + I3L1N.ToString().PadLeft(3) + I3L2N.ToString().PadLeft(3) +
                "  " + Math.Round(T3DP,1).ToString().PadLeft(3) + "   " + I3STKZ.ToString().PadLeft(2) + " " + Math.Round(T3DIA,0).ToString().PadLeft(5) + " " + 
                Math.Round(T3DIO,0).ToString().PadLeft(5) + " " + Math.Round(T3EPS,4).ToString().PadLeft(5) + Math.Round(T3HW,0).ToString().PadLeft(5) + " " +
                I3FL.ToString().PadLeft(2) + " " + Math.Round(T3PGEG,3).ToString().PadLeft(7) + " " + Math.Round(T3EMAX,2).ToString().PadLeft(3) + " " +
                Math.Round(T3EPS1,2).ToString().PadLeft(3) + " " + I3L[1].ToString().PadLeft(3) + " " + I3L[2].ToString().PadLeft(3) + " " + 
                I3L[3].ToString().PadLeft(3) + " " + I3L[4].ToString().PadLeft(3) + "  " + I3L[5].ToString().PadLeft(2) + "  " + I3L[6].ToString().PadLeft(2) + "  " +
                I3L[7].ToString().PadLeft(2) + "  " + I3L[8].ToString().PadLeft(2) + " " + I3ZLE.ToString().PadLeft(2) + " " + I3ZLA.ToString().PadLeft(2) + " " + 
                Math.Round(T3SLE,2).ToString().PadLeft(5) + " " + Math.Round(T3SLA,2).ToString().PadLeft(5) + " " + Math.Round(T3SAX,1).ToString().PadLeft(4) + 
                I3PRO.ToString().PadLeft(1) + " " + Math.Round(T3N,0).ToString().PadLeft(5) + "  " + T3TYP.ToString().PadLeft(1);
            //950 FORMAT (1H ,2X,3A1,2(1X,I3),2X,F3.1,3X,I2,2(1X,F5.0),1X,F5.4,1X,F5.0,1X,I2,1X,F7.3,2(1X,F3.2),4(1X,I3),4(2X,I2),2(1X,I2),2(1X,F5.2),1X,F4.1,1X,I1,1X,F5.0,2X,A1)
            //WRITE(FELDT,920)
            FELDT = "+     |   |   |    |    |     |     |     |     |  |       |   |   |   |   |   |   |   |   |   |   |  |  |     |     |    | |     |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label960:
            ZELT3N=0;
            ZELT23=0;
            ZELT7N=0;
            if (KV != 0 && KZ3 != 2) return;
            if(ZELT5N != 0)goto label1020;
            sw16.WriteLine("0");
            sw16.WriteLine("                                                                                       <--ANZAPFUNG-->");
            sw16.WriteLine("+                                                                                      |               |");
            sw16.WriteLine("       F  LAMIN  LAMAX  D-LA K  SAX P-N  EPS DART  Z-LE  Z-LA  S-LE  S-LA  KF- E  KF- A Z   0STZ   ZETA HE-MIN HE-MAX HA-MIN HA-MAX");
            sw16.WriteLine("+     | |      |      |     | |    |   |    |    |     |     |     |     |      |      | |  /   |      |      |      |      |      |");
            //write(16,430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     | |      |      |     | |    |   |    |    |     |     |     |     |      |      | |      |      |      |      |      |      |");
            ZELT5N=1;
            
        label1020:
            //READ(VV, 1030)
            X = Convert.ToInt32(VV.Substring(0,1));
            Y = Convert.ToInt32(VV.Substring(1,1));
            Z = Convert.ToInt32(VV.Substring(2,1));
            I5LFNR = Convert.ToInt32(VV.Substring(3,1));
            T5LAMI = Convert.ToDouble(VV.Substring(6,4));
            T5LAMA = Convert.ToDouble(VV.Substring(10,4));
            T5DLA = Convert.ToDouble(VV.Substring(13,3));
            I5K = Convert.ToInt32(VV.Substring(16,1));
            T5SAX = Convert.ToDouble(VV.Substring(17,3));
            I5PRNR = Convert.ToInt32(VV.Substring(20,1));
            T5EPS = Convert.ToDouble(VV.Substring(21,3));
            T5ART = VV.Substring(24,1);
            T5ZLE = Convert.ToDouble(VV.Substring(25,3));
            T5ZLA = Convert.ToDouble(VV.Substring(28,3));
            T5KFA = Convert.ToDouble(VV.Substring(37,3));
            T5KFO = Convert.ToDouble(VV.Substring(40,3));
            I5Z = Convert.ToInt32(VV.Substring(43,1));
            T5DANZ = Convert.ToDouble(VV.Substring(44,4));
            T5ZETA = Convert.ToDouble(VV.Substring(48,4));
            T5HAMI = Convert.ToDouble(VV.Substring(52,4));
            T5HAMA = Convert.ToDouble(VV.Substring(56,4));
            T5HOMI = Convert.ToDouble(VV.Substring(60,4));
            T5HOMA = Convert.ToDouble(VV.Substring(64,4));
            //1030 FORMAT (3A1,I1,2F4.0,F3.0,I1,F3.1,I1,F3.3,A1,2F3.2,6X,2F3.2,I1,F4.0,F4.2 ,4F4.0)
            
            //WRITE(FELDS, 1040)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + I5LFNR.ToString().PadLeft(2) + Math.Round(T5LAMI,1).ToString().PadLeft(7) + Math.Round(T5LAMA,1).ToString().PadLeft(7) + Math.Round(T5DLA,1).ToString().PadLeft(6) + 
                I5K.ToString().PadLeft(2) + Math.Round(T5SAX,1).ToString().PadLeft(5) + I5PRNR.ToString().PadLeft(4) + " " + Math.Round(T5EPS,3).ToString().PadLeft(4) + "    " + T5ART.PadLeft(1) + Math.Round(T5ZLE,2).ToString().PadLeft(6) + Math.Round(T5ZLA,2).ToString().PadLeft(6) + "            " + 
                Math.Round(T5KFA,2).ToString().PadLeft(7) + Math.Round(T5KFO,2).ToString().PadLeft(7) + I5Z.ToString().PadLeft(2) + Math.Round(T5DANZ,1).ToString().PadLeft(7) + Math.Round(T5ZETA,2).ToString().PadLeft(7) + Math.Round(T5HAMI,1).ToString().PadLeft(7) + Math.Round(T5HAMA,1).ToString().PadLeft(7) + 
                Math.Round(T5HOMI,1).ToString().PadLeft(7) + Math.Round(T5HOMA,1).ToString().PadLeft(7);
            //1040 FORMAT (1H ,2X,3A1,I2,2F7.1,F6.1,I2,F5.1,I4,1X,F4.3,4X,A1,2F6.2,12X,2F7.2,I2,F7.1,F7.2,4F7.1)
            //WRITE(FELDT,1010)
            FELDT = "+     | |      |      |     | |    |   |    |    |     |     |     |     |      |      | |      |      |      |      |      |      |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470; 

        label1050:
            ZELT5N=0;
            ZELT3N=0;
            ZELT23=0;
            if (KV != 0 && KZ3 != 2) return;
            if(ZELT7N != 0)goto label1080;
            sw16.WriteLine("0");
            sw16.WriteLine("                       1. ABSAUGUNG                              2. ABSAUGUNG                              3. ABSAUGUNG");
            sw16.WriteLine("+       |                                        |                                         |        ");
            sw16.WriteLine("      F DART     D     S  Z (L)     T      P LTG  DART     D     S  Z (L)     T      P LTG  DART     D     S  Z (L)     T      P LTG");
            sw16.WriteLine("+     | |    |     |     |      |     |      |   |     |     |     |      |     |      |   |     |     |     |      |     |      |    ");
            //sw16.WriteLine("",430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     | |    |     |     |      |     |      |   |     |     |     |      |     |      |   |     |     |     |      |     |      |    ");
            ZELT7N=1;
            
        label1080:
            //READ(VV,1090)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            I7LFNR = Convert.ToInt32(VV.Substring(3,1));
            T7ART[1] = VV.Substring(4,1);
            T7DW[1] = Convert.ToDouble(VV.Substring(5,4));
            T7SPI[1] = Convert.ToDouble(VV.Substring(9,3));
            T7Z[1] = Convert.ToDouble(VV.Substring(12,4));
            T7T[1] = Convert.ToDouble(VV.Substring(16,3));
            T7PAB[1] = Convert.ToDouble(VV.Substring(19,5));
            I7LTG[1] = Convert.ToDouble(VV.Substring(24,2));
            T7ART[2] = VV.Substring(26,1);
            T7DW[2] = Convert.ToDouble(VV.Substring(27,4));
            T7SPI[2] = Convert.ToDouble(VV.Substring(31,3));
            T7Z[2] = Convert.ToDouble(VV.Substring(34,4));
            T7T[2] = Convert.ToDouble(VV.Substring(38,3));
            T7PAB[2] = Convert.ToDouble(VV.Substring(41,5));
            I7LTG[2] = Convert.ToDouble(VV.Substring(46,2));
            T7ART[3] = VV.Substring(48,1);
            T7DW[3] = Convert.ToDouble(VV.Substring(49,4));
            T7SPI[3] = Convert.ToDouble(VV.Substring(53,3));
            T7Z[3] = Convert.ToDouble(VV.Substring(56,4));
            T7T[3] = Convert.ToDouble(VV.Substring(60,3));
            T7PAB[3] = Convert.ToDouble(VV.Substring(63,5));
            I7LTG[3] = Convert.ToDouble(VV.Substring(68,2));
            //1090 FORMAT (3A1,I1,3(A1,F4.0,F3.2,F4.1,F3.2,F5.0,I2))
            //WRITE(FELDS,1100)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + " " + I7LFNR.ToString().PadLeft(1) +
                "    " + T7ART[1].ToString().PadLeft(1) + " " + Math.Round(T7DW[1],0).ToString().PadLeft(5) + Math.Round(T7SPI[1],2).ToString().PadLeft(6) + Math.Round(T7Z[1],2).ToString().PadLeft(7) + Math.Round(T7T[1],2).ToString().PadLeft(6) + Math.Round(T7PAB[1],2).ToString().PadLeft(7) + I7LTG[1].ToString().PadLeft(4) + " " +
                "    " + T7ART[2].ToString().PadLeft(1) + " " + Math.Round(T7DW[2],0).ToString().PadLeft(5) + Math.Round(T7SPI[2],2).ToString().PadLeft(6) + Math.Round(T7Z[2],2).ToString().PadLeft(7) + Math.Round(T7T[2],2).ToString().PadLeft(6) + Math.Round(T7PAB[2],2).ToString().PadLeft(7) + I7LTG[2].ToString().PadLeft(4) + " " +
                "    " + T7ART[3].ToString().PadLeft(1) + " " + Math.Round(T7DW[3],0).ToString().PadLeft(5) + Math.Round(T7SPI[3],2).ToString().PadLeft(6) + Math.Round(T7Z[3],2).ToString().PadLeft(7) + Math.Round(T7T[3],2).ToString().PadLeft(6) + Math.Round(T7PAB[3],2).ToString().PadLeft(7) + I7LTG[3].ToString().PadLeft(4) + " ";
            //1100 FORMAT (1H ,2X,3A1,1X,I1,2(4X,A1,1X,F5.0,2(F6.2,F7.2),I4,1X) 4X,A1,1X,F5.0,2(F6.2,F7.2),I4)
            //WRITE(FELDT,1070)
            FELDT = "+     | |    |     |     |      |     |      |   |     |     |     |      |     |      |   |     |     |     |      |     |      |    ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;
            
        label1180:
            //GOTO(1190,1260,1310,1380),
            if(K3 == 1)     goto label1190;
            if(K3 == 2)     goto label1260;
            if(K3 == 3)     goto label1310;
            if(K3 == 4)     goto label1380;

        label1190:
            ZELT7N=0;
            ZELT5N=0;
            ZELT3N=0;
            if (KV != 0 && KZ3 != 2) 
                return;
            sw16.WriteLine("0");
            sw16.WriteLine("           N- N-                     P/T         K            DP    DP                                  N O R M S C H A L T U N G");
            sw16.WriteLine("+         |  |  |                |      |      |  |      |      |     |                              |  ");
            sw16.WriteLine("        NV HD ND     PEND           ENTG  PEMIN  E            HD    ND                                K1 K2 K3 K4 K5 K6 K7 K8 K9 K10 ");
            sw16.WriteLine("+     |   |  |  |        |       |      |      |  |      |      |     |                              |  |  |  |  |  |  |  |  |  |     "); 
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",1230)
            sw16.WriteLine("+     |   |  |  |        |       |      |      |  |      |      |     |                              |  |  |  |  |  |  |  |  |  |     "); 
            
            //READ(VV,1240)
            X = Convert.ToInt32(VV.Substring(0,1));
            Y = Convert.ToInt32(VV.Substring(1,1));
            Z = Convert.ToInt32(VV.Substring(2,1));
            I01NV = Convert.ToInt32(VV.Substring(3,2));
            I01NHD = Convert.ToInt32(VV.Substring(5,1));
            I01NND = Convert.ToInt32(VV.Substring(6,1));
            A01PE = Convert.ToDouble(VV.Substring(7,6));
            A01PEN = Convert.ToDouble(VV.Substring(13,4));
            A01TPM = Convert.ToDouble(VV.Substring(17,5));
            A01PMI = Convert.ToDouble(VV.Substring(22,5));
            I01KE = Convert.ToInt32(VV.Substring(27,1));
            A01NPR = Convert.ToDouble(VV.Substring(28,4));
            A01DPH = Convert.ToDouble(VV.Substring(32,4));
            A01DPN = Convert.ToDouble(VV.Substring(36,4));
            A01KRL[1] = VV.Substring(70,1);
            A01KRL[2] = VV.Substring(71,1);
            A01KRL[3] = VV.Substring(72,1);
            A01KRL[4] = VV.Substring(73,1);
            A01KRL[5] = VV.Substring(74,1);
            A01KRL[6] = VV.Substring(75,1);
            A01KRL[7] = VV.Substring(76,1);
            A01KRL[8] = VV.Substring(77,1);
            A01KRL[9] = VV.Substring(78,1);
            A01KRL[10] = VV.Substring(79,1);
            //1240 FORMAT (3A1,I2,2I1,F6.0,F4.0,2F5.0,I1,3F4.0,30X,10A1)            
            //WRITE(FELDS,1250)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + I01NV.ToString().PadLeft(4) + I01NHD.ToString().PadLeft(3) + I01NND.ToString().PadLeft(3) + "  " + 
                Math.Round(A01PE,3).ToString().PadLeft(7) + " " + Math.Round(A01PEN,3).ToString().PadLeft(7) + Math.Round(A01TPM,2).ToString().PadLeft(7) +
                Math.Round(A01PMI,3).ToString().PadLeft(7) + "  " + I01KE.ToString().PadLeft(1) + "  " + Math.Round(A01NPR,1).ToString().PadLeft(5) + "  "+
                Math.Round(A01DPH,2).ToString().PadLeft(5) + " " + Math.Round(A01DPN,2).ToString().PadLeft(5) + "                                " +
                A01KRL[1].PadLeft(1) + "  " + A01KRL[2].PadLeft(1) + "  " + A01KRL[3].PadLeft(1) + "  " + A01KRL[4].PadLeft(1) + "  " + A01KRL[5].PadLeft(1) + "  " + 
                A01KRL[6].PadLeft(1) + "  " + A01KRL[7].PadLeft(1) + "  " + A01KRL[8].PadLeft(1) + "  " + A01KRL[9].PadLeft(1) + "  " + A01KRL[10].PadLeft(1);
            //1250 FORMAT (1H ,2X,3A1,I4,2I3,2X,F7.3,1X,F7.3,F7.2,F7.3,2X,I1,2X,F5.1,2X,2(F5.2,1X),32X,10(A1,2X))
            //WRITE(FELDT,1230)
            FELDT = "+     |   |  |  |        |       |      |      |  |      |      |     |                              |  |  |  |  |  |  |  |  |  |     ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1260:
            if (KV != 0 && KZ3 != 2)
                return;
            sw16.WriteLine("0");
            sw16.WriteLine("            MFM1      MFM2      MFM3      MFM4                         S6  S7  S8     S10     S12     S14 S15 S16 S17               E");
            sw16.WriteLine("+     |         |         |         |         |  |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   ");
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",1280)
            sw16.WriteLine("+     |         |         |         |         |  |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   ");
            
            //READ(VV, 1290)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            AMFM1 = Convert.ToDouble(VV.Substring(3,6));
            AMFM2 = Convert.ToDouble(VV.Substring(9,6));
            AMFM3 = Convert.ToDouble(VV.Substring(15,6));
            AMFM4 = Convert.ToDouble(VV.Substring(21,6));
            I02S1[1] = Convert.ToInt32(VV.Substring(28,2));
            I02S1[2] = Convert.ToInt32(VV.Substring(30,2));
            I02S1[3] = Convert.ToInt32(VV.Substring(32,2));
            I02S1[4] = Convert.ToInt32(VV.Substring(34,2));
            I02S1[5] = Convert.ToInt32(VV.Substring(36,2));
            I02S1[6] = Convert.ToInt32(VV.Substring(38,2));
            I02S1[7] = Convert.ToInt32(VV.Substring(40,2));
            I02S1[8] = Convert.ToInt32(VV.Substring(42,2));
            I02S1[9] = Convert.ToInt32(VV.Substring(44,2));
            I02S1[10] = Convert.ToInt32(VV.Substring(46,2));
            I02S1[11] = Convert.ToInt32(VV.Substring(48,2));
            I02S1[12] = Convert.ToInt32(VV.Substring(50,2));
            I02S1[13] = Convert.ToInt32(VV.Substring(52,2));
            I02S1[14] = Convert.ToInt32(VV.Substring(54,2));
            I02S1[15] = Convert.ToInt32(VV.Substring(56,2));
            I02S1[16] = Convert.ToInt32(VV.Substring(58,2));
            I02S1[17] = Convert.ToInt32(VV.Substring(60,2));
            A02E = VV.Substring(79,1);
            //1290 FORMAT (3A1,4F6.0,1X,17I2,17X,A1)
            //WRITE(FELDS, 1300)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "  " + Math.Round(AMFM1, 2).ToString().PadLeft(8) + "  " + Math.Round(AMFM2, 2).ToString().PadLeft(8) + "  " +
                Math.Round(AMFM3,2).ToString().PadLeft(8) + "  " + Math.Round(AMFM4,2).ToString().PadLeft(8) + "     " + I02S1[1].ToString().PadLeft(2) + "  " + I02S1[2].ToString().PadLeft(2) + "  " +
                 I02S1[3].ToString().PadLeft(2) + "  " + I02S1[4].ToString().PadLeft(2) + "  " + I02S1[5].ToString().PadLeft(2) + "  " + I02S1[6].ToString().PadLeft(2) + "  " + I02S1[7].ToString().PadLeft(2) + "  " +
                 I02S1[8].ToString().PadLeft(2) + "  " + I02S1[9].ToString().PadLeft(2) + "  " + I02S1[10].ToString().PadLeft(2) + "  " + I02S1[11].ToString().PadLeft(2) + "  " + I02S1[12].ToString().PadLeft(2) + "  "+
                 I02S1[13].ToString().PadLeft(2) + "  " + I02S1[14].ToString().PadLeft(2) + "  " + I02S1[15].ToString().PadLeft(2) + "  " + I02S1[16].ToString().PadLeft(2) + "  " + I02S1[17].ToString().PadLeft(2) + 
                 "               " +  A02E.PadLeft(1);
            //1300 FORMAT (1H ,2X,3A1,4(2X,F8.2),5X,16(I2,2X),I2,15X,A1)
            //WRITE(FELDT,1280)
            FELDT = "+     |         |         |         |         |  |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1310:
            if (KV  !=  0  &&  KZ3  !=  2) 
                return;

            sw16.WriteLine("0");
            sw16.WriteLine("           Q 1        Q 2        Q 3        Q 4        Q 5        Q 6        Q 7        Q 8        Q 9        Q10        Q11");
            sw16.WriteLine("+     |          |          |          |          |          |          |          |          |          |          |          |");
            sw16.WriteLine("        LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2 ");                                  
            sw16.WriteLine("+     |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |");
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",1350)
            sw16.WriteLine("+     |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |");
            //READ (VV,1360) 
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            I03LT1[1] = Convert.ToInt32(VV.Substring(3,4));
            I03LT2[1] = Convert.ToInt32(VV.Substring(7,3));
            I03LT1[2] = Convert.ToInt32(VV.Substring(10,4));
            I03LT2[2] = Convert.ToInt32(VV.Substring(14,3));
            I03LT1[3] = Convert.ToInt32(VV.Substring(17,4));
            I03LT2[3] = Convert.ToInt32(VV.Substring(21,3));
            I03LT1[4] = Convert.ToInt32(VV.Substring(24,4));
            I03LT2[4] = Convert.ToInt32(VV.Substring(28,3));
            I03LT1[5] = Convert.ToInt32(VV.Substring(31,4));
            I03LT2[5] = Convert.ToInt32(VV.Substring(35,3));
            I03LT1[6] = Convert.ToInt32(VV.Substring(38,4));
            I03LT2[6] = Convert.ToInt32(VV.Substring(42,3));
            I03LT1[7] = Convert.ToInt32(VV.Substring(45,4));
            I03LT2[7] = Convert.ToInt32(VV.Substring(49,3));
            I03LT1[8] = Convert.ToInt32(VV.Substring(52,4));
            I03LT2[8] = Convert.ToInt32(VV.Substring(56,3));
            I03LT1[9] = Convert.ToInt32(VV.Substring(59,4));
            I03LT2[9] = Convert.ToInt32(VV.Substring(63,3));
            I03LT1[10] = Convert.ToInt32(VV.Substring(66,4));
            I03LT2[10] = Convert.ToInt32(VV.Substring(70,3));
            I03LT1[11] = Convert.ToInt32(VV.Substring(73,4));
            I03LT2[11] = Convert.ToInt32(VV.Substring(77,3));
            //1360 FORMAT (3A1,11(I4,I3))
            //WRITE (FELDS,1370) 
            FELDS = "   " + X.ToString().Substring(0, 1) + Y.ToString().Substring(0, 1) + Z.ToString().Substring(0, 1) + I03LT1[1].ToString().PadLeft(6) + I03LT2[1].ToString().PadLeft(5) +
                I03LT1[2].ToString().PadLeft(6) + I03LT2[2].ToString().PadLeft(5) +I03LT1[3].ToString().PadLeft(6) + I03LT2[3].ToString().PadLeft(5) +
                I03LT1[4].ToString().PadLeft(6) + I03LT2[4].ToString().PadLeft(5) + I03LT1[5].ToString().PadLeft(6) + I03LT2[5].ToString().PadLeft(5) +
                I03LT1[6].ToString().PadLeft(6) + I03LT2[6].ToString().PadLeft(5) + I03LT1[7].ToString().PadLeft(6) + I03LT2[7].ToString().PadLeft(5) +
                I03LT1[8].ToString().PadLeft(6) + I03LT2[8].ToString().PadLeft(5) + I03LT1[9].ToString().PadLeft(6) + I03LT2[9].ToString().PadLeft(5) +
                I03LT1[10].ToString().PadLeft(6) + I03LT2[10].ToString().PadLeft(5) + I03LT1[11].ToString().PadLeft(6) + I03LT2[11].ToString().PadLeft(5);
            //1370 FORMAT (1H ,2X,3A1,11(I6,I5))
            //WRITE (FELDT,1350)
            FELDT = "+     |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;
                
        label1380:
            if (KV  !=  0  &&  KZ3  !=  2) 
                return;
            //sw16.WriteLine("",1320)
            //sw16.WriteLine("",1330)
            //sw16.WriteLine("",1340)
            //sw16.WriteLine("",1350)
            sw16.WriteLine("0");
            sw16.WriteLine("           Q 1        Q 2        Q 3        Q 4        Q 5        Q 6        Q 7        Q 8        Q 9        Q10        Q11");
            sw16.WriteLine("+     |          |          |          |          |          |          |          |          |          |          |          |");
            sw16.WriteLine("        LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2  LTG1 LTG2 ");                                  
            sw16.WriteLine("+     |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |");
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",1350)
            sw16.WriteLine("+     |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |");
            //sw16.WriteLine("", 430)
            //sw16.WriteLine("",1350)
            //READ (VV,1360) X,Y,Z,(I04LT1[L],I04LT2[L],L=1,11)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            I04LT1[1] = Convert.ToInt32(VV.Substring(3,4));
            I04LT2[1] = Convert.ToInt32(VV.Substring(7,3));
            I04LT1[2] = Convert.ToInt32(VV.Substring(10,4));
            I04LT2[2] = Convert.ToInt32(VV.Substring(14,3));
            I04LT1[3] = Convert.ToInt32(VV.Substring(17,4));
            I04LT2[3] = Convert.ToInt32(VV.Substring(21,3));
            I04LT1[4] = Convert.ToInt32(VV.Substring(24,4));
            I04LT2[4] = Convert.ToInt32(VV.Substring(28,3));
            I04LT1[5] = Convert.ToInt32(VV.Substring(31,4));
            I04LT2[5] = Convert.ToInt32(VV.Substring(35,3));
            I04LT1[6] = Convert.ToInt32(VV.Substring(38,4));
            I04LT2[6] = Convert.ToInt32(VV.Substring(42,3));
            I04LT1[7] = Convert.ToInt32(VV.Substring(45,4));
            I04LT2[7] = Convert.ToInt32(VV.Substring(49,3));
            I04LT1[8] = Convert.ToInt32(VV.Substring(52,4));
            I04LT2[8] = Convert.ToInt32(VV.Substring(56,3));
            I04LT1[9] = Convert.ToInt32(VV.Substring(59,4));
            I04LT2[9] = Convert.ToInt32(VV.Substring(63,3));
            I04LT1[10] = Convert.ToInt32(VV.Substring(66,4));
            I04LT2[10] = Convert.ToInt32(VV.Substring(70,3));
            I04LT1[11] = Convert.ToInt32(VV.Substring(73,4));
            I04LT2[11] = Convert.ToInt32(VV.Substring(77,3));
            //WRITE (FELDS,1370) X,Y,Z,(I04LT1[L],I04LT2[L],L=1,11)
            //WRITE (FELDT,1350)
            FELDS = "   " + X.ToString().Substring(0, 1) + Y.ToString().Substring(0, 1) + Z.ToString().Substring(0, 1) + I04LT1[1].ToString().PadLeft(6) + I04LT2[1].ToString().PadLeft(5) +
                I04LT1[2].ToString().PadLeft(6) + I04LT2[2].ToString().PadLeft(5) +I04LT1[3].ToString().PadLeft(6) + I04LT2[3].ToString().PadLeft(5) +
                I04LT1[4].ToString().PadLeft(6) + I04LT2[4].ToString().PadLeft(5) + I04LT1[5].ToString().PadLeft(6) + I04LT2[5].ToString().PadLeft(5) +
                I04LT1[6].ToString().PadLeft(6) + I04LT2[6].ToString().PadLeft(5) + I04LT1[7].ToString().PadLeft(6) + I04LT2[7].ToString().PadLeft(5) +
                I04LT1[8].ToString().PadLeft(6) + I04LT2[8].ToString().PadLeft(5) + I04LT1[9].ToString().PadLeft(6) + I04LT2[9].ToString().PadLeft(5) +
                I04LT1[10].ToString().PadLeft(6) + I04LT2[10].ToString().PadLeft(5) + I04LT1[11].ToString().PadLeft(6) + I04LT2[11].ToString().PadLeft(5);
            FELDT = "+     |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |     |    |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1390:
            if (KTTXX  ==  1) goto label2070;
            if (KV != 0 && KZ3 != 2) return;
            if(ZELL0N != 0)goto label1440;
            if (KV != 0) goto label1410;
            sw16.WriteLine("0");
            sw16.WriteLine("   L E I T U N G E N ");
            sw16.WriteLine("   - - - - - - - - - ");
            
        label1410:
            sw16.WriteLine("0");
            sw16.WriteLine("        LTG BA LGS        M       P T/H     T/H  LTG BA LGS        M       P T/H     T/H  LTG BA LGS        M       P T/H     T/H NRT");
            //write(16,1430)                                                      
            sw16.WriteLine("+     |    |  |   |        |       |   |       |    |  |   |        |       |   |       |    |  |   |        |       |   |       |  ");
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",1430)
            sw16.WriteLine("+     |    |  |   |        |       |   |       |    |  |   |        |       |   |       |    |  |   |        |       |   |       |  ");
            ZELL0N=1;
            
        label1440:
            //READ(VV, 1450)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            L0LTG[1] = Convert.ToInt32(VV.Substring(3,3));
            L0MUE[1] = Convert.ToInt32(VV.Substring(6,1));
            L0LGST[1] = Convert.ToInt32(VV.Substring(7,2));
            R0G[1] = Convert.ToDouble(VV.Substring(9,7));
            R0P[1] = Convert.ToDouble(VV.Substring(16,6));
            R0TI1[1] = VV.Substring(22,1);
            R0TI2[1] = Convert.ToDouble(VV.Substring(23,5));
            L0LTG[2] = Convert.ToInt32(VV.Substring(28,3));
            L0MUE[2] = Convert.ToInt32(VV.Substring(31,1));
            L0LGST[2] = Convert.ToInt32(VV.Substring(32,2));
            R0G[2] = Convert.ToDouble(VV.Substring(34,7));
            R0P[2] = Convert.ToDouble(VV.Substring(41,6));
            R0TI1[2] = VV.Substring(47,1);
            R0TI2[2] = Convert.ToDouble(VV.Substring(48,5));
            L0LTG[3] = Convert.ToInt32(VV.Substring(53,3));
            L0MUE[3] = Convert.ToInt32(VV.Substring(56,1));
            L0LGST[3] = Convert.ToInt32(VV.Substring(57,2));
            R0G[3] = Convert.ToDouble(VV.Substring(59,7));
            R0P[3] = Convert.ToDouble(VV.Substring(66,6));
            R0TI1[3] = VV.Substring(72,1);
            R0TI2[3] = Convert.ToDouble(VV.Substring(73,5));
            L0NUE = Convert.ToInt32(VV.Substring(78,1));
            //1450 FORMAT (3A1,3(I3,I1,I2,F7.0,F6.0,A1,F5.0),I1)
            //WRITE(FELDS, 1460)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "  " + L0LTG[1].ToString().PadLeft(3) + "  " + L0MUE[1].ToString().PadLeft(1) + "  " + L0LGST[1].ToString().PadLeft(2) + " " +
                Math.Round(R0G[1],3).ToString().PadLeft(8) + " " + Math.Round(R0P[1],3).ToString().PadLeft(7) + "   " + R0TI1[1].PadLeft(1) + " " + Math.Round(R0TI2[1],2).ToString().PadLeft(7) + "  " +
                L0LTG[2].ToString().PadLeft(3) + "  " + L0MUE[2].ToString().PadLeft(1) + "  " + L0LGST[2].ToString().PadLeft(2) + " " +
                Math.Round(R0G[2],3).ToString().PadLeft(8) + " " + Math.Round(R0P[2],3).ToString().PadLeft(7) + "   " + R0TI1[2].PadLeft(1) + " " + Math.Round(R0TI2[2],2).ToString().PadLeft(7) + "  " +
                L0LTG[3].ToString().PadLeft(3) + "  " + L0MUE[3].ToString().PadLeft(1) + "  " + L0LGST[3].ToString().PadLeft(2) + " " +
                Math.Round(R0G[3],3).ToString().PadLeft(8) + " " + Math.Round(R0P[3],3).ToString().PadLeft(7) + "   " + R0TI1[3].PadLeft(1) + " " + Math.Round(R0TI2[3],2).ToString().PadLeft(7) + "  " +
                L0NUE.ToString().PadLeft(2);
            //1460 FORMAT (1H ,2X,3A1,2X,3(I3,2X,I1,2X,I2,1X,F8.3,1X,F7.3,3X,A1,1X,F7.2,2X),I2)
            //WRITE(FELDT,1430)
            FELDT = "+     |    |  |   |        |       |   |       |    |  |   |        |       |   |       |    |  |   |        |       |   |       |  ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1470:
            ZELL0N=0;
            ZELUA1=0;
            if (K2 == 9) goto label190;
            if (KV != 0 && KZ3 != 2) return;
            if(ZELHNN != 0) goto label1540;
            if (KV != 0) goto label1490;
            sw16.WriteLine("0");
            sw16.WriteLine("   K R E I S L A U F ");
            sw16.WriteLine("   - - - - - - - - - ");
 
        label1490:
            sw16.WriteLine("0");
            sw16.WriteLine("             LTG-        ZUGEHENDE - LEITUNGEN                  H/DH/DT               LTG-");
            sw16.WriteLine("+        |        |                                |          |        |           |        |");
            sw16.WriteLine("      TYP   N1  N2   L1  L2  L3  L4  L5  L6  L7  L8      P /DP  ETA     T/DT/ETA/DP  NN1 NN2  RF       Q/M K1   DP LTG K2   DH LTG RW");
            sw16.WriteLine("+        |    |   |    |   |   |   |   |   |   |   |          |        |           |    |   |   |         |  |        |  |        |   ");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+        |    |   |    |   |   |   |   |   |   |   |          |        |           |    |   |   |         |  |        |  |        |   ");
            ZELHNN=1;
            
        label1540:
            //READ(VV, 1550)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            INTYP = Convert.ToInt32(VV.Substring(3,2));
            INLTG[1] = Convert.ToInt32(VV.Substring(5,3));
            INLTG[2] = Convert.ToInt32(VV.Substring(8,3));
            INLTG[3] = Convert.ToInt32(VV.Substring(11,3));
            INLTG[4] = Convert.ToInt32(VV.Substring(14,3));
            INLTG[5] = Convert.ToInt32(VV.Substring(17,3));
            INLTG[6] = Convert.ToInt32(VV.Substring(20,3));
            INLTG[7] = Convert.ToInt32(VV.Substring(23,3));
            INLTG[8] = Convert.ToInt32(VV.Substring(26,3));
            INLTG[9] = Convert.ToInt32(VV.Substring(29,3));
            INLTG[10] = Convert.ToInt32(VV.Substring(32,3));
            HNP = Convert.ToDouble(VV.Substring(35,8));
            HNT = Convert.ToDouble(VV.Substring(43,6));
            HNETA = Convert.ToDouble(VV.Substring(49,6));
            INL1 = Convert.ToInt32(VV.Substring(55,3));
            INL2 = Convert.ToInt32(VV.Substring(58,3));
            INNR = Convert.ToInt32(VV.Substring(61,2));
            HNQM = Convert.ToDouble(VV.Substring(63,8));
            INKZ = Convert.ToInt32(VV.Substring(71,1));
            HNDP = Convert.ToDouble(VV.Substring(72,3));
            INKZ1 = Convert.ToInt32(VV.Substring(75,1));
            HNDQ = Convert.ToDouble(VV.Substring(76,3));
            INRW = Convert.ToInt32(VV.Substring(79,1));
            //1550 FORMAT (3A1,I2 ,10I3,F8.0,2F6.0,2I3,I2,F8.0,2(I1,F3.0),I1)
            
            if (INTYP != 6 && INTYP != 22 && HNDP  > 100.0)
                HNDP = HNDP /10.0;
            if (INTYP != 22 && HNDQ  > 100.0)
                HNDQ = HNDQ /10.0;
            if (INTYP == 22) HNDQ = HNDQ /100.0;
            
            //WRITE(FELDS, 1560)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + INTYP.ToString().PadLeft(3) + INLTG[1].ToString().PadLeft(5) + INLTG[2].ToString().PadLeft(4) + INLTG[3].ToString().PadLeft(5) +
                 INLTG[4].ToString().PadLeft(4) + INLTG[5].ToString().PadLeft(4) + INLTG[6].ToString().PadLeft(4) + INLTG[7].ToString().PadLeft(4) + INLTG[8].ToString().PadLeft(4) + INLTG[9].ToString().PadLeft(4) +
                 INLTG[10].ToString().PadLeft(4) + "  " + Math.Round(HNP,4).ToString().PadLeft(9) + Math.Round(HNT,2).ToString().PadLeft(9) + "   " + Math.Round(HNETA,2).ToString().PadLeft(9) + "  " +
                 INL1.ToString().PadLeft(3) + " " + INL2.ToString().PadLeft(3) + "  " + INNR.ToString().PadLeft(2) + " " + Math.Round(HNQM,3).ToString().PadLeft(9) + INKZ.ToString().PadLeft(3) + 
                 Math.Round(HNDP,2).ToString().PadLeft(9) + INKZ1.ToString().PadLeft(3) + Math.Round(HNDQ,2).ToString().PadLeft(9) + "  " + INRW.ToString().PadLeft(1);
            //1560 FORMAT (1H ,2X,3A1, I3.2,I5,I4,I5,7I4,2X,F9.4,F9.2,3X,F9.2,2X,I3,1X,I3,2X,I2,1X,F9.3,2(I3,F9.2),2X,I1)
            //WRITE (FELDT,1530)
            FELDT = "+        |    |   |    |   |   |   |   |   |   |   |          |        |           |    |   |   |         |  |        |  |        |   ";
            IL1 = 11;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            //1570 FORMAT (A)
            goto label470;

        label1580:
            if (ZELUA2 != 0) goto label1600;
            if (KV != 0) goto label1600;
            sw16.WriteLine("0");
            sw16.WriteLine("   K O N D E N S A T O R E N ");
            sw16.WriteLine("   - - - - - - - - - - - - - ");
            ZELUA2=1;
            
        label1600:
            //goto label(1610,1670),
            if(K2 == 1)     goto label1610;
            if(K2 == 2)     goto label1670;

        label1610:
            ZELHNN=0;
            ZELL0N=0;
            if (KV != 0 && KZ3 != 2) return;
            if(ZELK1N != 0) goto label1640;
            sw16.WriteLine("0");
            sw16.WriteLine("          TKW        M   M/K     C     L    DA     S        F N SPEZ      B   TH   TV  K4/KE H-VORH N-K W-FL AFGW WK.GET KT-F K-H KNR");
            sw16.WriteLine("+     |      |        |     |     |     |     |     |        |      |      |    |    |      |      |   |    |    |      |    |   |  ");   
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |      |        |     |     |     |     |     |        |      |      |    |    |      |      |   |    |    |      |    |   |  "); 
            ZELK1N=1;
            
        label1640:
            //READ(VV, 1650)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            R1TKW = Convert.ToDouble(VV.Substring(3,5));
            R1W = Convert.ToDouble(VV.Substring(8,7));
            R1WK = Convert.ToDouble(VV.Substring(15,5));
            R1V = Convert.ToDouble(VV.Substring(20,4));
            R1L = Convert.ToDouble(VV.Substring(24,5));
            R1DA = Convert.ToDouble(VV.Substring(29,5));
            R1S = Convert.ToDouble(VV.Substring(34,4));
            R1F = Convert.ToDouble(VV.Substring(38,7));
            R1Z = Convert.ToDouble(VV.Substring(45,5));
            R1B = Convert.ToDouble(VV.Substring(50,5));
            R1TH = Convert.ToDouble(VV.Substring(55,4));
            R1TV = Convert.ToDouble(VV.Substring(59,4));
            R1KO = Convert.ToDouble(VV.Substring(63,5));
            R1HVOR = Convert.ToDouble(VV.Substring(68,5));
            R1NK = Convert.ToDouble(VV.Substring(73,1));
            R1WFL = Convert.ToDouble(VV.Substring(74,1));
            K1AFG = Convert.ToInt32(VV.Substring(75,1));
            K1GWK = Convert.ToInt32(VV.Substring(76,1));
            K1KTFA = Convert.ToInt32(VV.Substring(77,1));
            K1KH = Convert.ToInt32(VV.Substring(78,1));
            K1KP = Convert.ToInt32(VV.Substring(79,1));
            //1650 FORMAT (3A1,F5.0,F7.0,F5.0,F4.0,2F5.0,F4.0,F7.0,F5.0,F5.0,2F4.0,F5.0,F5.0,2F1.0,5I1)
            
            //WRITE(FELDS, 1660)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "  " + Math.Round(R1TKW, 2).ToString().PadLeft(5) + " " + Math.Round(R1W, 1).ToString().PadLeft(8) + 
                " " + Math.Round(R1WK,1).ToString().PadLeft(5) + "  " + Math.Round(R1V,2).ToString().PadLeft(4) + " " + Math.Round(R1L,2).ToString().PadLeft(5) + " " +
                Math.Round(R1DA,1).ToString().PadLeft(5) + " " + Math.Round(R1S,2).ToString().PadLeft(5) + " " + Math.Round(R1F,1).ToString().PadLeft(8) + " " + 
                Math.Round(R1Z,1).ToString().PadLeft(6) + "  " + Math.Round(R1B,2).ToString().PadLeft(5) + " " + Math.Round(R1TH,0).ToString().PadLeft(4) +
                Math.Round(R1TV,0).ToString().PadLeft(5) + Math.Round(R1KO,3).ToString().PadLeft(7) + Math.Round(R1HVOR,2).ToString().PadLeft(7) + Math.Round(R1NK,0).ToString().PadLeft(4) + 
                Math.Round(R1WFL,0).ToString().PadLeft(5) + K1AFG.ToString().PadLeft(5) + K1GWK.ToString().PadLeft(7) + K1KTFA.ToString().PadLeft(5) + K1KH.ToString().PadLeft(4) + K1KP.ToString().PadLeft(4);
            //1660 FORMAT (1H ,2X,3A1,2X,F5.2,1X,F8.1,1X,F5.1,2X,F4.2,1X,F5.2,1X,F5.1,1X,F5.2,1X,F8.1,1X,F6.1,2X,F5.2,1X,F4.0,F5.0,F7.3,F7.2,F4.0,F5.0,I5,I7,I5,I4,I4)
            //WRITE(FELDT,1630)
            FELDT = "+     |      |        |     |     |     |     |     |        |      |      |    |    |      |      |   |    |    |      |    |   |  ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1670:
            ZELHNN=0;
            ZELL0N=0;
            ZELK1N=0;
            if (KV != 0 && KZ3 != 2) return;
            if(ZELK2N != 0) goto label1700;
            sw16.WriteLine("0");
            sw16.WriteLine("           ROHRWERK    K WERK 1    K WERK 2    K WERK 3    K WERK 4    DT MIN    F RADIO     M VERW     T VERW ");
            sw16.WriteLine("+     |            |           |           |           |           |         |           |           |           ");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |            |           |           |           |           |         |           |           |           ");
            ZELK2N=1;
            
        label1700:
            //READ(VV, 1710)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            R2ROR1 = VV.Substring(3,3);
            R2ROR2 = VV.Substring(6,3);
            R2WER1 = Convert.ToDouble(VV.Substring(9,5));
            R2WER2 = Convert.ToDouble(VV.Substring(14,5));
            R2WER3 = Convert.ToDouble(VV.Substring(19,5));
            R2WER4 = Convert.ToDouble(VV.Substring(24,5));
            R2DTM = Convert.ToDouble(VV.Substring(29,4));
            R2FRAD = Convert.ToDouble(VV.Substring(33,4));
            R2GVER = Convert.ToDouble(VV.Substring(37,7));
            R2TVER = Convert.ToDouble(VV.Substring(44,4));
            I2OPT = VV.Substring(48,1);
            //1710 FORMAT (3A1,2A3,4F5.0,F4.0,F4.0,F7.0,F4.0,A1)
            
            //WRITE(FELDS, 1720)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "       " + R2ROR1.PadLeft(3) + R2ROR2.PadLeft(3) + "      " + Math.Round(R2WER1, 3).ToString().PadLeft(6) +
                "      " + Math.Round(R2WER2,3).ToString().PadLeft(6) + "      " + Math.Round(R2WER3,3).ToString().PadLeft(6) + "      " + Math.Round(R2WER4,3).ToString().PadLeft(6) + "     " +
                Math.Round(R2DTM,1).ToString().PadLeft(5) + "       " + Math.Round(R2FRAD,2).ToString().PadLeft(5) + "   " + Math.Round(R2GVER,2).ToString().PadLeft(8) + "      " + 
                Math.Round(R2TVER,1).ToString().PadLeft(5) + "  " + I2OPT.ToString().PadLeft(2);
            //1720 FORMAT (1H ,2X,3A1,7X,2A3,4(6X,F6.3),5X,F5.1,7X,F5.2,3X,F8.2,6X,F5.1,2X,A2)
            //WRITE(FELDT,1690)
            FELDT = "+     |            |           |           |           |           |         |           |           |           ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1730:
            ZELHNN=0;
            ZELL0N=0;
            ZELK1N=0;
            ZELK2N=0;
            if (KV != 0 && KZ3 != 2) return;
            if(ZELWNN != 0) goto label1780;
            if (KV != 0) goto label1750;
            sw16.WriteLine("0");
            sw16.WriteLine("   W A E R M E T A U S C H E R ");
            sw16.WriteLine("   - - - - - - - - - - - - - - ");
            
        label1750:
            sw16.WriteLine("0");
            sw16.WriteLine("       TYP       PW      TWE           MW       PD       HD           MD      HNK         MNK       DT      DTK K1  DP LTG K2  DH LTG");
            sw16.WriteLine("+     |   |        |        |            |        |        |            |        |           |        |        |  |       |  |    ");
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",1770)
            sw16.WriteLine("+     |   |        |        |            |        |        |            |        |           |        |        |  |       |  |    ");
            ZELWNN=1;
            
        label1780:
            //READ(VV, 1790)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            ITYP = Convert.ToInt32(VV.Substring(3,2));
            WPW = Convert.ToDouble(VV.Substring(5,6));
            WTEW = Convert.ToDouble(VV.Substring(11,6));
            WMW = Convert.ToDouble(VV.Substring(17,8));
            WPD = Convert.ToDouble(VV.Substring(25,6));
            WHD = Convert.ToDouble(VV.Substring(31,7));
            WMD = Convert.ToDouble(VV.Substring(38,8));
            WHK = Convert.ToDouble(VV.Substring(46,7));
            WMK = Convert.ToDouble(VV.Substring(53,8));
            WDT = Convert.ToDouble(VV.Substring(61,5));
            WDTK = Convert.ToDouble(VV.Substring(66,5));
            IWNKZ = Convert.ToInt32(VV.Substring(71,1));
            WNDP = Convert.ToDouble(VV.Substring(72,3));
            IWNKZ1 = Convert.ToInt32(VV.Substring(75,1));
            WNDQ = Convert.ToDouble(VV.Substring(76,3));
            //1790 FORMAT (3A1,I2,2F6.0,F8.0,F6.0,2(F7.0,F8.0),2F5.0,2(I1,F3.0))
            //WRITE(FELDS,1800)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "  " + ITYP.ToString().PadLeft(2) + Math.Round(WPW, 2).ToString().PadLeft(9) + Math.Round(WTEW, 2).ToString().PadLeft(9) +
                Math.Round(WMW,2).ToString().PadLeft(13) + Math.Round(WPD,2).ToString().PadLeft(9) + Math.Round(WHD,2).ToString().PadLeft(9) + Math.Round(WMD,2).ToString().PadLeft(13) + Math.Round(WHK,2).ToString().PadLeft(9) +
                Math.Round(WMK,2).ToString().PadLeft(12) + Math.Round(WDT,2).ToString().PadLeft(9) + Math.Round(WDTK,2).ToString().PadLeft(9) + IWNKZ.ToString().PadLeft(1) + Math.Round(WNDP,2).ToString().PadLeft(8) +
                "  " + IWNKZ1.ToString().PadLeft(1) + Math.Round(WNDQ,2).ToString().PadLeft(8);
            //1800 FORMAT(1H ,2X,3A1,2X,I2,2F9.2,F13.2,2F9.2,F13.2,   F9.2,F12.2,2F9.2,2X,I1,F8.2,2X,I1,F8.2)
            //WRITE(FELDT,1770)
            FELDT = "+     |   |        |        |            |        |        |            |        |           |        |        |  |       |  |    ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1810:
            if (ZELUT1 != 0) goto label1850;
            sw16.WriteLine("0");
            sw16.WriteLine("                                                 E I N G A B E D A T E N  -  T E I L L A S T  ");
            sw16.WriteLine("                                                 -------------------------------------------  ");
            ZELUT1=1;
            if (KV != 0) goto label1850;
            sw16.WriteLine("0");
            sw16.WriteLine("   T U R B I N E ");
            sw16.WriteLine("   - - - - - - - ");
            
        label1850:
            //GOTO(1860,1910,1970,2030),
            if(K2 == 1)     goto label1860;
            if(K2 == 2)     goto label1910;
            if(K2 == 3)     goto label1970;
            if(K2 == 4)     goto label2030;

        label1860:
            sw16.WriteLine("0");
            sw16.WriteLine("             PKES     TKES      HKES     DP %       DH      PTHERM");
            sw16.WriteLine("+     |          |        |         |        |          |       ");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |          |        |         |        |          |       ");
            //READ(VV, 1890)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            S1PK = Convert.ToDouble(VV.Substring(3,6));
            S1TK = Convert.ToDouble(VV.Substring(9,6));
            S1IK = Convert.ToDouble(VV.Substring(15,7));
            S1DPK = Convert.ToDouble(VV.Substring(22,6));
            S1DI = Convert.ToDouble(VV.Substring(28,6));
            S1NTH = Convert.ToDouble(VV.Substring(34,9));
            //1890 FORMAT (3A1,2F6.0,F7.0,2F6.0,F9.0)
            
            //WRITE(FELDS, 1900)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(S1PK, 3).ToString().PadLeft(11) + Math.Round(S1TK, 2).ToString().PadLeft(9) + 
                Math.Round(S1IK,2).ToString().PadLeft(10) + Math.Round(S1DPK,3).ToString().PadLeft(9) + Math.Round(S1DI,3).ToString().PadLeft(9) + Math.Round(S1NTH,3).ToString().PadLeft(12);
            //1900 FORMAT (1H ,2X,3A1,F11.3,F9.2,F10.2,2F9.3,F12.3)
            //WRITE(FELDT,1880)
            FELDT = "+     |          |        |         |        |          |       ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1910:
            if(ZELS20 != 0)goto label1940;
            sw16.WriteLine("0");
            sw16.WriteLine("             P10      T10  V1       P20      T20  V2       P30      T30  V3       P40      T40  V4        PN    DP1/2   DP2/3   DP3/4");
            sw16.WriteLine("+     |         |        |   |         |        |   |         |        |   |         |        |   |         |        |       |   ");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |         |        |   |         |        |   |         |        |   |         |        |   |         |        |       |   ");
            ZELS20=1;
            
        label1940:
            //READ(VV, 1950)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            S2P[1] = Convert.ToDouble(VV.Substring(3,6));
            S2T[1] = Convert.ToDouble(VV.Substring(9,6));
            I2V[1] = Convert.ToInt32(VV.Substring(15,2));
            S2P[2] = Convert.ToDouble(VV.Substring(17,6));
            S2T[2] = Convert.ToDouble(VV.Substring(23,6));
            I2V[2] = Convert.ToInt32(VV.Substring(29,2));
            S2P[3] = Convert.ToDouble(VV.Substring(31,6));
            S2T[3] = Convert.ToDouble(VV.Substring(37,6));
            I2V[3] = Convert.ToInt32(VV.Substring(43,2));
            S2P[4] = Convert.ToDouble(VV.Substring(45,6));
            S2T[4] = Convert.ToDouble(VV.Substring(51,6));
            I2V[4] = Convert.ToInt32(VV.Substring(57,2));
            S2PN = Convert.ToDouble(VV.Substring(59,6));
            S2DP1 = Convert.ToDouble(VV.Substring(65,5));
            S2DP2 = Convert.ToDouble(VV.Substring(70,5));
            S2DP3 = Convert.ToDouble(VV.Substring(75,5));
            //1950 FORMAT (3A1,4(2F6.0,I2),F6.0,3F5.2)
            //WRITE(FELDS, 1960)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(S2P[1], 3).ToString().PadLeft(10) + Math.Round(S2T[1], 2).ToString().PadLeft(9) + I2V[1].ToString().PadLeft(4) +
                 Math.Round(S2P[2],3).ToString().PadLeft(10) + Math.Round(S2T[2],2).ToString().PadLeft(9) + I2V[2].ToString().PadLeft(4) +
                 Math.Round(S2P[3],4).ToString().PadLeft(10) + Math.Round(S2T[3],2).ToString().PadLeft(9) + I2V[3].ToString().PadLeft(4) +
                 Math.Round(S2P[4],4).ToString().PadLeft(10) + Math.Round(S2T[4],2).ToString().PadLeft(9) + I2V[4].ToString().PadLeft(4) +
                 Math.Round(S2PN,4).ToString().PadLeft(10) + Math.Round(S2DP1,3).ToString().PadLeft(9) + Math.Round(S2DP2,3).ToString().PadLeft(8) + Math.Round(S2DP3,3).ToString().PadLeft(8);
            //1960 FORMAT (1H ,2X,3A1,F10.3,F9.2,I4,F10.3,F9.2,I4,F10.4,F9.2,I4,F10.4,F9.2,I4,F10.4,F9.3,2F8.3)
            //WRITE(FELDT,1930)
            FELDT = "+     |         |        |   |         |        |   |         |        |   |         |        |   |         |        |       |   ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label1970:
            if(ZELS30 != 0)goto label2000;
            sw16.WriteLine("0");
            sw16.WriteLine("               M FD      M ABD       P KL  DPMECH  ETA G       MFIX  LFIX  LVAR  IT    TKW  MKW / MT/MA FAKTKF  NT/NA  K  J  NZ");
            sw16.WriteLine("+     |            |          |          |       |      |          |     |     |   |      |            |      |      |  |  |   ");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |            |          |          |       |      |          |     |     |   |      |            |      |      |  |  |   ");
            ZELS30=1;
            
        label2000:
            //READ(VV, 2010)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            S3FRDM = Convert.ToDouble(VV.Substring(3,9));
            S3ABDM = Convert.ToDouble(VV.Substring(12,9));
            S3N = Convert.ToDouble(VV.Substring(21,9));
            S3NME = Convert.ToDouble(VV.Substring(30,6));
            S3ETAG = Convert.ToDouble(VV.Substring(36,6));
            S3GFIX = Convert.ToDouble(VV.Substring(42,9));
            I3LFIX = Convert.ToInt32(VV.Substring(51,3));
            I3LVAR = Convert.ToInt32(VV.Substring(54,3));
            I3IT = Convert.ToInt32(VV.Substring(57,2));
            S3TKW = Convert.ToDouble(VV.Substring(59,4));
            S3WA = Convert.ToDouble(VV.Substring(63,6));
            S3KF = Convert.ToDouble(VV.Substring(69,1));
            S3NA = Convert.ToDouble(VV.Substring(70,5));
            I3K = Convert.ToInt32(VV.Substring(75,1));
            I3J = Convert.ToInt32(VV.Substring(76,2));
            I3NZ = Convert.ToInt32(VV.Substring(78,1));
            //2010 FORMAT (3A1,3F9.0,2F6.0,F9.0,2I3,I2,F4.0,F6.0,F1.0,F5.0,2I1,I2,I1)
            //WRITE(FELDS, 2020)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(S3FRDM, 3).ToString().PadLeft(13) + Math.Round(S3ABDM, 3).ToString().PadLeft(11) + 
                Math.Round(S3N,3).ToString().PadLeft(11) + " " + Math.Round(S3NME,3).ToString().PadLeft(7) + " " + Math.Round(S3ETAG,2).ToString().PadLeft(6) + "  " +
                Math.Round(S3GFIX,3).ToString().PadLeft(9) + "   " + I3LFIX.ToString().PadLeft(3) + "   " + I3LVAR.ToString().PadLeft(3) + "  " + I3IT.ToString().PadLeft(2) +
                "  " + Math.Round(S3TKW,2).ToString().PadLeft(5) + "  " + Math.Round(S3WA,3).ToString().PadLeft(11) + Math.Round(S3KF,2).ToString().PadLeft(7) + 
                Math.Round(S3NA,2).ToString().PadLeft(7) + "  " + I3K.ToString().PadLeft(1) + I3J.ToString().PadLeft(1) + "  " + I3NZ.ToString().PadLeft(2);
            //2020 FORMAT (1H ,2X,3A1,F13.3,F11.3,F11.3,1X,F7.3,1X,F6.2,2X,F9.3,3X,I3,3X,I3,2X,I2,2X,F5.2,2X,F11.3,2F7.2,2(2X,I1),2X,I2)
            //WRITE(FELDT,1990)
            FELDT = "+     |            |          |          |       |      |          |     |     |   |      |            |      |      |  |  |   ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2030:
            ZELS30=0;
            if(ZELS40 != 0)goto label2040;
            //sw16.WriteLine("", 600)
            //sw16.WriteLine("", 610)
            //sw16.WriteLine("", 430)
            //sw16.WriteLine("", 610)
            sw16.WriteLine("0");
            sw16.WriteLine("          WSOLL DEF FETA GES   FETA 1   FBEW 1   FETA 2   FBEW 2   FETA 3   FBEW 3   FETA 4   FBEW 4 R1 FETA R1 R2 FETA R2 R3 FETA R3");
            //610 FORMAT (1H+,5X,'|',8X,'|',3X,9('|',8X),3('|  |',7X))
            sw16.WriteLine("+     |        |   |        |        |        |        |        |        |        |        |        |  |       |  |       |  |       ");
            //sw16.WriteLine("",430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",610)  
            sw16.WriteLine("+     |        |   |        |        |        |        |        |        |        |        |        |  |       |  |       |  |       ");
            
            ZELS40=1;
            
        label2040:
            //READ(VV, 2050)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            S4WS = Convert.ToDouble(VV.Substring(3,7));
            I4DEF = Convert.ToInt32(VV.Substring(10,2));
            S4ETA = Convert.ToDouble(VV.Substring(12,5));
            S4FET[1] = Convert.ToDouble(VV.Substring(17,5));
            S4FBEW[1] = Convert.ToDouble(VV.Substring(22,5));
            S4FET[2] = Convert.ToDouble(VV.Substring(27,5));
            S4FBEW[2] = Convert.ToDouble(VV.Substring(32,5));
            S4FET[3] = Convert.ToDouble(VV.Substring(37,5));
            S4FBEW[3] = Convert.ToDouble(VV.Substring(42,5));
            S4FET[4] = Convert.ToDouble(VV.Substring(47,5));
            S4FBEW[4] = Convert.ToDouble(VV.Substring(52,5));
            I4FR1[1] = Convert.ToInt32(VV.Substring(57,1));
            S4R1[1] = Convert.ToDouble(VV.Substring(58,5));
            I4FR1[2] = Convert.ToInt32(VV.Substring(63,1));
            S4R1[2] = Convert.ToDouble(VV.Substring(64,5));
            I4FR1[3] = Convert.ToInt32(VV.Substring(69,1));
            S4R1[3] = Convert.ToDouble(VV.Substring(70,5));
            //2050 FORMAT (3A1,F7.0,I2,9F5.4,3(I1,F5.4))
            //WRITE(FELDS, 2060)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(S4WS, 2).ToString().PadLeft(9) + I4DEF.ToString().PadLeft(4) + Math.Round(S4ETA, 4).ToString().PadLeft(9) + Math.Round(S4FET[1], 4).ToString().PadLeft(9) + Math.Round(S4FBEW[1], 4).ToString().PadLeft(9) + 
                 Math.Round(S4FET[2],4).ToString().PadLeft(9) + Math.Round(S4FBEW[2],4).ToString().PadLeft(9) + Math.Round(S4FET[3],4).ToString().PadLeft(9) + Math.Round(S4FBEW[3],4).ToString().PadLeft(9) +
                 Math.Round(S4FET[4],4).ToString().PadLeft(9) + Math.Round(S4FBEW[4],4).ToString().PadLeft(9) + I4FR1[1].ToString().PadLeft(3) + Math.Round(S4R1[1],4).ToString().PadLeft(8) + 
                 I4FR1[2].ToString().PadLeft(3) + Math.Round(S4R1[2],4).ToString().PadLeft(8) + I4FR1[3].ToString().PadLeft(3) + Math.Round(S4R1[3],4).ToString().PadLeft(8);
            //2060 FORMAT (1H ,2X,3A1,F9.2,I4,9F9.4,3(I3,F8.4))
            //WRITE(FELDT, 610)
            FELDT = "+     |        |   |        |        |        |        |        |        |        |        |        |  |       |  |       |  |       ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2070:
            ZELS30=0;
            ZELS40=0;
            if(ZELL1N != 0)goto label2110;
            if (KV != 0) goto label2080;
            sw16.WriteLine("0");
            sw16.WriteLine("   L E I T U N G E N ");
            sw16.WriteLine("   - - - - - - - - - ");
            
        label2080:
            sw16.WriteLine("0");
            sw16.WriteLine("           LTG         M        P  T/H     T/H      LTG         M        P  T/H     T/H      LTG         M        P  T/H     T/H");
            sw16.WriteLine("+     |       |         |        |    |       |        |         |        |    |       |        |         |        |    |       ");
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |       |         |        |    |       |        |         |        |    |       |        |         |        |    |       ");
            //sw16.WriteLine("",2100)
            ZELL1N=1;
            
        label2110:
            //READ(VV, 2120)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            I1LTG[1] = Convert.ToInt32(VV.Substring(3,3));
            R1G[1] = Convert.ToDouble(VV.Substring(6,7));
            R1P[1] = Convert.ToDouble(VV.Substring(13,6));
            R1T[1] = VV.Substring(19,1);
            R1I[1] = Convert.ToDouble(VV.Substring(20,5));
            I1LTG[2] = Convert.ToInt32(VV.Substring(25,3));
            R1G[2] = Convert.ToDouble(VV.Substring(28,7));
            R1P[2] = Convert.ToDouble(VV.Substring(35,6));
            R1T[2] = VV.Substring(41,1);
            R1I[2] = Convert.ToDouble(VV.Substring(42,5));
            I1LTG[3] = Convert.ToInt32(VV.Substring(47,3));
            R1G[3] = Convert.ToDouble(VV.Substring(50,7));
            R1P[3] = Convert.ToDouble(VV.Substring(57,6));
            R1T[3] = VV.Substring(63,1);
            R1I[3] = Convert.ToDouble(VV.Substring(64,5));
            //2120 FORMAT (3A1,3(I3,F7.0,F6.0,A1,F5.0))
            //WRITE(FELDS, 2130)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "     " + I1LTG[1].ToString().PadLeft(3) + "  " + Math.Round(R1G[1], 3).ToString().PadLeft(8) + 
                " " + Math.Round(R1P[1],3).ToString().PadLeft(8) + "    " + R1T[1].PadLeft(1) + "  " + Math.Round(R1I[1],2).ToString().PadLeft(6) + "      " +
                I1LTG[2].ToString().PadLeft(3) + "  " + Math.Round(R1G[2],3).ToString().PadLeft(8) + 
                " " + Math.Round(R1P[2],3).ToString().PadLeft(8) + "    " + R1T[2].PadLeft(1) + "  " + Math.Round(R1I[2],2).ToString().PadLeft(6) + "      " +
                I1LTG[3].ToString().PadLeft(3) + "  " + Math.Round(R1G[3],3).ToString().PadLeft(8) + 
                " " + Math.Round(R1P[3],3).ToString().PadLeft(8) + "    " + R1T[3].PadLeft(1) + "  " + Math.Round(R1I[3],2).ToString().PadLeft(6);
            //2130 FORMAT (1H ,2X,3A1,5X,2(I3,2X,F8.3,1X,F8.3,4X,A1,2X,F6.2,6X),I3,2X,F8.2,1X,F8.3,4X,A1,2X,F6.2)
            //WRITE(FELDT,2100)
            FELDT = "+     |       |         |        |    |       |        |         |        |    |       |        |         |        |    |       ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2140:
            if (ZELPNN  !=  0) goto label2160;
            if (KV  !=  0) goto label2160;
            sw16.WriteLine("0");
            sw16.WriteLine("   P L O T T E R B E S C H R E I B U N G ");
            sw16.WriteLine("   - - - - - - - - - - - - - - - - - - - ");
            ZELPNN = 1;
            
        label2160:
            //goto label(2170,2250,2360,2420), 
            if(K2 == 1)      goto label2170;
            if(K2 == 2)      goto label2250;
            if(K2 == 3)      goto label2360;
            if(K2 == 4)      goto label2420;

        label2170:
            if (KV  !=  0  &&  KZ3  !=  2)      return;
            if (ZELP1N  !=  0) goto label2220;
            sw16.WriteLine("0");
            sw16.WriteLine("                                          PROJ.          S     T P       KOMP      HEIZ M O D        T  M          I I I E E E  G Z K");
            sw16.WriteLine("+                                       |      |        | |   | | |    |     |   |     '|     |     |  |  |   |    | | | | | | |  | |");
            sw16.WriteLine("       AZ                    PROJEKTNAME    NR  NAME ORT I ENG E A TEXT  1  2 WES  K  L 1 2 3 KONDR KW KW WVB DSTR M H N 2 3 4  E S R");
            sw16.WriteLine("+     |  |                              |      |    |   | |   | | |    |  |  |   |  |  | | | |     |  |  |   |    | | | | | | |  | | ");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |  |                              |      |    |   | |   | | |    |  |  |   |  |  | | | |     |  |  |   |    | | | | | | |  | | ");
            ZELP1N = 1;
            
            //2220 READ (VV,2230)
            //2230 FORMAT (3A1,I2,7A4,A2,2A3,A4,18I1,I3,3A1,4I1,5X,A1,I1)
        label2220:
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            IP1 = Convert.ToInt32(VV.Substring(3,2));
            P1UEBE[1] = VV.Substring(5,4);
            P1UEBE[2] = VV.Substring(9,4);
            P1UEBE[3] = VV.Substring(13,4);
            P1UEBE[4] = VV.Substring(17,4);
            P1UEBE[5] = VV.Substring(21,4);
            P1UEBE[6] = VV.Substring(25,4);
            P1UEBE[7] = VV.Substring(29,4);
            P1UEBE[8] = VV.Substring(33,2);
            P1NR1 = VV.Substring(35,3);
            P1NR2 = VV.Substring(38,3);
            P1NAME = VV.Substring(41,4);
            IX1 = Convert.ToInt32(VV.Substring(45,1));
            KDRPL1 = Convert.ToInt32(VV.Substring(46,1));
            KDRPL2 = Convert.ToInt32(VV.Substring(47,1));
            KDRPL3 = Convert.ToInt32(VV.Substring(48,1));
            IPASC = Convert.ToInt32(VV.Substring(49,1));
            KTEXT = Convert.ToInt32(VV.Substring(50,1));
            KOMP1 = Convert.ToInt32(VV.Substring(51,1));
            KOMP2 = Convert.ToInt32(VV.Substring(52,1));
            IWESEL = Convert.ToInt32(VV.Substring(53,1));
            KHEIZ = Convert.ToInt32(VV.Substring(54,1));
            LHEIZ = Convert.ToInt32(VV.Substring(55,1));
            MOD[1] = Convert.ToInt32(VV.Substring(56,1));
            MOD[2] = Convert.ToInt32(VV.Substring(57,1));
            MOD[3] = Convert.ToInt32(VV.Substring(58,1));
            KKONDR = Convert.ToInt32(VV.Substring(59,1));
            ITKW = Convert.ToInt32(VV.Substring(60,1));
            IMKW = Convert.ToInt32(VV.Substring(61,1));
            IWVB = Convert.ToInt32(VV.Substring(62,1));
            IDAMPF = Convert.ToInt32(VV.Substring(63,3));
            IX2 = Convert.ToInt32(VV.Substring(66,1));
            IX3 = Convert.ToInt32(VV.Substring(67,1));
            IX4 = Convert.ToInt32(VV.Substring(68,1));
            IMEN1 = Convert.ToInt32(VV.Substring(69,1));
            IMEN2 = Convert.ToInt32(VV.Substring(70,1));
            IMEN3 = Convert.ToInt32(VV.Substring(71,1));
            IGET = Convert.ToInt32(VV.Substring(72,1));  // 5X
            ISTIFT = Convert.ToInt32(VV.Substring(78,1));
            KREUZ = Convert.ToInt32(VV.Substring(79,1));
            //2230 FORMAT (3A1,I2,7A4,A2,2A3,A4,18I1,I3,3A1,4I1,5X,A1,I1)

            //WRITE (FELDS,2240)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + " " + IP1.ToString().PadLeft(2) + " " +
                P1UEBE[1].ToString().PadLeft(4) + P1UEBE[2].ToString().PadLeft(4) + P1UEBE[3].ToString().PadLeft(4) + P1UEBE[4].ToString().PadLeft(4) + 
                P1UEBE[5].ToString().PadLeft(4) + P1UEBE[6].ToString().PadLeft(4) + P1UEBE[7].ToString().PadLeft(4) + P1UEBE[8].ToString().PadLeft(2) + " " +
                P1NR1.ToString().PadLeft(3) + P1NR2.ToString().PadLeft(3) + " " + P1NAME.ToString().PadLeft(4) + "   " + IX1.ToString().PadLeft(1) + " " + KDRPL1.ToString().PadLeft(1) + "   " + 
                KDRPL2.ToString().PadLeft(1) + " " + KDRPL3.ToString().PadLeft(1) + " " + IPASC.ToString().PadLeft(1) + "    " + KTEXT.ToString().PadLeft(1) + "  " + KOMP1.ToString().PadLeft(1) + "  " + 
                KOMP2.ToString().PadLeft(1) + "   " + IWESEL.ToString().PadLeft(1) + "  " + KHEIZ.ToString().PadLeft(1) + "  " + LHEIZ.ToString().PadLeft(1) + " " +
                MOD[1].ToString().PadLeft(1) + " " + MOD[2].ToString().PadLeft(1) + " " + MOD[3].ToString().PadLeft(1) + "     " + KKONDR.ToString().PadLeft(1) + "  " +
                ITKW.ToString().PadLeft(1) + "  " + IMKW.ToString().PadLeft(1) + "   " + IWVB.ToString().PadLeft(1) + "  " + IDAMPF.ToString().PadLeft(3) + " " + IX2.ToString().PadLeft(1) + " " + 
                IX3.ToString().PadLeft(1) + " " + IX4.ToString().PadLeft(1) + " " + IMEN1.ToString().PadLeft(1) + " " + IMEN2.ToString().PadLeft(1) + " " + IMEN3.ToString().PadLeft(1) + "  " + IGET.ToString().PadLeft(1) + 
                " " + ISTIFT.ToString().PadLeft(1) + " " + KREUZ.ToString().PadLeft(1);

            //2240 FORMAT (1H ,2X,3A1,1X,I2,1X,7A4,A2,1X,2A3,1X,A4,3X,        I1,1X,I1,3X,I1,
            //&2(1X,I1),4X,I1,2(2X,I1),   3X,I1,2(2X,I1),3(1X,I1),5X,I1,2(2X,I1),3X,
            //&I1,2X,I3,3(1X,A1),     3(1X,I1),2X,I1,1X,A1,1X,I1)
            //WRITE (FELDT,2210)
            FELDT = "+     |       |         |        |    |       |        |         |        |    |       |        |         |        |    |       ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2250:
            //goto label(2260,2320), 
            if(K3 == 1)     goto label2260;
            if(K3 == 2)     goto label2320;

        label2260:
            if (KV  !=  0  &&  KZ3  !=  2) return;
            if (ZELP2N  !=  0) goto label2290;
            sw16.WriteLine("0");    //,2270)
            sw16.WriteLine("       AZ                 BESCHREIBUNG DES LASTPUNKTES  ZEICHNUNGS-NR  INDEX  I    P-ELEKTR");
            sw16.WriteLine("+     |  |                                            |              |      |  |           |");
            //2280 FORMAT (1H+,5X,'|  |',44X,'|',14X,'|      |  |',11X,'|')
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",2280)
            sw16.WriteLine("+     |  |                                            |              |      |  |           |");
            ZELP2N = 1;
            
        label2290:
            //READ(VV,2300)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            IP2 = Convert.ToInt32(VV.Substring(3,2));
            P2UEBE[1] = VV.Substring(5,4);
            P2UEBE[2] = VV.Substring(9,4);
            P2UEBE[3] = VV.Substring(13,4);
            P2UEBE[4] = VV.Substring(17,4);
            P2UEBE[5] = VV.Substring(21,4);
            P2UEBE[6] = VV.Substring(25,4);
            P2UEBE[7] = VV.Substring(29,4);
            P2UEBE[8] = VV.Substring(33,4);
            P2UEBE[9] = VV.Substring(37,4);
            P2UEBE[10] = VV.Substring(41,4);
            P2NR1 = VV.Substring(45,2);
            P2NR2 = VV.Substring(47,3);
            P2INDE = VV.Substring(50,2);
            IX1 = Convert.ToInt32(VV.Substring(52,1));
            P2ELEK = Convert.ToDouble(VV.Substring(53,8));
            //2300 FORMAT (3A1,I2,10A4,A2,A3,A2,A1,F8.0)
            //WRITE(FELDS,2310)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + " " + IP2.ToString().PadLeft(2) + "     " + 
                P2UEBE[1].ToString().PadLeft(4) + P2UEBE[2].ToString().PadLeft(4) + P2UEBE[3].ToString().PadLeft(4) + P2UEBE[4].ToString().PadLeft(4) + 
                P2UEBE[5].ToString().PadLeft(4) + P2UEBE[6].ToString().PadLeft(4) + P2UEBE[7].ToString().PadLeft(4) + P2UEBE[8].ToString().PadLeft(4) + 
                P2UEBE[9].ToString().PadLeft(4) + P2UEBE[10].ToString().PadLeft(4) + "          " + P2NR1.ToString().PadLeft(2) + P2NR2.ToString().PadLeft(3) + "     " +
                P2INDE.ToString().PadLeft(2) + "  " + IX1.ToString().PadLeft(1) + "   " + Math.Round(P2ELEK,3).ToString().PadLeft(9); 
            //2310 FORMAT (1H ,2X,3A1,1X,I2,5X,10A4,10X,A2,A3,5X,A2,2X,A1,3X,F9.3)
            //WRITE (FELDT,2280)
            sw16.WriteLine("+     |  |                                            |              |      |  |           |");
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2320:
            if (KV  !=  0  &&  KZ3  !=  2)      return;
            //READ (VV,2330)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            IP3 = Convert.ToInt32(VV.Substring(3,2));
            P22UEB[1] = VV.Substring(5,4);
            P22UEB[2] = VV.Substring(9,4);
            P22UEB[3] = VV.Substring(13,4);
            P22UEB[4] = VV.Substring(17,4);
            P22UEB[5] = VV.Substring(21,4);
            P22UEB[6] = VV.Substring(25,4);
            P22UEB[7] = VV.Substring(29,4);
            P22UEB[8] = VV.Substring(33,4);
            P22UEB[9] = VV.Substring(37,4);
            P22UEB[10] = VV.Substring(41,4);
            //2330 FORMAT (3A1,I2,10A4)
            //WRITE (FELDS,2340)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + " " + IP3.ToString().PadLeft(2) + "     " + 
                P22UEB[1].ToString().PadLeft(4) + P22UEB[2].ToString().PadLeft(4) + P22UEB[3].ToString().PadLeft(4) + P22UEB[4].ToString().PadLeft(4) + 
                P22UEB[5].ToString().PadLeft(4) + P22UEB[6].ToString().PadLeft(4) + P22UEB[7].ToString().PadLeft(4) + P22UEB[8].ToString().PadLeft(4) + 
                P22UEB[9].ToString().PadLeft(4) + P22UEB[10].ToString().PadLeft(4);
            //2340 FORMAT (1H ,2X,3A1,1X,I2,5X,10A4)
            FELDT = "+     |  |                                            |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2360:
            if (KV  !=  0  &&  KZ3  !=  2) return;
            if (ZELP3N  !=  0) goto label2390;
            sw16.WriteLine("0");
            sw16.WriteLine("       LTG-NR                      TEXT   LTG-NR                      TEXT   LTG-NR                      TEXT   ");
            sw16.WriteLine("+     |      |                         |        |                         |        |");
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            //sw16.WriteLine("",2380)
            sw16.WriteLine("+     |      |                         |        |                         |        |");
            ZELP3N = 1;
            
        label2390:
            //READ (VV,2400)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            IPL[1] = Convert.ToInt32(VV.Substring(3,3));
            BESCHR[1] = VV.Substring(6,4);
            BESCHR[2] = VV.Substring(10,4);
            BESCHR[3] = VV.Substring(14,4);
            BESCHR[4] = VV.Substring(18,4);
            BESCHR[5] = VV.Substring(22,4);
            IPL[2] = Convert.ToInt32(VV.Substring(26,3));
            BESCHR[6] = VV.Substring(29,4);
            BESCHR[7] = VV.Substring(33,4);
            BESCHR[8] = VV.Substring(37,4);
            BESCHR[9] = VV.Substring(41,4);
            BESCHR[10] = VV.Substring(45,4);
            IPL[3] = Convert.ToInt32(VV.Substring(49,3));
            BESCHR[11] = VV.Substring(52,4);
            BESCHR[12] = VV.Substring(56,4);
            BESCHR[13] = VV.Substring(60,4);
            BESCHR[14] = VV.Substring(64,4);
            BESCHR[15] = VV.Substring(68,4);
            //2400 FORMAT (3A1,3(I3,5A4))
            //WRITE (FELDS,2410)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "    " + IPL[1].ToString().PadLeft(3) + "      " +
                BESCHR[1].ToString().PadLeft(4) + BESCHR[2].ToString().PadLeft(4) + BESCHR[3].ToString().PadLeft(4) + BESCHR[4].ToString().PadLeft(4) + 
                BESCHR[5].ToString().PadLeft(4) + "      " + IPL[2].ToString().PadLeft(3) + "      " + BESCHR[6].ToString().PadLeft(4) + BESCHR[7].ToString().PadLeft(4) + 
                BESCHR[8].ToString().PadLeft(4) + BESCHR[9].ToString().PadLeft(4) + BESCHR[10].ToString().PadLeft(4) + "      " + IPL[3].ToString().PadLeft(3) + "      " + 
                BESCHR[11].ToString().PadLeft(4) + BESCHR[12].ToString().PadLeft(4) + BESCHR[13].ToString().PadLeft(4) + BESCHR[14].ToString().PadLeft(4) + BESCHR[15].ToString().PadLeft(4);
            //2410 FORMAT (1H ,2X,3A1,4X,I3,6X,5A4,2(6X,I3,6X,5A4))
            //WRITE (FELDT,2380)
            FELDT = "+     |      |                         |        |                         |        |   ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2420:
            if (KV != 0  &&  KZ3 != 2) return;
            if (ZELP4N  !=  0) goto label2450;
            sw16.WriteLine("0");
            sw16.WriteLine("           P- GEN     V- GEN    COS-PHI     DP-GLR     P- GEN       GKSV      MU       H");
            sw16.WriteLine("+     |          |          |          |          |          |          |       | ");
            //sw16.WriteLine("", 430)
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |          |          |          |          |          |          |       | ");
            ZELP4N = 1;
            
        label2450:
            //READ (VV,2460)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            P4PGEN = Convert.ToDouble(VV.Substring(3,8));
            P4VGEN = Convert.ToDouble(VV.Substring(11,5));
            P4COPI = Convert.ToDouble(VV.Substring(16,5));
            P4GLR = Convert.ToDouble(VV.Substring(21,5));
            P4H2 = Convert.ToDouble(VV.Substring(26,5));
            P4GKSV = Convert.ToDouble(VV.Substring(31,5));
            P4MU = Convert.ToDouble(VV.Substring(36,5));
            P4HEND = Convert.ToDouble(VV.Substring(41,5));
            //2460 FORMAT (3A1,F8.0,7F5.0)
            //WRITE (FELDS,2470)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(P4PGEN,4).ToString().PadLeft(11) +
                Math.Round(P4VGEN,4).ToString().PadLeft(11) + Math.Round(P4COPI,5).ToString().PadLeft(11) + Math.Round(P4GLR,4).ToString().PadLeft(11) + 
                Math.Round(P4H2,4).ToString().PadLeft(11) + Math.Round(P4GKSV,4).ToString().PadLeft(11) + Math.Round(P4MU,2).ToString().PadLeft(8) + Math.Round(P4HEND,2).ToString().PadLeft(8);
            //2470 FORMAT (1H ,2X,3A1,2F11.4,F11.5,3F11.4,2F8.2)
            //WRITE (FELDT,2440)
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2480:
            if (ZELMNN  !=  0) goto label2500;
            if (KV  !=  0) goto label2500;
            sw16.WriteLine("0");
            sw16.WriteLine("   E I N G A B E N   F U E R - U M R E C H N U N G S K U R V E N ");
            sw16.WriteLine("   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ");
            ZELMNN = 1;
            
        label2500:
            if (KV  !=  0  &&  KZ3  !=  2) return;
            if (ZELM1N  !=  0) goto label2550;
            sw16.WriteLine("0");
            sw16.WriteLine("                     <--------  T K W E  --  ODER  --  P K O N D  --  ODER  --  M K W  /  M K W A  -------->");
            sw16.WriteLine("+             |                                                                                                   |");
            sw16.WriteLine("        K1  K2     1         2         3         4         5         6         7         8         9         10   ");
            sw16.WriteLine("+     |   |   |         |         |         |         |         |         |         |         |         |         |");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |   |   |         |         |         |         |         |         |         |         |         |         |");
            ZELM1N = 1;
            
        label2550:
            //READ (VV,2570)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            M1K1 = Convert.ToInt32(VV.Substring(3,1));
            M1K2 = Convert.ToInt32(VV.Substring(4,1));
            TMKUEL[1] = Convert.ToDouble(VV.Substring(5,7));
            TMKUEL[2] = Convert.ToDouble(VV.Substring(12,7));
            TMKUEL[3] = Convert.ToDouble(VV.Substring(19,7));
            TMKUEL[4] = Convert.ToDouble(VV.Substring(26,7));
            TMKUEL[5] = Convert.ToDouble(VV.Substring(33,7));
            TMKUEL[6] = Convert.ToDouble(VV.Substring(40,7));
            TMKUEL[7] = Convert.ToDouble(VV.Substring(47,7));
            TMKUEL[8] = Convert.ToDouble(VV.Substring(54,7));
            TMKUEL[9] = Convert.ToDouble(VV.Substring(61,7));
            TMKUEL[10] = Convert.ToDouble(VV.Substring(68,7));
            TM = TMKUEL[1];
            
            for(I = 1; I <= 10; I++)    //DO 2560 I = 1,10
                if (TMKUEL[I]  >  TM) 
                    TM = TMKUEL[I];     //2560 CONTINUE

            if (TM < 100000.0) FMTM[8] = FMTX2;
            if (TM < 10000.0) FMTM[8] = FMTX3;
            if (TM >= 100000.0) FMTM[8] = FMTX1;
            
            //DATA FMTM /'(1H ',',2X,','3A1,','2(3X',',I1)',',10(','F10.','2), ','9X,F','9.4)'/,
            //WRITE (FELDS,FMTM)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "   " + M1K1.ToString().PadLeft(1) + "   " + 
                M1K2.ToString().PadLeft(1) + Math.Round(TMKUEL[1],2).ToString().PadLeft(10) + 
                Math.Round(TMKUEL[2],2).ToString().PadLeft(10) + Math.Round(TMKUEL[3],2).ToString().PadLeft(10) + Math.Round(TMKUEL[4],2).ToString().PadLeft(10) + 
                Math.Round(TMKUEL[5],2).ToString().PadLeft(10) + Math.Round(TMKUEL[6],2).ToString().PadLeft(10) + Math.Round(TMKUEL[7],2).ToString().PadLeft(10) + 
                Math.Round(TMKUEL[8],2).ToString().PadLeft(10) + Math.Round(TMKUEL[9],2).ToString().PadLeft(10) + Math.Round(TMKUEL[10],2).ToString().PadLeft(10);
            //2570 FORMAT (3A1,2I1,10F7.0)
            
            //WRITE (FELDT,2540)
            FELDT = "+     |   |   |         |         |         |         |         |         |         |         |         |         |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2580:
            if (ZELPGN  !=  0)  goto label2600;
            if (KV  !=  0)      goto label2600;
            sw16.WriteLine("0");
            sw16.WriteLine("   P L O T T E R B E S C H R E I B U N G     G A S   P R O Z E S S");
            sw16.WriteLine("   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
            ZELPGN = 1;
            
        label2600:
            //goto label(2610,2670,2740,2780,2830), 
            if(K2 == 1)      goto label2610;
            if(K2 == 2)      goto label2670;
            if(K2 == 3)      goto label2740;
            if(K2 == 4)      goto label2780;
            if(K2 == 5)      goto label2830;

        label2610:
            if (KV != 0 && KZ3 != 2) return;
            if (ZELG1N != 0)    goto label2640;
            sw16.WriteLine("0");
            sw16.WriteLine("       VERD1 KLAB1 ZWKUE VERD2 KLAB2 REKU ZUF1 BRK1 KLZUV1 TURB1 KLZUN1 ZUF2 BRK2 KLZUV2 TURB2 KLZUN2 IABHI KABHI GASTA GASTT NRGAS");
            sw16.WriteLine("+     |     |     |     |     |     |    |    |    |      |     |      |    |    |      |      |     |     |     |     |           ");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |     |     |     |     |     |    |    |    |      |     |      |    |    |      |      |     |     |     |     |           ");
            ZELG1N = 1;
            
        label2640:
            //READ (VV,2650) 
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            I1  = Convert.ToInt32(VV.Substring(3,1));
            I2 = Convert.ToInt32(VV.Substring(4,1));
            I3 = Convert.ToInt32(VV.Substring(5,1));
            I4 = Convert.ToInt32(VV.Substring(6,1));
            I5 = Convert.ToInt32(VV.Substring(7,1));
            I6 = Convert.ToInt32(VV.Substring(8,1));
            I7 = Convert.ToInt32(VV.Substring(9,1));
            I8 = Convert.ToInt32(VV.Substring(10,1));
            I9 = Convert.ToInt32(VV.Substring(11,1));
            I10 = Convert.ToInt32(VV.Substring(12,1));
            I11 = Convert.ToInt32(VV.Substring(13,1));
            I12 = Convert.ToInt32(VV.Substring(14,1));
            I13 = Convert.ToInt32(VV.Substring(15,1));
            I14 = Convert.ToInt32(VV.Substring(16,1));
            I15 = Convert.ToInt32(VV.Substring(17,1));
            I16 = Convert.ToInt32(VV.Substring(18,1));
            I17 = Convert.ToInt32(VV.Substring(19,1));
            I18 = Convert.ToInt32(VV.Substring(20,1));
            I19 = Convert.ToInt32(VV.Substring(21,1));
            I20 = Convert.ToInt32(VV.Substring(22,1));
            I21 = Convert.ToInt32(VV.Substring(23,1));
            //2650 FORMAT (3A1,21I1)
            //WRITE (FELDS,2660)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + "     " + I1.ToString().PadLeft(1) + "     " + I2.ToString().PadLeft(1) + "     " +
                I3.ToString().PadLeft(1) + "     " + I4.ToString().PadLeft(1) + "     " + I5.ToString().PadLeft(1) + "    " + I6.ToString().PadLeft(1) + "    " + I7.ToString().PadLeft(1) + "    " +
                I8.ToString().PadLeft(1) + "      " + I9.ToString().PadLeft(1) + "     " + I10.ToString().PadLeft(1) + "      " + I11.ToString().PadLeft(1) + "    " + I12.ToString().PadLeft(1) + "    " +
                I13.ToString().PadLeft(1) + "      " + I14.ToString().PadLeft(1) + "     " + I15.ToString().PadLeft(1) + "      " + I16.ToString().PadLeft(1) + "     " + I17.ToString().PadLeft(1) + "     " +
                I18.ToString().PadLeft(1) +  "     " +I19.ToString().PadLeft(1) +  "     " + I20.ToString().PadLeft(1) + "     " + I21.ToString().PadLeft(1);
            //2660 FORMAT (1H ,2X,3A1,5(5X,I1),3(4X,I1),6X,I1,5X,I1,6X,I1,2(4X,I1),2(6X,I1,5X,I1),4(5X,I1))
            //WRITE (FELDT,2630)
            FELDT = "+     |     |     |     |     |     |    |    |    |      |     |      |    |    |      |      |     |     |     |     |           ";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2670:
            if (KV  !=  0  &&  KZ3  !=  2) return;
            if (ZELG2N  !=  0) goto label2710;
            sw16.WriteLine("0");
            sw16.WriteLine("      |                     1 .  V E R D I C H T E R                    |               2 .  V E R D I C H T E R               |");
            sw16.WriteLine("           PVVERD     TVVERD      GLUFT     TNVERD      PVERD      GKLAB     PVVERD     TVVERD     TNVERD      PVERD      GKLAB");  
            sw16.WriteLine("+     |          |          |          |          |          |          |          |          |          |          |          |");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |          |          |          |          |          |          |          |          |          |          |          |");
            ZELG2N = 1;
            
        label2710:
            //READ (VV,2720)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            A1 = Convert.ToDouble(VV.Substring(3,7));
            A2 = Convert.ToDouble(VV.Substring(10,7));
            A3 = Convert.ToDouble(VV.Substring(17,7));
            A4 = Convert.ToDouble(VV.Substring(24,7));
            A5 = Convert.ToDouble(VV.Substring(31,7));
            A6 = Convert.ToDouble(VV.Substring(38,7));
            A7 = Convert.ToDouble(VV.Substring(45,7));
            A8 = Convert.ToDouble(VV.Substring(52,7));
            A9 = Convert.ToDouble(VV.Substring(59,7));
            A10 = Convert.ToDouble(VV.Substring(66,7));
            A11 = Convert.ToDouble(VV.Substring(73,7));
            //2720 FORMAT (3A1,11F7.0)
            //WRITE(FELDS,2730)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(A1,3).ToString().PadLeft(11) + Math.Round(A2,3).ToString().PadLeft(11) +
                Math.Round(A3,3).ToString().PadLeft(11) + Math.Round(A4,3).ToString().PadLeft(11) + Math.Round(A5,3).ToString().PadLeft(11) + Math.Round(A6,3).ToString().PadLeft(11) +
                Math.Round(A7,3).ToString().PadLeft(11) + Math.Round(A8,3).ToString().PadLeft(11) + Math.Round(A9,3).ToString().PadLeft(11) + Math.Round(A10,3).ToString().PadLeft(11) +
                Math.Round(A11,3).ToString().PadLeft(11);
            //2730 FORMAT (1H ,2X,3A1,11F11.3)
            //WRITE (FELDT,2700)
            FELDT = "+     |          |          |          |          |          |          |          |          |          |          |          |";
            IL1 = 8;
            EINDRU1(ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2740:
            if (KV  !=  0  &&  KZ3  !=  2) return;
            if (ZELG3N  !=  0) goto label2770;
            sw16.WriteLine("0");
            sw16.WriteLine("      |               V O R G A B E N   F U E R   1.  W A E R M E Z U F U H R         1.  B R E N N K               |");
            sw16.WriteLine("            TNZUF       PZUF      TNBRK       GBRK     GKLZUV     TVTURB     TNTURB     GNTURB     GKLZUN     PGTURB     TNREKU");
            sw16.WriteLine("+     |          |          |          |          |          |          |          |          |          |          |          |");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |          |          |          |          |          |          |          |          |          |          |          |");
            ZELG3N = 1;
            
        label2770:
            //READ (VV,2720)
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            A1 = Convert.ToDouble(VV.Substring(3,7));
            A2 = Convert.ToDouble(VV.Substring(10,7));
            A3 = Convert.ToDouble(VV.Substring(17,7));
            A4 = Convert.ToDouble(VV.Substring(24,7));
            A5 = Convert.ToDouble(VV.Substring(31,7));
            A6 = Convert.ToDouble(VV.Substring(38,7));
            A7 = Convert.ToDouble(VV.Substring(45,7));
            A8 = Convert.ToDouble(VV.Substring(52,7));
            A9 = Convert.ToDouble(VV.Substring(59,7));
            A10 = Convert.ToDouble(VV.Substring(66,7));
            A11 = Convert.ToDouble(VV.Substring(73,7));
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(A1,3).ToString().PadLeft(11) + Math.Round(A2,3).ToString().PadLeft(11) +
                Math.Round(A3,3).ToString().PadLeft(11) + Math.Round(A4,3).ToString().PadLeft(11) + Math.Round(A5,3).ToString().PadLeft(11) + Math.Round(A6,3).ToString().PadLeft(11) +
                Math.Round(A7,3).ToString().PadLeft(11) + Math.Round(A8,3).ToString().PadLeft(11) + Math.Round(A9,3).ToString().PadLeft(11) + Math.Round(A10,3).ToString().PadLeft(11) +
                Math.Round(A11,3).ToString().PadLeft(11);
            FELDT = "+     |          |          |          |          |          |          |          |          |          |          |          |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2780:
            if (KV  !=  0  &&  KZ3  !=  2) return;
            if (ZELG4N  !=  0) goto label2810;
            sw16.WriteLine("0");
            sw16.WriteLine("      |               V O R G A B E N   F U E R   2.  W A E R M E Z U F U H R         2.  B R E N N K               |");
            sw16.WriteLine("            TNZUF       PZUF      TNBRK       GBRK     GKLZUV     TVTURB     TNTURB     GNTURB     GKLZUN     PGTURB");
            sw16.WriteLine("+     |          |          |          |          |          |          |          |          |          |          |          |");
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |          |          |          |          |          |          |          |          |          |          |          |");
            ZELG4N = 1;
            
        label2810:
            //READ (VV,2720)X,Y,Z,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            A1 = Convert.ToDouble(VV.Substring(3,7));
            A2 = Convert.ToDouble(VV.Substring(10,7));
            A3 = Convert.ToDouble(VV.Substring(17,7));
            A4 = Convert.ToDouble(VV.Substring(24,7));
            A5 = Convert.ToDouble(VV.Substring(31,7));
            A6 = Convert.ToDouble(VV.Substring(38,7));
            A7 = Convert.ToDouble(VV.Substring(45,7));
            A8 = Convert.ToDouble(VV.Substring(52,7));
            A9 = Convert.ToDouble(VV.Substring(59,7));
            A10 = Convert.ToDouble(VV.Substring(66,7));
            //WRITE (FELDS,2820)X,Y,Z,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(A1,3).ToString().PadLeft(11) + Math.Round(A2,3).ToString().PadLeft(11) +
                Math.Round(A3,3).ToString().PadLeft(11) + Math.Round(A4,3).ToString().PadLeft(11) + Math.Round(A5,3).ToString().PadLeft(11) + Math.Round(A6,3).ToString().PadLeft(11) +
                Math.Round(A7,3).ToString().PadLeft(11) + Math.Round(A8,3).ToString().PadLeft(11) + Math.Round(A9,3).ToString().PadLeft(11) + Math.Round(A10,3).ToString().PadLeft(11);
            //2820 FORMAT (1H ,2X,3A1,10F7.0)
            //WRITE (FELDT,2700)
            FELDT = "+     |          |          |          |          |          |          |          |          |          |          |          |";
            IL1 = 8;
            EINDRU1(ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;

        label2830:
            if (KV  !=  0  &&  KZ3  !=  2)      return;
            if (ZELG5N  !=  0) goto label2860;
            sw16.WriteLine("0");
            sw16.WriteLine("             PGAS     TABGAS     GABGAS         HU");
            sw16.WriteLine("+     |          |          |          |          |");
            //2850 FORMAT (1H+,5X,'|',4(10X,'|'))
            sw16.WriteLine("   ----------------------------------------------------------------------------------------------------------------------------------");
            sw16.WriteLine("+     |          |          |          |          |");
            ZELG5N = 1;
            
        label2860:
            //READ (VV,2720)X,Y,Z,A1,A2,A3,A4
            X = Convert.ToDouble(VV.Substring(0,1));
            Y = Convert.ToDouble(VV.Substring(1,1));
            Z = Convert.ToDouble(VV.Substring(2,1));
            A1 = Convert.ToDouble(VV.Substring(3,7));
            A2 = Convert.ToDouble(VV.Substring(10,7));
            A3 = Convert.ToDouble(VV.Substring(17,7));
            A4 = Convert.ToDouble(VV.Substring(24,7));
            
            //WRITE (FELDS,2870)
            FELDS = "   " + X.ToString().PadLeft(1) + Y.ToString().PadLeft(1) + Z.ToString().PadLeft(1) + Math.Round(A1,3).ToString().PadLeft(11) + Math.Round(A2,3).ToString().PadLeft(11) +
                Math.Round(A3,3).ToString().PadLeft(11) + Math.Round(A4,3).ToString().PadLeft(11);
            //2870 FORMAT (1H ,2X,3A1,4F11.3)
            //WRITE (FELDT,2850)
            FELDT = "+     |          |          |          |          |";
            IL1 = 8;
            EINDRU1 (ref FELDS,FELDT,IL1);
            sw16.WriteLine("{0}", FELDS.Substring(0,132));
            goto label470;
            
        label2880:
            Console.ReadKey();
            Environment.Exit(0);
        }   //END


        static void EINDRU1 (ref string FELDS, string FELDT, int IL1)
        {
            //CHARACTER * 134 FELDS,FELDT
            bool QWERT, QNULL;
            int I1 = 0, I2 = 0, IK = 0, IK1 = 0;

            sb = new StringBuilder(FELDT);
            sb.Insert(133, "|");
            FELDT = sb.ToString();
            QWERT = false;
            QNULL = false;
            I1 = IL1;
            
            for(I = IL1-1; I <= 134; I++)     //DO 200 I = IL1,134
            {
                if (FELDT.Substring(I,1)  ==  "|") 
                    goto label100;

                if (FELDS.Substring(I,1)  !=  " "  &&  FELDS.Substring(I,1)  !=  "0"  && FELDS.Substring(I,1)  !=  "."  &&  FELDS.Substring(I,1)  !=  "-")
                    QWERT = true;
                continue;
                
            label100:
                I2 = I - 1;
                sb = new StringBuilder(FELDS);
                sb.Insert(I,FELDT.Substring(I,1));
                FELDS = sb.ToString();
                if (! QWERT)
                {
                    sb = new StringBuilder(FELDS);
                    sb.Insert(I1," ");
                }
                if (! QWERT) goto label190;
                
                for(IK = I1; IK <= I2; IK++)    //DO 180 IK = I1,I2
                {
                    if (IK  ==  I2) continue;
                    if (FELDS.Substring(IK,1) !=  ".") continue;
                    
                    for(IK1 = IK+1; IK1 <= I2; IK1++)   //DO 170 IK1 = IK+1,I2
                    {
                        if (FELDS.Substring(IK1,1) == "0")
                            goto label150;

                        goto label160;
                        
                    label150:
                        if(QNULL)
                            continue;

                        QNULL= true;
                        IN = IK1;
                        continue;
                        
                    label160:
                        QNULL = false;
                        IN =0;
                    }   //170 CONTINUE
                    goto label185;
                }   //180 CONTINUE
                
            label185:
                if (QNULL)
                {
                    sb = new StringBuilder(FELDS);
                    sb.Insert(IN," ");
                    FELDS = sb.ToString();
                    //FELDS(IN:I2) = ' ';
                }
                
            label190:
                I1 = I2 + 2;
                QWERT = false;
                QNULL = false;
            }   //200 CONTINUE
            sb = new StringBuilder(FELDS);
            sb.Insert(IL1-1,"|");
            FELDS = sb.ToString();
            return;
        }   //END



        static void Equivalence1(ref double[,] Xequiv, int r0start, int c0start, ref double[] Yequiv, int l0start)
        {
            int lmax, r0max, c0max;
            r0max = Xequiv.GetLength(0) - 1;
            c0max = Xequiv.GetLength(1) - 1;
            lmax = Yequiv.GetLength(0) - 1;
            int lstart;
            lstart = l0start;
            for (int i = c0start; i <= c0max; i++)
            {
                for (int j = r0start; j <= r0max; j++)
                {
                    Yequiv[lstart] = Xequiv[j, i];
                    lstart++;
                    if (lstart > lmax)
                    {
                        return;
                    }
                }
            }
        }


        // for 2-D Array to 2-D Array
        static void Equivalence2(ref double[,] Xequiv, int r0start, int c0start, ref double[,] Zequiv, int r1start, int c1start)
        {
            int r0max, c0max, r1max, c1max;
            r0max = Xequiv.GetLength(0) - 1;
            c0max = Xequiv.GetLength(1) - 1;
            r1max = Zequiv.GetLength(0) - 1;
            c1max = Zequiv.GetLength(1) - 1;

            int rstart, cstart;
            rstart = r1start;
            cstart = c1start;
            for (int i = c0start; i <= c0max; i++)
            {
                for (int j = r0start; j <= r0max; j++)
                {
                    Zequiv[rstart, cstart] = Xequiv[j, i];
                    rstart++;
                    if (rstart > r1max)
                    {
                        rstart = 1;
                        cstart++;
                        if (cstart > c1max)
                        {
                            return;
                        }
                    }
                }
            }
        }



        static void TWA091()
        {
            //ENTRY CONVOR
            string FELD = "", PRFKON;
            double[,] XACK = new double[16, 62], XTCK = new double[16,101];
            
            //* XTC1 (15),XTC2 (15),XTC3 (15),XTC4 (15),XTC5 (15),
            //* XTC6 (15),XTC7 (15),XTC8 (15),XTC9 (15),XTC10 (15),
            //* XTC11 (15),XTC12 (15),XTC13 (15),XTC14 (15),XTC15 (15),
            //* XTC16 (15),XTC17 (15),XTC18 (15),XTC19 (15),XTC20 (15),
            //* XTC21 (15),XTC22 (15),XTC23 (15),XTC24 (15),XTC25 (15),
            //* XTC26 (15),XTC27 (15),XTC28 (15),XTC29 (15),XTC30 (15),
            //* XTC31 (15),XTC32 (15),XTC33 (15),XTC34 (15),XTC35 (15),
            //* XTC36 (15),XTC37 (15),XTC38 (15),XTC39 (15),XTC40 (15),
            //* XTC41 (15),XTC42 (15),XTC43 (15),XTC44 (15),XTC45 (15),
            //* XTC46 (15),XTC47 (15),XTC48 (15),XTC49 (15),XTC50 (15)
            
            //DIMENSION
            //* XTC51 (15),XTC52 (15),XTC53 (15),XTC54 (15),XTC55 (15),
            //* XTC56 (15),XTC57 (15),XTC58 (15),XTC59 (15),XTC60 (15),
            //* XTC61 (15),XTC62 (15),XTC63 (15),XTC64 (15),XTC65 (15),
            //* XTC66 (15),XTC67 (15),XTC68 (15),XTC69 (15),XTC70 (15),
            //* XTC71 (15),XTC72 (15),XTC73 (15),XTC74 (15),XTC75 (15),
            //* XTC76 (15),XTC77 (15),XTC78 (15),XTC79 (15),XTC80 (15),
            //* XTC81 (15),XTC82 (15),XTC83 (15),XTC84 (15),XTC85 (15),
            //* XTC86 (15),XTC87 (15),XTC88 (15),XTC89 (15),XTC90 (15),
            //* XTC91 (15),XTC92 (15),XTC93 (15),XTC94 (15),XTC95 (15),
            //* XTC96 (15),XTC97 (15),XTC98 (15),XTC99 (15),XTC100(15)
            

            
            //NAMELIST /PRFKON/
            //* XTC1 ,XTC2 ,XTC3 ,XTC4 ,XTC5 ,XTC6 ,XTC7 ,XTC8 ,XTC9 ,
            //* XTC10 ,XTC11 ,XTC12 ,XTC13 ,XTC14 ,XTC15 ,XTC16 ,XTC17 ,XTC18 ,
            //* XTC19 ,XTC20 ,XTC21 ,XTC22 ,XTC23 ,XTC24 ,XTC25 ,XTC26 ,XTC27 ,
            //* XTC28 ,XTC29 ,XTC30 ,XTC31 ,XTC32 ,XTC33 ,XTC34 ,XTC35 ,XTC36 ,
            //* XTC37 ,XTC38 ,XTC39 ,XTC40 ,XTC41 ,XTC42 ,XTC43 ,XTC44 ,XTC45 ,
            //* XTC46 ,XTC47 ,XTC48 ,XTC49 ,XTC50 ,XTC51 ,XTC52 ,XTC53 ,XTC54 ,
            //* XTC55 ,XTC56 ,XTC57 ,XTC58 ,XTC59 ,XTC60 ,XTC61 ,XTC62 ,XTC63 ,
            //* XTC64 ,XTC65 ,XTC66 ,XTC67 ,XTC68 ,XTC69 ,XTC70 ,XTC71 ,XTC72 ,
            //* XTC73 ,XTC74 ,XTC75 ,XTC76 ,XTC77 ,XTC78 ,XTC79 ,XTC80 ,XTC81 ,
            //* XTC82 ,XTC83 ,XTC84 ,XTC85 ,XTC86 ,XTC87 ,XTC88 ,XTC89 ,XTC90 ,
            //* XTC91 ,XTC92 ,XTC93 ,XTC94 ,XTC95 ,XTC96 ,XTC97 ,XTC98 ,XTC99 ,
            //* XTC100
            //8 ,ETA01 ,ETA02 ,ACRKS ,ACR1 ,ACR2 ,ACR3 ,
            //9 ACR4 ,ACR5 ,ACR6 ,ACR7 ,ACR8 ,ACR9 ,ACR10 ,ACR11 ,ACR12
            //A ,ACW1 ,ACW2 ,ACW3 ,ACW4 ,ACW5 ,ACW6 ,ACW7 ,TKUEL
            //B, ABKRIT, IZMAXA, IZMINA, IZMAXT, IZMINT
            //C, PST905, PST906 ,PST907,PST908
            //D, DTKOTL
            
            double[] XAC1 = {0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0 };
            double[] XAC2 = {0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .0 };
            double[] XAC3 = {0, -0.015, -0.036, -0.036, -0.015, -0.015, -0.015, -0.015, -0.015, -0.03, -0.03, -0.03, -0.03, -0.03, 0.0, 0.0 };
            double[] XAC4 = {0, 1.08, 1.228, 1.228, 1.08, 1.08, 1.08, 1.08, 1.08, 1.196, 1.196, 1.196, 1.196, 1.196, 0.0, 0.0 };
            double[] XAC5 = {0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.555, 0.555, 0.555, 0.555, 0.555, 0.0, 0.0 };
            double[] XAC6 = {0, 0.964, 0.9672, 0.9672, 0.964, 0.964, 0.964, 0.964, 0.964, 0.9799, 0.96, 0.945, 0.925, 0.916, 0.0, 0.0 };
            double[] XAC7 = {0, -0.35, -1.741, -1.741, -0.35, -0.35, -0.35, -0.35, -0.35, -0.403, -0.403, -0.403, -0.403, -0.403, 0.0, 0.0 };
            double[] XAC8 = {0, 0.3, 0.332, 0.332, 0.3, 0.3, 0.3, 0.3, 0.3, 0.546, 0.546, 0.546, 0.546, 0.546, 0.0, 0.0 };
            double[] XAC9 = {0, 4.484, 4.152, 4.152, 4.484, 4.484, 4.484, 4.484, 4.484, 2.842, 2.842, 2.842, 2.842, 2.842, 0.0, 0.0 };
            double[] XAC10 = {0, 4.705, 5.6, 5.6, 4.705, 4.705, 4.705, 4.705, 4.705, 5.033, 5.033, 5.033, 5.033, 5.033, 0.0, 0.0 };
            double[] XAC11 = {0, -2.586, -3.52, -3.52, -2.586, -2.586, -2.586, -2.586, -2.586, -3.21, -3.21, -3.21, -3.21, -3.21, 0.0, 0.0 };
            double[] XAC12 = {0, -0.95, -1.0, -1.0, -0.95, -0.95, -0.95, -0.95, -0.95, -1.04, -1.04, -1.04, -1.04, -1.04, 0.0, 0.0 };
            double[] XAC13 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XAC14 = {0, -0.9, 1.5, 1.5, -0.9, -0.9, -0.9, -0.9, -0.9, 4.44, 4.44, 4.44, 4.44, 4.44, 0.0, 0.0 };
            double[] XAC15 = {0, 2.0, 0.332, 0.332, 2.0, 2.0, 2.0, 2.0, 2.0, -2.53, -2.53, -2.53, -2.53, -2.53, 0.0, 0.0 };
            double[] XAC16 = {0, -2.0, -4.0, -4.0, -2.0, -2.0, -2.0, -2.0, -2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 0.0 };
            double[] XAC17 = {0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XAC18 = {0, -1.697, -1.697, -1.697, -1.697, -1.697, -1.697, -1.697, -1.697, 1.71, 1.71, 1.71, 1.71, 1.71, 0.0, 0.0 };
            double[] XAC19 = {0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.03, 1.07, 1.07, 1.1, 1.06, 0.0, 0.0 };
            double[] XAC20 = {0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.03, 1.1, 1.1, 1.1, 1.1, 0.0, 0.0 };
            double[] XAC21 = {0, 0.1962, 0.1962, 0.1962, 0.1962, 0.1962, 0.1962, 0.1962, 0.1962, 0.217, 0.217, 0.217, 0.217, 0.217, 0.0, 0.0 };
            double[] XAC22 = {0, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 0.0, 0.0 };
            double[] XAC23 = {0, 3.758, 3.758, 3.758, 3.758, 3.758, 3.758, 3.758, 3.758, 3.3962, 3.3962, 3.3962, 3.3962, 3.3962, 0.0, 0.0 };
            double[] XAC24 = {0, 0.898, 0.898, 0.898, 0.898, 0.898, 0.898, 0.898, 0.898, 0.8962, 0.8962, 0.8962, 0.8962, 0.8962, 0.0, 0.0 };
            double[] XAC25 = {0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0.0, 0.0 };
            double[] XAC26 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XAC27 = {0, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0, 0.0 };
            double[] XAC28 = {0, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 0.0, 0.0 };
            double[] XAC29 = {0, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, 0.0, 0.0 };
            double[] XAC30 = {0, 0.607, 0.505, 0.505, 0.607, 0.607, 0.607, 0.607, 0.607, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0 };
            double[] XAC31 = {0, 0.54, 0.73, 0.73, 0.54, 0.54, 0.54, 0.54, 0.54, 0.54, 0.54, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XAK1 = {0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5};
            double[] XAK2 = {0, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022};
            double[] XAK3 = {0, 0.9 ,0.9 ,0.9 ,0.9 ,0.9 ,0.9 ,0.9 ,0.9 ,0.9 ,0.3, 0.3, 0.3, 0.3, 0.3, 0.3};
            double[] XAK4 = {0, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5 };
            double[] XAK5 = {0, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022, 0.0022};
            double[] XAK6 = {0, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
            double[] XAK7 = {0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3};
            double[] XAK8 = {0, -1.7, -1.7, -1.7, -1.7, -1.7, -1.7, -1.7, -1.7, -1.7, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5 };
            double[] XAK9 = {0, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044, 0.044};
            double[] XAK10 = {0, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4, 8.0E-4};
            double[] XAK11 = {0, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4, 6.0E-4};
            double[] XAK12 = {0, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011, -0.011};
            double[] XAK13 = {0, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071};
            double[] XAK14 = {0, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3};
            double[] XAK15 = {0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0};
            double[] XAK151 = {0, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021};
            double[] XAK16 = {0, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715, 0.0715};
            double[] XAK17 = {0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4 };
            double[] XAK18 = {0, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
            double[] XAK19 = {0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0};
            double[] XAK191 = {0, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306};
            double[] XAK20 = {0, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465};
            double[] XAK21 = {0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4};
            double[] XAK22 = {0, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87};
            double[] XAK36 = {0, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15, 1.15 };
            double[] XAK37 = {0, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415, -0.0415};
            double[] XAK38 = {0, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17, -0.17};
            double[] XAK39 = {0, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3};
            double[] XAK40 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
            double[] XAKS = {0, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002};

            double[] XTC1 = {0, 0.27645E-01, 0.18240E-01, 0.18240E-01, 0.27645E-01, 0.50559E-02, 0.18240E-01, 0.50559E-02, 0.0, 0.50559E-02, 0.0 ,
                0.0, 0.0, 0.0, 0.0, 0.0};
            double[] XTC2 = {0, -0.39255E-01,-0.60593E-01,-0.60593E-01,-0.39255E-01,-0.17952E-01, -0.60593E-01,-0.17952E-01, 0.0 ,-0.17952E-01, 0.0 ,
                                0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC3 = {0,  -0.11393 ,-0.12466 ,-0.12466 ,-0.11393 ,-0.26659E-01, -0.12466 ,-0.26659E-01, 0.0 ,-0.26659E-01, 0.0272 ,
                0.0299, 0.0318, 0.0332, 0.0353, 0.0465 };
            double[] XTC4 = {0, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 0.0, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2 };
            double[] XTC5 = {0, 1.88, 1.88, 1.88, 1.88, 1.88, 1.88, 1.88, 0.0, 1.88, 1.88, 1.88, 1.88, 1.88, 1.88, 1.88 };
            double[] XTC6 = {0, 1337.0, 1337.0, 1337.0, 1337.0, 1337.0, 1337.0, 1337.0, 0.0, 1337.0, 1337.0, 1337.0, 1337.0, 1337.0, 1337.0, 1337.0 };
            double[] XTC7 = {0, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 0.0, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8 };
            double[] XTC8 = {0, 0.00753, 0.00753, 0.00753, 0.00753, 0.00753, 0.00753, 0.00753, 0.0, 0.00753, 0.00753, 0.00753, 0.00753, 0.00753, 0.00753, 0.00753 };
            double[] XTC9 = {0, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 0.0, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9 };
            double[] XTC10 = {0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0 };
            double[] XTC11 = {0, 0.325, 0.325, 0.325, 0.325, 0.325, 0.325, 0.325, 0.0, 0.325, 0.325, 0.325, 0.325, 0.325, 0.325, 0.325 };
            double[] XTC12 = {0, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 0.0, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76 };
            double[] XTC13 = {0, 0.286, 0.286, 0.286, 0.286, 0.286, 0.286, 0.286, 0.0, 0.286, 0.286, 0.286, 0.286, 0.286, 0.286, 0.286 };
            double[] XTC14 = {0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 0.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0 };
            double[] XTC15 = {0, 1.1616, 1.16, 1.16, 1.1616, 1.16, 1.16, 1.16, 0.0, 1.3, 1.3, 1.3, 1.3, 1.3, 1.3, 1.3 };
            double[] XTC16 = {0, 0.7, 0.4353, 0.4353, 0.7, 0.4353, 0.4353, 0.4353, 0.0, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9 };
            double[] XTC17 = {0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0 };
            double[] XTC18 = {0, 6.0, 0.925, 0.925, 6.0, 0.925, 0.925, 0.925, 0.0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6 };
            double[] XTC19 = {0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 0.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0 };
            double[] XTC20 = {0, -3.91, -5.93, -5.93, -3.91, -5.93, -5.93, -5.93, 0.0, -225.2, -225.2, -225.2, -225.2, -225.2, -225.2, -225.2 };
            double[] XTC21 = {0, 11.91, 11.93, 11.93, 11.91, 11.93, 11.93, 11.93, 0.0, 230.2, 230.2, 230.2, 230.2, 230.2, 230.2, 230.2 };
            double[] XTC22 = {0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0 };
            double[] XTC23 = {0, 0.8, 1.04, 1.04, 0.8, 1.04, 1.04, 1.04, 0.0, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3};
            double[] XTC24 = {0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 };
            double[] XTC25 = {0, 0.0146, 0.0136, 0.0127, 0.0146, 0.0108, 0.0282, 0.0108, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02 };
            double[] XTC26 = {0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 };
            double[] XTC27 = {0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0 };
            double[] XTC28 = {0, 7.00E-04, 1.50E-04, 1.50E-04, 7.00E-04, 1.50E-04, 1.50E-04, 1.50E-04, 0.0, 6.70E-09, 6.70E-09, 6.70E-09, 6.70E-09, 6.70E-09, 6.70E-09, 6.70E-09};
            double[] XTC29 = {0, 1.2, 1.5, 1.5, 1.2, 1.5, 1.5, 1.5, 0.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0 };
            double[] XTC30 = {0, 7.00E-11, 6.70E-09, 6.70E-09, 7.00E-11, 6.70E-09, 6.70E-09, 6.70E-09, 0.0, 6.70E-09, 6.70E-09, 6.70E-09, 6.70E-09, 6.70E-09, 6.70E-09, 6.70E-09};
            double[] XTC31 = {0, 5.0, 4.0, 4.0, 5.0, 4.0, 4.0, 4.0, 0.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0 };
            double[] XTC32 = {0, 36.0, 35.5, 35.5, 36.0, 135.0, 35.5, 135.0, 0.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0 };
            double[] XTC33 = {0, 32.22, 29.53, 26.61, 32.22, 6.769, 32.3, 6.769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC34 = {0, 54.945, 66.67, 73.68, 54.945, 81.594, 60.24, 81.594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC35 = {0, 1.0, 1.0, 1.0, 1.0, 0.4883, 1.0, 0.4883, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };
            double[] XTC36 = {0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC37 = {0, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC38 = {0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC39 = {0, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC40 = {0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC41 = {0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 };
            double[] XTC42 = {0, 1.087, 1.087, 1.087, 1.087, 1.087, 1.087, 1.087, 0.0, 1.087, 1.087, 1.087, 1.087, 1.087, 1.087, 1.087 };
            double[] XTC43 = {0, 9.458, 9.458, 9.458, 9.458, 9.458, 9.458, 9.458, 0.0, 9.458, 9.458, 9.458, 9.458, 9.458, 9.458, 9.458 };
            double[] XTC44 = {0, 1.272, 1.272, 1.272, 1.272, 1.272, 1.272, 1.272, 0.0, 1.272, 1.272, 1.272, 1.272, 1.272, 1.272, 1.272 };
            double[] XTC45 = {0, 56.0, 56.0, 56.0, 56.0, 56.0, 56.0, 56.0, 0.0, 56.0, 56.0, 56.0, 56.0, 56.0, 56.0, 56.0 };
            double[] XTC46 = {0, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.0, 0.016, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009 };
            double[] XTC47 = {0, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.0, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003 };
            double[] XTC48 = {0, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025 };
            double[] XTC49 = {0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, 0.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0 };
            double[] XTC50 = {0, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.0, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06 };
            double[] XTC51 = {0, -7.4, -7.4, -7.4, -7.4, -7.4, -7.4, -7.4, 0.0, -7.4, -7.4, -7.4, -7.4, -7.4, -7.4, -7.4 };
            double[] XTC52 = {0, 0.1248, 0.1248, 0.1248, 0.1248, 0.1248, 0.1248, 0.1248, 0.0, 0.1248, 0.1248, 0.1248, 0.1248, 0.1248, 0.1248, 0.1248 };
            double[] XTC53 = {0, 0.0224, 0.0224, 0.0224, 0.0224, 0.0224, 0.0224, 0.0224, 0.0, 0.0224, 0.0224, 0.0224, 0.0224, 0.0224, 0.0224, 0.0224 };
            double[] XTC54 = {0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 };
            double[] XTC55 = {0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0 };
            double[] XTC56 = {0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6 };
            double[] XTC57 = {0, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46, 0.0, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46 };
            double[] XTC58 = {0, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.0, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214 };
            double[] XTC59 = {0, 3.143, 3.143, 3.143, 3.143, 3.143, 3.143, 3.143, 0.0, 3.143, 3.143, 3.143, 3.143, 3.143, 3.143, 3.143 };
            double[] XTC60 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6491, 0.6491, 0.6491, 0.6491, 0.6491, 0.6491, 0.6491 };
            double[] XTC61 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4200, 0.4200, 0.4200, 0.4200, 0.4200, 0.4200, 0.4200 };
            double[] XTC62 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.5366, -0.5366, -0.5366, -0.5366, -0.5366, -0.5366, -0.5366 };
            double[] XTC63 = {0, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.0, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87, 0.87 };
            double[] XTC64 = {0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4 };
            double[] XTC65 = {0, 0.607, 0.505, 0.5154, 0.607, 0.5796, 0.5556, 0.5796, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };
            double[] XTC66 = {0, 0.54, 0.73, 0.6789, 0.54, 0.6440, 0.6941, 0.6440, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC67 = {0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.0, 0.555, 0.555, 0.555, 0.555, 0.555, 0.555, 0.555 };
            double[] XTC68 = {0, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02, 0.0, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02 };
            double[] XTC69 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC70 = {0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 0.0, 3.0243, 3.0243, 3.0243, 3.0243, 3.0243, 3.0243, 3.0243 };
            double[] XTC71 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.7355, 4.7355, 4.7355, 4.7355, 4.7355, 4.7355, 4.7355 };
            double[] XTC72 = {0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.6950, 2.6950, 2.6950, 2.6950, 2.6950, 2.6950, 2.6950 };
            double[] XTC73 = {0, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.0, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06 };
            double[] XTC74 = {0, 43.0, 43.0, 43.0, 43.0, 43.0, 43.0, 43.0, 0.0, 43.0, 43.0, 43.0, 43.0, 43.0, 43.0, 43.0 };
            double[] XTC75 = {0, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.0, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3 };
            double[] XTC76 = {0, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.0, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028 };
            double[] XTC77 = {0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.020, 1.005, 1.010, 1.025, 1.056, 1.030 };
            double[] XTC78 = {0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.960, 0.985, 0.985, 1.000, 0.970, 1.040 };
            double[] XTC79 = {0, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.0, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306 };
            double[] XTC80 = {0, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 0.0, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465, 1.465 };
            double[] XTC81 = {0, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.0, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002 };
            double[] XTC82 = {0, 0.85, 0.8, 0.85, 0.85, 0.8371, 0.85, 0.8371, 0.0, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75 };
            double[] XTC83 = {0, 0.3865, 0.372, 0.335, 0.3865, 0.3882, 0.393, 0.3882, 0.0, 0.15, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08 };
            double[] XTC84 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC85 = {0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC86 = {0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };
            double[] XTC87 = {0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.04, 1.05, 1.06, 1.06, 1.07, 1.02 };
            double[] XTC88 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC89 = {0, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC90 = {0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC91 = {0, 2.463, 2.463, 2.463, 2.463, 2.463, 2.463, 2.463, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC92 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175 };
            double[] XTC93 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.22083, -0.22083, -0.22083, -0.22083, -0.22083, -0.22083 };
            double[] XTC94 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6 };
            double[] XTC95 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.3542, -1.3542, -1.3542, -1.3542, -1.3542, -1.3542 };
            double[] XTC96 = {0, 0.93, 0.93, 0.93, 0.93, 0.93, 0.93, 0.93, 0.0, 0.93, 0.93, 0.93, 0.93, 0.93, 0.93, 0.93 };
            double[] XTC97 = {0, 2.36, 2.36, 2.36, 2.36, 2.36, 2.36, 2.36, 0.0, 2.36, 2.36, 2.36, 2.36, 2.36, 2.36, 2.36 };
            double[] XTC98 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6 };
            double[] XTC99 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
            double[] XTC100 = {0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };

            int L = 0, I1 = 0, I2 = 0;

            Equivalence1(ref XACK, 1, 1, ref XAC1, 1);
            Equivalence1(ref XACK, 1, 2, ref XAC2, 1);
            Equivalence1(ref XACK, 1, 3, ref XAC3, 1);
            Equivalence1(ref XACK, 1, 4, ref XAC4, 1);
            Equivalence1(ref XACK, 1, 5, ref XAC5, 1);
            Equivalence1(ref XACK, 1, 6, ref XAC6, 1);
            Equivalence1(ref XACK, 1, 7, ref XAC7, 1);
            Equivalence1(ref XACK, 1, 8, ref XAC8, 1);
            Equivalence1(ref XACK, 1, 9, ref XAC9, 1);
            Equivalence1(ref XACK, 1, 10, ref XAC10, 1);
            Equivalence1(ref XACK, 1, 11, ref XAC11, 1);
            Equivalence1(ref XACK, 1, 12, ref XAC12, 1);
            Equivalence1(ref XACK, 1, 13, ref XAC13, 1);
            Equivalence1(ref XACK, 1, 14, ref XAC14, 1);
            Equivalence1(ref XACK, 1, 15, ref XAC15, 1);
            Equivalence1(ref XACK, 1, 16, ref XAC16, 1);
            Equivalence1(ref XACK, 1, 17, ref XAC17, 1);
            Equivalence1(ref XACK, 1, 18, ref XAC18, 1);
            Equivalence1(ref XACK, 1, 19, ref XAC19, 1);
            Equivalence1(ref XACK, 1, 20, ref XAC20, 1);
            Equivalence1(ref XACK, 1, 21, ref XAC21, 1);
            Equivalence1(ref XACK, 1, 22, ref XAC22, 1);
            Equivalence1(ref XACK, 1, 23, ref XAC23, 1);
            Equivalence1(ref XACK, 1, 24, ref XAC24, 1);
            Equivalence1(ref XACK, 1, 25, ref XAC25, 1);
            Equivalence1(ref XACK, 1, 26, ref XAC26, 1);
            Equivalence1(ref XACK, 1, 27, ref XAC27, 1);
            Equivalence1(ref XACK, 1, 28, ref XAC28, 1);
            Equivalence1(ref XACK, 1, 29, ref XAC29, 1);
            Equivalence1(ref XACK, 1, 30, ref XAC30, 1);
            Equivalence1(ref XACK, 1, 31, ref XAC31, 1);
            Equivalence1(ref XACK, 1, 52, ref XAK21, 1);
            Equivalence1(ref XACK, 1, 53, ref XAK22, 1);
            Equivalence1(ref XACK, 1, 54, ref XAK36, 1);
            Equivalence1(ref XACK, 1, 55, ref XAK37, 1);
            Equivalence1(ref XACK, 1, 56, ref XAK38, 1);
            Equivalence1(ref XACK, 1, 57, ref XAK39, 1);
            Equivalence1(ref XACK, 1, 58, ref XAK40, 1);
            Equivalence1(ref XACK, 1, 59, ref XAK151, 1);
            Equivalence1(ref XACK, 1, 60, ref XAK191, 1);
            Equivalence1(ref XACK, 1, 61, ref XAKS, 1);
            Equivalence1(ref XACK, 1, 32, ref XAK1, 1);
            Equivalence1(ref XACK, 1, 33, ref XAK2, 1);
            Equivalence1(ref XACK, 1, 34, ref XAK3, 1);
            Equivalence1(ref XACK, 1, 35, ref XAK4, 1);
            Equivalence1(ref XACK, 1, 36, ref XAK5, 1);
            Equivalence1(ref XACK, 1, 37, ref XAK6, 1);
            Equivalence1(ref XACK, 1, 38, ref XAK7, 1);
            Equivalence1(ref XACK, 1, 39, ref XAK8, 1);
            Equivalence1(ref XACK, 1, 40, ref XAK9, 1);
            Equivalence1(ref XACK, 1, 41, ref XAK10, 1);
            Equivalence1(ref XACK, 1, 42, ref XAK11, 1);
            Equivalence1(ref XACK, 1, 43, ref XAK12, 1);
            Equivalence1(ref XACK, 1, 44, ref XAK13, 1);
            Equivalence1(ref XACK, 1, 45, ref XAK14, 1);
            Equivalence1(ref XACK, 1, 46, ref XAK15, 1);
            Equivalence1(ref XACK, 1, 47, ref XAK16, 1);
            Equivalence1(ref XACK, 1, 48, ref XAK17, 1);
            Equivalence1(ref XACK, 1, 49, ref XAK18, 1);
            Equivalence1(ref XACK, 1, 50, ref XAK19, 1);
            Equivalence1(ref XACK, 1, 51, ref XAK20, 1);
            Equivalence1(ref XTCK, 1, 1, ref XTC1, 1);
            Equivalence1(ref XTCK, 1, 2, ref XTC2, 1);
            Equivalence1(ref XTCK, 1, 3, ref XTC3, 1);
            Equivalence1(ref XTCK, 1, 4, ref XTC4, 1);
            Equivalence1(ref XTCK, 1, 5, ref XTC5, 1);
            Equivalence1(ref XTCK, 1, 6, ref XTC6, 1);
            Equivalence1(ref XTCK, 1, 7, ref XTC7, 1);
            Equivalence1(ref XTCK, 1, 8, ref XTC8, 1);
            Equivalence1(ref XTCK, 1, 9, ref XTC9, 1);
            Equivalence1(ref XTCK, 1, 10, ref XTC10, 1);
            Equivalence1(ref XTCK, 1, 11, ref XTC11, 1);
            Equivalence1(ref XTCK, 1, 12, ref XTC12, 1);
            Equivalence1(ref XTCK, 1, 13, ref XTC13, 1);
            Equivalence1(ref XTCK, 1, 14, ref XTC14, 1);
            Equivalence1(ref XTCK, 1, 15, ref XTC15, 1);
            Equivalence1(ref XTCK, 1, 16, ref XTC16, 1);
            Equivalence1(ref XTCK, 1, 17, ref XTC17, 1);
            Equivalence1(ref XTCK, 1, 18, ref XTC18, 1);
            Equivalence1(ref XTCK, 1, 19, ref XTC19, 1);
            Equivalence1(ref XTCK, 1, 20, ref XTC20, 1);
            Equivalence1(ref XTCK, 1, 21, ref XTC21, 1);
            Equivalence1(ref XTCK, 1, 22, ref XTC22, 1);
            Equivalence1(ref XTCK, 1, 23, ref XTC23, 1);
            Equivalence1(ref XTCK, 1, 24, ref XTC24, 1);
            Equivalence1(ref XTCK, 1, 25, ref XTC25, 1);
            Equivalence1(ref XTCK, 1, 26, ref XTC26, 1);
            Equivalence1(ref XTCK, 1, 27, ref XTC27, 1);
            Equivalence1(ref XTCK, 1, 28, ref XTC28, 1);
            Equivalence1(ref XTCK, 1, 29, ref XTC29, 1);
            Equivalence1(ref XTCK, 1, 30, ref XTC30, 1);
            Equivalence1(ref XTCK, 1, 31, ref XTC31, 1);
            Equivalence1(ref XTCK, 1, 32, ref XTC32, 1);
            Equivalence1(ref XTCK, 1, 33, ref XTC33, 1);
            Equivalence1(ref XTCK, 1, 34, ref XTC34, 1);
            Equivalence1(ref XTCK, 1, 35, ref XTC35, 1);
            Equivalence1(ref XTCK, 1, 36, ref XTC36, 1);
            Equivalence1(ref XTCK, 1, 37, ref XTC37, 1);
            Equivalence1(ref XTCK, 1, 38, ref XTC38, 1);
            Equivalence1(ref XTCK, 1, 39, ref XTC39, 1);
            Equivalence1(ref XTCK, 1, 40, ref XTC40, 1);
            Equivalence1(ref XTCK, 1, 41, ref XTC41, 1);
            Equivalence1(ref XTCK, 1, 42, ref XTC42, 1);
            Equivalence1(ref XTCK, 1, 43, ref XTC43, 1);
            Equivalence1(ref XTCK, 1, 44, ref XTC44, 1);
            Equivalence1(ref XTCK, 1, 45, ref XTC45, 1);
            Equivalence1(ref XTCK, 1, 46, ref XTC46, 1);
            Equivalence1(ref XTCK, 1, 47, ref XTC47, 1);
            Equivalence1(ref XTCK, 1, 48, ref XTC48, 1);
            Equivalence1(ref XTCK, 1, 49, ref XTC49, 1);
            Equivalence1(ref XTCK, 1, 50, ref XTC50, 1);
            Equivalence1(ref XTCK, 1, 51, ref XTC51, 1);
            Equivalence1(ref XTCK, 1, 52, ref XTC52, 1);
            Equivalence1(ref XTCK, 1, 53, ref XTC53, 1);
            Equivalence1(ref XTCK, 1, 54, ref XTC54, 1);
            Equivalence1(ref XTCK, 1, 55, ref XTC55, 1);
            Equivalence1(ref XTCK, 1, 56, ref XTC56, 1);
            Equivalence1(ref XTCK, 1, 57, ref XTC57, 1);
            Equivalence1(ref XTCK, 1, 58, ref XTC58, 1);
            Equivalence1(ref XTCK, 1, 59, ref XTC59, 1);
            Equivalence1(ref XTCK, 1, 60, ref XTC60, 1);
            Equivalence1(ref XTCK, 1, 61, ref XTC61, 1);
            Equivalence1(ref XTCK, 1, 62, ref XTC62, 1);
            Equivalence1(ref XTCK, 1, 63, ref XTC63, 1);
            Equivalence1(ref XTCK, 1, 64, ref XTC64, 1);
            Equivalence1(ref XTCK, 1, 65, ref XTC65, 1);
            Equivalence1(ref XTCK, 1, 66, ref XTC66, 1);
            Equivalence1(ref XTCK, 1, 67, ref XTC67, 1);
            Equivalence1(ref XTCK, 1, 68, ref XTC68, 1);
            Equivalence1(ref XTCK, 1, 69, ref XTC69, 1);
            Equivalence1(ref XTCK, 1, 70, ref XTC70, 1);
            Equivalence1(ref XTCK, 1, 71, ref XTC71, 1);
            Equivalence1(ref XTCK, 1, 72, ref XTC72, 1);
            Equivalence1(ref XTCK, 1, 73, ref XTC73, 1);
            Equivalence1(ref XTCK, 1, 74, ref XTC74, 1);
            Equivalence1(ref XTCK, 1, 75, ref XTC75, 1);
            Equivalence1(ref XTCK, 1, 76, ref XTC76, 1);
            Equivalence1(ref XTCK, 1, 77, ref XTC77, 1);
            Equivalence1(ref XTCK, 1, 78, ref XTC78, 1);
            Equivalence1(ref XTCK, 1, 79, ref XTC79, 1);
            Equivalence1(ref XTCK, 1, 80, ref XTC80, 1);
            Equivalence1(ref XTCK, 1, 81, ref XTC81, 1);
            Equivalence1(ref XTCK, 1, 82, ref XTC82, 1);
            Equivalence1(ref XTCK, 1, 83, ref XTC83, 1);
            Equivalence1(ref XTCK, 1, 84, ref XTC84, 1);
            Equivalence1(ref XTCK, 1, 85, ref XTC85, 1);
            Equivalence1(ref XTCK, 1, 86, ref XTC86, 1);
            Equivalence1(ref XTCK, 1, 87, ref XTC87, 1);
            Equivalence1(ref XTCK, 1, 88, ref XTC88, 1);
            Equivalence1(ref XTCK, 1, 89, ref XTC89, 1);
            Equivalence1(ref XTCK, 1, 90, ref XTC90, 1);
            Equivalence1(ref XTCK, 1, 91, ref XTC91, 1);
            Equivalence1(ref XTCK, 1, 92, ref XTC92, 1);
            Equivalence1(ref XTCK, 1, 93, ref XTC93, 1);
            Equivalence1(ref XTCK, 1, 94, ref XTC94, 1);
            Equivalence1(ref XTCK, 1, 95, ref XTC95, 1);
            Equivalence1(ref XTCK, 1, 96, ref XTC96, 1);
            Equivalence1(ref XTCK, 1, 97, ref XTC97, 1);
            Equivalence1(ref XTCK, 1, 98, ref XTC98, 1);
            Equivalence1(ref XTCK, 1, 99, ref XTC99, 1);
            Equivalence1(ref XTCK, 1, 100, ref XTC100, 1);

            PST905 = 1.0279;
            PST906 = 1.0432;
            PST907 = 1.0177;
            PST908 = 1.0829;

            ETA01 = 0.90;
            ETA02 = 0.82;
            ACR1 = 0.0011;
            ACR2 = 0.5;
            ACR3 = 3.1;
            ACR4 = 1.0;
            ACR5 = 2.1;
            ACR6 = 0.45;
            ACR7 = 0.7;
            ACR8 = 1.0;
            ACR9 = 1.88;
            ACR10 = 1.5;
            ACR11 = 0.105;
            ACR12 = 3.0;
            ACRKS = 0.003;
            ACW1 = 18.6;
            ACW2 = 18.6;
            ACW3 = 0.985;
            ACW4 = 12.0;
            ACW5 = 2.0;
            ACW6 = 0.7;
            ACW7 = 0.5;
            TKUEL = -0.90;
            ABKRIT = 0.0001;
            IZMAXA = 20;
            IZMINA = 4;
            IZMAXT = 20;
            IZMINT = 4;
            DTKOTL = 2.0;

            if (K != 2) goto label380;
            goto label390;
            
        label380:
            if (LIGHT[10] == 0) goto label500;
            
        label390:
            //REWIND 30
            L = 0;
            
        label400:
            //READ(15,410) FELD
            //410 FORMAT(A)
            FELD = sr15.ReadLine();
            //WRITE(30,410) FELD
            sw30.WriteLine("{0}", FELD);
            sw16.WriteLine(" {0}", FELD);
            Console.WriteLine(" {0} ", FELD);
            //420 FORMAT(1H ,A)
            L = L + 1;

            if (L == 1 && FELD.Substring(0,10) != " &PRFKON  ") 
                sw16.WriteLine("0***FALSCHE NAMELISTKARTEN***");
                
            if (L == 1 && FELD.Substring(0,10) != " &PRFKON  ")
            {
                Console.WriteLine("UWA091");
                Console.ReadKey();
                Environment.Exit(0);
            }

            if (FELD.Substring(0,10) != " &END     ")
                goto label400;

            //REWIND 30
            //READ(30,PRFKON)
            PRFKON = sr30.ReadLine();
            //REWIND 30
            LIGHT[10] = 0;
            
        label500:
            for(I = 1; I <= 15; I++)    //DO 600 I=1,15
            {
                I1 =I;
                I2 =I;
                
                for(J = 1; J <= 31; J++)    //DO 525 J=1,31
                    CDAT61[J] = XACK[I1,J];
                
                for(J = 1; J <= 30; J++)    //DO 575 J=1,30
                    CDAT60[J] = XACK[I1,J+31];

                for(J = 1; J <= 100; J++)    //DO 580 J = 1, 100
                    CDAT63[J] = XTCK[I1,J];

                UWA006("WDISC", 63,I2);
                UWA006("WDISC", 60,I2);
                UWA006("WDISC", 61,I2);
            }
            return;
        }   //END


        static void UWA092(int NSTFND, string s)
        {
            bool QND = false;
            int NSTND = 0, NRND = 0, I1 = 0, IDATEI = 0, L1 = 0, L2 = 0, NDTYP = 0, K11 = 0, LL = 0, KT7V = 0,
                NENDE = 0, KT14V = 0, KT14Z = 0, N = 0, IZ = 0, L = 0;
            int[] IPROF = new int[16];
            
            string TYP, TYPND = "", STXT1, FELD11, STEXT1, SATZ = "";
            
            if(s == "HOLND")    goto HOLND;
            if(s == "HOLND1")   goto HOLND1;

        HOLND:
            //ENTRY HOLND(NSTFND)
            //LOGICAL QND
            //DIMENSION FELD11 (100), KFELD (100), IPROF(15)
            //DIMENSION SATZ (20), IFELD(20)
            
            //CHARACTER * 10 TYP
            //CHARACTER * 7 TYPND
            //CHARACTER * 20 STXT1
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /AUSKOPI/ NSSV(7),NDSSV(7),NEINST(7),NDEINST(7),NABST(7),NDABST(7),LPAR(7),NSTUTZ(90),DSTUTZ(90)
            //EQUIVALENCE (SATZ, IFELD )
            //EQUIVALENCE (KFELD, FELD11)
            //DATA IPROF/1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9,1HA,1HB,1HC,1HD,1HE,1HF/

            NRND = 0;
            QND = false;
            return;

        HOLND1:
            //ENTRY HOLND1(NSTFND);

            //open(unit=12,file='k85.12',status='unknown',err=99998, form='unformatted',access='direct',recl=84);
            try {
                sr12 = new StreamReader("k85.12");
            }
            catch {
                goto label99998;
            }
            goto label99997;
            
        label99998:
            Console.WriteLine("Error in opening file k85.12");
            
        label99997:
            I1 = STZNDT[KT10] - STZNDT[KT10]/10*10 + 1;
            IDATEI = 10;
            if (I1 >= 7) IDATEI = 12;
            if (I1 >= 7) goto label300;
            if (NSTFND == 1 && QND) goto label300;
            
            //REWIND 11;
            if(XUPM == 0.0)     XUPM = 3000;
            
            L1 = (int)(XUPM*1000);   //IFIX
            L2 = 20000;
            if (XUPM < 1500.0) L2 = 10000;
            NDTYP = L1 + L2 + STZNDT[KT10];
            //WRITE (TYP,106) NDTYP,Z5,Z6;
            TYP = NDTYP.ToString().PadLeft(7) + " " + Z5.ToString().PadLeft(1) + Z6.ToString().PadLeft(1);
            //106 FORMAT (I7,1X,2A1)
            Z5 = 0.0;
            Z6 = 0.0;
            K11 = 0;
            
        label100:
            K11 = K11 + 1;
            //READ (11) 
            FELD11 = sr11.ReadLine();

            for(LL = 1; LL <= 20; LL++)     //DO 120 LL=1,20
            {
                int LL1 = (LL-1)*5 + 1;
                STXT1 = "  ";
                //WRITE (STXT1,105) (FELD11(I2),I2=LL1,LL1+4)
                for(int i2 = LL1; i2 <= LL1+4;i2++)
                    STXT1 = STXT1 + FELD11[i2].ToString().PadLeft(4);
                //* write(*,'(a)') stxt1
                Console.WriteLine("{0}", STXT1);
                //105 FORMAT (5A4)
                if (TYP == STXT1.Substring(0,10))
                    goto label200;

                if (STXT1.Substring(0, 1) != "Z")
                    continue;

                //* write( *,110) TYP
                Console.WriteLine("*** ND-TEIL {0} NICHT AUF PLATTE ***", TYP);
                //110 FORMAT(1H0,2X,'*** ND-TEIL',A ,' NICHT AUF PLATTE ***')
                Console.WriteLine("UWA092 - ND-TEIL NICHT VORHANDEN");
            }   //120 CONTINUE
            goto label100;
            
        label200:
            //NRND = KFELD[LL1+3];
            //NSTND = KFELD[LL1+4];
            
            //read(stxt1(13:20),'(i4,i4)') nrnd,nstnd
            NRND = Convert.ToInt32(STXT1.Substring(0,4));
            NSTND = Convert.ToInt32(STXT1.Substring(4,4));

            QND = true;
            if (NSTFND == 1) goto label300;
            NSTFND = NSTND;
            return;

        label300: 
            //goto label(1000,1000,1000,1000,1000,1000,1000,600,500,400),
            if(I1 >= 1 && I1 <= 7)
                goto label1000;

            if(I1 == 8)     goto label600;
            if(I1 == 9)     goto label500;
            if(I1 == 10)    goto label400;

        label400:
            NRND = 1;
            goto label700;

        label500:
            NRND = 101;
            goto label700;

        label600:
            NRND = 201;
            
        label700:
            //READ (IDATEI'NRND) SATZ

            NSTND = IFELD[6] + 1;
            NRND = NRND + 1;

        label1000:
            sw16.WriteLine("0");
            sw16.WriteLine("   N-TEILTURBINE VON PLATTE\n");

            sw16.WriteLine(" STUFE  TYP-ND      KT        P       M      DI     H2    OEFFNG   BLE   BLA   SAX   SLE   SLA  ZLE  ZLA I2GES  DFA KT  Z  0STZ  ZETA");
            sw16.WriteLine("+                                                                                                                        /");
            sw16.WriteLine("                 7  8 14 15");
            //1030 FORMAT(1H+,120X,'/',/,15X,'  7  8 14 15')
            //* write( *,1020)
            //* write( *,1030)
            Console.WriteLine("0");
            Console.WriteLine("   N-TEILTURBINE VON PLATTE\n");

            Console.WriteLine(" STUFE  TYP-ND      KT        P       M      DI     H2    OEFFNG   BLE   BLA   SAX   SLE   SLA  ZLE  ZLA I2GES  DFA KT  Z  0STZ  ZETA");
            Console.WriteLine("+                                                                                                                        /");
            Console.WriteLine("                 7  8 14 15");
            if (KT6 == 1) goto label1100;
            DI[1] = 1.0;
            if (PNE[KT6-1] == 0.0 || P0E[KT6] == 0.0) goto label1100;
            DI[1] = P0E[KT6]/PNE[KT6-1];

        label1100:
            if (NSTND >= NSTFZ[J]) 
                goto label1200;
            sw16.WriteLine("0  *** VORGEGEBENE STUFENZAHL > STUFENZAHL AUF PLATTE UWA092***{0} > {1}", NSTFZ[J].ToString().PadLeft(4),NSTND.ToString().PadLeft(4));
            //1110 FORMAT(1H0,2X,'*** VORGEGEBENE STUFENZAHL > STUFENZAHL AUF PLATTE UWA092***',I4,' > ',I4)
            
            Console.WriteLine("ZU GROSSE ND-STUFENZAHL");
            Console.ReadKey();
            Environment.Exit(0);
            
        label1200:
            UWA006("RDISC", 53,J);
            UWA006("RDISC", 56,J);
            KT7V = UWA011(3,7);
            
            if (KT6 == 1)
                KT7V = UWA011(4,7);

            NENDE = NSTFZ[J] + 3;

            if (NSTFZ[J] < NSTND)
                NRND = NRND + NSTND - NSTFZ[J];

            if (KT6 == 1) NENDE = NENDE + 1;

            if (KT7V == 3 || KT7V == 5)
                NENDE = NENDE + 1;

            KT14V = 0;
            KT14Z = 0;

            for(N = 2; N <= NENDE; N++)     //DO 3000 N=2,NENDE
            {
                UWA010(N,1);
                //goto label(3000,2000,2100,2200,2100,2000,3000,2200,2200),
                if(KT7 == 1)    continue;
                if(KT7 == 2)    goto label2000;
                if(KT7 == 3)    goto label2100;
                if(KT7 == 4)    goto label2200;
                if(KT7 == 5)    goto label2100;
                if(KT7 == 6)    goto label2000;
                if(KT7 == 7)    continue;
                if(KT7 == 8)    goto label2200;
                if(KT7 == 9)    goto label2200;

            label2000:
                //READ (IDATEI'NRND) SATZ;

                NRND = NRND + 1;
                //DECODE(80,2010,SATZ) 
                TYPND = SATZ.Substring(0,7);
                YPT[N] = Convert.ToDouble(SATZ.Substring(11,5));
                YG[N] = Convert.ToDouble(SATZ.Substring(16,5));
                YE1T[N] = Convert.ToDouble(SATZ.Substring(62,4));
                YDFAKT[N] = Convert.ToDouble(SATZ.Substring(66,5));
                IZ = Convert.ToInt32(SATZ.Substring(71,1));
                A9 = Convert.ToDouble(SATZ.Substring(72,4));
                A10 = Convert.ToDouble(SATZ.Substring(76,4));
                //2010 FORMAT(A7,4X,F5.3,F5.1,41X,F4.1,F5.5,I1,F4.0,F4.2)
                
                sw16.WriteLine(" {0}  {1} {2}         {3}{4}                                                             {5}{6}{7}{8}{9}", 
                    N.ToString().PadLeft(4),TYPND.ToString().PadLeft(7),KT7.ToString().PadLeft(3),Math.Round(YPT[N],4).ToString().PadLeft(8),
                    Math.Round(YG[N],1).ToString().PadLeft(7),Math.Round(YE1T[N],1).ToString().PadLeft(6),Math.Round(YDFAKT[N],5).ToString().PadLeft(7),
                    IZ.ToString().PadLeft(3),Math.Round(A9,0).ToString().PadLeft(6),Math.Round(A10,4).ToString().PadLeft(6));
                Console.WriteLine(" {0}  {1} {2}         {3}{4}                                                             {5}{6}{7}{8}{9}", 
                    N.ToString().PadLeft(4),TYPND.ToString().PadLeft(7),KT7.ToString().PadLeft(3),Math.Round(YPT[N],4).ToString().PadLeft(8),
                    Math.Round(YG[N],1).ToString().PadLeft(7),Math.Round(YE1T[N],1).ToString().PadLeft(6),Math.Round(YDFAKT[N],5).ToString().PadLeft(7),
                    IZ.ToString().PadLeft(3),Math.Round(A9,0).ToString().PadLeft(6),Math.Round(A10,4).ToString().PadLeft(6));
                //* write( *,2011)N,TYPND,KT7,YPT[N],YG[N],YE1T[N],YDFAKT[N],IZ,A9,A10
                //2011 FORMAT(1H ,I4,2X,A7,1X,I3,9X,F8.4,F7.1,61X,F6.1,F7.5,I3,F6.0,F6.2)
                
                YE2T[N] = YE1T[N];
                if (KT7 != 2)
                    continue;
                if (DI[N] == 0.0) DI[N] = 1.0;
                continue;

            label2100:
                YPT[N] = YPT[N-1];
                YG[N] = YG[N-1];
                YE1T[N] = YE1T[N-1];
                YDFAKT[N] = YDFAKT[N-1];
                YE2T[N] = YE1T[N];
                sw16.WriteLine(" {0}  {1} {2}         {3}{4}                                                             {5}{6}",
                    N.ToString().PadLeft(4),TYPND.ToString().PadLeft(7),KT7.ToString().PadLeft(3),Math.Round(YPT[N],4).ToString().PadLeft(8),
                    Math.Round(YG[N],1).ToString().PadLeft(7),Math.Round(YE1T[N],1).ToString().PadLeft(6),Math.Round(YDFAKT[N],5).ToString().PadLeft(7));
                    //N,TYPND,KT7,YPT[N],YG[N],YE1T[N],YDFAKT[N]
                continue;

            label2200:
                //READ(IDATEI'NRND) SATZ;
                NRND = NRND + 1;
                //DECODE(80,2210,SATZ) 
                //2210 FORMAT(A7,3I1,A1,F5.3,3F5.1,F5.5,3F4.1,2F4.2,2F3.2,F4.1,F5.5,I1,F4.0,F4.2)
                TYPND = SATZ.Substring(0,7);
                KT7 = Convert.ToInt32(SATZ.Substring(7,1));
                KT8 = Convert.ToInt32(SATZ.Substring(8,1));
                K1 = Convert.ToInt32(SATZ.Substring(9,1));
                K2 = Convert.ToInt32(SATZ.Substring(10,1));
                YPT[N] = Convert.ToDouble(SATZ.Substring(11,5));
                YG[N] = Convert.ToDouble(SATZ.Substring(16,5));
                STFDI[N] = Convert.ToDouble(SATZ.Substring(21,5));
                LS[N] = Convert.ToDouble(SATZ.Substring(26,5));
                OEFFNG[N] = Convert.ToDouble(SATZ.Substring(31,5));
                BRTLE[N] = Convert.ToDouble(SATZ.Substring(36,4));
                BRTLA[N] = Convert.ToDouble(SATZ.Substring(40,4));
                Z1 = Convert.ToDouble(SATZ.Substring(44,4));
                Z2 = Convert.ToDouble(SATZ.Substring(48,4));
                Z3 = Convert.ToDouble(SATZ.Substring(52,4));
                Z4 = Convert.ToDouble(SATZ.Substring(56,3));
                Z5 = Convert.ToDouble(SATZ.Substring(59,3));
                YE2T[N] = Convert.ToDouble(SATZ.Substring(62,4));
                YDFAKT[N] = Convert.ToDouble(SATZ.Substring(66,5));
                IZ = Convert.ToInt32(SATZ.Substring(71,1));
                A9 = Convert.ToDouble(SATZ.Substring(72,4));
                A10 = Convert.ToDouble(SATZ.Substring(76,4));
                
                YE1T[N] = YE2T[N-1];
                
                for(L = 1; L <= 15; L++)    //DO 2220 L=1,15
                    if (K2 == IPROF[L]) 
                        goto label2230;     //2220 CONTINUE
                
                Console.WriteLine("FALSCHE PROFILKENNUNG");
                Console.ReadKey();
                Environment.Exit(0);
                
            label2230:
                KT15 = L;
                if (KT14V == K1) goto label2240;
                KT14Z = KT14Z + 1;
                KT14 = KT14Z;
                KT14V = K1;
                TASAX[KT14] = Z1;
                HS1MIN[KT14] = Z2;
                HS1MAX[KT14] = Z3;
                TAZLE[KT14] = Z4;
                TAZLA[KT14] = Z5;
                TAFDP[KT14] = 0.0;
                if (IZ == 0) goto label2240;
                Z6 = IZ*FLUT;
                TAFDP[KT14] = Math.Sqrt(A10)/(Math.Pow((A9/1000.0),2.0) * 3.141593/4.0*Z6);
                I1 = (KT9-1)*6+KT14;
                NSTUTZ[I1] = IZ*(FLUT);
                DSTUTZ[I1] = A9;
                if (KT14  ==  1) HS1MIN[6] = A10;
                if (KT14  ==  2) HS1MAX[6] = A10;
                if (KT14  ==  3) HSZMIN[6] = A10;
                if (KT14  ==  4) HSZMAX[6] = A10;
                if (KT14  ==  5) TAKF1 [6] = A10;
                
            label2240:
                KT14 = KT14Z;
                if (KT14 > 1) goto label2250;
                DELTLE = Z2;
                DELTLA = Z3;
                
            label2250:
                UWA010 (N,2);
                sw16.WriteLine(" {0}  {1} {2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}{21}{22}",
                    N.ToString().PadLeft(4),TYPND.ToString().PadLeft(7),KT7.ToString().PadLeft(3),KT8.ToString().PadLeft(3),
                    KT14.ToString().PadLeft(3),KT15.ToString().PadLeft(3),Math.Round(YPT[N],4).ToString().PadLeft(8),Math.Round(YG[N],1).ToString().PadLeft(7),
                    Math.Round(STFDI[N],1).ToString().PadLeft(7),Math.Round(LS[N],1).ToString().PadLeft(7),Math.Round(OEFFNG[N],5).ToString().PadLeft(7),
                    Math.Round(BRTLE[N],1).ToString().PadLeft(6),Math.Round(BRTLA[N],1).ToString().PadLeft(6),Math.Round(TASAX[KT14],1).ToString().PadLeft(6),
                    Math.Round(HS1MIN[KT14],2).ToString().PadLeft(6),Math.Round(HS1MAX[KT14],2).ToString().PadLeft(6),Math.Round(TAZLE[KT14],2).ToString().PadLeft(5),
                    Math.Round(TAZLA[KT14],2).ToString().PadLeft(5), Math.Round(YE2T[N],1).ToString().PadLeft(6),Math.Round(YDFAKT[N],5).ToString().PadLeft(7),
                    IZ.ToString().PadLeft(3),Math.Round(A9,0).ToString().PadLeft(6),Math.Round(A10,2).ToString().PadLeft(6));
                
                Console.WriteLine(" {0}  {1} {2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}{21}{22}",
                    N.ToString().PadLeft(4),TYPND.ToString().PadLeft(7),KT7.ToString().PadLeft(3),KT8.ToString().PadLeft(3),
                    KT14.ToString().PadLeft(3),KT15.ToString().PadLeft(3),Math.Round(YPT[N],4).ToString().PadLeft(8),Math.Round(YG[N],1).ToString().PadLeft(7),
                    Math.Round(STFDI[N],1).ToString().PadLeft(7),Math.Round(LS[N],1).ToString().PadLeft(7),Math.Round(OEFFNG[N],5).ToString().PadLeft(7),
                    Math.Round(BRTLE[N],1).ToString().PadLeft(6),Math.Round(BRTLA[N],1).ToString().PadLeft(6),Math.Round(TASAX[KT14],1).ToString().PadLeft(6),
                    Math.Round(HS1MIN[KT14],2).ToString().PadLeft(6),Math.Round(HS1MAX[KT14],2).ToString().PadLeft(6),Math.Round(TAZLE[KT14],2).ToString().PadLeft(5),
                    Math.Round(TAZLA[KT14],2).ToString().PadLeft(5), Math.Round(YE2T[N],1).ToString().PadLeft(6),Math.Round(YDFAKT[N],5).ToString().PadLeft(7),
                    IZ.ToString().PadLeft(3),Math.Round(A9,0).ToString().PadLeft(6),Math.Round(A10,2).ToString().PadLeft(6));
                //2260 FORMAT(1H ,I4,2X,A7,1X,4I3,F8.4,3F7.1,F7.5,3F6.1,2F6.2,2F5.2,F6.1,F7.5,I3,F6.0,F6.2)
            }   //3000 CONTINUE

            NENDE = NENDE - 2;
            if (NENDE <= 3) goto label3200;
            
            for(N = 3; N <= NENDE; N++)     //DO 3100 N = 3,NENDE
            {
                UWA010(N,1);
                KT4 = 0;
                KT14Z = UWA011(N+1,14);
                if (KT14Z != KT14) KT4 = 2;
                if (KT14Z != KT14 && KT8 == 0) KT4 = 0;
                UWA010(N,2);
            }   //3100 CONTINUE
            UWA010(NENDE+1,1);
            KT4 = 0;
            UWA010(NENDE+1,2);
            UWA010(NENDE+2,1);
            
        label3200:
            UWA006("WDISC", 56,J);
            UWA006("WDISC", 53,J);
            QND = false;
            return;
        }   //END


        //static void UWA097(LEIT)
        //{
        //    //INTEGER LEIT
        //    //ENTRY TAUSGA(LEIT)
        //    return;
        //}   //END

                
        static void UWA098(int J)
        {
            //ENTRY KRLFT [J]
            //COMMON /DKEGEL/ DK36,DK37,DK38,MHEIZ
            
            if(J == 1) goto label1;
            UWA014();
            UWA006("RDISC", 50,1);
            UWA006("RDISC", 51,1);
            UWA078();
            MHEIZ = 0;
            UWA030();
            UWA078();
            UWA033();
            
        label1:
            UWA030();
            UWA006("WDISC", 50,1);
            UWA006("WDISC", 51,1);
            return;
        }   //END

        
        static void UWA058()
        {
            //ENTRY PRINTD
            //LOGICAL QOFFEN,QACPSI,QUPOCO
            int[] IENTNH = new int[11];
            //CHARACTER * 30 UEBER1
            //CHARACTER * 40 UEBER2, UEBER3
            //CHARACTER * 20 BESCHR
            //CHARACTER * 10 A6C, TURBM
            //CHARACTER * 80 TITEL
            //CHARACTER * 130 TEXT
            //CHARACTER * 6 NRPROJ
            //CHARACTER * 5 NUMMER
            //CHARACTER * 3 KURZ
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /KONDER/ GKONDA[4], GKONDT[4], TKONDA[4], TKONDT[4] ,
            //1 PKONDA[4], PKONDT[4], DTKONA[4], DTKONT[4] ,
            //2 TKONAA[4], TKONAT[4], DKONDA[4], DKONDT[4]
            //COMMON /KONKEN/ KTFAC[4],IKONDR[4],NKPARA[4]
            //COMMON /PUMDRU/ DELTPA(60),H0REGA[5],WD0A[5],WW0A[5],Q0A[5],
            //1 HOA[5],PKESS,ETANUA[5],DREFAK,KART[5]
            //COMMON /HEIZEN/ DPHEIZ[5],IM[5]
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /MODTYP/ TURBM(4,4)
            //COMMON /AUSKOPI/ NSSV(7),NDSSV(7),NEINST(7),NDEINST(7),NMath.AbsT(7),
            //1 NDMath.AbsT(7),LPAR(7),NSTUTZ(90),DSTUTZ(90)
            //COMMON /AUSKOPR/ FKOND[4],FVERSCH[4],RZAHL[4],CKOND[4],PELGEH(7)
            //COMMON /DRUTUR/ ETAWB(15),ETABA(7),WABB(7),CAXT[4],NZTROM(15),
            //1 PSIGMT(15,6)
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /KONDFL/ FAKTKF[4]
            //COMMON /ETAWTS/ WTSOLL,FETAE(7),FBEWE(7)
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /LVART/ LVAR[4],PVAR[4],HVAR[4]
            //C COMMON /UEBER/ TITEL(8),TEXT(13),DAT,ZEIT
            //COMMON /UEBER/ TITEL ,TEXT ,ITASK(20)
            //COMMON /FRANKF/ QOFFEN,QACPSI,QUPOCO,IWVB
            //COMMON /LEISTG/ IELEKT,PELEKT
            //COMMON /SCHRFT/ IP1,IP2,IP3,UEBER1 ,UEBER2 ,UEBER3 ,
            //1 IPL(160),BESCHR(160) ,NUMMER,NINDEX,KDRPL,
            //1 KTEXT,NRPROJ,NAME
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NTGAS
            //COMMON /BENSON/ ISTIFT,KURZ
            int ISATZ = 0, L = 0, L1 = 0, L2 = 0, L3 = 0, L4 = 0, IY10 = 0, LL = 0, KT9VOR = 0, KT14VOR = 0, J1 = 0, KT9N = 0, 
                KT14N = 0, IPAR = 0, IX11 = 0, I1 = 0, LEND = 0;
            double B = 859.845, GH = 4.1868, GP = 0.980665, GM = 1.0/3.6, GQ = 4.1868/3.6, SUMB = 0, YUPM = 0;
            //OPEN (UNIT=31,file='k85.31',ACCESS='DIRECT',form='formatted', status='unknown',recl=80);
            sw31 = new StreamWriter("k85.31");
            
            if (K > 1) goto label1000;

            string A6C = "KRAWAL85 ";
            IZ1 = 0;   
            if (QOFFEN) IZ1 = 1;
            if (QACPSI) IZ1 = 2;
            if (QUPOCO) IZ1 = 3;
            ISATZ = 00500000;

            //WRITE(31,20,rec=isatz)
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7} ", TITEL,KURZ.PadLeft(3),IZ1,A6C,ITASK[11].ToString().PadLeft(4),ITASK[12].ToString().PadLeft(4),
                ITASK[14].ToString().PadLeft(4),ITASK[15].ToString().PadLeft(4));
            ISATZ = ISATZ + 1;
            //20 FORMAT(A, A3,I1,A,4A4)
            sw16.WriteLine("0{0} {1}{2}{3}{4}  {5}{6}  {7}{8} ", ISATZ.ToString().PadLeft(8), TITEL, KURZ.PadLeft(3),IZ1,A6C,ITASK[11].ToString().PadLeft(4),
                ITASK[12].ToString().PadLeft(4), ITASK[14].ToString().PadLeft(4),ITASK[15].ToString().PadLeft(4));
            //21 FORMAT(1H0,I8.8,1X,A, A3,I1,A,2X,2A4,2X,2A4)

            IZ1 = LLTG[14];
            if (IZ1 == 1 && IVERD[1] > 0)   IZ1 = 5;
            if (IZ1 == 1 && IDRUCK > 0)     IZ1 = 6;

            IZ3 = NTTETB[1];
            IZ2 = 1;
            L = IZ3;
            A1 = IZ3;

            if (STZNDT[1] != 0)     //then
            {
                UWA006("RDISC", 52,L);
                UWA006("RDISC", 59,L);
                I = ITTEND[L];
                UWA010(I,1);
                UWA006("RDISC", 53,KT9);
                A2 = 0.501;
                if (FLUT > 1.0) A2 = FLUT/2.0;
                A1 = A1 - 1.0 + A2;
                IZ3 = (int)A1;   //IFIX
            }   //ENDIF

            if (ANZTRB  ==  1) goto label55;
            
            for(J = 2; J <= ANZTRB; J++)    //DO 50 J=2,ANZTRB
            {
                L2 = J;
                if (NITRE[L2] != 8 && NITRE[L2] != 9 && NITRE[L2] != 7)
                IZ2 = IZ2 + 1;
                
            label40:
                if (NITRE[L2] != 8 && NITRE[L2] != 9) continue;
                L = LVAR[L2];
                UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                if (L2 != 1) goto label40;

                L = NTTETB[J];
                if (STZNDT[J] == 0)     continue;
                UWA006("RDISC", 52,L);
                UWA006("RDISC", 59,L);
                I = ITTEND[L];
                UWA010(I,1);
                UWA006("RDISC", 53,KT9);
                A2 = 0.501;
                if (FLUT > 1.0) A2 = FLUT/2.0;
                A1 = A1 + A2;
                IZ3 = (int)A1;
            }   //50 CONTINUE

        label55:
            for(I = 1; I <= NTTETB[1]; I++)    //DO 60 I = 1,NTTETB[1]
            {
                if (TURBM[1,I].Substring(0,1)  !=  "K"  && TURBM[1,I].Substring(0,1) !=  "Q" ) 
                    continue;
                IZ3 = IZ3 - 1;
                goto label200;
            }   //60 CONTINUE

        label200:
            IZ4 = 0;
            IZ5 = 0;
            IZ6 = 0;
            IZ7 = 0;
            IZ9 = 0;
            IX5 = 0;
            
            for(L = 1; L <= IHENDE; L++)    //DO 210 L=1,IHENDE
            {
                if (IX5 == 0 && (LTYP[L] == 2 || LTYP[L] == 21)) IZ6 = IZ6 + 1;
                if (IX5 == 1 && (LTYP[L] == 2 || LTYP[L] == 21)) IZ5 = IZ5 + 1;
                if (LTYP[L] == 1 || LTYP[L] == 2 || LTYP[L] == 21) IZ4 = IZ4 + 1;
                if (LTYP[L] == 1) IZ7 = KENTG;
                if (LTYP[L] == 1) IX5 = 1;
            }

            L = IHENDE + 1;
            IZ8 = 1;
            IX6 = 0;
            
        label220:
            L = L - 1;
            if (L <= 1) goto label300;
            if (NTYP[L] != 3) goto label220;
            IX6 = IX6 + 1;
            IZ8 = KART[IX6];
            if (N1[L] > 0) IZ8 = 0;

        label300:
            JJ = NTTETB[1];
            if (JJ == 1) goto label330;
            L1 = JJ - 1;
            
            for(L = 1; L <= L1; L++)    //DO 320 L=1,L1
            {
                UWA006("RDISC", 52,L);
                UWA006("RDISC", 59,L);
                I = ITTEND[L];
                UWA044(I,1);
                
                for(int N = 1; N <= 10; N++)    //DO 310 N=1,10
                    if (LABT[N] > 40 && LABT[N] < 47)
                        continue;
                A1 = E2T[I,K];
                UWA006("RDISC", 52,L+1);
                A2 = E1T[1,K];
                if (A2 > A1+100.0) IZ9 = IZ9 + 1;
            }   //320 CONTINUE

        label330:
            IZ10 = 0;
            IX1 = 0;
            IX2 = 0;
            IX3 = 0;
            IX4 = 0;
            IX5 = 0;
            if (IHENDE == INENDE) goto label600;

            L1 = IHENDE + 1;
            
            for(L = L1; L <= INENDE; L++)   //DO 340 L=L1,INENDE
                if (NTYP[L] == 19) IZ10 = IZ10 + 1;

            for(L = L1; L <= INENDE; L++)   //DO 410 L=L1,INENDE
            {
                if (NTYP[L] != 6) continue;
                L2 = L;
                IX5 = NN2[L];
                
            label400:
                L2 = L2 + 1;
                if (L2 > INENDE) continue;
                if (NN1[L2] != IX5) goto label400;
                IX5 = NN2[L2];
                if (LTYP[L2] != 2 && LTYP[L2] != 21) goto label400;
                if (N1[L2] < 35 || N1[L2] > 39) goto label400;
                IX1 = IX1 + 1;
                IX6 = N1[L2];
                IENTNH[IX1] = IX6;
                UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                if (IX8 > 0) goto label400;
                IX6 = IX6 - 34;
                IX6 = IM[IX6];
                IENTNH[IX1] = IX6;
                goto label400;
            }   //410 CONTINUE
            if (IX1 == 0) goto label450;

            for(int N = 1; N <= IX1; N++)   //DO 440 N=1,IX1
            {
                if (IENTNH[N] == 0) continue;
                IX6 = IENTNH[N];
                UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                if (IX10 != ITTEND[IX9]) continue;
                if (IX9 != NTTETB[IX8]) goto label420;
                if (IX8 == 1) continue;
                L = LVAR[IX8];
                if (NITRE[IX8] != 8 && NITRE[IX8] != 9) continue;
                UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                if (L3 == NTTETB[L2]) continue;
                IX9 = L3;

            label420:
                JJ = IX9 + 1;
                UWA006("RDISC", 52,JJ);
                UWA006("RDISC", 59,JJ);
                I = ITTEND[JJ];
                
                for(II = 1; II <= I; II++)  //DO 430 II=1,I
                {
                    UWA010(II,1);
                    if (KT7 == 5) IX2 = IX2 + 1;
                    if (KT7 == 5 && IX8 > 1) IX3 = 1;
                    if (KT7 == 5 || KT7 == 4) break;
                }   //430 CONTINUE
            }   //440 CONTINUE

        label450:
            IX4 = 0;
            IX5 = 0;
            L1 = IHENDE + 1;
            
            for(L = L1; L <= INENDE; L++)   //DO 490 L=L1,INENDE
            {
                if (NTYP[L] != 10) continue;
                IX6 = N1[L];
                UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                if (IX8 > 0) goto label480;
                
            label460:
                for(int N = L1; N <= INENDE; N++)   //DO 470 N = L1,INENDE
                {
                    if (NTYP[N] == 10 || NTYP[N] == 17) continue;
                    if (NN2[N] == 0 || NN2[N] == NN1[N]) continue;
                    if (IX6 != NN2[N] && IX6 != N2[N]) continue;
                    IX6 = NN1[N];
                    UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                    if (IX8 > 0) goto label480;
                    goto label460;
                }   //470 CONTINUE
                continue;
                
            label480:
                IX4 = IX4 + 1;
                IENTNH[IX4] = IX6;
            }   //490 CONTINUE
            if (IX4 == 0) goto label600;

            for(int N = 1; N <= IX4; N++)   //DO 520 N=1,IX4
            {
                if (IENTNH[N] == 0) continue;
                IX6 = IENTNH[N];
                UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                if (IX10 != ITTEND[IX9]) continue;
                if (IX9 != NTTETB[IX8]) continue;
                if (IX8 == 1) continue;
                L = LVAR[IX8];
                if (NITRE[IX8] != 8 && NITRE[IX8] != 9) continue;
                UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                if (L3 == NTTETB[L2]) continue;
                IX9 = L3;

            label500:
                JJ = IX9 + 1;
                UWA006("RDISC", 52,JJ);
                UWA006("RDISC", 59,JJ);
                I = ITTEND[JJ];
                
                for(II = 1; II <= I; II++)  //DO 510 II=1,I
                {
                    UWA010(II,1);
                    if (KT7 == 5) IX5 = IX5 + 1;
                    if (KT7 == 5 || KT7 == 4) break;
                }   //510 CONTINUE
            }   //520 CONTINUE

        label600:
            IX6 = 0;
            UWA006("RDISC", 58,1);
            
            for(L = 1; L <= ANZTRB; L++)    //DO 610 L=1,ANZTRB
            {
                if (NITRE[L] == 7) continue;
                if (EDAROR[L] <= 0.0) continue;
                IX6 = IX6 + 1;
            }   //610 CONTINUE

            ISATZ = 1000000;
            //WRITE(31,620,rec=ISATZ)
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15} ", IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3),
                IZ5.ToString().PadLeft(3),IZ6.ToString().PadLeft(3),IZ7.ToString().PadLeft(3),IZ8.ToString().PadLeft(3),IZ9.ToString().PadLeft(3),IZ10.ToString().PadLeft(3),IX1.ToString().PadLeft(3),
                IX2.ToString().PadLeft(3),IX3.ToString().PadLeft(3),IX4.ToString().PadLeft(3),IX5.ToString().PadLeft(3),IX6.ToString().PadLeft(3));
            ISATZ = ISATZ + 1;
            //620 FORMAT(16I3)
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}", ISATZ.ToString().PadLeft(8),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),
                IZ4.ToString().PadLeft(3),IZ5.ToString().PadLeft(3),IZ6.ToString().PadLeft(3),IZ7.ToString().PadLeft(3),IZ8.ToString().PadLeft(3),IZ9.ToString().PadLeft(3),IZ10.ToString().PadLeft(3),
                IX1.ToString().PadLeft(3),IX2.ToString().PadLeft(3),IX3.ToString().PadLeft(3),IX4.ToString().PadLeft(3),IX5.ToString().PadLeft(3),IX6.ToString().PadLeft(3));
            //621 FORMAT(1H0,I8.8,1X,16I3)

            ISATZ = 2000000;
            IZ2 = 1;
            IZ1 = 0;
            IZ3 = NTTETB[1];
            
            for(L = 1; L <= IZ3; L++)   //DO 630 L=1,IZ3
            {
                IZ1 = IZ1 + 1;
                IENTNH[IZ1] = L;
            }

            UWA006("RDISC", 52,IZ1);
            I = ITTEND[IZ1];
            A1 = PT[I,K];
            if (A1 > 0.2) IZ2 = 9;
            if (IZ9 > 0) IZ2 = IZ2 + 1;
            if (IX1 > 0) IZ2 = IZ2 + 2;
            if (IX1 > 0 && IX3 > 0) IZ2 = IZ2 + 2;
            if (IX1 == 0 && IX5 > 0) IZ2 = IZ2 + 6;

            //WRITE(31,620,rec=ISATZ) 
            sw31.WriteLine(" {0}{1} ",IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3));
            ISATZ = ISATZ + 1;
            sw16.WriteLine("0{0} {1}{2}", ISATZ.ToString().PadLeft(8),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3));

            int IG = IZ1;
            
            for(int N = 1; N <= IG; N++)    //DO 920 N=1,IG
            {
                IX10 = 0;
                J = IENTNH[N];
                LPAR[J] = 0;
                UWA006("RDISC", 52,J);
                UWA006("RDISC", 59,J);
                IZ1 = (int)(VENDUR[1]);
                IZ2 = (int)(VENDUR[2]);
                IZ3 = (int)(VENDUR[3]);
                IZ4 = (int)(VENDUR[4]);
                IZ5 = (int)(VENDUR[5]);
                IZ6 = (int)NSSV[J];
                IZ7 = (int)NDSSV[J];
                IZ8 = (int)NEINST[J];
                IZ9 = (int)NDEINST[J];
                IZ10 = (int)NABST[J];
                IY10 = (int)NDABST[J];

                IX1 = 1;
                IX2 = 1;
                IX3 = 0;
                IX4 = 0;
                IX5 = 0;
                IX6 = 0;
                IX7 = 0;
                A1 = 0;

                KT9VOR = 0;
                KT14VOR = 0;
                II = ITTEND[J];
                
                for(I = 1; I <= II; I++)    //DO 660 I=1,II
                {
                    UWA010(I,1);
                    if (KT5 == 0) goto label650;
                    if (KT7 != 4 && KT7 != 9) goto label650;
                    UWA044(I,1);
                    
                    for(L = 1; L <= 10; L++)    //DO 640 L=1,10
                    {
                        if (LABT[L] == 0) continue;
                        if (LABT[L] > 40) continue;
                        IX5 = IX5 + 1;
                        goto label650;
                    }   //640 CONTINUE
                    
                label650:
                    if (KT7 == 5) IX1 = 2;
                    if (KT7 == 3) IX1 = 3;
                    if (KT7 == 3) IX7 = NVENT[J];
                    if (KT7 != 4 && KT7 != 9) continue;
                    IX3 = IX3 + 1;
                    if (KT9 != KT9VOR) //then
                    {
                        UWA006("RDISC", 56,KT9);
                        A1 = A1 + TAZLA[6];
                        KT14VOR = 0;
                    }   //ENDIF
                    if (KT14 != KT14VOR) IX4 = IX4 + 1;
                    KT14VOR = KT14;
                    KT9VOR = KT9;
                    if (I != II && KT7 != 9) continue;
                    UWA006("RDISC", 53,KT9);
                    IX2 = FLUT;
                }   //660 CONTINUE

            label670:
                for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 690 JJ=1,ANZTRB
                {
                    L1 = 1;
                    if (JJ > 1) L1 = NTTETB[JJ-1] + 1;
                    L2 = NTTETB[JJ];
                    L3 = 0;
                    
                    for(L = L1; L <= L2; L++)   //DO 680 L = L1,L2
                    {
                        L3 = L3 + 1;
                        if (L != J) continue;
                        if (L == 2 && L2 == 3 && L != L2) L3 = 3;
                        if (L == L2 && STZNDT[JJ] > 0.0) L3 = 4;
                        A6C = TURBM[JJ,L3];
                        goto label700;
                    }   //680 CONTINUE
                }   //690 CONTINUE

            label700:
                if (ANZTRB  !=  1)  //then
                {
                    for(JJ = 2; JJ <= ANZTRB; JJ++) //DO 695 JJ=2,ANZTRB
                    {
                        L2 = JJ;
                    
                    label697:
                        if (NITRE[L2] != 8 && NITRE[L2] != 9) continue;
                        L = LVAR[L2];
                        UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                        if (L2 != 1) goto label697;
                        if (L3  ==  N) IX6 = IX6 + 1;
                        if (L3 == N) continue;
                        LL = NTTETB[JJ-1] + 1;
                        if (NTTETB[JJ]-NTTETB[JJ-1] != 2)   continue;
                        LL = LL + 1;
                        L = L + 100;
                        UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                        if (L2 != 1) continue;
                        if (L3 != N) continue;
                        IX6 = IX6 + 1;
                    }   //695 CONTINUE
                }   //ENDIF
                ISATZ = 3000000+N*10000;
                //WRITE(31,710,rec=ISATZ)
                sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19} ", A6C.PadLeft(10),IX1.ToString().PadLeft(2),IX2.ToString().PadLeft(2),IX3.ToString().PadLeft(2),
                    IX4.ToString().PadLeft(2),IX5.ToString().PadLeft(2),IX6.ToString().PadLeft(2),IX7.ToString().PadLeft(2),IZ1.ToString().PadLeft(4),IZ2.ToString().PadLeft(4),IZ3.ToString().PadLeft(4),
                    IZ4.ToString().PadLeft(4),IZ5.ToString().PadLeft(4),IZ6.ToString().PadLeft(1),IZ7.ToString().PadLeft(4),IZ8.ToString().PadLeft(1),IZ9.ToString().PadLeft(4),
                    IZ10.ToString().PadLeft(1),IY10.ToString().PadLeft(4), Math.Round(A1,4).ToString().PadLeft(11));
                ISATZ = ISATZ + 1;
                //710 FORMAT( A10, 7I2,5I4,3(I1,I4), F11.4)

                sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}", ISATZ.ToString().PadLeft(8),A6C.PadLeft(10),
                    IX1.ToString().PadLeft(2),IX2.ToString().PadLeft(2),IX3.ToString().PadLeft(2),IX4.ToString().PadLeft(2),IX5.ToString().PadLeft(2),IX6.ToString().PadLeft(2),
                    IX7.ToString().PadLeft(2),IZ1.ToString().PadLeft(4),IZ2.ToString().PadLeft(4),IZ3.ToString().PadLeft(4),IZ4.ToString().PadLeft(4),IZ5.ToString().PadLeft(4),
                    IZ6.ToString().PadLeft(1),IZ7.ToString().PadLeft(4),IZ8.ToString().PadLeft(1),IZ9.ToString().PadLeft(4),IZ10.ToString().PadLeft(1),IY10.ToString().PadLeft(4),
                    Math.Round(A1,4).ToString().PadLeft(11));
                //720 FORMAT(1H0,I8.8,1X,A10, 7I2,5I4,3(I1,I4), F11.4)

                if (ANZTRB == 1) goto label850;

                J1 = J;
                IX5= 0;
                
                for(JJ = 2; JJ <= ANZTRB; JJ++) //DO 780 JJ=2,ANZTRB
                {
                    L2 = JJ;
                label730:
                    if (NITRE[L2] != 8 && NITRE[L2] != 9) continue;
                    L = LVAR[L2];
                    UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                    if (L2 != 1) goto label730;
                    LL = NTTETB[JJ-1] + 1;
                    if (L3 == J) goto label740;
                    if (NTTETB[JJ]-NTTETB[JJ-1] != 2) continue;
                    LL = LL + 1;
                    L = L + 100;
                    UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                    if (L2 != 1) continue;
                    if (L3 != J) continue;
                    
                label740:
                    L = LL;
                    IX5 = IX5 + 1;
                    IX1 = 0;
                    IX2 = 0;
                    IX3 = 0;
                    IX4 = 0;
                    A1 = 0.0;
                    UWA006("RDISC", 52,L);
                    UWA006("RDISC", 59,L);
                    II = ITTEND[L];
                    UWA010(II,1);
                    UWA006("RDISC", 53,KT9);
                    IX1 = FLUT;
                    LPAR[J1] = L;
                    J1 = L;
                    IX2 = IX2 + 1;
                    KT9VOR = 0;
                    KT14VOR = 0;

                    for(I = 1; I <= II; I++)    //DO 770 I=1,II
                    {
                        UWA010(I,1);
                        if (KT5 == 0) goto label760;
                        if (KT7 != 4 && KT7 != 9) continue;
                        UWA044(I,1);
                        
                        for(L = 1; L <= 10; L++)    //DO 750 L=1,10
                        {
                            if (LABT[L] == 0) continue;
                            if (LABT[L] > 40) continue;
                            IX4 = IX4 + 1;
                            goto label760;
                        }   //750 CONTINUE

                    label760:
                        if (KT7 != 4 && KT7 != 9) continue;
                        IX2 = IX2 + 1;
                        if (KT9 != KT9VOR)  //then
                        {
                            UWA006("RDISC", 56,KT9);
                            A1 = A1 + TAZLA[6];
                            KT14VOR = 0;
                        }   //ENDIF
                        if (KT14 != KT14VOR) IX3 = IX3 + 1;
                        KT9VOR = KT9;
                        KT14VOR = KT14;
                    }   //770 CONTINUE
                    ISATZ = 3000000+N*10000+IX5*1000;
                    //WRITE(31,790,rec=ISATZ) 
                    sw31.WriteLine("            {0}{1}{2}{3}                                       {4} ", IX1.ToString().PadLeft(2),IX2.ToString().PadLeft(2),
                        IX3.ToString().PadLeft(2),IX4.ToString().PadLeft(2), Math.Round(A1,4).ToString().PadLeft(11));
                    ISATZ = ISATZ + 1;
                    //790 FORMAT( 12X, 4I2,39X,F11.4)
                    sw16.WriteLine("0{0}             {1}{2}{3}{4}                                       {5} ", ISATZ.ToString().PadLeft(8),IX1.ToString().PadLeft(2),
                        IX2.ToString().PadLeft(2),IX3.ToString().PadLeft(2),IX4.ToString().PadLeft(2), Math.Round(A1,4).ToString().PadLeft(11));
                    //795 FORMAT(1H0,I8.8,1X,12X, 4I2,39X,F11.4)
                }   //780 CONTINUE

            label850:
                UWA006("RDISC", 52,J);
                UWA006("RDISC", 59,J);
                KT9VOR = 0;
                KT14VOR = 0;
                A1 = 0.0;
                A2 = 0.0;
                A3 = 0.0;
                Z1 = 0.0;
                Z2 = 0.0;
                Z3 = 0.0;
                Z4 = 0.0;
                Z5 = 0.0;
                Z6 = 0.0;
                II = ITTEND[J];
                IZ1 = 0;
                IZ2 = 0;

                for(I = 1; I <= II; I++)  //DO 910 I=1,II
                {
                    UWA010(I,1);
                    if (KT7  ==  3)     //then
                    {
                        A1 = STFDI[I];
                        A2 = LS[I];
                        A3 = BRTLA[I];
                        IZ1 = (int)KRANZZ[J];
                        ISATZ = 4000000;
                        //WRITE (31,900,rec=ISATZ) 
                        sw31.WriteLine("{0}{1}{2}{3} ",IZ1.ToString().PadLeft(3),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(A2,2).ToString().PadLeft(7),Math.Round(A3,4).ToString().PadLeft(7));
                        
                        ISATZ = ISATZ + 1;
                        sw16.WriteLine("0{0} {1}{2}{3}{4} ", ISATZ.ToString().PadLeft(8),IZ1.ToString().PadLeft(3),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(A2,2).ToString().PadLeft(7),Math.Round(A3,4).ToString().PadLeft(7));
                        //900 FORMAT( I3,2(F7.1,F7.2,F7.4),F11.4, F7.2,F7.4)
                        //901 FORMAT(1H0,I8.8,1XI3,2(F7.1,F7.2,F7.4),F11.4, F7.2,F7.4)
                    }   //END if
                    if (KT7 != 4 && KT7 != 8 && KT7 != 9) continue;
                    if (KT9 != KT9VOR) KT14VOR = 0;
                    if (KT14 == KT14VOR) goto label860;

                    UWA006("RDISC", 56,KT9);
                    IZ1 = 0;
                    if (KT7 != 8) IZ1 = 1;
                    KT9VOR = KT9;
                    KT14VOR = KT14;
                    A1 = STFDI[I];
                    A2 = LS[I];
                    A3 = OEFFNG[I];
                    A10 = BRTLE[I] + BRTLA[I];
                    if (KT7 != 4) A10 = A10*0.5;
                    SUMB = A10;
                    goto label870;

                label860:
                    if (KT7 != 8) IZ1 = IZ1 + 1;
                    A10 = BRTLE[I]+BRTLA[I];
                    if (KT7 != 4) A10 = A10*0.5;
                    SUMB = SUMB + A10;

                label870:
                    if (I == II) goto label880;
                    KT9N = UWA011(I+1,9);
                    KT14N = UWA011(I+1,14);
                    if (KT9N == KT9 && KT14N == KT14) continue;

                label880:
                    Z1 = STFDI[I];
                    Z2 = LS[I];
                    Z3 = OEFFNG[I];
                    Z4 = SUMB/(IZ1)*0.5;
                    Z5 = TASAX[KT14];

                    if ((KT6  !=  NTTETB[KT10]  ||  STZNDT[KT10]  ==  0.0) &&  KT1  >  1)   //then
                        if (IZ1  >=  2)
                            Z6 = OEFFNG[I-2];   //END if

                    IX10 = IX10+1;
                    ISATZ = 5000000+N*10000+IX10*100;
                    //WRITE(31,890,rec=ISATZ)
                    sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} ", IZ1.ToString().PadLeft(3), Math.Round(A1,1).ToString().PadLeft(7),Math.Round(A2,2).ToString().PadLeft(7),Math.Round(A3,2).ToString().PadLeft(7),Math.Round(Z1,1).ToString().PadLeft(7),Math.Round(Z2,2).ToString().PadLeft(7),
                        Math.Round(Z3,4).ToString().PadLeft(7),Math.Round(Z4,4).ToString().PadLeft(11),Math.Round(Z5,2).ToString().PadLeft(7),Math.Round(Z6,4).ToString().PadLeft(7));
                    ISATZ = ISATZ + 1;
                    //890 FORMAT( I3,2(F7.1,F7.2,F7.4),F11.4, F7.2,F7.4)
                    sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", ISATZ.ToString().PadLeft(8), IZ1.ToString().PadLeft(3),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(A2,2).ToString().PadLeft(7),Math.Round(A3,4).ToString().PadLeft(7),
                        Math.Round(Z1,1).ToString().PadLeft(7),Math.Round(Z2,2).ToString().PadLeft(7),Math.Round(Z3,4).ToString().PadLeft(7),Math.Round(Z4,4).ToString().PadLeft(11),
                        Math.Round(Z5,2).ToString().PadLeft(7),Math.Round(Z6,4).ToString().PadLeft(7));
                    //891 FORMAT(1H0,I8.8,1XI3,2(F7.1,F7.2,F7.4),F11.4, F7.2,F7.4)
                }   //910 CONTINUE
                if (LPAR[J] == 0) continue;
                J = (int)LPAR[J];
                goto label850;
            }   //920 CONTINUE

            UWA006("RDISC", 58,1);
            IX10 = 0;

            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 940 JJ=1,ANZTRB
            {
                if (NITRE[JJ] == 7) continue;
                if (EDAROR[JJ] <= 0.0) continue;
                A1 = FKOND[JJ];
                A2 = EDAROR[JJ];
                A3 = EDSROR[JJ];
                A4 = ELROR[JJ];
                A5 = CKOND[JJ];
                IZ2 = (int)(ZFLUTE[JJ]);
                IZ3 = (int)(ZKONDE[JJ]);
                IZ4 = (int)KTFAC[JJ];
                IZ5 = 0;
                if (NKPARA[JJ] > 0) IZ5 = 1;
                IZ1 = (int)(RZAHL[JJ]);
                A7 = FWERST[JJ];
                A8 = FVERSCH[JJ];
                IX1 = (int)NTYPKO;
                A6C = " ";
                if (NTYPKO == 1) A6C = "CUZN28 ";
                if (NTYPKO == 2) A6C = "CUZN20 ";
                if (NTYPKO == 3) A6C = "CUNI10 ";
                if (NTYPKO == 4) A6C = "CUNI30 ";
                if (NTYPKO == 5) A6C = "CSTAHL ";
                if (NTYPKO == 6) A6C = "CRNI ";
                if (NTYPKO == 7) A6C = "TITAN ";
                if (NTYPKO == 8) A6C = "CRNIMO ";

                IX10 = IX10 + 1;
                ISATZ = 6000000+IX10*10000;
                //WRITE(31,930,rec=ISATZ)
                sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", Math.Round(A1,1).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(6),Math.Round(A3,3).ToString().PadLeft(6),
                    Math.Round(A4,3).ToString().PadLeft(6),Math.Round(A5,3).ToString().PadLeft(6),IZ1.ToString().PadLeft(7),IZ2.ToString().PadLeft(2),IZ3.ToString().PadLeft(2),IZ4.ToString().PadLeft(2),
                    IZ5.ToString().PadLeft(2),A6C,Math.Round(A7,4).ToString().PadLeft(7),Math.Round(A8,4).ToString().PadLeft(7));
                ISATZ = ISATZ + 1;
                //930 FORMAT( F10.1,4F6.3,I7,4I2,A ,2F7.4)
                sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}", ISATZ.ToString().PadLeft(8),Math.Round(A1,1).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(6),Math.Round(A3,3).ToString().PadLeft(6),Math.Round(A4,3).ToString().PadLeft(6),
                    Math.Round(A5,3).ToString().PadLeft(6),IZ1.ToString().PadLeft(7),IZ2.ToString().PadLeft(2),IZ3.ToString().PadLeft(2),IZ4.ToString().PadLeft(2),IZ5.ToString().PadLeft(2),A6C,Math.Round(A7,4).ToString().PadLeft(7),Math.Round(A8,4).ToString().PadLeft(7));
                //931 FORMAT(1H0,I8.8,1X,F10.1,4F6.3,I7,4I2,A ,2F7.4)
            }   //940 CONTINUE

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6C = " ";
            A7 = 0.0;
            A8 = 0.0;
            IZ1 = 0;
            IZ2 = 0;
            IZ3 = 0;
            IZ4 = 0;
            IZ5 = 0;
            ISATZ = 7000000;

            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 950 JJ=1,ANZTRB
                if (NITRE[JJ] == 7) 
                    goto label960;
            goto label970;
            
        label960:
            if (EDAROR[JJ] <= 0.0) goto label970;
            A1 = FKOND[JJ];
            A2 = EDAROR[JJ];
            A3 = EDSROR[JJ];
            A4 = ELROR[JJ];
            A5 = CKOND[JJ];
            IZ2 = (int)(ZFLUTE[JJ]);
            IZ3 = (int)(ZKONDE[JJ]);
            IZ4 = (int)KTFAC[JJ];
            IZ5 = 0;
            if (NKPARA[JJ] > 0) IZ5 = 1;
            IZ1 = (int)(RZAHL[JJ]);
            A7 = FWERST[JJ];
            A8 = FVERSCH[JJ];
            IX1 = (int)NTYPKO;
            A6C = " ";
            if (NTYPKO == 1) A6C = "CUZN28 ";
            if (NTYPKO == 2) A6C = "CUZN20 ";
            if (NTYPKO == 3) A6C = "CUNI10 ";
            if (NTYPKO == 4) A6C = "CUNI30 ";
            if (NTYPKO == 5) A6C = "CSTAHL ";
            if (NTYPKO == 6) A6C = "CRNI ";
            if (NTYPKO == 7) A6C = "TITAN ";
            if (NTYPKO == 8) A6C = "CRNIMO ";

        label970:
            //WRITE(31,930,rec=ISATZ)A1,A2,A3,A4,A5,IZ1,IZ2,IZ3,IZ4,IZ5,A6C,A7,A8
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", Math.Round(A1,1).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(6),Math.Round(A3,3).ToString().PadLeft(6),
                    Math.Round(A4,3).ToString().PadLeft(6),Math.Round(A5,3).ToString().PadLeft(6),IZ1.ToString().PadLeft(7),IZ2.ToString().PadLeft(2),IZ3.ToString().PadLeft(2),IZ4.ToString().PadLeft(2),
                    IZ5.ToString().PadLeft(2),A6C,Math.Round(A7,4).ToString().PadLeft(7),Math.Round(A8,4).ToString().PadLeft(7));
            ISATZ = ISATZ + 1;
            //sw16.WriteLine("",931) ISATZ,A1,A2,A3,A4,A5,IZ1,IZ2,IZ3,IZ4,IZ5,A6C,A7,A8;
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}", ISATZ.ToString().PadLeft(8),Math.Round(A1,1).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(6),Math.Round(A3,3).ToString().PadLeft(6),Math.Round(A4,3).ToString().PadLeft(6),
                    Math.Round(A5,3).ToString().PadLeft(6),IZ1.ToString().PadLeft(7),IZ2.ToString().PadLeft(2),IZ3.ToString().PadLeft(2),IZ4.ToString().PadLeft(2),IZ5.ToString().PadLeft(2),A6C,Math.Round(A7,4).ToString().PadLeft(7),Math.Round(A8,4).ToString().PadLeft(7));

        label1000:
            KK = IFALL;
            if (KK >= 7) KK = STWRT2;
            ISATZ = ISATZ + 1;
            ISATZ = 8000000+KK;
            //WRITE(31,1010,rec=ISATZ) 
            sw31.WriteLine("{0}{1}", KK.ToString().PadLeft(3),TEXT);
            ISATZ = ISATZ + 1;
            //1010 FORMAT( I3,A);

            sw16.WriteLine("0{0}{1}{2}", ISATZ.ToString().PadLeft(8),KK.ToString().PadLeft(3),TEXT.Substring(0,80));
            //1011 FORMAT(1H0,I8.8,I3,A)

            A1 = WAUFW/B;
            JJ = 1;
            A3 = ARBTA[JJ];
            if (NITRE[JJ] == 1) A3 = TLSTGE[JJ];
            if (PELEKT > 0.0) A3 = PELEKT;
            A2 = A3/ETAGE[JJ];
            A5 = ETAGE[JJ]*100.0;
            A4 = VMECHE[JJ];
            A6 = PULEIS/B;
            A7 = A1/A3*3600.0;
            A8 = A1/(A3+A6)*3.6*1000.0;
            A9 = DVERBR[JJ];
            A10= 1.0/A7*3600.0*100.0;
            Z10= 1.0/A8*3600.0*100.0;
            ISATZ = 9000000+KK;
            //WRITE(31,1020,rec=ISATZ) 
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),
                Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),
                Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
            ISATZ = ISATZ + 1;
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}\n{11}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),
                Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
            //1020 FORMAT( 12F11.4)
            //1021 FORMAT(1H0,I8.8,1X,10F11.4,/1X,4X,2F11.4)

            I = IHENDE + 1;
            
        label1030:
            I = I - 1;
            if (NTYP[I] == 7) goto label1030;
            A1 = UWA003("TCELS", TWAUS[I]);
            I = 1;
            
        label1040:
            I = I + 1;
            if (I > IHENDE) II = 1;
            if (I > IHENDE) goto label1050;
            if (NTYP[I] != 3) goto label1040;
            II = I;
            
        label1050:
            A2 = GWAS[II]*GM;
            I = 1;
            
        label1060:
            I = I + 1;
            if (I > IHENDE) goto label1070;
            if (NTYP[I] != 4) goto label1060;
            L1 = NBLTG[I,1];
            
            if (Math.Abs(PLTG[L1] - PST905) > 0.001) goto label1060;
            UWA048(I);
            A3 = SUGL;
            goto label1090;
            
        label1070:
            A3 = 0.0;
            for(L = 71; L <= 92; L++)   //DO 1080 L=71,92
            {
                if (Math.Abs(PLTG[L]-PST905) > 0.001) continue;
                A3 = A3 + GLTG[L];
            }   //1080 CONTINUE
            
        label1090:
            A3 = A3*GM;
            A4 = 0;
            I = IHENDE + 1;
            
        label1100:
            I = I - 1;
            if (NTYP[I] == 7 && NBLTG[I,1] > 0) goto label1100;
            if (NTYP[I] != 7 && NTYP[I] != 8) goto label1110;
            if (N2[I] == 0) goto label1110;
            if (KATZE1[I] != 1) goto label1110;
            A4 = VERLP[I];
            
        label1110:
            A5 = 0.0;
            A6 = 0.0;
            
            for(L = 31; L <= 32; L++)   //DO 1115 L=31,32
            {
                if (GLTG[L] <= 0.0) continue;
                UWA008("UNPACK", ILTG[L], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX3 == 0 || IX1 == 0) continue;
                if (L == 31) A5 = GLTG[L]*GM;
                if (L == 32) A6 = GLTG[L]*GM;
            }   //1115 CONTINUE

            ISATZ = 10000000+KK;
            //WRITE(31,1020,rec=ISATZ) 
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}",Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));
            ISATZ = ISATZ + 1;
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));

            UWA006("RDISC", 52,1);
            I = 1;
            A1 = PT[I,K]*GP;
            A2 = UWA003("TCELS", T1T[I]);
            A3 = E1T[I,K]*GH;
            A4 = G[I,K]*GM;
            A5 = VISUM(PT[I,K],T1T[I],00);
            A6 = A4*A5;

            ISATZ = 11000000+KK;
            //WRITE(31,1020,rec=ISATZ)
            sw31.WriteLine("{0}{1}{2}{3}{4}{5} ",Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));
            ISATZ = ISATZ + 1;
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));

            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            A7 = 0.0;
            Z4 = 0.0;
            Z5 = 0.0;
            Z6 = 0.0;
            Z7 = 0.0;
            ISATZ = 12000000+KK;

            A1 = GFDE[1]*GM;
            UWA006("RDISC", 52,1);
            A2 = PT[2,K]*GP;
            A3 = UWA003("TCELS", T1T[2]);
            J = 0;
            
        label1118:
            J = J + 1;
            if (J > 2) goto label1120;
            if(J == 1 && GMD1A[1] <= 0.0) goto label1120;
            if(J == 2 && GMD2A[1] <= 0.0) goto label1120;
            UWA006("RDISC", 52,J);
            I = ITTEND[J];
            Z4 = PT[I,K]*GP;
            Z5 = UWA003("TCELS", T1T[I+1]);
            UWA006("RDISC", 52,J+1);
            Z6 = PT[1,K]*GP;
            Z7 = UWA003("TCELS", T1T[1]);

            if (J  ==  1) //then
            {
                A4 = Z4;
                A5 = Z5;
                A6 = Z6;
                A7 = Z7;
                Z4 = 0.0;
                Z5 = 0.0;
                Z6 = 0.0;
                Z7 = 0.0;
                goto label1118;
            }   //ENDIF
            
        label1120:
            //WRITE (31,1020,rec=ISATZ) 
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(Z4,4).ToString().PadLeft(11),Math.Round(Z5,4).ToString().PadLeft(11),Math.Round(Z6,4).ToString().PadLeft(11),Math.Round(Z7,4).ToString().PadLeft(11));
            ISATZ = ISATZ + 1;
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(Z4,4).ToString().PadLeft(11),Math.Round(Z5,4).ToString().PadLeft(11),Math.Round(Z6,4).ToString().PadLeft(11),Math.Round(Z7,4).ToString().PadLeft(11));

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            A1 = GLTG[93]*GM;
            A2 = GLTG[94]*GM;
            A3 = GLTG[95]*GM;
            A4 = GLTG[96]*GM;
            A5 = GLTG[97]*GM;
            A6 = GLTG[98]*GM;
            ISATZ = 13000000+KK;
            //WRITE (31,1020,rec=ISATZ) 
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));
            ISATZ = ISATZ + 1;
            //WRITE (16,1021) 
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6} ", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));

            IPAR = 0;
            IX10 = 0;
            
            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 1240 JJ=1,ANZTRB
            {
                if (NITRE[JJ] == 7) continue;
            
                L1 = 1;
                if (JJ > 1) L1 = NTTETB[JJ-1] + 1;
                L2 = NTTETB[JJ];
                
                for(LL = L1; LL <= L2; LL++)    //DO 1235 LL=L1,L2
                {
                    IPAR = 0;
                    L = LL;
                    UWA006("RDISC", 52,L);
                    UWA006("RDISC", 59,L);
                    I = 1;
                    if (JJ == 1 && L == 1) I = 2;
                    KT9VOR = 0;
                    KT14VOR = 0;
                    II = ITTEND[L];
                    
                    UWA010(II,1);
                    UWA006("RDISC", 53,KT9);
                    if (JJ != 1) //then
                        if (NITRE[JJ] == 8 || NITRE[JJ] == 9)
                            continue;     //ENDIF
                    
                label1125:
                    A1 = PT[I,K]*GP;
                    A2 = UWA003("TCELS", T1T[I]);
                    A3 = E1T[I,K]*GH;
                    A4 = G[I+1,K]*GM;
                    A5 = VISUM(PT[I,K],T1T[I],00);
                    A6 = A4*A5;
                    YUPM= XUPM * DREQUE[JJ];
                    A7 = UPM[K]/60.0;
                    IZ1 = LPAR[L];
                    IX10 = IX10+1;
                    ISATZ = 14000000+IX10*10000+KK+IPAR*1000;
                    //WRITE(31,1130,rec=ISATZ) 
                    sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                    ISATZ = ISATZ + 1;
                    sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8} ", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                    //1130 FORMAT( 7F11.4,I3)
                    //1131 FORMAT(1H0,I8.8,1X,7F11.4,I3)

                label1135:
                    I = I + 1;
                    UWA010(I+1,1);
                    if (KT7  !=  3  &&  KT7  !=  5) goto label1137;
                    A3 = E2T[I,K]*GH;
                    A7 = PT[I,K];
                    if (PT[I,K]  >  PT[I+1,K]) A7 = PT[I,K]/TSTFMX[I+1];
                    A9 = (E2T[I,K] - Math.Pow(C2GES[I,K],2.0)/8372.25) * GH;
                    A8 = VISUM (A7 ,A9/GH,03);
                    A10 = VISUM (A7 ,A8,02);
                    A2 = E2T[I,K];
                    A1 = VISUM (A10,A2,05);
                    A5 = VISUM (A1,A2,00);
                    A4 = G[I+1,K] * GM;
                    A6 = A4 * A5;
                    A1 = A1 * GP;
                    A2 = UWA003("TCELS",A2);
                    A8 = UWA003("TCELS", A8);
                    A7 = A7*GP;
                    ISATZ = 15000000+IX10*10000+KK+IPAR*1000;
                    //WRITE (31,1020,rec=ISATZ) 
                    sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                        Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),
                        Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11));
                    ISATZ = ISATZ + 1;
                    //WRITE (16,1021) 
                    sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                        Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),
                        Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11));
                    I = I + 1;
                    
                label1137:
                    A3 = E2T[I,K]*GH;
                    A7 = PT[I,K]*GP;
                    A9 = (E2T[I,K] - Math.Pow(C2GES[I,K],2.0)/8372.25) * GH;
                    A8 = VISUM (PT[I,K],A9/GH,03);
                    A10 = VISUM (PT[I,K],A8,02);
                    A2 = E2T[I,K];
                    A1 = VISUM (A10,A2,05);
                    A5 = VISUM (A1,A2,00);
                    A4 = G[I+1,K] * GM;
                    A6 = A4 * A5;
                    A1 = A1 * GP;
                    A2 = UWA003("TCELS", A2);
                    A10 = VISUM (PT[I,K],A8,00);
                    A8 = UWA003("TCELS", A8);
                    ISATZ = 16000000+IX10*10000+KK+IPAR*1000;
                    //WRITE (31,1020,rec=ISATZ) A1,A2,A3,A4,A5,A6,A7,A8,A9,A10
                    sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                        Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),
                        Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11));
                    ISATZ = ISATZ + 1;
                    //WRITE (16,1021) ISATZ,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10;
                    sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                        Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),
                        Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11));
                
                label1140:
                    I1 = I + 1;
                    IX11 = 0;
                    
                    for(I = I1; I <= II; I++)   //DO 1170 I=I1,II
                    {
                        UWA010(I,1);
                        if (KT7 != 4 && KT7 != 8 && KT7 != 9) continue;
                        if (KT9 != KT9VOR) KT14VOR = 0;
                        if (KT14 == KT14VOR) goto label1150;

                        UWA006("RDISC", 56,KT9);
                        KT9VOR = KT9;
                        KT14VOR = KT14;
                        IZ2 = 0;
                        A1 = PT[I-1,K]*GP;
                        A3 = E1T[I,K] * GH;
                        A4 = (E1T[I,K] - Math.Pow(C2GES[I-1,K],2.0)/8372.25) * GH;
                        A2 = VISUM (PT[I-1,K],A4/GH,03);
                        A2 = UWA003("TCELS", A2);

                    label1150:
                        if (I == II) goto label1155;
                        KT9N = UWA011(I+1,9);
                        KT14N = UWA011(I+1,14);
                        
                        if ((KT9N == KT9 && KT14N == KT14)  && (E1T[I+1,K]  !=  E2T[I,K]))  //then
                        {
                            Z1 = PT[I,K]*GP;
                            Z3 = E2T[I,K]*GH;
                            Z4 = (E2T[I,K] - Math.Pow(C2GES[I,K],2.0)/8372.25) * GH;
                            Z2 = VISUM (PT[I,K],Z4/GH,03);
                            Z5 = VISUM (PT[I,K],Z2,00);
                            Z2 = UWA003("TCELS", Z2);
                            Z6 = E1T[I+1,K]*GH;
                            Z7 = G[I,K]*GM;
                            Z8 = 0.0;
                            IZ2 = IZ2 + 1;
                            ISATZ = 17000000 + IX10 * 10000 + (IX11 + 1) * 100 + KK + IPAR * 1000 + 100000 * IZ2;
                            //WRITE(31,1020,rec=ISATZ) A1,A2,A3,A4,Z1,Z2,Z3,Z4,Z5,Z6,Z7,Z8
                            sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                                Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(Z1,4).ToString().PadLeft(11),Math.Round(Z2,4).ToString().PadLeft(11),
                                Math.Round(Z3,4).ToString().PadLeft(11),Math.Round(Z4,4).ToString().PadLeft(11),Math.Round(Z5,4).ToString().PadLeft(11),Math.Round(Z6,4).ToString().PadLeft(11),
                                Math.Round(Z7,4).ToString().PadLeft(11),Math.Round(Z8,4).ToString().PadLeft(11));
                            ISATZ = ISATZ + 1;
                            //sw16.WriteLine("",1021) ISATZ,A1,A2,A3,A4,Z1,Z2,Z3,Z4,Z5,Z6,Z7,Z8
                            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                                Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(Z1,4).ToString().PadLeft(11),Math.Round(Z2,4).ToString().PadLeft(11),
                                Math.Round(Z3,4).ToString().PadLeft(11),Math.Round(Z4,4).ToString().PadLeft(11),Math.Round(Z5,4).ToString().PadLeft(11),Math.Round(Z6,4).ToString().PadLeft(11),
                                Math.Round(Z7,4).ToString().PadLeft(11),Math.Round(Z8,4).ToString().PadLeft(11));
                        }   //ENDIF
                        if (KT9N == KT9 && KT14N == KT14) continue;

                    label1155:
                        Z1 = PT[I,K]*GP;
                        if (KT1  >=  2) Z1 = PSI[75]*PT[I,K] * GP;
                        Z3 = E2T[I,K] * GH;
                        Z4 = (E2T[I,K] - Math.Pow(C2GES[I,K],2.0)/8372.25) * GH;
                        Z2 = VISUM (PT[I,K],Z4/GH,03);
                        Z5 = VISUM (PT[I,K],Z2,00);
                        Z2 = UWA003("TCELS", Z2);
                        Z6 = 0.0;
                        Z8 = 0.0;
                        Z9 = 0.0;
                        
                        if (I  !=  II) Z6 = E1T[I+1,K] * GH;
                        Z7 = G[I,K]*GM;
                        if (KT6  ==  NTTETB[KT10]  &&  STZNDT[KT10]  >  0.0) //then
                        {
                            if (KT7 == 9)
                                Z8 = VISUM(PT[I-2,K],E1T[I-1,K]- Math.Pow(C2GES[I-2,K],2)/8.37225E+03,13);
                            if (Z8 >= 0.0) Z8 = 0.0;
                            if (Z8 < 0.0)
                                Z8 = Math.Pow((1.0+ Z8 ),2)* Math.Pow((UPM[K]/3000.0* (STFDI[I]+2.0*LS[I]) /1000.0),3) / PT[I-2,K];
                        }   //ENDIF
                        IX11 = IX11 + 1;
                        ISATZ = 17000000+IX10*10000+IX11*100+KK+IPAR*1000;
                        //WRITE(31,1020,rec=ISATZ) A1,A2,A3,A4,Z1,Z2,Z3,Z4,Z5,Z6,Z7,Z8
                        sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                                Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(Z1,4).ToString().PadLeft(11),Math.Round(Z2,4).ToString().PadLeft(11),
                                Math.Round(Z3,4).ToString().PadLeft(11),Math.Round(Z4,4).ToString().PadLeft(11),Math.Round(Z5,4).ToString().PadLeft(11),Math.Round(Z6,4).ToString().PadLeft(11),
                                Math.Round(Z7,4).ToString().PadLeft(11),Math.Round(Z8,4).ToString().PadLeft(11));
                        ISATZ = ISATZ + 1;
                        //sw16.WriteLine("",1021) ISATZ,A1,A2,A3,A4,Z1,Z2,Z3,Z4,Z5,Z6,Z7,Z8
                        sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                                Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(Z1,4).ToString().PadLeft(11),Math.Round(Z2,4).ToString().PadLeft(11),
                                Math.Round(Z3,4).ToString().PadLeft(11),Math.Round(Z4,4).ToString().PadLeft(11),Math.Round(Z5,4).ToString().PadLeft(11),Math.Round(Z6,4).ToString().PadLeft(11),
                                Math.Round(Z7,4).ToString().PadLeft(11),Math.Round(Z8,4).ToString().PadLeft(11));
                    }   //1170 CONTINUE

                    if (L != NTTETB[JJ]) goto label1225;
                    A1 = PT[II,K]*GP;
                    A2 = UWA003("TCELS", T2T[II]);
                    A3 = E2T[II,K]*GH;
                    A4 = G[II,K]*GM;
                    A5 = VISUM(PT[II,K],T2T[II],00);
                    goto label1230;

                label1225:
                    A1 = PT[II,K]*GP;
                    A2 = UWA003("TCELS", T1T[II+1]);
                    A3 = E1T[II+1,K]*GH;
                    A4 = G[II+1,K]*GM;
                    A5 = VISUM(PT[II,K],T1T[II+1],00);

                label1230:
                    A6 = A4*A5;
                    A7 = PELGEH[L];
                    A8 = ETABA[L]*100.0;
                    A9 = WABB[L]*GH;
                    A10 = 0.0;
                    if (L == NTTETB[JJ]) A10 = CAXT[JJ];
                    Z10 = FETAE[L];
                    if (Z10 == 1.0 && DETA != 1.0) Z10 = DETA;
                    I = 1;
                    if (JJ  ==  1  &&  L  ==  1) I = 2;
                    Z1 = VISUM (PT[I,K],E1T[I,K],03);
                    Z1 = VISUM (PT[I,K],Z1 ,02);
                    Z1 = VISUM (PT[II,K],Z1,04);
                    Z1 = VISUM (PT[II,K],Z1,01);
                    Z1 = (E1T[I,K] - Z1) * GH;

                    ISATZ = 18000000+IX10*10000+KK+IPAR*1000;
                    //WRITE(31,1020,rec=ISATZ) A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z1,Z10;
                    sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                                Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),
                                Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),
                                Math.Round(Z1,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
                        
                    ISATZ = ISATZ + 1;
                    //sw16.WriteLine("",1021) ISATZ,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z1,Z10;
                    sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                                Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),
                                Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),
                                Math.Round(Z1,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));

                    if (IZ1 == 0) continue;        //goto label1235;

                    L = IZ1;
                    UWA006("RDISC", 52,L);
                    UWA006("RDISC", 59,L);
                    II = ITTEND[L];
                    UWA010(II,1);
                    UWA006("RDISC", 53,KT9);
                    IZ1 = LPAR[L];
                    I = 1;
                    KT9VOR = 0;
                    KT14VOR= 0;
                    IX10 = IX10 - 1;
                    IPAR = IPAR + 1;
                    goto label1125;
                }   //1235 CONTINUE
            }   //1240 CONTINUE

            IX10 = 0;
            UWA006("RDISC", 58,1);
            
            for(L = 1; L <= ANZTRB; L++)    //DO 1255 L=1,ANZTRB
            {
                if (NITRE[L] == 7) continue;
                if (EDAROR[L] <= 0.0) continue;
                if (K > 1) goto label1245;
                A1 = PKONDA[L]*GP;
                A2 = TKONDA[L];
                A3 = TKONAA[L];
                A4 = GKONDA[L]*GM;
                A5 = A3 - A2;
                A6 = DTKONA[L];
                
                if (FAKTKF[L] == 0.0) FAKTKF[L] = 1.0;
                A7 = 1.0/FAKTKF[L];
                A8 = UW0011(PKONDA[L],1) - 273.15;
                A9 = DKONDA[L]*GM;
                Z10 = A4*A5*GH/1000.0;
                Z1 = VISUM(PKONDA[L],Z2,-21);
                A10 = Z10*1000.0/A9 + Z1*GH;
                goto label1250;

            label1245:
                A1 = PKONDT[L]*GP;
                A2 = TKONDT[L];
                A3 = TKONAT[L];
                A4 = GKONDT[L]*GM;
                A5 = A3 - A2;
                A6 = DTKONT[L];
                if (FAKTKF[L] == 0.0) FAKTKF[L] = 1.0;
                A7 = 1.0/FAKTKF[L];
                A8 = UW0011(PKONDT[L],1) - 273.15;
                A9 = DKONDT[L]*GM;
                Z10 = A4*A5*GH/1000.0;
                Z1 = VISUM(PKONDT[L],Z2,-21);
                A10 = Z10*1000.0/A9 + Z1*GH;

            label1250:
                IX10 = IX10 + 1;
                ISATZ = 19000000 + IX10*10000+KK;
                //WRITE(31,1020,rec=ISATZ) A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z10
                sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                                Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),
                                Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),
                                Math.Round(Z10,4).ToString().PadLeft(11));
                ISATZ = ISATZ + 1;
                //sw16.WriteLine("",1021) ISATZ,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z10
                sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),
                                Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),
                                Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),
                                Math.Round(Z10,4).ToString().PadLeft(11));
            }   //1255 CONTINUE

            IX10 = 0;
            LL = 0;
            
            for(I = 1; I <= IHENDE; I++)    //DO 1300 I=1,IHENDE
            {
                if (LTYP[I] != 1 && LTYP[I] != 2 && LTYP[I] != 21) continue;
                II = N1[I];
                if (II == 0) continue;
                A1 = 0.0;
                A2 = 0.0;
                A3 = 0.0;
                A4 = 0.0;
                A5 = 0.0;
                A6 = 0.0;
                A7 = 0.0;
                A8 = 0.0;
                A9 = 0.0;
                A10= 0.0;
                Z2 = 0.0;
                Z3 = 0.0;
                IZ2= 0;
                IZ3= 0;
                LL = LL + 1;
                LEND = LL;
                IENTNH[LL] = 0;
                if (NTYP[I] == 1) goto label1265;
                IZ1 = II;
                L = 1;
                
            label1260:
                L = L + 1;
                if (L > INENDE) goto label1265;
                if (LTYP[L] != 5) goto label1260;
                if (N2[L] != IZ1) goto label1260;
                II = N1[L];

            label1265:
                if (NTYP[I] == 20) goto label1270;
                A1 = PLTG[II]*GP;
                A2 = VISUM(PLTG[II],ELTG[II],03);
                A5 = VISUM(PLTG[II],A2,00);
                A2 = UWA003("TCELS", A2);
                A3 = ELTG[II]*GH;
                A4 = GLTG[II]*GM;
                A7 = DPLTG[II]*GP;
                A8 = 0.0;
                
            label1270:
                UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX3 > 0) goto label1285;
                if (IHENDE == INENDE) goto label1295;
                IZ1 = II;
                L1 = IHENDE + 1;
                
            label1275:
                for(L = L1; L <= INENDE; L++)   //DO 1280 L=L1,INENDE
                {
                    if (NN2[L] != IZ1 && N2[L] != IZ1) continue;
                    if (NN1[L] == IZ1) continue;
                    IZ1 = NN1[L];
                    IZ3 = NBLTG[L,1];
                    UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX3 > 0) IZ1 = 0;
                    if (IX3 > 0) goto label1285;
                    UWA008("UNPACK", ILTG[IZ3], ref IX1, ref IX2, ref IX3, ref IX4);
                    IZ3 = 0;
                    if (IX3 > 0) goto label1285;
                    goto label1275;
                }   //1280 CONTINUE
                goto label1296;

            label1285:
                IENTNH[LL] = IX3*100+IX4;
                
            label1286:
                if (NTYP[I] == 20) goto label1296;
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA010(IX4,1);
                UWA006("RDISC", 56,KT9);
                if (IX4  !=  ITTEND[IX3]) A9 = G[IX4+1,K]*GM;
                if (IX4  !=  ITTEND[IX3]) goto label1294;
                if (IX3  ==  NTTETB[IX2]) goto label1293;
                UWA006("RDISC", 52,IX3+1);
                A9 = G[1,K]*GM;
                goto label1294;
                
            label1293:
                if (IX2  ==  1  ||  (IX2  !=  1  &&  (NITRE[IX2]  ==  8 ||  NITRE[IX2]  ==  9))) A9 = DKONDT[IX2]*GM;
                if (IX2  ==  1  ||  (IX2  !=  1  &&  (NITRE[IX2]  ==  8 ||  NITRE[IX2]  ==  9))) goto label1294;
                L = LVAR[IX2] + 100;
                UWA008("UNPACK", ILTG[L], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX3  ==  NRTRB[IX2]) A9 = DKONDT[IX2]*GM;
                if (IX3  ==  NRTRB[IX2]) goto label1294;
                UWA006("RDISC", 52,IX3+1);
                A9 = G[1,K]*GM;
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                
            label1294:
                if (TAFDP[KT14] <= 0.0) goto label1295;
                A10 = A10 + A9;
                UWA044(IX4,1);
                Z1 = 0.0;
                
                for(L = 1; L <= 10; L++)    //DO 1290 L=1,10
                {
                    IX5 = LABT[L];
                    if (IX5 == 0) continue;
                    if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
                }   //1290 CONTINUE
                A6 = Z1*GM;
                Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
                if (KT14 == 1) Z3 = HS1MIN[6];
                if (KT14 == 2) Z3 = HS1MAX[6];
                if (KT14 == 3) Z3 = HSZMIN[6];
                if (KT14 == 4) Z3 = HSZMAX[6];
                if (KT14 == 5) Z3 = TAKF1 [6];
                if (Z3 == 0.0) Z3 = 1.0;
                A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;
                I1 = (KT9-1)*6+KT14;
                IZ2= IZ2 + (int)NSTUTZ[I1];
                Z2 = DSTUTZ[I1];
                if (IZ3  ==  0) goto label1295;
                UWA008("UNPACK", ILTG[IZ3], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX3  >  0) IZ3 = 0;
                if (IX3  >  0) goto label1286;
                IZ1 = IZ3;
                goto label1275;
                
            label1295:
                if (IZ1  !=  0) goto label1275;

            label1296:
                IX10 = IX10 + 1;
                ISATZ = 20000000+IX10*1000+KK;
                //WRITE(31,1297,rec=ISATZ) 
                sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),
                    Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),IZ2.ToString().PadLeft(3),Math.Round(Z2,4).ToString().PadLeft(12),Math.Round(Z3,4).ToString().PadLeft(12));
                ISATZ = ISATZ + 1;
                //1297 FORMAT( 9F11.4,I3,2F12.4)
                sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),
                    Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),IZ2.ToString().PadLeft(3),Math.Round(Z2,4).ToString().PadLeft(12),Math.Round(Z3,4).ToString().PadLeft(8));
                //1298 FORMAT(1H0,I8.8,1X,9F11.4,I3,F12.4,F8.4)
            }   //1300 CONTINUE

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            A7 = 0.0;
            A8 = 0.0;
            IZ1 = 0;
            JJ = 0;
            ISATZ = 21000000+KK;
            I = IHENDE + 1;
            
        label1310:
            I = I - 1;
            if (I == 1) goto label1380;
            if (NTYP[I] != 3) goto label1310;
            if (N1[I] == 0) goto label1310;
            II = N1[I];
            JJ = N2[I];
            A1 = PLTG[II]*GP;
            A2 = VISUM(PLTG[II],ELTG[II],03);
            A5 = VISUM(PLTG[II],A2,00);
            A2 = UWA003("TCELS", A2);
            A3 = ELTG[II]*GH;
            A4 = GLTG[II]*GM;
            A6 = A4*A5;
            A7 = DPLTG[II]*GP;
            A8 = 0.0;
            IZ1 = 15;
            UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
            if (IX3 > 0) goto label1340;
            if (IHENDE == INENDE) goto label1380;
            IZ1 = II;
            L1 = IHENDE + 1;
            
        label1320:
            for(L = L1; L <= INENDE; L++)   //DO 1330 L=L1,INENDE
            {
                if (NN2[L] != IZ1 && N2[L] != IZ1) continue;
                if (NN1[L] == IZ1) continue;
                IZ1 = NN1[L];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX3, ref IX3, ref IX4);
                if (IX3 > 0) goto label1340;
                goto label1320;
            }   //1330 CONTINUE
            goto label1380;

        label1340:
            if (LEND == 0) goto label1360;
            for(L = 1; L <= LEND; L++)  //DO 1350 L=1,LEND
            {
                if (IENTNH[L] == 0) continue;
                IZ3 = IENTNH[L]/100;
                IZ4 = IENTNH[L]-IENTNH[L]/100*100;
                if (IX3 != IZ3 || IX4 != IZ4) continue;
                IZ1 = L;
                goto label1380;
            }   //1350 CONTINUE
            
        label1360:
            UWA006("RDISC", 52,IX3);
            UWA006("RDISC", 59,IX3);
            UWA010(IX4,1);
            IZ1 = 0;
            if (IX3 == 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ1 = 11;
            if (IX3 > 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ1 = 12;
            if (KT7 == 3) IZ1 = 13;
            if (IX5 == 0) goto label1370;
            if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
            
        label1370:
            Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
            if (KT14 == 1) Z3 = HS1MIN[6];
            if (KT14 == 2) Z3 = HS1MAX[6];
            if (KT14 == 3) Z3 = HSZMIN[6];
            if (KT14 == 4) Z3 = HSZMAX[6];
            if (KT14 == 5) Z3 = TAKF1 [6];
            if (Z3 == 0.0) Z3 = 1.0;
            A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;

            //1380 WRITE(31,1390,rec=ISATZ)
        label1380:
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}",Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),
                Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
            ISATZ = ISATZ + 1;
            //1390 FORMAT( 8F11.4,I3)
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),
                Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
            //1391 FORMAT(1H0,I8.8,1X,8F11.4,I3);

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            ISATZ = 22000000+KK;

            if (JJ == 0 || JJ > 900) goto label1395;
            A1 = PLTG[JJ]*GP;
            A2 = VISUM(PLTG[JJ],ELTG[JJ],03);
            A5 = VISUM(PLTG[JJ],A2,00);
            A2 = UWA003("TCELS", A2);
            A3 = ELTG[JJ]*GH;
            A4 = GLTG[JJ]*GM;
            A6 = A4*A5;

        label1395:
            //WRITE(31,1020,rec=ISATZ) 
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));
            ISATZ = ISATZ + 1;
            //sw16.WriteLine("",1021) 
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6} ", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));

            UWA006("RDISC", 58,1);
            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            A7 = 0.0;
            A8 = 0.0;
            A9 = 0.0;
            A10 = 0.0;
            Z10 = 0.0;
            ISATZ = 23000000+KK;

            L = 0;
            
        label1400:
            L = L + 1;
            if (L > ANZTRB) goto label1420;
            if (NITRE[L] != 7) goto label1400;
            if (EDAROR[L] <= 0.0) goto label1420;
            if (K > 1) goto label1410;
            A1 = PKONDA[L]*GP;
            A2 = TKONDA[L];
            A3 = TKONAA[L];
            A4 = GKONDA[L]*GM;
            A5 = A3 - A2;
            A6 = DTKONA[L];
            if (FAKTKF[L] == 0.0) FAKTKF[L] = 1.0;
            A7 = 1.0/FAKTKF[L];
            A8 = UW0011(PKONDA[L],1) - 273.15;
            A9 = DKONDA[L]*GM;
            Z10 = A4*A5*GH/1000.0;
            Z1 = VISUM(PKONDA[L],Z2,-21);
            A10 = Z10*1000.0/A9 + Z1*GH;
            goto label1420;

        label1410:
            A1 = PKONDT[L]*GP;
            A2 = TKONDT[L];
            A3 = TKONAT[L];
            A4 = GKONDT[L]*GM;
            A5 = A3 - A2;
            A6 = DTKONT[L];
            if (FAKTKF[L] == 0.0) FAKTKF[L] = 1.0;
            A7 = 1.0/FAKTKF[L];
            A8 = UW0011(PKONDT[L],1) - 273.15;
            A9 = DKONDT[L]*GM;
            Z10 = A4*A5*GH/1000.0;
            Z1 = VISUM(PKONDT[L],Z2,-21);
            A10 = Z10*1000.0/A9 + Z1*GH;

        label1420:
            //WRITE(31,1020,rec=ISATZ)
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}",Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
            ISATZ = ISATZ + 1;
            //sw16.WriteLine("",1021) 
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}",ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            ISATZ = 24000000+KK;
            if (IDRUCK == 0) goto label1440;
            I = IHENDE + 1;
            
        label1430:
            I = I - 1;
            if (NTYP[I] != 7) goto label1440;
            if (NBLTG[I,1] == 0) goto label1430;
            if (N2[I] == 0) goto label1440;
            II = NBLTG[I,1];
            A1 = PLTG[II]*GP;
            A2 = VISUM(PLTG[II],ELTG[II],03);
            A5 = VISUM(PLTG[II],A2,00);
            A2 = UWA003("TCELS", A2);
            A3 = ELTG[II]*GH;
            A4 = GLTG[II]*GM;
            A6 = A4*A5;

        label1440:
            //WRITE(31,1020,rec=ISATZ) 
            sw31.WriteLine("{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));
            ISATZ = ISATZ + 1;
            sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));

            if (INENDE == IHENDE) goto label2000;
            L1 = IHENDE + 1;
            
            for(L = L1; L <= INENDE; L++)   //DO 1490 L=L1,INENDE
            {
                if (NTYP[L] != 6) continue;
                IX2 = NN2[L];
                A2 = UWA003("TCELS", TWAUS[L]);
                A3 = GLTG[IX2]*GM;
                A4 = 0.0;
                A5 = 0.0;
                IZ1 = 0;

            label1450:
                for(int N = L1; N <= INENDE; N++)   //DO 1470 N=L1,INENDE
                {
                    if (NN1[N] == 0 || NN1[N] == NN2[N]) continue;
                    if (NN1[N] != IX2) continue;
                    IX1 = NN1[N];
                    IX2 = NN2[N];
                    if (LTYP[N] != 2 && LTYP[N] != 21) goto label1460;
                    A4 = A4 + GLTG[IX1]*(ELTG[IX2]-ELTG[IX1]);
                    IZ1 = IZ1 + 1;
                    goto label1450;
                
                label1460:
                    if (NTYP[N] != 22) continue;
                    A1 = UWA003("TCELS", TWAUS[N]);
                    II = N1[N];
                    if (II == 0) goto label1450;
                    A5 = GLTG[II]*GM;
                    if (A5 < 0.05) A5 = 0.0;
                    goto label1450;
                }   //1470 CONTINUE

                A4 = A4*GQ/1000.0;
                ISATZ = 25000000+KK;
                //WRITE(31,1480,rec=ISATZ) 
                sw31.WriteLine("{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                ISATZ = ISATZ + 1;
                //1480 FORMAT( 5F11.4,I3)
                sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                //1481 FORMAT(1H0,I8.8,1X,5F11.4,I3)
                goto label1500;
            }   //1490 CONTINUE

        label1500:
            if (INENDE == IHENDE) goto label2000;
            IX10= 0;
            IZ1 = 0;
            IZ2 = 0;
            IZ3 = 0;
            IZ4 = 0;
            L1 = IHENDE + 1;
            
            for(J = L1; J <= INENDE; J++)   //DO 1610 J=L1,INENDE
            {
                if (NTYP[J] != 6) continue;
                IX9 = NN2[J];
                
            label1510:
                for(I = L1; I <= INENDE; I++)   //DO 1600 I=L1,INENDE
                {
                    if (NN1[I] == 0 || NN1[I] == NN2[I]) continue;
                    if (NN1[I] != IX9) continue;
                    IX8 = NN1[I];
                    IX9 = NN2[I];
                    if (LTYP[I] != 2 && LTYP[L] != 21) goto label1510;
                    if (N1[I] < 35 || N1[I] > 39) goto label1510;
                    IZ1 = IZ1 + 1;
                    II = N1[I];
                    A1 = 0.0;
                    A2 = 0.0;
                    A3 = 0.0;
                    A4 = 0.0;
                    A5 = 0.0;
                    A6 = 0.0;
                    A7 = 0.0;
                    A8 = 0.0;
                    A9 = 0.0;
                    A10 = 0.0;
                    Z10 = 0.0;
                    Z2 = 0.0;
                    Z3 = 0.0;
                    IZ5 = 0;
                    if (NTYP[I] == 20) goto label1515;
                    A1 = PLTG[II]*GP;
                    A2 = VISUM(PLTG[II],ELTG[II],03);
                    A5 = VISUM(PLTG[II],A2,00);
                    A2 = UWA003("TCELS", A2);
                    A3 = ELTG[II]*GH;
                    A4 = GLTG[II]*GM;
                    A6 = A5*A4;
                    A7 = DPLTG[II]*GP;
                    JJ = N2[I];
                    if (JJ > 0) A9 = VISUM(PLTG[JJ],ELTG[JJ],23);
                    A9 = UWA003("TCELS", A9);
                    A10 = GLTG[IX8]*(ELTG[IX9]-ELTG[IX8])*GQ/1000.0;
                    JJ = N2[I-1];
                    if (NTYP[I-1] == 8 && JJ > 0) Z10 = GLTG[JJ]*GM;

                label1515:
                    II = IM[II-34];
                    UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                    IZ2 = 16;
                    if (IX2 == 0) goto label1580;
                    IZ4 = IX3;
                    if (IX4 == ITTEND[IX3] && IX3 == NTTETB[IX2]) goto label1530;
                    if (LEND == 0) goto label1530;
                    
                    for(L = 1; L <= LEND; L++)      //DO 1520 L=1,LEND
                    {
                        if (IENTNH[L] == 0) continue;
                        IX5 = IENTNH[L]/100;
                        IX6 = IENTNH[L]-IENTNH[L]/100*100;
                        if (IX3 != IX5 || IX4 != IX6) continue;
                        IZ2 = L;
                        goto label1550;
                    }   //1520 CONTINUE
                    
                label1530:
                    UWA006("RDISC", 52,IX3);
                    UWA006("RDISC", 59,IX3);
                    UWA010(IX4,1);
                    IZ2 = 0;
                    if (IX3 == 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ2 = 12;
                    if (IX3 > 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ2 = 13;
                    if (KT7 == 3) IZ2 = 14;
                    if (KT7 == 6) IZ2 = 15;
                    if (IZ2 > 0) goto label1550;
                    IZ2 = 11;

                    if (NTYP[I] == 20) goto label1550;
                    UWA006("RDISC", 56,KT9);
                    if (TAFDP[KT14] <= 0.0) goto label1550;
                    UWA044(IX4,1);
                    Z1 = 0.0;
                    
                    for(L = 1; L <= 10; L++)    //DO 1540 L=1,10
                    {
                        IX5 = LABT[L];
                        if (IX5 == 0) continue;
                        if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
                    }   //1540 CONTINUE
                    Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
                    if (KT14 == 1) Z3 = HS1MIN[6];
                    if (KT14 == 2) Z3 = HS1MAX[6];
                    if (KT14 == 3) Z3 = HSZMIN[6];
                    if (KT14 == 4) Z3 = HSZMAX[6];
                    if (KT14 == 5) Z3 = TAKF1 [6];
                    if (Z3 == 0.0) Z3 = 1.0;
                    A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;
                    I1 = (KT9-1)*6+KT14;
                    IZ5= (int)NSTUTZ[I1];
                    Z2 = DSTUTZ[I1];

                label1550:
                    if (IX4 != ITTEND[IX3]) goto label1580;
                    if (IX3 != NTTETB[IX2]) goto label1560;
                    if (IX3 == NTTETB[IX2] && IX2 == 1) goto label1580;
                    LL = LVAR[IX2];
                    UWA008("UNPACK", ILTG[LL], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 == 0) goto label1580;
                    if (IX3 == NTTETB[IX2]) goto label1580;

                label1560:
                    IX3 = IX3 + 1;
                    UWA006("RDISC", 52,IX3);
                    UWA006("RDISC", 59,IX3);
                    II = ITTEND[IX3];
                    
                    for(LL = 1; LL <= II; LL++)     //DO 1570 LL = 1,II
                    {
                        UWA010(LL,1);
                        if (KT7 == 4) goto label1580;
                        if (KT7 != 5) continue;
                        IZ3 = 1;
                        goto label1580;
                    }   //1570 CONTINUE

                label1580:
                    IX10 = IX10 + 1;
                    ISATZ = 26000000+IX10*10000+KK;
                    //WRITE(31,1590,rec=ISATZ)
                    sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}",Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3),IZ5.ToString().PadLeft(3),Math.Round(Z2,4).ToString().PadLeft(11),Math.Round(Z3,4).ToString().PadLeft(11));
                    ISATZ = ISATZ + 1;
                    //1590 FORMAT( 11F11.4,5I3,2F11.4)
                    sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11} ", ISATZ,Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
                    sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}",IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3),IZ5.ToString().PadLeft(3),Math.Round(Z2,4).ToString().PadLeft(11),Math.Round(Z3,4).ToString().PadLeft(11));
                    //1591 FORMAT(1H0,I8.8,1X,11F11.4,/1X,5I3,2F11.4)

                    goto label1510;

                }   //1600 CONTINUE
                goto label1700;
            }   //1610 CONTINUE

        label1700:
            if (INENDE == IHENDE) goto label2000;
            IX10= 0;
            IZ1 = 0;
            IZ2 = 0;
            IZ3 = 0;
            IZ4 = 0;
            Z2 = 0.0;
            Z3 = 0.0;
            IZ5 = 0;
            L1 = IHENDE + 1;
            
            for(I = L1; I <= INENDE; I++)   //DO 1850 I=L1,INENDE
            {
                if (NTYP[I] != 10) continue;
                IZ1 = IZ1 + 1;
                II = N1[I];
                A1 = PLTG[II]*GP;
                A2 = VISUM(PLTG[II],ELTG[II],03);
                A5 = VISUM(PLTG[II],A2,00);
                A2 = UWA003("TCELS", A2);
                A3 = ELTG[II]*GH;
                A4 = GLTG[II]*GM;
                A6 = A5*A4;
                A7 = DPLTG[II]*GP;
                A8 = 0.0;
                JJ = N2[I];
                A9 = VISUM(PLTG[JJ],ELTG[JJ],23);
                A9 = UWA003("TCELS", A9);
                A10 = GLTG[II]*(ELTG[II]-ELTG[JJ])*GQ/1000.0;
                UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 > 0) goto label1740;

            label1710:
                for(L = L1; L <= INENDE; L++)   //DO 1730 L=L1,INENDE
                {
                    if (NN1[L] == 0 || NN1[L] == NN2[L]) continue;
                    if (NN2[L] != II && N2[L] != II) continue;
                    II = NN1[L];
                    IZ7= NBLTG[L,1];
                    UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 > 0) goto label1740;
                    goto label1710;
                }   //1730 CONTINUE
                IZ2 = 16;
                if (IX2 == 0) goto label1810;
                
            label1740:
                IZ4 = IX3;
                if (LEND == 0) goto label1760;
                
                for(L = 1; L <= LEND; L++)  //DO 1750 L=1,LEND
                {
                    if (IENTNH[L] == 0) continue;
                    IX5 = IENTNH[L]/100;
                    IX6 = IENTNH[L]-IENTNH[L]/100*100;
                    if (IX3 != IX5 || IX4 != IX6) continue;
                    IZ2 = L;
                    goto label1780;
                }   //1750 CONTINUE
                
            label1760:
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA010(IX4,1);
                IZ2 = 0;
                if (IX3 == 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ2 = 12;
                if (IX3 > 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ2 = 13;
                if (KT7 == 3) IZ2 = 14;
                if (KT7 == 6) IZ2 = 15;
                if (IZ2 > 0) goto label1780;
                IZ2 = 11;

            label1765:
                UWA006("RDISC", 56,KT9);
                if (TAFDP[KT14] <= 0.0) goto label1780;
                UWA044(IX4,1);
                Z1 = 0.0;
                
                for(L = 1; L <= 10; L++)    //DO 1770 L=1,10
                {
                    IX5 = LABT[L];
                    if (IX5 == 0) continue;
                    if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
                }   //1770 CONTINUE
                Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
                if (KT14 == 1) Z3 = HS1MIN[6];
                if (KT14 == 2) Z3 = HS1MAX[6];
                if (KT14 == 3) Z3 = HSZMIN[6];
                if (KT14 == 4) Z3 = HSZMAX[6];
                if (KT14 == 5) Z3 = TAKF1 [6];
                if (Z3 == 0.0) Z3 = 1.0;
                A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;
                I1 = (KT9-1)*6+KT14;
                IZ5= IZ5 + (int)NSTUTZ[I1];
                Z2 = DSTUTZ[I1];
                if (IZ7  ==  0) goto label1780;
                UWA008("UNPACK", ILTG[IZ7], ref IX1, ref IX2, ref IX3, ref IX4);
                IZ7 = 0;
                
                if (IX3  >  0) //then
                {
                    UWA006("RDISC", 52,IX3);
                    UWA006("RDISC", 59,IX3);
                    UWA010(IX4,1);
                    goto label1765;
                }   //ENDIF

            label1780:
                if (IX4 != ITTEND[IX3]) goto label1810;
                if (IX3 != NTTETB[IX2]) goto label1790;
                if (IX3 == NTTETB[IX2] && IX2 == 1) goto label1810;
                LL = LVAR[IX2];
                UWA008("UNPACK", ILTG[LL], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 == 0) goto label1810;
                if (IX3 == NTTETB[IX2]) goto label1810;

            label1790:
                IX3 = IX3 + 1;
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                II = ITTEND[IX3];
                
                for(LL = 1; LL <= II; LL++)     //DO 1800 LL = 1,II
                {
                    UWA010(LL,1);
                    if (KT7 == 4) goto label1810;
                    if (KT7 != 5) continue;
                    IZ3 = 1;
                    goto label1810;
                }   //1800 CONTINUE

            label1810:
                IX10 = IX10 + 1;
                ISATZ = 27000000+IX10*10000+KK;
                //WRITE(31,1820,rec=ISATZ)
                sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3),IZ5.ToString().PadLeft(3),Math.Round(Z2,4).ToString().PadLeft(11),Math.Round(Z3,4).ToString().PadLeft(11));
                ISATZ = ISATZ + 1;
                //1820 FORMAT( 10F11.4,5I3,2F11.4)
                sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}",IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3),IZ5.ToString().PadLeft(3),Math.Round(Z2,4).ToString().PadLeft(11),Math.Round(Z3,4).ToString().PadLeft(11));
                
                //1821 FORMAT(1H0,I8.8,1X,10F11.4,/1X,5I3,2F11.4)
            }   //1850 CONTINUE

            IX10 = 0;
            L1 = IHENDE + 1;
            
            for(I = L1; I <= INENDE; I++)   //DO 1950 I=L1,INENDE
            {
                if (LTYP[I] != 19) continue;
                A1 = 0.0;
                A2 = 0.0;
                A3 = 0.0;
                A4 = 0.0;
                A5 = 0.0;
                A6 = 0.0;
                A7 = 0.0;
                A8 = 0.0;
                Z2 = 0.0;
                Z3 = 0.0;
                IZ1 = 0;
                IZ2 = 0;
                if (NTYP[I] == 20) goto label1920;
                if (N1[I] == 0) goto label1920;
                II = N1[I];
                A1 = PLTG[II]*GP;
                A2 = VISUM(PLTG[II],ELTG[II],03);
                A5 = VISUM(PLTG[II],A2,00);
                A2 = UWA003("TCELS", A2);
                A3 = ELTG[II]*GH;
                A4 = GLTG[II]*GM;
                A6 = A4*A5;
                A7 = DPLTG[II]*GP;
                A8 = 0.0;
                IZ1 = 15;
                UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX3 > 0) goto label1880;
                IZ1 = II;
                
            label1860:
                for(L = L1; L <= INENDE; L++)   //DO 1870 L=L1,INENDE
                {
                    if (NN2[L] != IZ1 && N2[L] != IZ1) continue;
                    if (NN1[L] == IZ1) continue;
                    IZ1 = NN1[L];
                    UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX3, ref IX3, ref IX4);
                    if (IX3 > 0) goto label1880;
                    goto label1860;
                }   //1870 CONTINUE
                goto label1920;

            label1880:
                if (LEND == 0) goto label1900;
                for(L = 1; L <= LEND; L++)  //DO 1890 L=1,LEND
                {
                    if (IENTNH[L] == 0) continue;
                    IZ3 = IENTNH[L]/100;
                    IZ4 = IENTNH[L]-IENTNH[L]/100*100;
                    if (IX3 != IZ3 || IX4 != IZ4) continue;
                    IZ1 = L;
                    goto label1920;
                }   //1890 CONTINUE
            label1900:
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA010(IX4,1);
                IZ1 = 0;
                if (IX3 == 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ1 = 11;
                if (IX3 > 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ1 = 12;
                if (KT7 == 3) IZ1 = 13;
                if (KT7 == 6) IZ1 = 14;
                if (IZ1 > 0) goto label1920;

                UWA006("RDISC", 56,KT9);
                if (TAFDP[KT14] <= 0.0) goto label1920;
                UWA044(IX4,1);
                Z1 = 0.0;
                
                for(L = 1; L <= 10; L++)    //DO 1910 L=1,10
                {
                    IX5 = LABT[L];
                    if (IX5 == 0) continue;
                    if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
                }   //1910 CONTINUE
                Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
                if (KT14 == 1) Z3 = HS1MIN[6];
                if (KT14 == 2) Z3 = HS1MAX[6];
                if (KT14 == 3) Z3 = HSZMIN[6];
                if (KT14 == 4) Z3 = HSZMAX[6];
                if (KT14 == 5) Z3 = TAKF1 [6];
                if (Z3 == 0.0) Z3 = 1.0;
                A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;
                I1 = (KT9-1)*6+KT14;
                IZ2= (int)NSTUTZ[I1];
                Z2 = DSTUTZ[I1];

            label1920:
                IX10 = IX10 + 1;
                ISATZ = 28000000+IX10*10000+KK;
                //WRITE(31,1930,rec=ISATZ) 
                sw31.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),Math.Round(Z2,4).ToString().PadLeft(11),Math.Round(Z3,4).ToString().PadLeft(11));
                ISATZ = ISATZ + 1;
                //1930 FORMAT( 8F11.4,2I3,2F11.4)
                sw16.WriteLine("0{0} {1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ", ISATZ.ToString().PadLeft(8),Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),Math.Round(Z2,4).ToString().PadLeft(11),Math.Round(Z3,4).ToString().PadLeft(11));
                //1931 FORMAT(1H0,I8.8,1X,8F11.4,2I3,2F11.4)
            }   //1950 CONTINUE
        label2000:
            return;
        }   //END
                
        
        static void UWA042()
        {
            //ENTRY PRINTQ
            //LOGICAL QOFFEN,QACPSI,QUPOCO
            int[] IENTNH = new int[11];
            //CHARACTER * 30 UEBER1
            //CHARACTER * 40 UEBER2, UEBER3
            //CHARACTER * 20 BESCHR
            //CHARACTER * 10 A6C, TURBM
            //CHARACTER * 80 TITEL
            //CHARACTER * 130 TEXT
            //CHARACTER * 6 NRPROJ
            //CHARACTER * 5 NUMMER

            //COMMON /KONDER/ GKONDA[4], GKONDT[4], TKONDA[4], TKONDT[4] ,
            //1 PKONDA[4], PKONDT[4], DTKONA[4], DTKONT[4] ,
            //2 TKONAA[4], TKONAT[4], DKONDA[4], DKONDT[4]
            //COMMON /KONKEN/ KTFAC[4],IKONDR[4],NKPARA[4]
            //COMMON /PUMDRU/ DELTPA(60),H0REGA[5],WD0A[5],WW0A[5],Q0A[5],
            //1 HOA[5],PKESS,ETANUA[5],DREFAK,KART[5]
            //COMMON /HEIZEN/ DPHEIZ[5],IM[5]
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /MODTYP/ TURBM(4,4)
            //COMMON /AUSKOPI/ NSSV(7),NDSSV(7),NEINST(7),NDEINST(7),NMath.AbsT(7),
            //1 NDMath.AbsT(7),LPAR(7),NSTUTZ(90),DSTUTZ(90)
            //COMMON /AUSKOPR/ FKOND[4],FVERSCH[4],RZAHL[4],CKOND[4],PELGEH(7)
            //COMMON /DRUTUR/ ETAWB(15),ETABA(7),WABB(7),CAXT[4],NZTROM(15),
            //1 PSIGMT(15,6)
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /KONDFL/ FAKTKF[4]
            //COMMON /ETAWTS/ WTSOLL,FETAE(7),FBEWE(7)
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /LVART/ LVAR[4],PVAR[4],HVAR[4]
            //C COMMON /UEBER/ TITEL(8),TEXT(13),DAT,ZEIT
            //COMMON /UEBER/ TITEL ,TEXT ,ITASK(20)
            //COMMON /FRANKF/ QOFFEN,QACPSI,QUPOCO,IWVB
            //COMMON /LEISTG/ IELEKT,PELEKT
            //COMMON /SCHRFT/ IP1,IP2,IP3,UEBER1 ,UEBER2 ,UEBER3 ,
            //1 IPL(160),BESCHR(160) ,NUMMER,NINDEX,KDRPL,
            //1 KTEXT,NRPROJ,NAME
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NTGAS
            int L = 0, L1 = 0, L2 = 0, L3 = 0, L4 = 0, N = 0, LL = 0, KT9N = 0, KT14N = 0, LEND = 0;
            double B = 859.845, GH = 4.1868, GP = 0.980665, GM = 1.0/3.6, GQ = 4.1868/3.6, IY10 = 0, KT9VOR = 0,
                KT14VOR = 0, SUMB = 0;

            if (K > 1) goto label1000;

            string A6C = "KRAWAL85F1";
            IZ1 = 0;
            if (QOFFEN) IZ1 = 1;
            if (QACPSI) IZ1 = 2;
            if (QUPOCO) IZ1 = 3;

            sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}", UEBER1,NRPROJ.PadLeft(6),NAME.PadLeft(4),IZ1,A6C,ITASK[11].ToString().PadLeft(4),
                ITASK[12].ToString().PadLeft(4), ITASK[14].ToString().PadLeft(4), ITASK[15].ToString().PadLeft(4));
            //20 FORMAT(A,A6,A4,I1,A,4A4)
            sw16.WriteLine("0{0}{1}{2}{3}{4}  {5}{6}  {7}{8}", UEBER1, NRPROJ.PadLeft(6), NAME.PadLeft(4), IZ1, A6C, ITASK[11].ToString().PadLeft(4), ITASK[12].ToString().PadLeft(4),
                ITASK[14].ToString().PadLeft(4), ITASK[15].ToString().PadLeft(4));
            //21 FORMAT(1H0,A,A6,A4,I1,A,2X,2A4,2X,2A4)

            IZ1 = LLTG[14];
            if (IZ1 == 1 && IVERD[1] > 0) IZ1 = 5;
            if (IZ1 == 1 && IDRUCK > 0) IZ1 = 6;

            IZ3 = ANZDTT;
            IZ2 = 1;
            if (ANZTRB == 1) goto label200;
            
            for(L = 2; L <= ANZTRB; L++)    //DO 100 L=2,ANZTRB
            {
                L1 = NTTETB[L-1];
                L2 = NTTETB[L];
                L3 = L2 - L1;
                UWA006("RDISC", 52,L2);
                UWA006("RDISC", 59,L2);
                II = ITTEND[L2];
                UWA010(II,1);
                UWA006("RDISC", 53,KT9);
                
                if (FLUT > 1) L3 = L3 - 1;
                if (NITRE[L] == 8 || NITRE[L] == 9 || NITRE[L] == 7)
                    IZ3 = IZ3 - L3;
                if (NITRE[L] == 8 || NITRE[L] == 9 || NITRE[L] == 7)
                    continue;
                IZ2 = IZ2 + 1;
            }   //100 CONTINUE

        label200:
            IZ4 = 0;
            IZ5 = 0;
            IZ6 = 0;
            IZ7 = 0;
            IZ9 = 0;
            IX5 = 0;
            
            for(L = 1; L <= IHENDE; I++)    //DO 210 L=1,IHENDE
            {
                if (IX5 == 0 && (LTYP[L] == 2 || LTYP[L] == 21)) IZ6 = IZ6 + 1;
                if (IX5 == 1 && (LTYP[L] == 2 || LTYP[L] == 21)) IZ5 = IZ5 + 1;
                if (LTYP[L] == 1 || LTYP[L] == 2 || LTYP[L] == 21) IZ4 = IZ4 + 1;
                if (LTYP[L] == 1) IZ7 = KENTG;
                if (LTYP[L] == 1) IX5 = 1;
            }
            L = IHENDE + 1;
            IZ8 = 1;
            IX6 = 0;
            
        label220:
            L = L - 1;
            if (L <= 1) goto label300;
            if (NTYP[L] != 3) goto label220;
            IX6 = IX6 + 1;
            IZ8 = KART[IX6];
            if (N1[L] > 0) IZ8 = 0;

        label300:
            JJ = NTTETB[1];
            if (JJ == 1) goto label330;
            L1 = JJ - 1;
            
            for(L = 1; L <= L1; L++)    //DO 320 L=1,L1
            {
                UWA006("RDISC", 52,L);
                I = ITTEND[L];
                UWA044(I,1);
                
                for(N = 1; N <= 10; N++)    //DO 310 N=1,10
                    if (LABT[N] > 40 && LABT[N] < 47) 
                        goto label320;

                A1 = E2T[I,K];
                UWA006("RDISC", 52,L+1);
                A2 = E1T[1,K];
                
                if (A2 > A1+100.0)
                    IZ9 = IZ9 + 1;

            label320:
                ;   //CONTINUE
            }

        label330:
            IZ10 = 0;
            IX1 = 0;
            IX2 = 0;
            IX3 = 0;
            IX4 = 0;
            IX5 = 0;
            
            if (IHENDE == INENDE) goto label600;
            L1 = IHENDE + 1;
            
            for(L = L1; L <= INENDE; L++)   //DO 340 L=L1,INENDE
                if (NTYP[L] == 19)
                    IZ10 = IZ10 + 1;

            for(L = L1; L <= INENDE; L++)   //DO 410 L=L1,INENDE
            {
                if (NTYP[L] != 6) continue;
                L2 = L;
                IX5 = NN2[L];
                
            label400:
                L2 = L2 + 1;
                if (L2 > INENDE) continue;
                if (NN1[L2] != IX5) goto label400;
                IX5 = NN2[L2];
                if (LTYP[L2] != 2 && LTYP[L2] != 21) goto label400;
                if (N1[L2] < 35 || N1[L2] > 39) goto label400;
                IX1 = IX1 + 1;
                IX6 = N1[L2];
                IENTNH[IX1] = IX6;
                UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                if (IX8 > 0) goto label400;
                IX6 = IX6 - 34;
                IX6 = IM[IX6];
                IENTNH[IX1] = IX6;
                goto label400;
            }   //410 CONTINUE
            if (IX1 == 0) goto label450;

            for(N = 1; N <= IX1; N++)   //DO 440 N=1,IX1
            {
                if (IENTNH[N] == 0)     continue;
                IX6 = IENTNH[N];
                UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                if (IX10 != ITTEND[IX9])    continue;
                if (IX9 != NTTETB[IX8])     goto label420;
                if (IX8 == 1)   continue;
                L = LVAR[IX8];
                if (NITRE[IX8] != 8 && NITRE[IX8] != 9)     continue;
                UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                if (L3 == NTTETB[L2])   continue;
                IX9 = L3;

            label420:
                JJ = IX9 + 1;
                UWA006("RDISC", 52,JJ);
                UWA006("RDISC", 59,JJ);
                I = ITTEND[JJ];
                
                for(II = 1; II <= I; II++)      //DO 430 II=1,I
                {
                    UWA010(II,1);
                    if (KT7 == 5) IX2 = IX2 + 1;
                    if (KT7 == 5 && IX8 > 1) IX3 = 1;
                    if (KT7 == 5 || KT7 == 4) break;
                }   //430 CONTINUE
            }   //440 CONTINUE

        label450:
            IX4 = 0;
            IX5 = 0;
            L1 = IHENDE + 1;
            
            for(L = L1; L <= INENDE; L++)   //DO 490 L=L1,INENDE
            {
                if (NTYP[L] != 10) continue;
                IX6 = N1[L];
                UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                if (IX8 > 0) goto label480;
                
            label460:
                for(N = L1; N <= INENDE; N++)   //DO 470 N = L1,INENDE
                {
                    if (NTYP[N] == 10 || NTYP[N] == 17) continue;
                    if (NN2[N] == 0 || NN2[N] == NN1[N]) continue;
                    if (IX6 != NN2[N] && IX6 != N2[N]) continue;
                    IX6 = NN1[N];
                    UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                    if (IX8 > 0) goto label480;
                    goto label460;
                }   //470 CONTINUE
                continue;
                
            label480:
                IX4 = IX4 + 1;
                IENTNH[IX4] = IX6;
            }   //490 CONTINUE
            if (IX4 == 0) goto label600;

            for(N = 1; N <= IX4; N++)   //DO 520 N=1,IX4
            {
                if (IENTNH[N] == 0) continue;
                IX6 = IENTNH[N];
                UWA008("UNPACK", ILTG[IX6], ref IX7, ref IX8, ref IX9, ref IX10);
                if (IX10 != ITTEND[IX9]) continue;
                if (IX9 != NTTETB[IX8]) goto label500;
                if (IX8 == 1) continue;
                L = LVAR[IX8];
                if (NITRE[IX8] != 8 && NITRE[IX8] != 9) continue;
                UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                if (L3 == NTTETB[L2]) continue;
                IX9 = L3;

            label500:
                JJ = IX9 + 1;
                UWA006("RDISC", 52,JJ);
                UWA006("RDISC", 59,JJ);
                I = ITTEND[JJ];
                for(II = 1; II <= I; II++)  //DO 510 II=1,I
                {
                    UWA010(II,1);
                    if (KT7 == 5) IX5 = IX5 + 1;
                    if (KT7 == 5 || KT7 == 4) break;
                }   //510 CONTINUE
            }   //520 CONTINUE

        label600:
            IX6 = 0;
            UWA006("RDISC", 58,1);
            
            for(L = 1; L <= ANZTRB; L++)    //DO 610 L=1,ANZTRB
            {
                if (NITRE[L] == 7) continue;
                if (EDAROR[L] <= 0.0) continue;
                IX6 = IX6 + 1;
            }   //610 CONTINUE

            sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15} ", IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),
                IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3),IZ5.ToString().PadLeft(3),IZ6.ToString().PadLeft(3),IZ7.ToString().PadLeft(3),
                IZ8.ToString().PadLeft(3),IZ9.ToString().PadLeft(3),IZ10.ToString().PadLeft(3),IX1.ToString().PadLeft(3),IX2.ToString().PadLeft(3),
                IX3.ToString().PadLeft(3),IX4.ToString().PadLeft(3),IX5.ToString().PadLeft(3),IX6.ToString().PadLeft(3));
            //620 FORMAT(16I3)
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15} ", IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),
                IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3), IZ5.ToString().PadLeft(3),IZ6.ToString().PadLeft(3),IZ7.ToString().PadLeft(3),
                IZ8.ToString().PadLeft(3),IZ9.ToString().PadLeft(3),IZ10.ToString().PadLeft(3),IX1.ToString().PadLeft(3),IX2.ToString().PadLeft(3),
                IX3.ToString().PadLeft(3), IX4.ToString().PadLeft(3),IX5.ToString().PadLeft(3),IX6.ToString().PadLeft(3));
            //621 FORMAT(1H0,16I3)

            IZ2 = 1;
            IZ1 = 0;
            IZ3 = NTTETB[1];
            
            for(L = 1; L <= IZ3; L++)   //DO 630 L=1,IZ3
            {
                IZ1 = IZ1 + 1;
                IENTNH[IZ1] = L;
            }

            UWA006("RDISC", 52,IZ1);
            I = ITTEND[IZ1];
            A1 = PT[I,K];
            if (A1 > 0.2) IZ2 = 9;
            if (IZ9 > 0) IZ2 = IZ2 + 1;
            if (IX1 > 0) IZ2 = IZ2 + 2;
            if (IX1 > 0 && IX3 > 0) IZ2 = IZ2 + 2;
            if (IX1 == 0 && IX5 > 0) IZ2 = IZ2 + 6;

            if (ANZTRB == 1) goto label670;
            
            for(J = 2; J <= ANZTRB; J++)    //DO 660 J=2,ANZTRB
            {
                L2 = J;

            label650:
                if (NITRE[L2] != 8 && NITRE[L2] != 9) continue;
                L = LVAR[L2];
                UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                if (L2 != 1) goto label650;

                L = NTTETB[J];
                if (STZNDT[J] == 0) continue;
                UWA006("RDISC", 52,L);
                UWA006("RDISC", 59,L);
                I = ITTEND[L];
                UWA010(I,1);
                UWA006("RDISC", 53,KT9);
                if (FLUT > 1) IZ1 = IZ1 + 1;
                if (FLUT > 1) IENTNH[IZ1] = L;
            }   //660 CONTINUE

        label670:
            sw32.WriteLine("{0}{1}", IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3));
            sw16.WriteLine("{0}{1}", IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3));
            int IG = IZ1;
            
            for(N = 1; N <= IG; N++)    //DO 920 N=1,IG
            {
                J = IENTNH[N];
                LPAR[J] = 0;
                UWA006("RDISC", 52,J);
                UWA006("RDISC", 59,J);
                IZ1 = (int)(VENDUR[1]);  //IFIX
                IZ2 = (int)(VENDUR[2]);  //IFIX
                IZ3 = (int)(VENDUR[3]);  //IFIX
                IZ4 = (int)(VENDUR[4]);  //IFIX
                IZ5 = (int)(VENDUR[5]);  //IFIX
                IZ6 = (int)NSSV[J];
                IZ7 = (int)NDSSV[J];
                IZ8 = (int)NEINST[J];
                IZ9 = (int)NDEINST[J];
                IZ10 = (int)NABST[J];
                IY10 = NDABST[J];

                IX1 = 1;
                IX2 = 1;
                IX3 = 0;
                IX4 = 0;
                IX5 = 0;
                IX6 = 0;
                IX7 = 0;
                IX8 = 0;
                IX9 = 0;
                IX10 = 0;
                KT9VOR = 0;
                KT14VOR = 0;
                II = ITTEND[J];
                
                for(I = 1; I <= II; I++)    //DO 720 I=1,II
                {
                    UWA010(I,1);
                    if (KT5 == 0) goto label710;
                    if (KT7 != 4 && KT7 != 9) goto label710;
                    UWA044(I,1);
                    
                    for(L = 1; L <= 10; L++)    //DO 700 L=1,10
                    {
                        if (LABT[L] == 0) continue;
                        if (LABT[L] > 40) continue;
                        IX7 = IX7 + 1;
                        IX8 = IX8 + 1;
                        goto label710;
                    }   //700 CONTINUE

                label710:
                    if (KT7 == 5) IX1 = 2;
                    if (KT7 == 3) IX1 = 3;
                    if (KT7 == 3) IX10 = NVENT[J];
                    if (KT7 != 4 && KT7 != 9) continue;
                    IX3 = IX3 + 1;
                    if (KT9 != KT9VOR) KT14VOR = 0;
                    if (KT14 != KT14VOR) IX5 = IX5 + 1;
                    KT14VOR = KT14;
                    KT9VOR = KT9;
                    if (I != II && KT7 != 9) continue;
                    UWA006("RDISC", 53,KT9);
                    IX2 = FLUT;
                }   //720 CONTINUE

                if (ANZTRB == 1) goto label800;

                for(JJ = 2; JJ <= ANZTRB; JJ++)     //DO 790 JJ=2,ANZTRB
                {
                    if (NITRE[JJ] != 8 && NITRE[JJ] != 9) continue;
                    L = LVAR[JJ];
                    UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                    if (L2 != 1) continue;
                    LL = NTTETB[JJ-1] + 1;
                    if (L3 == J) goto label730;
                    if (L3 == NTTETB[1]) continue;
                    if (NTTETB[JJ]-NTTETB[JJ-1] != 2) continue;
                    LL = LL + 1;
                    L = L + 100;
                    UWA008("UNPACK", ILTG[L], ref L1, ref L2, ref L3, ref L4);
                    if (L2 != 1) continue;
                    if (L3 != J) continue;
                    
                label730:
                    L = LL;
                    UWA006("RDISC", 52,L);
                    UWA006("RDISC", 59,L);
                    II = ITTEND[L];
                    UWA010(II,1);
                    UWA006("RDISC", 53,KT9);
                    if (FLUT > 1) goto label800;
                    LPAR[J] = L;
                    IX2 = IX2 + 1;
                    KT9VOR = 0;
                    KT14VOR = 0;

                    for(I = 1; I <= II; I++)    //DO 780 I=1,II
                    {
                        UWA010(I,1);
                        if (KT5 == 0) goto label770;
                        if (KT7 != 4 && KT7 != 9) continue;
                        UWA044(I,1);
                        
                        for(L = 1; L <= 10; L++)    //DO 760 L=1,10
                        {
                            if (LABT[L] == 0) continue;
                            if (LABT[L] > 40) continue;
                            IX9 = IX9 + 1;
                            
                            for(int M = IHENDE; M <= INENDE; M++)   //DO 750 M=IHENDE,INENDE
                                if (LABT[L] == NBLTG[M,1]) 
                                    goto label760;

                            IX7 = IX7 + 1;
                            goto label770;
                        label760:   ;   // CONTINUE
                        }

                    label770:
                        if (KT7 != 4 && KT7 != 9) continue;
                        IX4 = IX4 + 1;
                        if (KT9 != KT9VOR) KT14VOR = 0;
                        if (KT14 != KT14VOR) IX6 = IX6 + 1;
                        KT9VOR = KT9;
                        KT14VOR = KT14;
                    }   //780 CONTINUE
                    goto label800;
                }   //790 CONTINUE
                
            label800:
                for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 820 JJ=1,ANZTRB
                {
                    L1 = 1;
                    if (JJ > 1) L1 = NTTETB[JJ-1] + 1;
                    L2 = NTTETB[JJ];
                    L3 = 0;
                    
                    for(L = L1; L <= L2; L++)   //DO 810 L = L1,L2
                    {
                        L3 = L3 + 1;
                        if (L != J) continue;
                        if (L == 2 && L2 == 3 && L != L2) L3 = 3;
                        if (L == L2 && L2 == 3 && STZNDT[JJ] > 0.0) L3 = 4;
                        A6C = TURBM[JJ,L3];
                        goto label830;
                    }   //810 CONTINUE
                }   //820 CONTINUE

            label830:
                sw32.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}{21} ", A6C.PadLeft(10),IX1.ToString().PadLeft(2),
                IX2.ToString().PadLeft(2),IX3.ToString().PadLeft(2),IX4.ToString().PadLeft(2),IX5.ToString().PadLeft(2), IX6.ToString().PadLeft(2),
                IX7.ToString().PadLeft(2),IX8.ToString().PadLeft(2),IX9.ToString().PadLeft(2),IX10.ToString().PadLeft(2),
                IZ1.ToString().PadLeft(4),IZ2.ToString().PadLeft(4),IZ3.ToString().PadLeft(4),IZ4.ToString().PadLeft(4),IZ5.ToString().PadLeft(4),
                IZ6,IZ7.ToString().PadLeft(4),IZ8,IZ9.ToString().PadLeft(4),IZ10,IY10.ToString().PadLeft(4));
                //840 FORMAT(A10,10I2,5I4,3(I1,I4));

                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}{21} ", A6C.PadLeft(10),IX1.ToString().PadLeft(2),
                IX2.ToString().PadLeft(2),IX3.ToString().PadLeft(2),IX4.ToString().PadLeft(2),IX5.ToString().PadLeft(2), IX6.ToString().PadLeft(2),
                IX7.ToString().PadLeft(2),IX8.ToString().PadLeft(2),IX9.ToString().PadLeft(2),IX10.ToString().PadLeft(2),
                IZ1.ToString().PadLeft(4),IZ2.ToString().PadLeft(4),IZ3.ToString().PadLeft(4),IZ4.ToString().PadLeft(4),IZ5.ToString().PadLeft(4),
                IZ6,IZ7.ToString().PadLeft(4),IZ8,IZ9.ToString().PadLeft(4),IZ10,IY10.ToString().PadLeft(4));
                //841 FORMAT(1H0,A10,10I2,5I4,3(I1,I4));

            label850:
                UWA006("RDISC", 52,J);
                UWA006("RDISC", 59,J);
                KT9VOR = 0;
                KT14VOR = 0;
                A1 = 0.0;
                A2 = 0.0;
                A3 = 0.0;
                A4 = 0.0;
                A5 = 0.0;
                Z1 = 0.0;
                Z2 = 0.0;
                Z3 = 0.0;
                Z4 = 0.0;
                Z5 = 0.0;
                Z6 = 0.0;
                Z7 = 0.0;
                Z8 = 0.0;
                II = ITTEND[J];
                IZ1 = 0;

                for(I = 1; I <= II; I++)    //DO 910 I=1,II
                {
                    UWA010(I,1);
                    if (KT7 != 4 && KT7 != 8 && KT7 != 9) continue;
                    if (KT9 != KT9VOR) KT14VOR = 0;
                    if (KT14 == KT14VOR) goto label860;

                    UWA006("RDISC", 56,KT9);
                    IZ1 = 0;
                    if (KT7 != 8) IZ1 = 1;
                    KT9VOR = KT9;
                    KT14VOR = KT14;
                    if (KT6 == NTTETB[KT10] && STZNDT[KT10] > 0.0) goto label870;
                    A1 = STFDI[I];
                    A2 = LS[I];
                    A3 = OEFFNG[I];
                    A4 = PT[I-1,K]*GP;
                    A5 = UWA003("TCELS", T1T[I]);
                    A10 = BRTLE[I] + BRTLA[I];
                    if (KT7 != 4) A10 = A10*0.5;
                    SUMB = A10;
                    goto label870;

                label860:
                    if (KT7 != 8) IZ1 = IZ1 + 1;
                    if (KT6 == NTTETB[KT10] && STZNDT[KT10] > 0.0) goto label870;
                    A10 = BRTLE[I]+BRTLA[I];
                    if (KT7 != 4) A10 = A10*0.5;
                    SUMB = SUMB + A10;

                label870:
                    if (I == II) goto label880;
                    KT9N = UWA011(I+1,9);
                    KT14N = UWA011(I+1,14);
                    if (KT9N == KT9 && KT14N == KT14) continue;

                label880:
                    if (KT6 == NTTETB[KT10] && STZNDT[KT10] > 0.0) goto label890;
                    Z1 = STFDI[I];
                    Z2 = LS[I];
                    Z3 = OEFFNG[I];
                    Z4 = PT[I,K]*GP;
                    Z5 = UWA003("TCELS", T2T[I]);
                    Z6 = G[I,K]*GM;
                    Z7 = SUMB/(IZ1)*0.5;
                    Z8 = TASAX[KT14];

                label890:
                    sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}", IZ1.ToString().PadLeft(3),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(A2,2).ToString().PadLeft(7),
                        Math.Round(A3,4).ToString().PadLeft(7),Math.Round(A4,4).ToString().PadLeft(9),Math.Round(A5,2).ToString().PadLeft(7),Math.Round(Z1,1).ToString().PadLeft(7),Math.Round(Z2,2).ToString().PadLeft(7),
                        Math.Round(Z3,4).ToString().PadLeft(7),Math.Round(Z4,4).ToString().PadLeft(7),Math.Round(Z5,2).ToString().PadLeft(7),Math.Round(Z6,4).ToString().PadLeft(11),Math.Round(Z7,2).ToString().PadLeft(7),Math.Round(Z8,2).ToString().PadLeft(7));
                    //900 FORMAT(I3,2(F7.1,F7.2,F7.4,F9.4,F7.2),F11.4,2F7.2)

                    sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}", IZ1.ToString().PadLeft(3),Math.Round(A1,1).ToString().PadLeft(7),Math.Round(A2,2).ToString().PadLeft(7),
                        Math.Round(A3,4).ToString().PadLeft(7),Math.Round(A4,4).ToString().PadLeft(9),Math.Round(A5,2).ToString().PadLeft(7),Math.Round(Z1,1).ToString().PadLeft(7),Math.Round(Z2,2).ToString().PadLeft(7),
                        Math.Round(Z3,4).ToString().PadLeft(7),Math.Round(Z4,4).ToString().PadLeft(7),Math.Round(Z5,2).ToString().PadLeft(7),Math.Round(Z6,4).ToString().PadLeft(11),Math.Round(Z7,2).ToString().PadLeft(7),Math.Round(Z8,2).ToString().PadLeft(7));
                    //901 FORMAT(1H0,I3,2(F7.1,F7.2,F7.4,F9.4,F7.2),F11.4,2F7.2);
                }    //910 CONTINUE
                if (LPAR[J] == 0) goto label920;
                J = LPAR[J];
                goto label850;
            label920:   ;   // CONTINUE
            }

            UWA006("RDISC", 58,1);

            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 940 JJ=1,ANZTRB
            {
                if (NITRE[JJ] == 7) continue;
                if (EDAROR[JJ] <= 0.0) continue;
                A1 = FKOND[JJ];
                A2 = EDAROR[JJ];
                A3 = EDSROR[JJ];
                A4 = ELROR[JJ];
                A5 = CKOND[JJ];
                IZ2 = (int)(ZFLUTE[JJ]);
                IZ3 = (int)(ZKONDE[JJ]);
                IZ4 = (int)KTFAC[JJ];
                IZ5 = 0;
                if (NKPARA[JJ] > 0) IZ5 = 1;
                IZ1 = (int)(RZAHL[JJ]);
                A7 = FWERST[JJ];
                A8 = FVERSCH[JJ];
                IX1 = (int)NTYPKO;
                A6C = " ";
                if (NTYPKO == 1) A6C = "CUZN28 ";
                if (NTYPKO == 2) A6C = "CUZN20 ";
                if (NTYPKO == 3) A6C = "CUNI10 ";
                if (NTYPKO == 4) A6C = "CUNI30 ";
                if (NTYPKO == 5) A6C = "CSTAHL ";
                if (NTYPKO == 6) A6C = "CRNI ";
                if (NTYPKO == 7) A6C = "TITAN ";
                if (NTYPKO == 8) A6C = "CRNIMO ";

                sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ",Math.Round(A1,1).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(6),Math.Round(A3,3).ToString().PadLeft(6),
                    Math.Round(A4,3).ToString().PadLeft(6),Math.Round(A5,3).ToString().PadLeft(6),IZ1.ToString().PadLeft(7),IZ2.ToString().PadLeft(2),IZ3.ToString().PadLeft(2),
                    IZ4.ToString().PadLeft(2),IZ5.ToString().PadLeft(2),A6C,Math.Round(A7,4).ToString().PadLeft(7),Math.Round(A8,4).ToString().PadLeft(7));
                //930 FORMAT(F10.1,4F6.3,I7,4I2,A ,2F7.4)
                //sw16.WriteLine("",931) A1,A2,A3,A4,A5,IZ1,IZ2,IZ3,IZ4,IZ5,A6C,A7,A8
                //931 FORMAT(1H0,F10.1,4F6.3,I7,4I2,A ,2F7.4)
                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ",Math.Round(A1,1).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(6),Math.Round(A3,3).ToString().PadLeft(6),
                    Math.Round(A4,3).ToString().PadLeft(6),Math.Round(A5,3).ToString().PadLeft(6),IZ1.ToString().PadLeft(7),IZ2.ToString().PadLeft(2),IZ3.ToString().PadLeft(2),
                    IZ4.ToString().PadLeft(2),IZ5.ToString().PadLeft(2),A6C,Math.Round(A7,4).ToString().PadLeft(7),Math.Round(A8,4).ToString().PadLeft(7));

            }   //940 CONTINUE

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6C = " ";
            A7 = 0.0;
            A8 = 0.0;
            IZ1 = 0;
            IZ2 = 0;
            IZ3 = 0;
            IZ4 = 0;
            IZ5 = 0;

            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 950 JJ=1,ANZTRB
                if (NITRE[JJ] == 7) 
                    goto label960;
            goto label970;
            
        label960:
            if (EDAROR[JJ] <= 0.0) goto label970;
            A1 = FKOND[JJ];
            A2 = EDAROR[JJ];
            A3 = EDSROR[JJ];
            A4 = ELROR[JJ];
            A5 = CKOND[JJ];
            IZ2 = (int)(ZFLUTE[JJ]);
            IZ3 = (int)(ZKONDE[JJ]);
            IZ4 = (int)KTFAC[JJ];
            IZ5 = 0;
            if (NKPARA[JJ] > 0) IZ5 = 1;
            IZ1 = (int)(RZAHL[JJ]);
            A7 = FWERST[JJ];
            A8 = FVERSCH[JJ];
            IX1 = (int)NTYPKO;
            A6C = " ";
            if (NTYPKO == 1) A6C = "CUZN28 ";
            if (NTYPKO == 2) A6C = "CUZN20 ";
            if (NTYPKO == 3) A6C = "CUNI10 ";
            if (NTYPKO == 4) A6C = "CUNI30 ";
            if (NTYPKO == 5) A6C = "CSTAHL ";
            if (NTYPKO == 6) A6C = "CRNI ";
            if (NTYPKO == 7) A6C = "TITAN ";
            if (NTYPKO == 8) A6C = "CRNIMO ";

        label970:
            //sw32.WriteLine("",930) A1,A2,A3,A4,A5,IZ1,IZ2,IZ3,IZ4,IZ5,A6C,A7,A8
            sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ",Math.Round(A1,1).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(6),Math.Round(A3,3).ToString().PadLeft(6),
                    Math.Round(A4,3).ToString().PadLeft(6),Math.Round(A5,3).ToString().PadLeft(6),IZ1.ToString().PadLeft(7),IZ2.ToString().PadLeft(2),IZ3.ToString().PadLeft(2),
                    IZ4.ToString().PadLeft(2),IZ5.ToString().PadLeft(2),A6C,Math.Round(A7,4).ToString().PadLeft(7),Math.Round(A8,4).ToString().PadLeft(7));
            //sw16.WriteLine("",931) A1,A2,A3,A4,A5,IZ1,IZ2,IZ3,IZ4,IZ5,A6C,A7,A8;
            sw32.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12} ",Math.Round(A1,1).ToString().PadLeft(10),Math.Round(A2,3).ToString().PadLeft(6),Math.Round(A3,3).ToString().PadLeft(6),
                    Math.Round(A4,3).ToString().PadLeft(6),Math.Round(A5,3).ToString().PadLeft(6),IZ1.ToString().PadLeft(7),IZ2.ToString().PadLeft(2),IZ3.ToString().PadLeft(2),
                    IZ4.ToString().PadLeft(2),IZ5.ToString().PadLeft(2),A6C,Math.Round(A7,4).ToString().PadLeft(7),Math.Round(A8,4).ToString().PadLeft(7));

        label1000:
            KK = IFALL;
            if (KK >= 7) KK = STWRT2;
            sw32.WriteLine("{0}{1}{2}{3}", KK.ToString().PadLeft(3),UEBER2,NUMMER.PadLeft(5),NINDEX.ToString().PadLeft(2));
            //1010 FORMAT(I3, A ,A5,A2)
            //sw16.WriteLine("",1011) KK,UEBER2,NUMMER,NINDEX
            //1011 FORMAT(1H0,I3, A ,A5,A2);
            sw16.WriteLine("{0}{1}{2}{3}", KK.ToString().PadLeft(3),UEBER2,NUMMER.PadLeft(5),NINDEX.ToString().PadLeft(2));

            A1 = WAUFW/B;
            JJ = 1;
            A3 = ARBTA[JJ];
            if (NITRE[JJ] == 1) A3 = TLSTGE[JJ];
            if (PELEKT > 0.0) A3 = PELEKT;
            A2 = A3/ETAGE[JJ];
            A5 = ETAGE[JJ]*100.0;
            A4 = VMECHE[JJ];
            A6 = PULEIS/B;
            A7 = A1/A3*3600.0;
            A8 = A1/(A3+A6)*3.6*1000.0;
            A9 = DVERBR[JJ];
            A10= 1.0/A7*3600.0*100.0;
            Z10= 1.0/A8*3600.0*100.0;
            sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
            //1020 FORMAT(12F11.4)
            //1021 FORMAT(1H0,12F11.4)

            I = IHENDE + 1;
            
        label1030:
            I = I - 1;
            if (NTYP[I] == 7) goto label1030;
            A1 = UWA003("TCELS", TWAUS[I]);
            I = 1;
            
        label1040:
            I = I + 1;
            if (I > IHENDE) II = 1;
            if (I > IHENDE) goto label1050;
            if (NTYP[I] != 3) goto label1040;
            II = I;
            
        label1050:
            A2 = GWAS[II]*GM;
            I = 1;
            
        label1060:
            I = I + 1;
            if (I > IHENDE) goto label1070;
            if (NTYP[I] != 4) goto label1060;
            L1 = NBLTG[I,1];
            if (Math.Abs(PLTG[L1]-PST905) > 0.001) goto label1060;
            UWA048(I);
            A3 = SUGL;
            goto label1090;

        label1070:
            A3 = 0.0;
            for(L = 71; L <= 92; L++)   //DO 1080 L=71,92
            {
                if (Math.Abs(PLTG[L]-PST905) > 0.001) continue;
                A3 = A3 + GLTG[L];
            }   //1080 CONTINUE
            
        label1090:
            A3 = A3*GM;
            A4 = 0;
            I = IHENDE + 1;
            
        label1100:
            I = I - 1;
            if (NTYP[I] == 7 && NBLTG[I,1] > 0) goto label1100;
            if (NTYP[I] != 7 && NTYP[I] != 8) goto label1110;
            if (N2[I] == 0) goto label1110;
            if (KATZE1[I] != 1) goto label1110;
            A4 = VERLP[I];

        label1110:
            A5 = 0.0;
            A6 = 0.0;
            
            for(L = 31; L <= 32; L++)   //DO 1120 L=31,32
            {
                if (GLTG[L] <= 0.0) continue;
                UWA008("UNPACK", ILTG[L], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX3 == 0 || IX1 == 0) continue; // goto label1120;
                if (L == 31) A5 = GLTG[L]*GM;
                if (L == 32) A6 = GLTG[L]*GM;
            }   //1120 CONTINUE

            sw32.WriteLine("{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));

            UWA006("RDISC", 52,1);
            I = 1;
            A1 = PT[I,K]*GP;
            A2 = UWA003("TCELS", T1T[I]);
            A3 = E1T[I,K]*GH;
            A4 = G[I,K]*GM;
            A5 = VISUM(PT[I,K],T1T[I],00);
            A6 = A4*A5;

            sw32.WriteLine("{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));

            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 1160 JJ=1,ANZTRB
            {
                if (NITRE[JJ] == 7) continue;

                L1 = 1;
                if (JJ > 1) L1 = NTTETB[JJ-1] + 1;
                L2 = NTTETB[JJ];

                for(LL = L1; LL <= L2; LL++)    //DO 1150 LL=L1,L2
                {
                    L = LL;
                    UWA006("RDISC", 52,L);
                    UWA006("RDISC", 59,L);
                    I = 1;
                    if (JJ == 1 && L == 1) I = 2;
                    II = ITTEND[L];
                    UWA044(II,1);
                    UWA006("RDISC", 53,KT9);
                    if ((NITRE[JJ] == 8 || NITRE[JJ] == 9) && FLUT == 1) continue;

                    A1 = PT[I,K]*GP;
                    A2 = UWA003("TCELS", T1T[I]);
                    A3 = E1T[I,K]*GH;
                    A4 = G[I+1,K]*GM;
                    A5 = VISUM(PT[I,K],T1T[I],00);
                    A6 = A4*A5;
                    A7 = XUPM/60.0;
                    IZ1 = LPAR[L];

                    sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                    sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                    //1130 FORMAT(7F11.4,I3)
                    //1131 FORMAT(1H0,7F11.4,I3)

                label1140:
                    if (L != NTTETB[JJ]) goto label1142;
                    A1 = PT[II,K]*GP;
                    A2 = UWA003("TCELS", T2T[II]);
                    A3 = E2T[II,K]*GH;
                    A4 = G[II,K]*GM;
                    A5 = VISUM(PT[II,K],T2T[II],00);
                    goto label1144;

                label1142:
                    A1 = PT[II,K]*GP;
                    A2 = UWA003("TCELS", T1T[II+1]);
                    A3 = E1T[II+1,K]*GH;
                    A4 = G[II+1,K]*GM;
                    A5 = VISUM(PT[II,K],T1T[II+1],00);

                label1144:
                    A6 = A4*A5;
                    A7 = PELGEH[L];
                    A8 = ETABA[L]*100.0;
                    A9 = WABB[L]*GH;
                    A10 = 0.0;
                    if (L == NTTETB[JJ]) A10 = CAXT[JJ];
                    Z10 = FETAE[L];
                    if (Z10 == 1.0 && DETA != 1.0) Z10 = DETA;

                    sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
                    sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));

                    if (IZ1 == 0) continue;

                    L = IZ1;
                    UWA006("RDISC", 52,L);
                    UWA006("RDISC", 59,L);
                    II = ITTEND[L];
                    UWA010(II,1);
                    UWA006("RDISC", 53,KT9);
                    IZ1 = 0;
                    goto label1140;
                }   //1150 CONTINUE
            }   //1160 CONTINUE

            UWA006("RDISC", 58,1);
            for(L = 1; L <= ANZTRB; L++)    //DO 1200 L=1,ANZTRB
            {
                if (NITRE[L] == 7) continue;
                if (EDAROR[L] <= 0.0) continue;
                if (K > 1) goto label1170;
                A1 = PKONDA[L]*GP;
                A2 = TKONDA[L];
                A3 = TKONAA[L];
                A4 = GKONDA[L]*GM;
                A5 = A3 - A2;
                A6 = DTKONA[L];
                if (FAKTKF[L] == 0.0) FAKTKF[L] = 1.0;
                A7 = 1.0/FAKTKF[L];
                A8 = UW0011(PKONDA[L],1) - 273.15;
                A9 = DKONDA[L]*GM;
                Z10 = A4*A5*GH/1000.0;
                Z1 = VISUM(PKONDA[L],Z2,-21);
                A10 = Z10*1000.0/A9 + Z1*GH;
                goto label1180;

            label1170:
                A1 = PKONDT[L]*GP;
                A2 = TKONDT[L];
                A3 = TKONAT[L];
                A4 = GKONDT[L]*GM;
                A5 = A3 - A2;
                A6 = DTKONT[L];
                if (FAKTKF[L] == 0.0) FAKTKF[L] = 1.0;
                A7 = 1.0/FAKTKF[L];
                A8 = UW0011(PKONDT[L],1) - 273.15;
                A9 = DKONDT[L]*GM;
                Z10 = A4*A5*GH/1000.0;
                Z1 = VISUM(PKONDT[L],Z2,-21);
                A10 = Z10*1000.0/A9 + Z1*GH;
                
            label1180:
                sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11), Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
                sw16.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11), Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
            }   //1200 CONTINUE

            LL = 0;
            
            for(I = 1; I <= IHENDE; I++)    //DO 1280 I=1,IHENDE
            {
                if (LTYP[I] != 1 && LTYP[I] != 2 && LTYP[I] != 21) continue;
                II = N1[I];
                if (II == 0) continue;
                A1 = 0.0;
                A2 = 0.0;
                A3 = 0.0;
                A4 = 0.0;
                A5 = 0.0;
                A6 = 0.0;
                A7 = 0.0;
                A8 = 0.0;
                LL = LL + 1;
                LEND = LL;
                IENTNH[LL] = 0;
                if (NTYP[I] == 1) goto label1220;
                IZ1 = II;
                L = 1;
                
            label1210:
                L = L + 1;
                if (L > INENDE) goto label1220;
                if (LTYP[L] != 5) goto label1210;
                if (N2[L] != IZ1) goto label1210;
                II = N1[L];

            label1220:
                if (NTYP[I] == 20) goto label1225;
                A1 = PLTG[II]*GP;
                A2 = VISUM(PLTG[II],ELTG[II],03);
                A5 = VISUM(PLTG[II],A2,00);
                A2 = UWA003("TCELS", A2);
                A3 = ELTG[II]*GH;
                A4 = GLTG[II]*GM;
                A6 = A4*A5;
                A7 = DPLTG[II]*GP;
                A8 = 0.0;
            
            label1225:
                UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX3 > 0) goto label1250;
                if (IHENDE == INENDE) goto label1270;
                IZ1 = II;
                L1 = IHENDE + 1;
                
            label1230:
                for(L = L1; L <= INENDE; L++)   //DO 1240 L=L1,INENDE
                {
                    if (NN2[L] != IZ1 && N2[L] != IZ1) continue;
                    if (NN1[L] == IZ1) continue;
                    IZ1 = NN1[L];
                    UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX3, ref IX3, ref IX4);
                    if (IX3 > 0) goto label1250;
                    goto label1230;
                }   //1240 CONTINUE
                goto label1270;
                
            label1250:
                IENTNH[LL] = IX3*100+IX4;
                if (NTYP[I] == 20) goto label1270;
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA010(IX4,1);
                UWA006("RDISC", 56,KT9);
                
                if (TAFDP[KT14] <= 0.0) goto label1270;
                UWA044(IX4,1);
                Z1 = 0.0;
                
                for(L = 1; L <= 10; L++)    //DO 1260 L=1,10
                {
                    IX5 = LABT[L];
                    if (IX5 == 0) continue;
                    if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
                }   //1260 CONTINUE
                Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
                if (KT14 == 1) Z3 = HS1MIN[6];
                if (KT14 == 2) Z3 = HS1MAX[6];
                if (KT14 == 3) Z3 = HSZMIN[6];
                if (KT14 == 4) Z3 = HSZMAX[6];
                if (KT14 == 5) Z3 = TAKF1 [6];
                if (Z3 == 0.0) Z3 = 1.0;
                A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;

            label1270:
                sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}",  Math.Round(A1,4).ToString().PadLeft(11), Math.Round(A2,4).ToString().PadLeft(11), Math.Round(A3,4).ToString().PadLeft(11), Math.Round(A4,4).ToString().PadLeft(11), Math.Round(A5,4).ToString().PadLeft(11), Math.Round(A6,4).ToString().PadLeft(11), Math.Round(A7,4).ToString().PadLeft(11), Math.Round(A8,4).ToString().PadLeft(11));
                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}",  Math.Round(A1,4).ToString().PadLeft(11), Math.Round(A2,4).ToString().PadLeft(11), Math.Round(A3,4).ToString().PadLeft(11), Math.Round(A4,4).ToString().PadLeft(11), Math.Round(A5,4).ToString().PadLeft(11), Math.Round(A6,4).ToString().PadLeft(11), Math.Round(A7,4).ToString().PadLeft(11), Math.Round(A8,4).ToString().PadLeft(11));
            }   //1280 CONTINUE

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            A7 = 0.0;
            A8 = 0.0;
            IZ1 = 0;
            JJ = 0;
            I = IHENDE + 1;
            
        label1310:
            I = I - 1;
            if (I == 1) goto label1380;
            if (NTYP[I] != 3) goto label1310;
            if (N1[I] == 0) goto label1310;
            II = N1[I];
            JJ = N2[I];
            A1 = PLTG[II]*GP;
            A2 = VISUM(PLTG[II],ELTG[II],03);
            A5 = VISUM(PLTG[II],A2,00);
            A2 = UWA003("TCELS", A2);
            A3 = ELTG[II]*GH;
            A4 = GLTG[II]*GM;
            A6 = A4*A5;
            A7 = DPLTG[II]*GP;
            A8 = 0.0;
            IZ1 = 15;
            UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
            if (IX3 > 0) goto label1340;
            if (IHENDE == INENDE) goto label1380;
            IZ1 = II;
            L1 = IHENDE + 1;
            
        label1320:
            for(L = L1; L <= INENDE; L++)   //DO 1330 L=L1,INENDE
            {
                if (NN2[L] != IZ1 && N2[L] != IZ1) continue;
                if (NN1[L] == IZ1) continue;
                IZ1 = NN1[L];
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX3, ref IX3, ref IX4);
                if (IX3 > 0) goto label1340;
                goto label1320;
            }   //1330 CONTINUE
            goto label1380;

        label1340:
            if (LEND == 0) goto label1360;
            
            for(L = 1; L <= LEND; L++)  //DO 1350 L=1,LEND
            {
                if (IENTNH[L] == 0) continue;
                IZ3 = IENTNH[L]/100;
                IZ4 = IENTNH[L]-IENTNH[L]/100*100;
                if (IX3 != IZ3 || IX4 != IZ4) continue;
                IZ1 = L;
                goto label1380;
            }   //1350 CONTINUE
        label1360:
            UWA006("RDISC", 52,IX3);
            UWA006("RDISC", 59,IX3);
            UWA010(IX4,1);
            IZ1 = 0;
            if (IX3 == 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ1 = 11;
            if (IX3 > 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ1 = 12;
            if (KT7 == 3) IZ1 = 13;
            if (IX5 == 0) goto label1370;
            if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
            
        label1370:
            Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
            if (KT14 == 1) Z3 = HS1MIN[6];
            if (KT14 == 2) Z3 = HS1MAX[6];
            if (KT14 == 3) Z3 = HSZMIN[6];
            if (KT14 == 4) Z3 = HSZMAX[6];
            if (KT14 == 5) Z3 = TAKF1 [6];
            if (Z3 == 0.0) Z3 = 1.0;
            A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;

        label1380:
            sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
            //1390 FORMAT(8F11.4,I3)
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8} ", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
            //1391 FORMAT(1H0,8F11.4,I3);

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;

            if (JJ == 0 || JJ > 900) goto label1395;
            A1 = PLTG[JJ]*GP;
            A2 = VISUM(PLTG[JJ],ELTG[JJ],03);
            A5 = VISUM(PLTG[JJ],A2,00);
            A2 = UWA003("TCELS", A2);
            A3 = ELTG[JJ]*GH;
            A4 = GLTG[JJ]*GM;
            A6 = A4*A5;

        label1395:
            sw32.WriteLine("{0}{1}{2}{3}{4}{5} ",  Math.Round(A1,4).ToString().PadLeft(11), Math.Round(A2,4).ToString().PadLeft(11), Math.Round(A3,4).ToString().PadLeft(11), Math.Round(A4,4).ToString().PadLeft(11), Math.Round(A5,4).ToString().PadLeft(11), Math.Round(A6,4).ToString().PadLeft(11));
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5} ",  Math.Round(A1,4).ToString().PadLeft(11), Math.Round(A2,4).ToString().PadLeft(11), Math.Round(A3,4).ToString().PadLeft(11), Math.Round(A4,4).ToString().PadLeft(11), Math.Round(A5,4).ToString().PadLeft(11), Math.Round(A6,4).ToString().PadLeft(11));

            UWA006("RDISC", 58,1);
            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            A7 = 0.0;
            A8 = 0.0;
            A9 = 0.0;
            A10 = 0.0;
            Z10 = 0.0;
            L = 0;
            
        label1400:
            L = L + 1;
            if (L > ANZTRB) goto label1420;
            if (NITRE[L] != 7) goto label1400;
            if (EDAROR[L] <= 0.0) goto label1420;
            if (K > 1) goto label1410;
            A1 = PKONDA[L]*GP;
            A2 = TKONDA[L];
            A3 = TKONAA[L];
            A4 = GKONDA[L]*GM;
            A5 = A3 - A2;
            A6 = DTKONA[L];
            A7 = 1.0/FAKTKF[L];
            A8 = UW0011(PKONDA[L],1) - 273.15;
            A9 = DKONDA[L]*GM;
            Z10 = A4*A5*GH/1000.0;
            Z1 = VISUM(PKONDA[L],Z2,-21);
            A10 = Z10*1000.0/A9 + Z1*GH;
            goto label1420;

        label1410:
            A1 = PKONDT[L]*GP;
            A2 = TKONDT[L];
            A3 = TKONAT[L];
            A4 = GKONDT[L]*GM;
            A5 = A3 - A2;
            A6 = DTKONT[L];
            if (FAKTKF[L] == 0.0) FAKTKF[L] = 1.0;
            A7 = 1.0/FAKTKF[L];
            A8 = UW0011(PKONDT[L],1) - 273.15;
            A9 = DKONDT[L]*GM;
            Z10 = A4*A5*GH/1000.0;
            Z1 = VISUM(PKONDT[L],Z2,-21);
            A10 = Z10*1000.0/A9 + Z1*GH;

        label1420:
            sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11));

            A1 = 0.0;
            A2 = 0.0;
            A3 = 0.0;
            A4 = 0.0;
            A5 = 0.0;
            A6 = 0.0;
            if (IDRUCK == 0) goto label1440;
            I = IHENDE + 1;
            
        label1430:
            I = I - 1;
            if (NTYP[I] != 7) goto label1440;
            if (NBLTG[I,1] == 0) goto label1430;
            if (N2[I] == 0) goto label1440;
            II = N2[I];
            A1 = PLTG[II]*GP;
            A2 = VISUM(PLTG[II],ELTG[II],03);
            A5 = VISUM(PLTG[II],A2,00);
            A2 = UWA003("TCELS", A2);
            A3 = ELTG[II]*GH;
            A4 = GLTG[II]*GM;
            A6 = A4*A5;
            
        label1440:
            sw32.WriteLine("{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));
            sw16.WriteLine("0{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11));

            if (INENDE == IHENDE) goto label2000;
            L1 = IHENDE + 1;
            
            for(L = L1; L <= INENDE; L++)   //DO 1490 L=L1,INENDE
            {
                if (NTYP[L] != 6) continue;
                IX2 = NN2[L];
                A2 = UWA003("TCELS", TWAUS[L]);
                A3 = GLTG[IX2]*GM;
                A4 = 0.0;
                A5 = 0.0;
                IZ1 = 0;

            label1450:
                for(N = L1; N <= INENDE; N++)   //DO 1470 N=L1,INENDE
                {
                    if (NN1[N] == 0 || NN1[N] == NN2[N]) continue;
                    if (NN1[N] != IX2) continue;
                    IX1 = NN1[N];
                    IX2 = NN2[N];
                    if (LTYP[N] != 2 && LTYP[N] != 21) goto label1460;
                    A4 = A4 + GLTG[IX1]*(ELTG[IX2]-ELTG[IX1]);
                    IZ1 = IZ1 + 1;
                    goto label1450;
                    
                label1460:
                    if (NTYP[N] != 22) continue;
                    A1 = UWA003("TCELS", TWAUS[N]);
                    II = N1[N];
                    if (II == 0) goto label1450;
                    A5 = GLTG[II]*GM;
                    if (A5 < 0.05) A5 = 0.0;
                    goto label1450;
                }   //1470 CONTINUE

                A4 = A4*GQ/1000.0;
                sw32.WriteLine("{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                //1480 FORMAT(5F11.4,I3)
                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                //1481 FORMAT(1H0,5F11.4,I3)
                goto label1500;
            }   //1490 CONTINUE

        label1500:
            if (INENDE == IHENDE) goto label2000;
            IZ1 = 0;
            IZ2 = 0;
            IZ3 = 0;
            IZ4 = 0;
            L1 = IHENDE + 1;
            
            for(J = L1; J <= INENDE; J++)   //DO 1610 J=L1,INENDE
            {
                if (NTYP[J] != 6) continue;
                IX9 = NN2[J];
                
            label1510:
                for(I = L1; I <= INENDE; I++)   //DO 1600 I=L1,INENDE
                {
                    if (NN1[I] == 0 || NN1[I] == NN2[I]) continue;
                    if (NN1[I] != IX9) continue;
                    IX8 = NN1[I];
                    IX9 = NN2[I];
                    if (LTYP[I] != 2 && LTYP[L] != 21) goto label1510;
                    if (N1[I] < 35 || N1[I] > 39) goto label1510;
                    IZ1 = IZ1 + 1;
                    II = N1[I];
                    A1 = 0.0;
                    A2 = 0.0;
                    A3 = 0.0;
                    A4 = 0.0;
                    A5 = 0.0;
                    A6 = 0.0;
                    A7 = 0.0;
                    A8 = 0.0;
                    A9 = 0.0;
                    A10 = 0.0;
                    Z10 = 0.0;
                    if (NTYP[I] == 20) goto label1515;
                    A1 = PLTG[II]*GP;
                    A2 = VISUM(PLTG[II],ELTG[II],03);
                    A5 = VISUM(PLTG[II],A2,00);
                    A2 = UWA003("TCELS", A2);
                    A3 = ELTG[II]*GH;
                    A4 = GLTG[II]*GM;
                    A6 = A5*A4;
                    A7 = DPLTG[II]*GP;
                    JJ = N2[I];
                    if (JJ > 0) A9 = VISUM(PLTG[JJ],ELTG[JJ],23);
                    A9 = UWA003("TCELS", A9);
                    A10 = GLTG[IX8]*(ELTG[IX9]-ELTG[IX8])*GQ/1000.0;
                    JJ = N2[I-1];
                    if (NTYP[I-1] == 8 && JJ > 0) Z10 = GLTG[JJ]*GM;
                    
                label1515:
                    II = IM[II-34];
                    UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                    IZ2 = 16;
                    if (IX2 == 0) goto label1580;
                    IZ4 = IX3;
                    if (IX4 == ITTEND[IX3] && IX3 == NTTETB[IX2]) goto label1530;
                    if (LEND == 0) goto label1530;
                    
                    for(L = 1; L <= LEND; L++)  //DO 1520 L=1,LEND
                    {
                        if (IENTNH[L] == 0) continue;
                        IX5 = IENTNH[L]/100;
                        IX6 = IENTNH[L]-IENTNH[L]/100*100;
                        if (IX3 != IX5 || IX4 != IX6) continue;
                        IZ2 = L;
                        goto label1550;
                    }   //1520 CONTINUE

                label1530:
                    UWA006("RDISC", 52,IX3);
                    UWA006("RDISC", 59,IX3);
                    UWA010(IX4,1);
                    IZ2 = 0;
                    if (IX3 == 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ2 = 12;
                    if (IX3 > 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ2 = 13;
                    if (KT7 == 3) IZ2 = 14;
                    if (KT7 == 6) IZ2 = 15;
                    if (IZ2 > 0) goto label1550;
                    IZ2 = 11;

                    if (NTYP[I] == 20) goto label1550;
                    UWA006("RDISC", 56,KT9);
                    if (TAFDP[KT14] <= 0.0) goto label1550;
                    UWA044(IX4,1);
                    Z1 = 0.0;
                    
                    for(L = 1; L <= 10; L++)    //DO 1540 L=1,10
                    {
                        IX5 = LABT[L];
                        if (IX5 == 0) continue;
                        if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
                    }   //1540 CONTINUE

                    Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
                    if (KT14 == 1) Z3 = HS1MIN[6];
                    if (KT14 == 2) Z3 = HS1MAX[6];
                    if (KT14 == 3) Z3 = HSZMIN[6];
                    if (KT14 == 4) Z3 = HSZMAX[6];
                    if (KT14 == 5) Z3 = TAKF1 [6];
                    if (Z3 == 0.0) Z3 = 1.0;
                    A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;

                label1550:
                    if (IX4 != ITTEND[IX3]) goto label1580;
                    if (IX3 != NTTETB[IX2]) goto label1560;
                    if (IX3 == NTTETB[IX2] && IX2 == 1) goto label1580;
                    LL = LVAR[IX2];
                    UWA008("UNPACK", ILTG[LL], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 == 0) goto label1580;
                    if (IX3 == NTTETB[IX2]) goto label1580;

                label1560:
                    IX3 = IX3 + 1;
                    UWA006("RDISC", 52,IX3);
                    UWA006("RDISC", 59,IX3);
                    II = ITTEND[IX3];
                    
                    for(LL = 1; LL <= II; LL++)     //DO 1570 LL = 1,II
                    {
                        UWA010(LL,1);
                        if (KT7 == 4) goto label1580;
                        if (KT7 != 5) continue;
                        IZ3 = 1;
                        goto label1580;
                    }   //1570 CONTINUE

                label1580:
                    sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3));
                    //1590 FORMAT(11F11.4,4I3)
                    sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),Math.Round(Z10,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3));
                    //1591 FORMAT(1H0,11F11.4,2I3,2I2)
                    goto label1510;
                }   //1600 CONTINUE
                goto label1700;
            }   //1610 CONTINUE

        label1700:
            if (INENDE == IHENDE) goto label2000;
            IZ1 = 0;
            IZ2 = 0;
            IZ3 = 0;
            IZ4 = 0;
            L1 = IHENDE + 1;
            
            for(I = L1; I <= INENDE; I++)   //DO 1850 I=L1,INENDE
            {
                if (NTYP[I] != 10) continue;
                IZ1 = IZ1 + 1;
                II = N1[I];
                A1 = PLTG[II]*GP;
                A2 = VISUM(PLTG[II],ELTG[II],03);
                A5 = VISUM(PLTG[II],A2,00);
                A2 = UWA003("TCELS", A2);
                A3 = ELTG[II]*GH;
                A4 = GLTG[II]*GM;
                A6 = A5*A4;
                A7 = DPLTG[II]*GP;
                A8 = 0.0;
                JJ = N2[I];
                A9 = VISUM(PLTG[JJ],ELTG[JJ],23);
                A9 = UWA003("TCELS", A9);
                A10 = GLTG[II]*(ELTG[II]-ELTG[JJ])*GQ/1000.0;
                UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 > 0) goto label1740;
                
            label1710:
                for(L = L1; L <= INENDE; L++)   //DO 1730 L=L1,INENDE
                {
                    if (NN1[L] == 0 || NN1[L] == NN2[L]) continue;
                    if (NN2[L] != II && N2[L] != II) continue;
                    II = NN1[L];
                    UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 > 0) goto label1740;
                    goto label1710;
                }   //1730 CONTINUE
                IZ2 = 16;
                if (IX2 == 0) goto label1810;
                
            label1740:
                IZ4 = IX3;
                if (LEND == 0) goto label1760;
                
                for(L = 1; L <= LEND; L++)      //DO 1750 L=1,LEND
                {
                    if (IENTNH[L] == 0) continue;
                    IX5 = IENTNH[L]/100;
                    IX6 = IENTNH[L]-IENTNH[L]/100*100;
                    if (IX3 != IX5 || IX4 != IX6) continue;
                    IZ2 = L;
                    goto label1780;
                }   //1750 CONTINUE

            label1760:
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA010(IX4,1);
                IZ2 = 0;
                if (IX3 == 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ2 = 12;
                if (IX3 > 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ2 = 13;
                if (KT7 == 3) IZ2 = 14;
                if (KT7 == 6) IZ2 = 15;
                if (IZ2 > 0) goto label1780;
                IZ2 = 11;

                UWA006("RDISC", 56,KT9);
                if (TAFDP[KT14] <= 0.0) goto label1780;
                UWA044(IX4,1);
                Z1 = 0.0;

                for(L = 1; L <= 10; L++)    //DO 1770 L=1,10
                {
                    IX5 = LABT[L];
                    if (IX5 == 0) continue;
                    if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
                }   //1770 CONTINUE
                Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
                if (KT14 == 1) Z3 = HS1MIN[6];
                if (KT14 == 2) Z3 = HS1MAX[6];
                if (KT14 == 3) Z3 = HSZMIN[6];
                if (KT14 == 4) Z3 = HSZMAX[6];
                if (KT14 == 5) Z3 = TAKF1 [6];
                if (Z3 == 0.0) Z3 = 1.0;
                A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;
                
            label1780:
                if (IX4 != ITTEND[IX3]) goto label1810;
                if (IX3 != NTTETB[IX2]) goto label1790;
                if (IX3 == NTTETB[IX2] && IX2 == 1) goto label1810;
                LL = LVAR[IX2];
                UWA008("UNPACK", ILTG[LL], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 == 0) goto label1810;
                if (IX3 == NTTETB[IX2]) goto label1810;
                
            label1790:
                IX3 = IX3 + 1;
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                II = ITTEND[IX3];

                for(LL = 1; LL <= II; LL++)     //DO 1800 LL = 1,II
                {
                    UWA010(LL,1);
                    if (KT7 == 4) goto label1810;
                    if (KT7 != 5) continue;
                    IZ3 = 1;
                    goto label1810;
                }   //1800 CONTINUE
                
            label1810:
                sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3));
                //1820 FORMAT(10F11.4,4I3)
                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),Math.Round(A9,4).ToString().PadLeft(11),Math.Round(A10,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3),IZ2.ToString().PadLeft(3),IZ3.ToString().PadLeft(3),IZ4.ToString().PadLeft(3));
                //1821 FORMAT(1H0,10F11.4,4I3)
            }   //1850 CONTINUE

            L1 = IHENDE + 1;
            
            for(I = L1; I <= INENDE; I++)   //DO 1950 I=L1,INENDE
            {
                if (LTYP[I] != 19) continue;
                A1 = 0.0;
                A2 = 0.0;
                A3 = 0.0;
                A4 = 0.0;
                A5 = 0.0;
                A6 = 0.0;
                A7 = 0.0;
                A8 = 0.0;
                IZ1 = 0;
                if (NTYP[I] == 20) goto label1920;
                if (N1[I] == 0) goto label1920;
                II = N1[I];
                A1 = PLTG[II]*GP;
                A2 = VISUM(PLTG[II],ELTG[II],03);
                A5 = VISUM(PLTG[II],A2,00);
                A2 = UWA003("TCELS", A2);
                A3 = ELTG[II]*GH;
                A4 = GLTG[II]*GM;
                A6 = A4*A5;
                A7 = DPLTG[II]*GP;
                A8 = 0.0;
                IZ1 = 15;
                UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX3 > 0) goto label1880;
                IZ1 = II;
                
            label1860:
                for(L = L1; L <= INENDE; L++)   //DO 1870 L=L1,INENDE
                {
                    if (NN2[L] != IZ1 && N2[L] != IZ1) continue;
                    if (NN1[L] == IZ1) continue;
                    IZ1 = NN1[L];
                    UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX3, ref IX3, ref IX4);
                    if (IX3 > 0) goto label1880;
                    goto label1860;
                }   //1870 CONTINUE
                goto label1920;

            label1880:
                if (LEND == 0) goto label1900;
                for(L = 1; L <= LEND; L++)  //DO 1890 L=1,LEND
                {
                    if (IENTNH[L] == 0) continue;
                    IZ3 = IENTNH[L]/100;
                    IZ4 = IENTNH[L]-IENTNH[L]/100*100;
                    if (IX3 != IZ3 || IX4 != IZ4) continue;
                    IZ1 = L;
                    goto label1920;
                }   //1890 CONTINUE
            label1900:
                UWA006("RDISC", 52,IX3);
                UWA006("RDISC", 59,IX3);
                UWA010(IX4,1);
                IZ1 = 0;
                if (IX3 == 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ1 = 11;
                if (IX3 > 1 && (KT7 == 7 || KT7 == 1 || KT7 == 2)) IZ1 = 12;
                if (KT7 == 3) IZ1 = 13;
                if (KT7 == 6) IZ1 = 14;
                if (IZ1 > 0) goto label1920;
                
                UWA006("RDISC", 56,KT9);
                if (TAFDP[KT14] <= 0.0) goto label1920;
                UWA044(IX4,1);
                Z1 = 0.0;
                
                for(L = 1; L <= 10; L++)    //DO 1910 L=1,10
                {
                    IX5 = LABT[L];
                    if (IX5 == 0) continue;
                    if (IX5 < 41) Z1 = Z1 + GLTG[IX5];
                }   //1910 CONTINUE
                Z2 = VISUM(PT[IX4,K],T2T[IX4],00);
                if (KT14 == 1) Z3 = HS1MIN[6];
                if (KT14 == 2) Z3 = HS1MAX[6];
                if (KT14 == 3) Z3 = HSZMIN[6];
                if (KT14 == 4) Z3 = HSZMAX[6];
                if (KT14 == 5) Z3 = TAKF1 [6];
                if (Z3 == 0.0) Z3 = 1.0;
                A8 = Z1*Z2*TAFDP[KT14]/Math.Sqrt(Z3)/3.6;

            label1920:
                sw32.WriteLine("{0}{1}{2}{3}{4}{5}{6}{7}{8}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                //1930 FORMAT(8F11.4,I3)
                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6}{7}{8}", Math.Round(A1,4).ToString().PadLeft(11),Math.Round(A2,4).ToString().PadLeft(11),Math.Round(A3,4).ToString().PadLeft(11),Math.Round(A4,4).ToString().PadLeft(11),Math.Round(A5,4).ToString().PadLeft(11),Math.Round(A6,4).ToString().PadLeft(11),Math.Round(A7,4).ToString().PadLeft(11),Math.Round(A8,4).ToString().PadLeft(11),IZ1.ToString().PadLeft(3));
                //1931 FORMAT(1H0,8F11.4,I3)
            }   //1950 CONTINUE

        label2000:
            return;
        }   //END

                
        static void UWA101()
        {
            //ENTRY LINK5
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //CHARACTER * 30 UEBER1
            //CHARACTER * 40 UEBER2, UEBER3
            //CHARACTER * 20 BESCHR
            //CHARACTER * 6 NRPROJ
            //CHARACTER * 5 NUMMER
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /PRINT/ IWR, TX0, TX13, TX14, TX15, TX16, TX17, TX UWA101
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20) ,
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            //COMMON /SCHRFT/ IP1,IP2,IP3,UEBER1 ,UEBER2 ,UEBER3 ,
            //1 IPL(160),BESCHR(160) ,NUMMER,NINDEX,KDRPL,
            //1 KTEXT,NRPROJ,NAME
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /PASCAL/ IPASC
            double KPL = 0;
            string AKARTA = "A", AKARTB = "B", AKARTC = "C", AKARTD = "D", AKARTE = "E", AKARTF = "F", AKARTG = "G", AKARTH = "H", AKARTI = "I",
                AKARTJ = "J", AKARTK = "K", AKARTL = "L", AKARTM = "M", AKARTN = "N", AKARTO = "O", AKARTP = "P", AKARTQ = "Q", AKARTR = "R",
                AKARTS = "S", AKARTT = "T", AKARTU = "U", AKARTV = "V", AKARTW = "W", AKARTX = "X", AKARTY = "Y", AKARTZ = "Z";
            ABCD[1] = AKARTA;
            ABCD[2] = AKARTB;
            ABCD[3] = AKARTC;
            ABCD[4] = AKARTD;
            ABCD[5] = AKARTE;
            ABCD[6] = AKARTF;
            ABCD[7] = AKARTG;
            ABCD[8] = AKARTH;
            ABCD[9] = AKARTI;
            ABCD[10] = AKARTJ;
            ABCD[11] = AKARTK;
            ABCD[12] = AKARTL;
            ABCD[13] = AKARTM;
            ABCD[14] = AKARTN;
            ABCD[15] = AKARTO;
            ABCD[16] = AKARTP;
            ABCD[17] = AKARTQ;
            ABCD[18] = AKARTR;
            ABCD[19] = AKARTS;
            ABCD[20] = AKARTT;
            ABCD[21] = AKARTU;
            ABCD[22] = AKARTV;
            ABCD[23] = AKARTW;
            ABCD[24] = AKARTX;
            ABCD[25] = AKARTY;
            ABCD[26] = AKARTZ;

            QTEXT = false;
            if (KTEXT == 1) QTEXT = true;
            KPL = KDRPL;
            
            if (KDRPL == 0) KPL = 100;
            QSI = false;
            QENGL = false;
            QTECHN = false;
            QAMI = false;

            if (KPL > 99) goto label300;
            if (KPL > 9) goto label400;
            goto label500;

        label300:
            if (KPL > 199) QAMI = true;
            TX0 = 1.0;
            TX1 = 4.1868;
            TX2 = 0.980665;
            if (IPASC == 1) TX2 = TX2*100.0;
            TX3 = 1.0/3.6;
            TX4 = 4.1868/3.6;
            TX5 = 0.0;
            QSI = true;
            goto label600;

        label400:
            if (KPL > 19) QAMI = true;
            TX0 = 1.8;
            TX1 = 1.8;
            TX2 = 14.223315;
            TX3 = 2.204622;
            TX4 = 3.9683;
            TX5 = 32.0;
            QENGL = true;
            goto label600;

        label500:
            if (KPL == 2) QAMI = true;
            KPL = 0;
            TX0 = 1.0;
            TX1 = 1.0;
            TX2 = 1.0;
            TX3 = 1.0;
            TX4 = 1.0;
            TX5 = 0.0;
            QTECHN = true;

        label600:
            if (NDECN == 0 && QENGL) NDECN = 2;
            if (NDECN == 0 && !QENGL) NDECN = 4;
            XH = 0.2;
            FACT = 1.0;
            FACTS = 1.0;
            YWELLE = 0.0;
            XDX = 0.0;
            if (QAMI) goto label800;

            X = 0.0;

            UWA103(0);

            X = 0;
            Y = 18.0;
            UWA103(1);
            X = 4.0/FACT;
            if (LLTG[14] == 3) X = 6.0/FACT;
            Y = 27.5/FACT;
            ISTB = 0;
            KSTB = 0;

            UWA104();

            return;

        label800:
            X = 8.5;
            Y = 21.6;

            UWA103(0);

            X = 30.0;
            Y = 12.0;
            UWA103(1);
            X = 3.0/FACT;
            Y = 27.1/FACT;
            ISTB = 0;
            KSTB = 0;

            UWA104();

            return;
        }   //END

        
        static void UWA102()
        {
            //ENTRY MASSEN
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /GMINP/ GPMIN[4]
            //COMMON /PUMP/ IPUMP(60)

            int NZAEL = 0, IKKW = 0, L = 0, M1 = 0, M = 0, L1 = 0, N = 0, M2 = 0, IP = 0;
            double A = 1000.0, GAUS = 0, IG = 0, GT = 0, IGT = 0, NX1 = 0, NX2 = 0, NX = 0, IGAB = 0, IGBEDA = 0, IGZU = 0,
                GK = 0, IGA = 0, IGK = 0;

            for(I = 1; I <= 160; I++) //DO 1 I = 1,160
            {
                GAUS = GLTG[I]*A*TX3;
                if (GAUS != 0.0) GAUS = GAUS + 0.05;
                if (GAUS == 0.0)
                    continue;
                IG = GAUS;
                GAUS = IG;
                GLTG[I] = GAUS/A/TX3;
            }   //1 CONTINUE
            
            GAUS = GWAS[IHENDE]*A*TX3;
            if (GAUS != 0.0) GAUS = GAUS + 0.05;
            IG = GAUS;
            GAUS = IG;
            GWAS[IHENDE] = GAUS/A/TX3;
            IKKW = 0;
            IGBEDA = 0;
            JJ = ANZTRB + 1;
            
        label100:
            JJ = JJ - 1;
            if (JJ == 0) goto label1500;
            if (JJ > 1) IX4 = NRMVAE[JJ];
            if (JJ > 1) GAUS = GLTG[IX4];
            IZ1 = NTTETB[JJ];
            L = 1;
            if (JJ > 1) L = NTTETB[JJ-1] + 1;
            
            for(J = L; J <= IZ1; J++) //DO 1400 J = L,IZ1
            {
                UWA006("RDISC", 52,J);
                UWA006("RDISC", 53,J);
                UWA006("RDISC", 59,J);
                IZ3 = ITTEND[J];
                for(I = 1; I <= IZ3; I++) //DO 900 I = 1,IZ3
                {
                    UWA010(I,1);
                    if (J == 1 && I == 1) G[I,K] = GWAS[IHENDE];
                    if (J > 1 && I == 1) G[I,K] = GAUS;
                    GT = G[I,K]*A*TX3;
                    if (GT != 0.0) GT = GT + 0.05;
                    IGT = GT;
                    IGZU = 0;
                    IGAB = 0;
                    if (KT5 == 0) goto label800;
                    UWA044(I,1);
                    
                    for(M1 = 1; M1 <= 10; M1++) //DO 400 M1 = 1,10
                    {
                        IZ4 = LABT[M1];
                        if (IZ4 == 0) goto label500;
                        NX1 = 0;
                        if (GLTG[IZ4] != 0.0) NX1 = GLTG[IZ4]*A*TX3+0.05;
                        if (IZ4 > 40 && IZ4 < 47) goto label300;
                        if (IZ4 < 70 || IZ4 > 92) goto label200;
                        if (FLUT < 2) goto label200;
                        if (J == 1 && LLTG[14] != 2 && LLTG[14] != 3) goto label200;
                        if (J != 1 && J != NTTETB[1]) goto label200;
                        NX2 = NX1/10*10;
                        NX = NX1 - NX2;
                        if (NX/2*2 != NX) NX1 = NX1 + 1;
                        GLTG[IZ4] = NX1/A/TX3;
                        
                    label200:
                        IGAB = IGAB + NX1;
                        if (IZ4 < 70 || IZ4 > 92) continue;
                        Z1 = PLTG[IZ4];
                        if (Z1 == PST906 || Z1 == PST908)
                            IGBEDA = IGBEDA + NX1;
                        continue;
                        
                    label300:
                        IKKW = IZ4;
                    }   //400 CONTINUE
                    
                label500:
                    for(M1 = 1; M1 <= 10; M1++)  //DO 700 M1 = 1,10
                    {
                        IZ4 = LZUT[M1];
                        if (IZ4 == 0) goto label800;
                        NX1 = 0;
                        if (GLTG[IZ4] != 0.0) NX1 = GLTG[IZ4]*A*TX3+0.05;
                        if (IZ4 > 40 && IZ4 < 47) continue;
                        if (IZ4 < 70 || IZ4 > 92) goto label600;
                        if (FLUT < 2) goto label600;
                        if (J == 1 && LLTG[14] != 2 && LLTG[14] != 3) goto label600;
                        if (J != 1 && J != NTTETB[1]) goto label600;
                        NX2 = NX1/10*10;
                        NX = NX1 - NX2;
                        if (NX/2*2 != NX) NX1 = NX1 + 1;
                        GLTG[IZ4] = NX1/A/TX3;
                        
                    label600:
                        IGZU = IGZU + NX1;
                        if (IZ4 < 70 || IZ4 > 92) continue;
                        Z1 = PLTG[IZ4];
                        if (Z1 == PST906 || Z1 == PST908) IGBEDA = IGBEDA - NX1;
                    }   //700 CONTINUE
                    
                label800:
                    IGT = IGT + IGZU - IGAB;
                    GT = IGT/A/TX3;
                    if (I != IZ3) G[I+1,K] = GT;
                    if (I == IZ3) GABDE[JJ] = GT;
                    if (I == IZ3) GAUS = GT;
                    if (JJ > 1 && J == IZ1 && I == IZ3) GLTG[IX4+100] = GT;
                    if (LHEIZ != 1 && LHEIZ != 2) continue;
                    if (J != IZ1 || I != IZ3) continue;
                    if (JJ == 1 && LHEIZ == 1) GLTG[35] = GLTG[35] + GT;
                    if (JJ == 1 && LHEIZ == 2) GLTG[36] = GLTG[36] + GT;
                    if (JJ == 2 && LHEIZ == 2) GLTG[35] = GLTG[35] + GT;
                }   //900 CONTINUE
                UWA006("WDISC", 52,J);
                if (IKKW == 0)
                    continue;   // goto label1400;
                IZ4 = IKKW;
                L1 = IHENDE + 1;
                
            label1000:
                for(M = L1; M <= INENDE; M++)    //DO 1300 M = L1,INENDE
                {
                    IZ3 = NN1[M];
                    if (IZ3 != IZ4) continue;
                    if (IZ3 == IKKW) GLTG[IZ3] = GAUS;
                    IZ4 = NN2[M];
                    N = NTYP[M];
                    IZ5 = N2[M];
                    GK = 0.0;
                    if (IZ5 != 0) GK = GLTG[IZ5];
                    if (N != 8) goto label1200;
                    IGAB = 0;
                    
                    for(M1 = 1; M1 <= 8; M1++) //DO 1100 M1 = 1,8
                    {
                        IX1 = NBLTG[M,M1];
                        if (IX1 == 0) continue;
                        if (GLTG[IX1] != 0.0) IGAB=IGAB+GLTG[IX1]*A*TX3+0.05;
                    }   //1100 CONTINUE
                    SUGL = IGAB/A/TX3;
                    
                label1200:
                    if (N == 19) GLTG[IZ4] = GLTG[IZ3];
                    if (N == 8) GLTG[IZ4] = GLTG[IZ3] + SUGL - GK;
                    if (N == 23) GLTG[IZ4] = GLTG[IZ3] - GK;
                    goto label1000;
                }   //1300 CONTINUE
                GAUS = GLTG[IZ4];
                IKKW = 0;
            }   //1400 CONTINUE
            goto label100;
            
        label1500:
            if (IGBEDA >= 0) GLTG[100] = IGBEDA/A/TX3;
            if (IGBEDA < 0) GLTG[99]= - IGBEDA/A/TX3;
            I = INENDE + 1;
            
        label2000:
            I = I - 1;
            if (I == IHENDE) goto label3000;
            N = NTYP[I];
            II = N1[I];
            JJ = N2[I];
            IX2= NN1[I];
            IX3= NN2[I];
            IGZU= 0;
            IGAB= 0;
            IGA = 0;
            if (II != 0 && GLTG[II] != 0.0) IGA = GLTG[II]*A*TX3+0.05;
            if (JJ != 0 && GLTG[JJ] != 0.0) IGAB = GLTG[JJ]*A*TX3 + 0.05;
            if (N == 3 || N == 6 || N == 9 || N == 13 || N == 14 || N == 16 || N == 20 || N == 23) goto label2200;
            M2 = 1;
            if (N == 11) M2 = 2;
            
            for(M1 = M2; M1 <= 8; M1++)     //DO 2100 M1 = M2,8
            {
                IX1 = NBLTG[I,M1];
                if (IX1 == 0) continue;
                if (GLTG[IX1] != 0.0) IGZU=IGZU+GLTG[IX1]*A*TX3+0.05;
            }   //2100 CONTINUE
            
        label2200:
            if (IX2 == 0 || IX3 == 0) goto label2300;
            if (N == 0) GLTG[IX3] = GLTG[IX2] + IGZU/A/TX3;
            if (N == 1) GLTG[IX3] = GLTG[IX2] + (IGA+IGZU-IGAB)/A/TX3;
            if (N == 2 || N == 3 || N == 4 || N == 5 || N == 9 || N == 12 || N == 13 || N == 19 || N == 20 || N == 21) GLTG[IX3] = GLTG[IX2];
            if ((N == 2 || N == 21) && JJ == 0) GLTG[IX3] = GLTG[IX2] + (IGA+IGZU)/A/TX3;
            if (N == 8 || N == 14 || N == 23) GLTG[IX3] = GLTG[IX2] +(IGZU-IGAB)/A/TX3;
            if (N == 11) IX1 = NBLTG[I,1];
            if (N == 11 && IX1 != 0 && GLTG[IX1] != 0.0) IGAB = GLTG[IX1]*A*TX3 + 0.05;
            if (N == 11) GLTG[IX3] = GLTG[IX2] - IGAB/A/TX3;
            if (N == 22 && KRUECK[I] == 0) GLTG[IX3] = GLTG[IX2] + (IGZU+IGA)/A/TX3;
            if (N == 22 && KRUECK[I] == 1) GLTG[IX2] = GLTG[IX3] - (IGZU+IGA)/A/TX3;
            
        label2300:
            if ((N == 2 || N == 21) && JJ != 0) GLTG[JJ] = (IGA+IGZU)/A/TX3;
            if (N != 3) goto label2500;
            if (II == 0) goto label2500;
            
            for(M1 = 2; M1 <= 4; M1++) //DO 2400 M1=2,4
                if (NITRE[M1] == 7) 
                    goto label2500;     //2400 CONTINUE
            
            if (JJ != 0) GLTG[JJ] = IGA/A/TX3;
            
        label2500:
            if (N == 4 || N == 12) GLTG[JJ] = IGZU/A/TX3;
            if (N == 5 || N == 10 || N == 19) GLTG[JJ] = (IGA+IGZU)/A/TX3;
            if (N == 11) GLTG[JJ] = (IGA+IGZU)/A/TX3;
            goto label2000;

        label3000:
            I = IHENDE + 1;
            
        label3100:
            I = I - 1;
            if (I == 1) goto label4000;
            N = NTYP[I];
            if (N != 2 && N != 3 && N != 4 && N != 5 && N != 12 && N != 21) goto label3100;
            II = N1[I];
            IGA = 0;
            if (II != 0 && GLTG[II] != 0.0) IGA=GLTG[II]*A*TX3+0.05;
            JJ = N2[I];
            IGZU = 0;
            
            for(M1 = 1; M1 <= 8; M1++)  //DO 3200 M1 = 1,8
            {
                IX1 = NBLTG[I,M1];
                if (IX1 == 0) continue;
                if (GLTG[IX1] != 0.0)   IGZU=IGZU+GLTG[IX1]*A*TX3+0.05;
            }   //3200 CONTINUE
            if ((N == 2 || N == 21) && JJ != 0)
                GLTG[JJ] = (IGA+IGZU)/A/TX3;
            if (N == 4 || N == 12) GLTG[JJ] = IGZU/A/TX3;
            if (N == 5) GLTG[JJ] = (IGA+IGZU)/A/TX3;
            
            for(M1 = 2; M1 <= 4; M1++) //DO 3300 M1=2,4
                if (NITRE[M1] == 7 && NRMVAE[M1] == II) 
                    goto label3100;     //3300 CONTINUE
            
            if (N == 3 && II != 0 && JJ != 0) GLTG[JJ] = IGA/A/TX3;
            goto label3100;

        label4000:
            I = IHENDE + 1;
            IP = 0;
            
        label4100:
            I = I - 1;
            if (I == 1) goto label5000;
            GAUS = GWAS[I]*A*TX3;
            if (GAUS != 0.0) GAUS = GAUS + 0.05;
            IG = GAUS;
            GWAS[I-1] = IG/A/TX3;
            N = NTYP[I];
            if (N != 1 && N != 2 && N != 7 && N != 8 && N != 18 && N != 21 && N != 3) goto label4100;
            if (N == 3) IP = IP + 1;
            II = N1[I];
            JJ = N2[I];
            IGZU = 0;
            
            for(M1 = 1; M1 <= 8; M1++)      //DO 4200 M1 = 1,8
            {
                IX1 = NBLTG[I,M1];
                if (IX1 == 0) continue;
                if (GLTG[IX1] != 0.0) IGZU=IGZU+GLTG[IX1]*A*TX3+0.05;
            }   //4200 CONTINUE
            if (N == 7) IGZU = 0;
            IGK = 0;
            IGA = 0;
            if (II != 0 && GLTG[II] != 0.0) IGA=GLTG[II]*A*TX3+0.05;
            if (JJ != 0 && GLTG[JJ] != 0.0) IGK=GLTG[JJ]*A*TX3+0.05;
            if ((N == 2 || N == 21) && JJ == 0)
                GWAS[I] = (IG-IGA-IGZU)/A/TX3;
            if ((N == 2 || N == 21) && JJ == 0)
                GWAS[I-1] = GWAS[I];
            if (N == 1) GWAS[I-1] = (IG-IGA-IGZU+IGK)/A/TX3;
            if (N == 7 || N == 8) GWAS[I-1] = (IG-IGZU+IGK)/A/TX3;
            if (N == 18) GWAS[I-1] = (IG+IGZU)/A/TX3;
            if (N == 3 && GWAS[I] < GPMIN[IP]*IPUMP[I])
                GWAS[I-1] = GPMIN[IP]*IPUMP[I];
            if (N == 3 && GWAS[I] < GPMIN[IP]*IPUMP[I])
                GLTG[26+IP] = GPMIN[IP]*IPUMP[I] - GWAS[I];
            goto label4100;

        label5000:
            for(L = 1; L <= INENDE; L++)    //DO 5500 L = 1,INENDE
            {
                N = NTYP[L];
                if (N != 8 && N != 6) continue;
                if (N == 6 && L == 1) continue;
                IZ4 = N2[L];
                if (N == 6) IZ4 = NN2[L];
                if (IZ4 == 0) continue;
                L1 = IHENDE + 1;
                
            label5100:
                for(I = L1; I <= INENDE; I++)   //DO 5400 I = L1,INENDE
                {
                    IZ3 = NN1[I];
                    if (IZ3 != IZ4) continue;
                    N = NTYP[I];
                    IZ4 = NN2[I];
                    NX1 = 0;
                    if (GLTG[IZ3] != 0.0) NX1 = GLTG[IZ3]*A*TX3+0.05;
                    GLTG[IZ4] = NX1/A/TX3;
                    if (N == 6) continue;
                    IGAB = 0;
                    IGZU = 0;
                    if (N == 3 || N == 6 || N == 9 || N == 13 || N == 14 || N == 16 || N == 20 || N == 23) goto label5300;
                    M2 = 1;
                    if (N == 11) M2 = 2;
                    
                    for(M1 = M2; M1 <= 8; M1++)     //DO 5200 M1 = M2,8
                    {
                        IX1 = NBLTG[I,M1];
                        if (IX1 == 0) continue;
                        if (GLTG[IX1] != 0.0) 
                            IGZU=IGZU+GLTG[IX1]*A*TX3+0.05;
                    }   //5200 CONTINUE
                    
                label5300:
                    II = N1[I];
                    JJ = N2[I];
                    IGA = 0;
                    if (II != 0 && GLTG[II] != 0.0) IGA=GLTG[II]*A*TX3+0.05;
                    IGK = 0;
                    if (JJ != 0 && GLTG[JJ] != 0.0) IGK=GLTG[JJ]*A*TX3+0.05;
                    if (N == 0) GLTG[IZ4] = (NX1+IGZU)/A/TX3;
                    if (N == 1) GLTG[IZ4] = (NX1+IGA+IGZU-IGK)/A/TX3;

                    if (N == 2 || N == 3 || N == 4 || N == 5 || N == 9 || N == 12 || N == 13 || N == 19 || N == 20 || N == 21) 
                        GLTG[IZ4] = NX1/A/TX3;
                    if ((N == 2 || N == 21) && JJ == 0)
                        GLTG[IZ4]=(NX1+IGA+IGZU)/A/TX3;
                    if (N == 8 || N == 14 || N == 23) GLTG[IZ4] = (NX1+IGZU-IGK)/A/TX3;
                    if (N == 11) IX1 = NBLTG[I,1];
                    if (N == 11 && IX1 != 0 && GLTG[IX1] != 0.0) IGAB = GLTG[IX1]*A*TX3 + 0.05;
                    if (N == 11) GLTG[IZ4] = (NX1-IGAB)/A/TX3;
                    if (N == 22) GLTG[IZ4] = (NX1+IGZU+IGA)/A/TX3;
                    goto label5100;
                }   //5400 CONTINUE
            }   //5500 CONTINUE

            NZAEL = NZAEL + 1;
            if (NZAEL == 1) goto label1500;
            return;
        }   //END
        

        static void UWA103(double MSF)
        {   
            //ENTRY FACTX (MSF)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //REAL * 8 NRPROJ, NUMMER
            //CHARACTER * 30 UEBER1
            //CHARACTER * 40 UEBER2, UEBER3
            //CHARACTER * 20 BESCHR
            //INCLUDE 'KRAWAL80.COMMON'
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20), 
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ, UWA103
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /SCHRFT/ IP1,IP2,IP3,UEBER1 ,UEBER2 ,UEBER3 ,
            //1 IPL(160),BESCHR(160) ,NUMMER,NINDEX,KDRPL,
            //2 KTEXT,NRPROJ,NAME
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /NTURB/ NTT[4]
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /HEIZEN/ DPHEIZ[5],IM[5]
            //COMMON /VORW/ NANZVW(20)
            //COMMON /LVART/ LVAR[4],PVAR[4],HVAR[4]
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /PLHEIZ/ KHEIZ
            //COMMON /WESEL / IWESEL,MENTN[4]
            //COMMON /NTEILT/ NDTEIL
            //COMMON /DINA4/ IDINA4,XDINA4
            //COMMON /LEISTG/ IELEKT,PELEKT,IGETRB
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /ZUSAMM/ MOD[7]
            //COMMON /GMINP/ GPMIN[4]
            //COMMON /PUMP/ IPUMP(60)
            //COMMON /ZUE/ JZUE[7]

            int K4 = 0, K6 = 0, L = 0, NELEM = 0, M = 0, N = 0, M1 = 0, L1 = 0, L2 = 0, K5 = 0, IZUE = 0, IELEM = 0,
                NL = 0, NELEMV = 0, JX = 0, NLL = 0, IP = 0, M2 = 0, MX = 0;
            double XXX = 0, XX = 0, K5MERK = 0, XMERK = 0, XXXVOR = 0, XVOR = 0, FACTT = 0, XZ = 0, XTZ = 0, XZ1 = 0,
                YFACT = 0, NKELEM = 0, KPMP = 0, KUMP = 0, KELEM = 0, XELEM = 0, FACTE = 0, XKZ = 0, XK = 0, YZ1 = 0,
                YZ = 0, XZZ = 0;

            if (MSF == 1) goto label3000;
            NDTEIL = 0;
            
            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 300 JJ=1,ANZTRB
            {
                NTT[JJ] = NTTETB[JJ];
                if (NITRE[JJ] == 7) continue;
                if (JJ > 1 && NITRE[JJ] != 8 && NITRE[JJ] != 9) continue;
                if (K == 2 && JJ > 1 && NRMVAE[JJ] == 40) continue;
                IZ1 = NTTETB[JJ];
                L = 1;
                if (JJ > 1)
                    L = NTTETB[JJ-1] + 1;
                
                for(J = L; J <= IZ1; J++)   //DO 100 J=L,IZ1
                {
                    if (J > 3) MOD[J] = 0;
                    UWA006("RDISC", 59,J);
                    IZ2 = ITTEND[J];
                    UWA010(IZ2,1);
                    UWA006("RDISC", 53,KT9);
                    IFLUT[J] = (FLUT);
                    if (JJ > 1 && J == IZ1 && STZNDT[JJ] != 0.0) NDTEIL = NDTEIL+1;
                }   //100 CONTINUE
                if (JJ == 1) continue;
                if (NTTETB[JJ]-NTTETB[JJ-1] == 1 && STZNDT[JJ] != 0.0) continue;
                if (NITRE[JJ] != 8 && NITRE[JJ] != 9) continue;
                IZ4 = IZ1;
                if (NTTETB[JJ]-NTTETB[JJ-1] > 1) IZ4 = NTTETB[JJ-1]+1;
                I = LVAR[JJ];
                if (I == 0) I = NRMVAE[JJ];
                UWA008("UNPACK", ILTG[I], ref IX1, ref IX2, ref IX3, ref IX4);
                
                for(K1 = 1; K1 <= IZ1; K1++)    //DO 200 K1 = 1,IZ1
                {
                    if (K1 != IX3) continue;
                    if (LHEIZ == 2 || K1 != NTTETB[1])IFLUT[K1]=IFLUT[K1]+IFLUT[IZ4];
                    IFLUT[IZ4] = -K1;
                    break;
                }   //200 CONTINUE
            }   //300 CONTINUE
            if (LHEIZ == 9) NDTEIL = 0;

            K1 = 0;
            K3 = 0;
            K4 = 0;
            K6 = 0;

            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 1100 JJ = 1,ANZTRB
            {
                IZ1 = NTTETB[JJ];
                L = 1;
                if (JJ > 1) L = NTTETB[JJ-1] + 1;
                IX1 = 0;
                for(J = L; J <= IZ1; J++)   //DO 1000 J=L,IZ1
                {
                    UWA006("RDISC", 59,J);
                    IZ2 = ITTEND[J];
                    if (MOD[J] > 0) 
                        IX1 = (int)MOD[J];
                    if (J >= IX1) IX1 = 0;
                    NELEM = 1;
                    NTRB[J] = 1;
                    
                    for(M = 1; M <= IZ2; M++)   //DO 900 M = 1,IZ2
                    {
                        K2 = 0;
                        UWA010(M,1);
                        if (KT5 == 0) continue;
                        if (KT2 == 0) goto label350;
                        if (LLTG[14] == 3 && (KT2 == 1 || KT2 == 2)) K1 = K1 + 1;
                        if (LLTG[14] == 3 && KT2 == 5) K1 = K1 + 2;
                        if (LLTG[14] == 2 && (KT2 == 1 || KT2 == 2)) K1 = K1 + 3;
                        if (LLTG[14] == 2 && (KT2 == 1 || KT2 == 2) && KT2 != KT3)
                            K1 = K1 + 3;
                        if (LLTG[14] == 2 && KT2 == 5) K1 = K1 + 3;
                        
                    label350:
                        UWA044(M,1);
                        for(M1 = 1; M1 <= 10; M1++)     //DO 800 M1 = 1,10
                        {
                            IZ3 = LABT[M1];
                            if (IZ3 == 0) break;    //goto label900
                            if (IZ3 > 69 && IZ3 < 99) continue;
                            if (LHEIZ == 1 && IZ3 == IM[1]) continue;
                            if (LHEIZ == 2 && (IZ3 == IM[1] || IZ3 == IM[2])) continue;
                            if (KT7 != 3 && KT7 != 4 && KT7 != 8 && KT7 != 9) goto label450;
                            if (IZ3 == 10 && J == 1) continue;
                            if (M == IZ2) goto label500;
                            if (KT7 == 9 && J == IZ1 && M == IZ2-1) goto label500;
                            K2 = K2 + 1;
                            if (K2 > 1) continue;
                            NTRB[J] = NTRB[J] + 1;
                            if (J == IZ1 && IFLUT[J] > 0) continue;
                            if (INENDE == IHENDE) continue;
                            L1 = IHENDE + 1;
                            
                            for(N = L1; N <= INENDE; N++)   //DO 400 N=L1,INENDE
                            {
                                if (LTYP[N] != 8) continue;
                                if (VERLE[N] == 0.0 && NBLTG[N,1] == 0) continue;
                                if (IZ3 != NBLTG[N,1]) continue;
                                NTRB[J] = NTRB[J] - 1;
                                goto label800;
                            }   //400 CONTINUE
                            goto label800;
                            
                        label450:
                            if (J == 1 && (KT7 == 1 || KT7 == 7)) K1 = K1 + 1;
                            goto label800;
                            
                        label500:
                            if (IX1 == 0) goto label600;
                            K2 = K2 + 1;
                            if (K2 > 1) goto label600;
                            NTRB[J] = NTRB[J] + 1;
                            
                        label600:
                            if (IZ3 < 41 || IZ3 > 46) goto label800;
                            if (J > NTTETB[1]) goto label800;
                            IZ4 = IZ3;
                            L1 = IHENDE + 1;
                            
                        label610:
                            for(I = L1; I <= INENDE; I++)   //DO 700 I=L1,INENDE
                            {
                                if (NN1[I] != IZ4) 
                                    continue;
                                IZ4 = NN2[I];
                                if (LTYP[I] == 8 && N2[I] > 0) K6 = K6 + 1;
                                if (LTYP[I] == 19) K3 = K3 + 1;
                                if (LTYP[I] == 23) K4 = K4 + 1;
                                goto label610;
                            }   //700 CONTINUE
                    label800:
                        ;
                        }   //800 CONTINUE
                    }   //900 CONTINUE
                }   //1000 CONTINUE
            }   //1100 CONTINUE

            if (IABHI < 2) goto label1140;
            I = IHENDE + 1;
            
        label1110:
            I = I - 1;
            if (NTYP[I] != 7) goto label1140;
            if (KRUECK[I] != 7) goto label1110;
            IZ4 = N2[I];
            if (IZ4 == 0) goto label1110;
            if (IZ4 == NBLTG[I,1]) goto label1110;
            L1 = IHENDE + 1;
            
        label1120:
            for(L = L1; L <= INENDE; L++) //DO 1130 L=L1,INENDE
            {
                if (IZ4 == NBLTG[I,1]) goto label1140;
                if (NN1[L] != IZ4) continue;
                IZ4 = NN2[L];
                if (NTYP[L] != 8) goto label1120;
                if (N2[L] == 0) goto label1120;
                K1 = K1 + 1;
                goto label1120;
            }   //1130 CONTINUE

        label1140:
            for(J = 1; J <= ANZDTT; J++)    //DO 1400 J=1,ANZDTT
            {
                if (MOD[J] == 0) goto label1300;
                L1 = J+1;
                L2 = (int)MOD[J];
                
                for(L = L1; L <= L2; L++) //DO 1200 L=L1,L2
                {
                    NTRB[J] = NTRB[J] + NTRB[L] - 1;
                    NTRB[L] = 0;
                }   //1200 CONTINUE
                
            label1300:
                if (IFLUT[J] >= 0)
                    continue;       // goto label1400;
                I = IFLUT[J];
                NTRB[I] = NTRB[I] + NTRB[J] - 1;
            }   //1400 CONTINUE

            XXX = 0.0;
            K5 = 0;
            
            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 2000 JJ = 1,ANZTRB
            {
                if (NITRE[JJ] == 7) continue;
                if (JJ > 1 && NITRE[JJ] != 8 && NITRE[JJ] != 9) continue;
                IZ1 = NTTETB[JJ];
                L = 1;
                if (JJ > 1) L = NTTETB[JJ-1] + 1;
                
                for(J = L; J <= IZ1; J++) //DO 1910 J = L,IZ1
                {
                    if (IFLUT[J] <= 0) continue;
                    if (NTRB[J] == 0) continue;
                    if (NTRB[J] > 6) NTRB[J] = 6;

                    IX1 = J;
                    if (MOD[J] > 0) IX1 = (int)MOD[J];
                    IZUE = 0;
                    if (IX1 == IZ1) goto label1450;
                    UWA006("RDISC", 52,IX1);
                    UWA006("RDISC", 59,IX1);
                    IZ5 = ITTEND[IX1];
                    A7 = E1T[IZ5+1,K];
                    UWA006("RDISC", 52,IX1+1);
                    A8 = E1T[1,K];
                    if (A7+10.0 < A8 && K3 == 0 && K4 == 0) IZUE = 1;
                    if (IZUE == 0 && JZUE[J] != 0) 
                        IZUE = (int)JZUE[J];
                    if (A7+10.0 < A8 && (K3 > 0 || K4 > 0) || LLTG[14] == 2 || LLTG[14] == 3) IZUE = 2;
                    if (J > 1) goto label1450;
                    if (IZUE != 2) Y = Y - 3.5;
                    if (IZUE == 2) Y = Y - 5.0;
                    
                label1450:
                    UWA006("RDISC", 52,J);
                    K5 = K5 + 1;
                    if (KOMP1 != J && KOMP2 != J) goto label1600;

                    IZ3 = 1;
                    if (KOMP2 == J) K5 = K5 - 1;
                    if (QAMI) goto label1550;
                    if (J != KOMP1) goto label1500;
                    X = X + 0.5;
                    if (J > 1) X = X + 2.0;
                    XXX = XXX + 3.5;
                    if (KOMP2 != 0) goto label1900;
                    IZ2 = (int)NTRB[J]-1;
                    
                    if (IZ2 > 0) IZ2 = IZ2 - 1;
                    XX = 1.5;
                    if (IZ2 > 1) XX = 1.0;
                    X = X + XX + 0.5*IZ2;
                    if (IX1 != IZ1) XXX = XXX + 2.0;
                    if (J == 1 && IABHI == 2) XXX = XXX + 3.5;
                    goto label1900;
                    
                label1500:
                    IZ2 = (int)NTRB[J] - 1;
                    XX = 1.5;
                    if (IZ2 > 1) XX = 1.0;
                    X = X + XX + 0.5*IZ2;
                    if (IX1 != IZ1) XXX = XXX + 2.0;
                    if (IX1 != IZ1 && IABHI == 2) XXX = XXX + 3.5;
                    goto label1900;
                    
                label1550:
                    if (KOMP2 == J && IX1 == IZ1) X = X - 4.0;
                    if (KOMP2 == J && IX1 == IZ1 && QAMI) X = X + 2.0;
                    if (KOMP2 == J) goto label1900;
                    X = X + 12.5;
                    IZ2 = (int)NTRB[J] - 1;
                    if (KOMP2 == 0) IZ2 = IZ2 - 1;
                    if (IZ2 > 2) X = X + 0.5*(IZ2-3);
                    goto label1900;

                label1600:
                    if (IFLUT[J] >= 2) NTRB[J] = NTRB[J] + 6;
                    if (LLTG[14] == 2 || LLTG[14] == 3 || K3 > 0 || K4 > 0)
                        NTRB[J] = NTRB[J] + 12;

                    if (LHEIZ == 9 && J == NTTETB[2]) K5 = K5 - 1;
                    if (LHEIZ == 9 && J == NTTETB[2]) goto label1900;
                    if (JJ > 1 && J == IZ1 && IFLUT[J] > 0) K5 = K5 - 1;
                    if (JJ > 1 && J == IZ1 && IFLUT[J] > 0)     continue;       //goto label1910;
                    IZ3 = IFLUT[J];
                    if (IZ3 > 2) IZ3 = 2;
                    //goto label(1700,1800),
                    if(IZ3 == 1)    goto label1700;
                    if(IZ3 == 2)    goto label1800;

                label1700:
                    IZ2 = (int)NTRB[J] - 1;
                    
                    if (NTRB[J] > 7)
                        IZ2 = (int)NTRB[J] - 13;
                    
                    XX = 1.5;
                    if (IZ2 == 1) XX = 1.0;
                    if (IZ2 >= 2) XX = 0.5;
                    if (QAMI) goto label1750;
                    if (MENTN[J] == 1) goto label1710;
                    if (LHEIZ == 9 && J == NTTETB[2]) goto label1900;
                    if (J > 1 || IWESEL > 0) X = X + XX + 0.5*IZ2;
                    XXX = XXX + 3.5;
                    if (IX1 != IZ1) XXX = XXX + 2.0;
                    if (J == 1 && IABHI == 2) XXX = XXX + 1.5;
                    if (IZUE == 1) X = X + 1.0;
                    if (IZUE == 1) XXX = XXX + 1.5;
                    if (LHEIZ != 9) goto label1900;
                    if (J == NTTETB[1]) XXX = XXX + 0.5;
                    if (J == NTTETB[1]) X = X + 0.5;
                    goto label1900;

                label1710:
                    X = X + XX + 0.5*IZ2;
                    XXX = XXX + 1.0;
                    if (IX1 == IZ1) XXX = XXX - 2.0;
                    K5 = K5 - 1;
                    goto label1900;
                    
                label1750:
                    if (J == 1) X = X + XX + 0.5*IZ2 + 5.5;
                    if (J != 1 && IX1 != IZ1) X=X+XX+0.5*IZ2+7.0;
                    if (IX1 == IZ1) X=X+XX+0.5*IZ2+4.0;
                    if (IX1 == IZ1) Y = Y - 3.5;
                    goto label1900;

                label1800:
                    IZ2 = (int)NTRB[J] - 7;
                    if (NTRB[J] > 18) 
                        IZ2 = (int)NTRB[J] - 19;
                    if (LHEIZ == 2) X = X + 3.5;
                    if (LHEIZ == 2 && IZ2 > 2) X = X + 1.0;
                    if (LHEIZ == 2) XXX = XXX + 3.5;
                    if (LHEIZ == 2) goto label1900;
                    XX = 3.0;
                    if (IZ2 == 1) XX = 2.5;
                    if (IZ2 == 2) XX = 2.0;
                    if (IZ2 == 3) XX = 2.5;
                    if (IZ2 == 4) XX = 3.0;
                    if (IZ2 == 5) XX = 3.5;
                    if (QAMI) goto label1850;
                    if (J == 1 || IX1 == IZ1) X = X + (XX+0.5*IZ2)*0.5;
                    if (J > 1 && IX1 != IZ1) X = X + XX + 0.5*IZ2;
                    XXX = XXX + 3.5;
                    if (IX1 != IZ1) XXX = XXX + 2.0;
                    if (IX1 == IZ1) XXX = XXX + 1.0;
                    if (IZUE == 1) X = X + 1.0;
                    if (IZUE == 1) XXX = XXX + 1.5;
                    if (IX1 == IZ1 && LLTG[14] == 2) 
                        XXX = XXX + 1.4*NDTEIL;
                    if (IX1 == 1 && IABHI == 2) XXX = XXX + 1.5;
                    if (IX1 == IZ1) XXX = XXX + NDTEIL*5.5;
                    if (LHEIZ != 9) goto label1900;
                    if (J == NTTETB[1]-1) X = X + 0.5;
                    if (J == NTTETB[1]) X = X + 2.0;
                    if (J == NTTETB[1]) XXX = XXX + 4.5;
                    goto label1900;
                    
                label1850:
                    X = X + XX + 0.5*IZ2;
                    if (IX1 != IZ1) X = X + 5.5;
                    if (IX1 == IZ1) X = X + 2.5;
                    if (IX1 == IZ1) X = X + NDTEIL*10.0;
                    if (IX1 == IZ1) Y = Y - 2.0 - 0.5*IZ2;
                    
                label1900:
                    //2300 FORMAT(1H ,10H***FACT***,6I6,7E12.4)
                    if (LIGHT[6] == 1) //sw16.WriteLine("",2300)
                        sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", J.ToString().PadLeft(6),IX1.ToString().PadLeft(6),IZUE.ToString().PadLeft(6),K5.ToString().PadLeft(6),IZ2.ToString().PadLeft(6),IZ3.ToString().PadLeft(6),
                            X.ToString("0.0000E+0").PadLeft(12),XX.ToString("0.0000E+0").PadLeft(12),XXX.ToString("0.0000E+0").PadLeft(12),A7.ToString("0.0000E+0").PadLeft(12),A8.ToString("0.0000E+0").PadLeft(12));
                }   //1910 CONTINUE
            }   //2000 CONTINUE

            if (K3 > 0 && K1 > 0) K1 = K1 - 1;
            XXX = XXX + 0.7*K1;
            if (QAMI) X = X + 0.7*K1;
            if (QAMI && K1 > 0) X = X + 1.5;
            XXX = XXX + 0.7*K6;
            if (QAMI) X = X + 0.7*K6;
            if (K1 > 0) XXX = XXX + 1.5;
            if (QAMI) X = X + (K3 + K4)*6.5;
            if ( !QAMI) X = X + (K3+K4)*2.0;
            if ( !QAMI) XXX = XXX + (K3+K4)*3.5;
            if ((LHEIZ == 1 || LHEIZ == 2) && KHEIZ == 0) KHEIZ = 1;
            if (KHEIZ > 0) XXX = XXX + 9.6;
            if (KHEIZ == 0) XXX = XXX + 3.7;
            if (KHEIZ == 0 && !QAMI) X = X + 0.4;
            XXX = XXX + 5.0;
            K5MERK = K5 + K3 + K4 - 1;
            XMERK = X;
            XDXT = 0.0;
            XXXVOR = 0.0;
            XVOR = 0.0;
            IELEM = 0;
            FACTT = 1.0;
            if (QAMI) goto label2400;
            if (LIGHT[6] == 1) //sw16.WriteLine("",2300)
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", K1.ToString().PadLeft(6),K6.ToString().PadLeft(6),K3.ToString().PadLeft(6),K4.ToString().PadLeft(6),K5MERK.ToString().PadLeft(6),IVERD[1].ToString().PadLeft(6),
                    X.ToString("0.0000E+0").PadLeft(12),XXX.ToString("0.0000E+0").PadLeft(12),XDXT.ToString("0.0000E+0").PadLeft(12),FACT.ToString("0.0000E+0").PadLeft(12),FACTS.ToString("0.0000E+0").PadLeft(12));
            XXXVOR = XXX;
            XVOR = X;

            if (IVERD[1] == 1)      UWA136(1,IELEM,X,Y,XXX,XDXT,FACT,FACTS,XH);

            K5MERK = K5MERK + IELEM;
            if (K5MERK <= 0) K5MERK = 1;
            XMERK = X;
            XXXVOR = XXX - XXXVOR;
            XVOR = X - XVOR;
            
            if (LIGHT[6] == 1) //sw16.WriteLine("",2300) 
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", K1.ToString().PadLeft(6),K6.ToString().PadLeft(6),K3.ToString().PadLeft(6),K4.ToString().PadLeft(6),K5MERK.ToString().PadLeft(6),IVERD[1].ToString().PadLeft(6),
                    X.ToString("0.0000E+0").PadLeft(12),XXX.ToString("0.0000E+0").PadLeft(12),XDXT.ToString("0.0000E+0").PadLeft(12),FACT.ToString("0.0000E+0").PadLeft(12),FACTS.ToString("0.0000E+0").PadLeft(12));

            XZ = 36.5;
            if (LLTG[14] == 3) XZ = 34.5;
            if (KHEIZ == 0 && IGETRB == 9) XZ = XZ - 1.7;
            if (IVERD[1] == 1) XZ = XZ - 2.5;
            IX8 = 0;
            A9 = (1.0 + (XZ-X)/XXX)*0.5;
            if (A9 < 0.80) A9 = 0.90;
            if (A9 < 0.70) A9 = 0.85;
            if (A9 < 0.60) A9 = 0.80;
            if (A9 < 0.50) A9 = 0.72;
            if (A9 > 1.00) A9 = 1.00;
            if (KHEIZ > 1) A9 = 0.950;
            if (KHEIZ > 2) A9 = 0.72;
            if (FACTS > A9) FACTS = A9;
            A2 = FACTS;
            
        label2100:
            XTZ = XZ - XXX*FACTS;
            if (X < XTZ) XDXT = (XTZ-X)/K5MERK;
            if (X > XTZ) FACTT = XTZ/X;
            if (QAMI) goto label2200;
            if (FACTT > 0.8 && FACTS > 0.95) goto label2200;
            if (FACTT <= 0.8) FACTS = 0.95;
            if (FACTT <= 0.7) FACTS = 0.90;
            if (FACTT <= 0.6) FACTS = 0.85;
            if (FACTT <= 0.5) FACTS = 0.8;
            if (FACTT <= 0.4) FACTS = 0.72;
            if (FACTS > A9) FACTS = A9;
            if (Math.Abs(A2-FACTS) < 0.0001)    goto label2105;
            if (IX8 == 0) goto label2110;
            FACTS = (A2+FACTS)*0.5;
            FACTT = (XZ-XXX*FACTS)/X;
            
        label2105:
            if (KHEIZ <= 1) goto label2200;
            if (KHEIZ == 2 && FACTT > 0.80) FACTT = 0.80;
            if (KHEIZ == 3 && FACTT > 0.65) FACTT = 0.65;
            if (KHEIZ == 4 && FACTT > 0.50) FACTT = 0.50;
            FACTS = (XZ-FACTT*X)/XXX;
            if (FACTS > A9) FACTS = A9;
            XDXT = (XZ-FACTS*XXX-FACTT*X)/K5MERK/FACTT;
            goto label2200;
            
        label2110:
            IX8 = IX8 + 1;
            if (IX8 > 10) 
            {
                Console.WriteLine("FACTS FACTT UNGENAU");
                Console.ReadKey();
                Environment.Exit(0);
            }
            XTZ = XZ - XXX*FACTS;
            if (X < XTZ) FACTS = A9;
            XDXT = 0.0;
            FACTT = 1.0;
            A2 = FACTS;
            goto label2100;
            
        label2200:
            if (LIGHT[6] == 1)     //sw16.WriteLine("",2300) 
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", K1.ToString().PadLeft(6),K3.ToString().PadLeft(6),K4.ToString().PadLeft(6),K5.ToString().PadLeft(6),K5MERK.ToString().PadLeft(6),KHEIZ.ToString().PadLeft(6),
                    XZ.ToString("0.0000E+0").PadLeft(12),X.ToString("0.0000E+0").PadLeft(12),XXX.ToString("0.0000E+0").PadLeft(12),FACTT.ToString("0.0000E+0").PadLeft(12),FACTS.ToString("0.0000E+0").PadLeft(12),XDXT.ToString("0.0000E+0").PadLeft(12));
                //2300 FORMAT(1H ,10H***FACT***,6I6,7E12.4)
            J = NTTETB[1];
            IX2 = (int)NTRB[J] - 1;
            if (LLTG[14] == 2 || LLTG[14] == 3 || K3 > 0 || K4 > 0)
                IX2 = IX2 - 12;
            if (IFLUT[J] >= 2) IX2 = IX2 - 6;
            if (IX2 < 5) return;
            if (FACTS <= 0.85) return;
            FACTS = 0.85;
            if (FACTT > 0.85) FACTT = 0.85;
            XDXT = (XZ - XXX*FACTS - X*FACTT)/K5MERK/FACTT;
            return;
            
        label2400:
            XZ1 = 7.2;
            if (K5MERK <= 0) K5MERK = 1;
            XZ = 34.8;
            if (X < XZ) XDXT = (XZ-X)/K5MERK;
            if (X > XZ) FACTT = XZ/X;
            if (LIGHT[6] == 1) //sw16.WriteLine("",2300) 
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", K1.ToString().PadLeft(6),K3.ToString().PadLeft(6),K4.ToString().PadLeft(6),K5.ToString().PadLeft(6),K5MERK.ToString().PadLeft(6),KHEIZ.ToString().PadLeft(6),
                    FACTT.ToString("0.0000E+0").PadLeft(12),XZ1.ToString("0.0000E+0").PadLeft(12),XZ.ToString("0.0000E+0").PadLeft(12),X.ToString("0.0000E+0").PadLeft(12),XDXT.ToString("0.0000E+0").PadLeft(12));
            YFACT = 1.0;
            Y = Y - 15.0;
            if (Y >= 0.0) return;
            YFACT = 21.6/(21.6-Y);
            if (YFACT >= FACTT) return;
            XDXT = (XZ-X*YFACT)/K5MERK;
            
            if (LIGHT[6] == 1)      //sw16.WriteLine("",2300) 
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}", K1.ToString().PadLeft(6),K3.ToString().PadLeft(6),K4.ToString().PadLeft(6),K5.ToString().PadLeft(6),K5MERK.ToString().PadLeft(6),KHEIZ.ToString().PadLeft(6),
                    FACTT.ToString("0.0000E+0").PadLeft(12),YFACT.ToString("0.0000E+0").PadLeft(12),Y.ToString("0.0000E+0").PadLeft(12),XDXT.ToString("0.0000E+0").PadLeft(12),XZ.ToString("0.0000E+0").PadLeft(12),X.ToString("0.0000E+0").PadLeft(12));
            FACTT = YFACT;
            return;

        label3000:
            NN04 = 0;
            NKELEM = 0;
            KPMP = 0;
            KUMP = 0;
            KF = 1;
            if ( !QAMI) goto label3200;

            for(I = 1; I <= IHENDE; I++) //DO 3100 I = 1,IHENDE
            {
                if (LTYP[I] != 4) continue;
                NN04 = NN04 + 1;
                NKELEM = I;
            }   //3100 CONTINUE
            goto label3400;

        label3200:
            for(I = 1; I <= IHENDE; I++)    //DO 3300 I = 1,IHENDE
            {
                if (LTYP[I] != 3 && LTYP[I] != 13) 
                    continue;
                if (KPMP == 0) NKELEM = I;
                if ((LTYP[I] == 3 || LTYP[I] == 13) && KPMP == 0) KPMP = 1;
            }   //3300 CONTINUE
            KPMP = 0;
            KELEM = 0;
            if (LHEIZ == 1 || LHEIZ == 2) KPMP = 1;
            
        label3400:
            II = 1;
            if (LHEIZ == 1 || LHEIZ == 2) II = 3;

            for(I = II; I <= IHENDE; I++)   //DO 5700 I = II,IHENDE
            {
                if (QAMI && I == 2 && LTYP[I] == 8 && NDTEIL > 0) continue;
                N = LTYP[I] + 1;
                if (N == 9 && KUMP != 0 && KUMP == NBLTG[I,1]) continue;
                KUMP = 0;
                if (N == 8 && !QAMI)    continue;
                if (N != 21 && N != 23) KELEM = KELEM + 1;
                if (N == 1 || N == 7 || N == 11) KELEM = 1;
                XKONDK = 0.0;
                if ((N == 3 || N == 22) && DTK[I] != 0.0) XKONDK = 0.5;
                NL = 0;
                NELEM = 1;
                //goto label(4100,3500,3500,4700,3600,3500,5600,3600,5300,5600,5600,5700,3600,4600,5700,5700,5700,5700,5700,5700,5700,3500,5700,5700),
                if(N == 1)      goto label4100;
                if(N == 2)      goto label3500;
                if(N == 3)      goto label3500;
                if(N == 4)      goto label4700;
                if(N == 5)      goto label3600;
                if(N == 6)      goto label3500;
                if(N == 7)      goto label5600;
                if(N == 8)      goto label3600;
                if(N == 9)      goto label5300;
                if(N == 10)     goto label5600;
                if(N == 11)     goto label5600;
                if (N == 12)    continue;      /// goto label5700;
                if(N == 13)      goto label3600;
                if(N == 14)      goto label4600;
                if(N == 15)      goto label4100;
                if(N == 16)      goto label4100;
                if(N == 17)      goto label4100;
                if(N == 18)      goto label4100;
                if(N == 19)      goto label4100;
                if(N == 20)      goto label4100;
                if(N == 21)      goto label4100;
                if(N == 22)      goto label4100;
                if(N == 23)      goto label4100;
                if(N == 24)      goto label4100;

            label3500:
                NELEM = 2;
                if (N2[I] != 0) goto label3600;
                if (NBLTG[I,1] != 0 || NBLTG[I,2] != 0) goto label4100;
                goto label5600;
                
            label3600:
                NELEMV = NELEM;
                if (LTYP[I+1] != 8) goto label4000;
                JJ = N2[I];
                IX3 = NBLTG[I+1,1];
                if (IX3 == JJ) goto label3900;
                IX2 = JJ;
                L2 = IHENDE + 1;
                
            label3700:
                for(L1 = L2; L1 <= INENDE; L1++) //DO 3800 L1 = L2,INENDE
                {
                    if (IX2 != NN1[L1]) continue;
                    IX2 = NN2[L1];
                    if (IX2 == IX3) goto label3900;
                    goto label3700;
                }   //3800 CONTINUE
                goto label4000;
                
            label3900:
                KUMP = IX3;
                if (NBLTG[I,1] != 0 || NBLTG[I,2] != 0) goto label4100;
                goto label5600;
                
            label4000:
                NELEM = 3;
                if (NELEMV == 2) NELEM = 4;
                if (NBLTG[I,1] == 0 && NBLTG[I,2] == 0) goto label5600;
                
            label4100:
                if (NBLTG[I,1] == 0) goto label4400;
                if (N == 1 || N == 5 || N == 9 || N == 11 || N == 19 || N == 23)
                    goto label4400;
                M = I + 1;
                for(L = M; L <= IHENDE; L++) //DO 4200 L = M,IHENDE
                {
                    JX = N2[L];
                    if (JX == NBLTG[I,1]) goto label4300;
                }   //4200 CONTINUE
                goto label4400;
                
            label4300:
                NELEMV = NELEM;
                NELEM = 5;
                if (NELEMV == 2) NELEM = 6;
                if (NELEMV == 3) NELEM = 7;
                if (NELEMV == 4) NELEM = 8;
                
            label4400:
                M = 1;
                if (NELEM == 5 || NELEM == 6 || NELEM == 7 || NELEM == 8) M = 2;
                for(L = M; L <= 8; L++)     //DO 4500 L = M,8
                {
                    NLL = NBLTG[I,L];
                    if (NLL == 0) continue;
                    NL = NL + 1;
                }   //4500 CONTINUE
                if (NL == 0) goto label5600;
                NELEMV = NELEM;
                NELEM = 9;
                if (NELEMV == 2) NELEM = 10;
                if (NELEMV == 3) NELEM = 11;
                if (NELEMV == 4) NELEM = 12;
                if (NELEMV == 5) NELEM = 13;
                if (NELEMV == 6) NELEM = 14;
                if (NELEMV == 7) NELEM = 15;
                if (NELEMV == 8) NELEM = 16;
                goto label5600;
                
            label4600:
                if (LTYP[I-1] == 0) NELEM = 2;
                if (PW[I] > (PW[I-1]+1.0) && KPMP == 0) NELEM = 3;
                if (PW[I] > (PW[I-1]+1.0) && KPMP == 1) NELEM = 4;
                goto label5600;
                
            label4700:
                if (I > 1 && LTYP[I-1] == 0) NELEM = 9;
                if (LTYP[I-1] != 0) KPMP = 1;
                if ((LHEIZ == 1 || LHEIZ == 2) && NELEM == 9 && (LTYP[I+1] == 1 || LTYP[I+1] == 2 || LTYP[I+1] == 21)) 
                    XKONDK = 2.3;
                if(NELEM == 9 && (LHEIZ == 1 || LHEIZ == 2)) NELEM=1;
                if (NELEM == 9) KPMP = 1;
                if (NKELEM == 0 && NELEM == 9) NKELEM = I;
                if (N1[I] == 0) goto label5000;
                NELEM = 2;
                JJ = N2[I];
                L1 = IHENDE + 1;
                
            label4800:
                for(L = L1; L <= INENDE; L++)   //DO 4900 L = L1,INENDE
                {
                    IZ4 = NN1[L];
                    if (IZ4 == 0) continue;
                    if (IZ4 != JJ) continue;
                    if (LTYP[L] == 0) NELEM = 3;
                    if (LTYP[L] == 3) NELEM = 4;
                    JJ = NN2[L];
                    goto label4800;
                }   //4900 CONTINUE
                
            label5000:
                if (LTYP[I-1] != 18) goto label5100;
                NELEMV = NELEM;
                NELEM = 5;
                if (NELEMV == 2) NELEM = 6;
                if (NELEMV == 3) NELEM = 7;
                if (NELEMV == 4) NELEM = 8;
                
            label5100:
                if (K == 1) goto label5250;
                IP = 0;
                IX1 = IHENDE + 1;
                
            label5200:
                IX1 = IX1 - 1;
                if (LTYP[IX1] == 3) IP = IP + 1;
                if (IX1 > I) goto label5200;
                if (GWAS[I] >= GPMIN[IP]*IPUMP[I]) goto label5250;
                NELEM = NELEM + 10;
                
            label5250:
                if (NELEM > 1 && NELEM < 5 && (LTYP[I+1] == 2 || LTYP[I+1] == 21)) XKONDK = 2.1;
                if (NELEM > 1 && NELEM < 5 && (LTYP[I+1] == 2 || LTYP[I+1] == 21) && DTK[I+1] > 0.0) XKONDK = 1.3;
                if (NELEM == 9 && (LTYP[I+1] == 1 || LTYP[I+1] == 2 || LTYP[I+1] == 21)) XKONDK = 2.3;
                goto label5600;
                
            label5300:
                M = 1;
                JJ = N2[I];
                if (JJ == 0) goto label5400;
                NELEM = 2;
                
            label5400:
                if (NBLTG[I,1] == 0 && NBLTG[I,2] == 0) goto label5600;
                if (NBLTG[I,1] != N2[I+1]) goto label5500;
                NELEMV = NELEM;
                NELEM = 3;
                if (NELEMV == 2) NELEM = 4;
                M = 2;
                
            label5500:
                if (NBLTG[I,M] == 0) goto label5600;
                NELEMV = NELEM;
                NELEM = 9;
                if (NELEMV == 2) NELEM = 10;
                if (NELEMV == 3) NELEM = 11;
                if (NELEMV == 4) NELEM = 12;
                
            label5600:
                if (QAMI && N == 9 && (LTYP[I+1] == 4 || LTYP[I+2] == 4))
                    NELEM = NELEM + 20;
                
                UWA122(N,NELEM);
            }   //5700 CONTINUE

            if (NKELEM == 0 && LTYP[1] == 0) NKELEM = 1;
            if (LHEIZ == 1 || LHEIZ == 2) NKELEM = 0;
            if (LTYP[1] != 6) KELEM = KELEM - NKELEM;
            XELEM = KELEM;
            XDX = 0.0;
            FACTE = 1.0;
            if (QAMI) goto label6400;
            A3 = XZ;
            XZ = XZ - 1.0 - XVOR*FACTT - XXXVOR*FACTS;
            if (LLTG[14] == 3) XZ = XZ + 2.0;
            A2 = FACTS;
            I = 0;
            
        label5900:
            if (KHEIZ == 0) XKZ = XZ - 3.7*FACTS - 0.4;
            if (KHEIZ > 0) XKZ = XZ - 9.6*FACTS;
            XK = -X;
            if (XK > XKZ) FACTE = XKZ/XK;
            if (XK < XKZ) XDX = (XKZ - XK)/XELEM;
            if (LIGHT[6] == 1)  //sw16.WriteLine("",6300) 
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}",FACTE.ToString("0.0000E+0").PadLeft(12),
                    FACTT.ToString("0.0000E+0").PadLeft(12),FACTS.ToString("0.0000E+0").PadLeft(12),XKZ.ToString("0.0000E+0").PadLeft(12),
                    XK.ToString("0.0000E+0").PadLeft(12),XELEM.ToString("0.0000E+0").PadLeft(12),XDX.ToString("0.0000E+0").PadLeft(12));
            FACT = FACTE;
            XT = XDXT*K5MERK;
            XDXT = 0.0;
            if (FACTE == FACTT) goto label6200;
            if (FACTE < FACTT) goto label6000;
            FACT = FACTT;
            XDX = (XKZ - XK*FACTT)/XELEM/FACTT;
            goto label6200;
            
        label6000:
            FACT = FACTE;
            if (FACTE > 0.5) goto label6100;
            if (KHEIZ == 0) goto label6100;
            FACTS = (9.6-XK*(0.505-FACTE))/9.6;
            if (FACTS < 0.75) FACTS = 0.75;
            FACTE = (XZ-9.6*FACTS)/XK;
            if (FACTE > FACTT) FACTE = FACTT;
            FACTS = (XZ-FACTE*XK)/9.6;
            A2 = FACTS;
            FACT = FACTE;
            goto label6110;
            
        label6100:
            if (FACTE < 0.8 && FACTS > 0.95) FACTS = 0.95;
            if (FACTE < 0.7 && FACTS > 0.90) FACTS = 0.90;
            if (FACTE < 0.6 && FACTS > 0.85) FACTS = 0.85;
            if (FACTE < 0.5 && FACTS > 0.80) FACTS = 0.80;
            FACTS = (FACTS + A2)*0.5;
            if (KHEIZ == 0) FACTE = (XZ-3.7*FACTS-0.4)/XK;
            if (KHEIZ > 0) FACTE = (XZ-9.6*FACTS)/XK;
            if (FACTE < 0.30) 
            {
                Console.WriteLine("FACTE < 0.30");
                Console.ReadKey();
                Environment.Exit(0);
            }
            
        label6110:
            XTZ = A3 - XXX*FACTS;
            XDXT = (XTZ-XMERK*FACTE-XT*FACTE)/K5MERK/FACTE;
            if (XDXT < 0.0) XT = XT + XDXT*K5MERK;
            if (XDXT < 0.0) XDXT = 0.0;
            if (Math.Abs(A2-FACTS) < 0.0001) goto label6200;
            I = I + 1;
            if (I > 20) 
            {
                Console.WriteLine("UWA103 - FACTS UNGENAU");
                Console.ReadKey();
                Environment.Exit(0);
            }
            A2 = FACTS;
            goto label5900;
            
        label6200:
            if (LIGHT[6] == 1) //sw16.WriteLine("",6300)
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6} ", FACT.ToString("0.0000E+0").PadLeft(12),FACTE.ToString("0.0000E+0").PadLeft(12),
                    FACTT.ToString("0.0000E+0").PadLeft(12),FACTS.ToString("0.0000E+0").PadLeft(12),XT.ToString("0.0000E+0").PadLeft(12),
                    XDXT.ToString("0.0000E+0").PadLeft(12), XDX.ToString("0.0000E+0").PadLeft(12));
            //6300 FORMAT(1H0,10H***FACT***,7F12.4);
            
            if (XDXT > 0.0 && K5MERK == 1) XT = XT + XDXT;
            if (XDXT > 0.0 && K5MERK == 1) XDXT = 0.0;
            if (XDXT <= 5.5) goto label6500;
            if (K5MERK == 1) goto label6500;
            XT = XT + (XDXT-5.5)*K5MERK;
            XDXT = 5.5;
            goto label6500;
            
        label6400:
            YZ1 = 6.0;
            YZ = 38.0;
            if (X > YZ1) XDX = (X-YZ1)/XELEM;
            FACTE = 1.0;
            XZZ = 32.0;
            if (X < YZ1) FACTE = XZZ/(YZ-X);
            if (FACTE == FACTT) goto label6420;
            if (FACTE < FACTT) goto label6410;
            FACT = FACTE;
            YZ = YZ - (YZ-X)*FACTT;
            XDX = 0.0;
            if (YZ > YZ1) XDX = (YZ-YZ1)/XELEM/FACTT;
            FACT = FACTT;
            goto label6420;
            
        label6410:
            XDXT = 0.0;
            if (XMERK*FACTE < XZ) XDXT = (XZ-XMERK*FACTE)/K5MERK/FACTE;
            FACT = FACTE;
            
        label6420:
            FACTS = FACT;
            if (LIGHT[6] == 1) //sw16.WriteLine("",6300)
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}", FACT.ToString("0.0000E+0").PadLeft(12),FACTE.ToString("0.0000E+0").PadLeft(12),
                    FACTT.ToString("0.0000E+0").PadLeft(12),FACTS.ToString("0.0000E+0").PadLeft(12),XDXT.ToString("0.0000E+0").PadLeft(12),
                    XDX.ToString("0.0000E+0").PadLeft(12),X.ToString("0.0000E+0").PadLeft(12));

        label6500:
            IDINA4 = 0;
            XDINA4 = 0.0;
            if (QAMI) goto label6900;
            for(L = 1; L <= 160; L++) //DO 6510 L=1,160
                if (IPL[L] > 0) 
                    goto label6900;     //6510 CONTINUE
            
            if (IVERD[1] == 1) goto label6900;
            A1 = XT;
            A2 = XDXT;
            A3 = XDX;
            A4 = FACTS;

            FACTS = 0.8;
            FACTT = 1.0;
            XZ = XZ + 1.0;
            if (LLTG[14] == 3) XZ = XZ - 2.0;
            XDINA4 = 21.0;
            XZ = XZ - XDINA4;
            XTZ = XZ - XXX*FACTS;
            if (XTZ <= 0.0) goto label6800;
            if (XMERK >= XTZ) FACTT = XTZ/XMERK;
            if (FACTT > FACTS) FACTT = FACTS;
            if (LIGHT[6] == 1) //sw16.WriteLine("",6300)
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}",FACTS.ToString("0.0000E+0").PadLeft(12),FACTT.ToString("0.0000E+0").PadLeft(12),XZ.ToString("0.0000E+0").PadLeft(12),XTZ.ToString("0.0000E+0").PadLeft(12),XMERK.ToString("0.0000E+0").PadLeft(12),XXX.ToString("0.0000E+0").PadLeft(12),XT.ToString("0.0000E+0").PadLeft(12));
            if (FACTT < 0.60) goto label6800;
            XDXT = 0.0;
            if (XMERK*FACTT < XTZ) XDXT = (XTZ-XMERK*FACTT)/K5MERK;
            XT = XDXT*K5MERK;
            XDXT = 0.0;
            if (LIGHT[6] == 1) //sw16.WriteLine("",6300)
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}",FACTS.ToString("0.0000E+0").PadLeft(12),FACTT.ToString("0.0000E+0").PadLeft(12),XZ.ToString("0.0000E+0").PadLeft(12),XTZ.ToString("0.0000E+0").PadLeft(12),XMERK.ToString("0.0000E+0").PadLeft(12),XXX.ToString("0.0000E+0").PadLeft(12),XT.ToString("0.0000E+0").PadLeft(12));

            FACTE = 1.0;
            XZ = XZ - 1.0;
            if (LLTG[14] == 3)      XZ = XZ + 2.0;
            XDX = 0.0;
            XK = -X;
            XKZ = XZ - 0.4 - 3.7*FACTS;
            if (XK > XKZ) FACTE = XKZ/XK;
            if (FACTE > FACTS) FACTE = FACTS;
            if (LIGHT[6] == 1) //sw16.WriteLine("",6300)
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}", FACTS.ToString("0.0000E+0").PadLeft(12),FACTE.ToString("0.0000E+0").PadLeft(12),XZ.ToString("0.0000E+0").PadLeft(12),XKZ.ToString("0.0000E+0").PadLeft(12),XK.ToString("0.0000E+0").PadLeft(12),XELEM.ToString("0.0000E+0").PadLeft(12),XDX.ToString("0.0000E+0").PadLeft(12));
            if (FACTE < 0.60) goto label6800;
            if (XK*FACTE < XKZ) XDX = (XKZ-XK*FACTE)/XELEM;
            if (LIGHT[6] == 1)      //sw16.WriteLine("",6300)
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}", FACTS.ToString("0.0000E+0").PadLeft(12),FACTE.ToString("0.0000E+0").PadLeft(12),XZ.ToString("0.0000E+0").PadLeft(12),XKZ.ToString("0.0000E+0").PadLeft(12),XK.ToString("0.0000E+0").PadLeft(12),XELEM.ToString("0.0000E+0").PadLeft(12),XDX.ToString("0.0000E+0").PadLeft(12));
            FACT = FACTT;
            if (FACTE == FACTT) goto label6700;
            if (FACTE < FACTT) goto label6600;
            XDX = (XKZ-XK*FACTT)/XELEM/FACTT;
            goto label6700;

        label6600:
            FACT = FACTE;
            XDXT = (XTZ-XMERK*FACTE-XT*FACTE)/K5MERK/FACTE;
            if (XDXT < 0.0) XT = XT + XDXT*K5MERK;
            if (XDXT < 0.0) XDXT = 0.0;
            if (XDXT > 0.0 && K5MERK == 1) XT = XT + XDXT;
            if (XDXT > 0.0 && K5MERK == 1) XDXT = 0.0;

        label6700:
            if (LIGHT[6] == 1)      //sw16.WriteLine("",6300) 
                sw16.WriteLine(" ***FACT***{0}{1}{2}{3}{4}{5}{6}", FACT.ToString("0.0000E+0").PadLeft(12),FACTE.ToString("0.0000E+0").PadLeft(12),FACTT.ToString("0.0000E+0").PadLeft(12),FACTS.ToString("0.0000E+0").PadLeft(12),XT.ToString("0.0000E+0").PadLeft(12),XDXT.ToString("0.0000E+0").PadLeft(12),XDX.ToString("0.0000E+0").PadLeft(12));
            IDINA4 = 1;
            goto label6900;

        label6800:
            XT = A1;
            XDXT = A2;
            XDX = A3;
            FACTS = A4;
            XDINA4 = 0.0;

        label6900:
            KF = 0;
            if (K == 2 && NANZ[1] != 0) goto label8000;
            M = 0;
            for(I = 1; I <= IHENDE; I++)    //DO 7200 I = 1,IHENDE
            {
                N = LTYP[I] + 1;
                if (N != 2 && N != 3 && N != 22) continue;
                if (N == 2 && N1[I] == 19) continue;
                M = M + 1;
                KANZ = M;
                IZ1 = N1[I];
                NANZ[M] = IZ1;
                NANZVW[M] = IZ1;
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 > 0) continue;
                
                for(M1 = 1; M1 <= IHENDE; M1++) //DO 7000 M1 = 1,IHENDE
                {
                    if (LTYP[M1] != 5) continue;
                    if (IZ1 != N2[M1]) continue;
                    IZ1 = N1[M1];
                    NANZ[M] = -IZ1;
                    UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 != 0) goto label7200;
                    goto label7010;
                }   //7000 CONTINUE

            label7010:
                if (IHENDE == INENDE) continue;     //goto label7200
                M2 = IHENDE + 1;
                
            label7020:
                for(M1 = M2; M1 <= INENDE; M1++)    //DO 7100 M1 = M2,INENDE
                {
                    if (IZ1 != NN2[M1] && IZ1 != N2[M1]) 
                        continue;
                    NANZ[M] = -NN1[M1];
                    IZ1 = NN1[M1];
                    if (NTYP[M1] == 5) NANZ[M] = -N1[M1];
                    if (NTYP[M1] == 5) IZ1 = N1[M1];
                    if (M > 1 && NANZ[M] == NANZ[M-1]) NANZVW[M-1] = 0;
                    if (M > 1 && NANZ[M] == NANZ[M-1]) NANZ[M-1] = 0;
                    UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 > 0)    break;      //goto label7200
                    goto label7020;
                }   //7100 CONTINUE
        label7200:
            ;
            }   //7200 CONTINUE

            MX = 0;
            M2 = IHENDE + 1;
            for(I = M2; I <= INENDE; I++)   //DO 7500 I = M2,INENDE
            {
                if (LTYP[I] != 19) continue;
                if (NN1[I] < 41 || NN1[I] > 46) continue;
                MX = MX + 1;
                IZ1 = N1[I];
                NANZDU[MX] = IZ1;
                UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                if (IX2 > 0) continue;
                
            label7300:
                for(M1 = M2; M1 <= INENDE; M1++) //DO 7400 M1 = M2,INENDE
                {
                    if (LTYP[M1] != 8) continue;
                    if (IZ1 != NN2[M1] && IZ1 != N2[M1]) continue;
                    NANZDU[MX] = -NN1[M1];
                    IZ1 = NN1[M1];
                    UWA008("UNPACK", ILTG[IZ1], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 > 0) break;     //goto label7500
                    goto label7300;
                }   //7400 CONTINUE
            }   //7500 CONTINUE

        label8000:
            if (IHENDE == INENDE) return;
            L1 = IHENDE + 1;
            for(L = L1; L <= INENDE; L++)   //DO 8300 L=L1,INENDE
            {
                if (LTYP[L] != 2 && LTYP[L] != 21) continue;
                II = N1[L];
                if (II < 35 || II > 39) continue;
                UWA008("UNPACK", ILTG[II], ref IX1, ref IX2, ref IX3, ref IX4);
                IZ3 = II-34;
                IM[IZ3] = II;
                if (IX2 != 0) continue;
                IZ4 = II;
                
            label8100:
                for(N = L1; N <= INENDE; N++)   //DO 8200 N=L1,INENDE
                {
                    IZ1 = NN1[N];
                    IZ2 = NN2[N];
                    JJ = N2[N];
                    if (IZ4 != IZ2 && IZ4 != JJ) continue;
                    IZ4 = IZ1;
                    UWA008("UNPACK", ILTG[IZ4], ref IX1, ref IX2, ref IX3, ref IX4);
                    if (IX2 == 0) goto label8100;
                    IM[IZ3] = IZ4;
                    break;  // goto label8300;
                }   //8200 CONTINUE
            }   //8300 CONTINUE
            return;
        }   //END
        

        static void UWA104()
        {   
            //ENTRY TURBOS
            //LOGICAL QANZDU, QPLOT
            bool QMOD = false,QSTE = false,QSTA = false;
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //LOGICAL QNDWAS,QANZPA
            //DIMENSION FELD(80)
            double[] FELD = new double[81], NK = new double[11], NKK = new double[11];
            //DIMENSION IENTN[5]

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20) ,
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /ABCDEF/ ABDUWA[5]
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /PRINT/ IWR,TX0,TX13,TX14,TX15,TX16,TX17,TX18
            //COMMON /KONDTR/ UEEP[3],ELEP[3],PELEP[3]
            //COMMON /ELEKTR/ PKLEMM,PGENN,ETAGLR,ETAMV,ETAGV,COSPHI,PH2,MAKEUP
            //1 ,SCR,POL,VOLTG,FLUTND,ENDSCH,DREHZ,PKLEMA
            //COMMON /LEISTG/ IELEKT,PELEKT
            //COMMON /HEAT/ HEAT1,HEAT2,HEAT3,HEAT4,HEAT5,HEAT6,HEAT7,HEAT8,
            //1 PFDPL,TFDPL
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /KOLBEN/ GKOLB,GKOLB1
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /STOPF/ QSTE,QSTA
            //COMMON /ZUSAMM/ MOD[7]
            //COMMON /WESEL / IWESEL,MENTN[4]
            //COMMON /NTEILT/ NDTEIL
            //COMMON /DINA4/ IDINA4,XDINA4
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS
            //COMMON /ZUE/ JZUE[7]
            int NFD = 0, IFD = 0, I1 = 0, N = 0, LL = 0, I2 = 0, M1 = 0, L1 = 0, L2 = 0, K5 = 0, LTGSTB = 0, KT2VOR = 0,
                KT3VOR = 0, K6 = 0, K4 = 0, L = 0, IX = 0, IANST = 0, K7=  0, K8 = 0, IZUE = 0;
            double T = 0, E = 0, KT2M = 0, KTST = 0, FST = 0, EZUEE = 0, GZUEE = 0, GF = 0;

            FACTOR (FACT);

            if (IVERD[1] == 1) 
                UWA136(0,K1,X,Y,XX,XDXT,FACT,FACTS,XH);

            if (LIGHT[6] == 1) //sw16.WriteLine("",10) 
                sw16.WriteLine("0*** TURBOS 1 ***{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}{17}{18}{19}{20}{21}{22}{23}{24}{25}{26}",
                    IVERD[1].ToString().PadLeft(2),IKLAB[1].ToString().PadLeft(2),IZWKUE.ToString().PadLeft(2),IVERD[2].ToString().PadLeft(2),
                    IKLAB[2].ToString().PadLeft(2),IREKU.ToString().PadLeft(2),IZUF[1].ToString().PadLeft(2),IBRK[1].ToString().PadLeft(2),
                    IKLZU[1].ToString().PadLeft(2),IGTURB[1].ToString().PadLeft(2),IKLZU[3].ToString().PadLeft(2),IZUF[2].ToString().PadLeft(2),
                    IBRK[2].ToString().PadLeft(2),IKLZU[2].ToString().PadLeft(2),IGTURB[2].ToString().PadLeft(2), IKLZU[4].ToString().PadLeft(2),
                    IABHI.ToString().PadLeft(2),NGAST.ToString().PadLeft(2),KABHI.ToString().PadLeft(2),K1.ToString().PadLeft(2),
                    Math.Round(X,4).ToString().PadLeft(8),Math.Round(Y,4).ToString().PadLeft(8), XX.ToString().PadLeft(8),
                    Math.Round(XDXT,4).ToString().PadLeft(8),Math.Round(FACT,4).ToString().PadLeft(8),Math.Round(FACTS,4).ToString().PadLeft(8),
                    Math.Round(XH,4).ToString().PadLeft(8));
            //10 FORMAT(1H0,'*** TURBOS 1 ***',20I2,7F8.4)

            NFD = 0;
            IFD = 0;
            QABC[4] = true;
            UWA006("RDISC", 52,1);
            UWA006("RDISC", 59,1);

            FELD[1] = PT[1,K]*TX2;
            FELD[2] = E1T[1,K]*TX1;
            FELD[3] = G[1,K]*TX3;
            T = VISUM(PT[1,K],E1T[1,K],03);
            if (T < 0.0) T = T + 273.15;
            T = T - 273.15;
            if (T > 0.0) T = T*TX0 + TX5 + 0.004;
            if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
            FELD[4] = T;
            K1 = 0;
            K2 = 0;
            if (LTYP[IHENDE] != 7) goto label400;

            I = IHENDE + 1;
            
        label100:
            I = I - 1;
            if (LTYP[I] != 7) goto label110;
            goto label100;
            
        label110:
            I1 = I + 1;
            for(I = I1; I <= IHENDE; I++)   //DO 300 I=I1,IHENDE
            {
                IZ4 = N2[I];
                if (IZ4 == 0) continue;
                if (I != NDRUCK) goto label200;

                FELD[77] = PLTG[IZ4]*TX2;
                FELD[78] = ELTG[IZ4]*TX1;
                FELD[79] = GLTG[IZ4]*TX3;
                T = VISUM(PLTG[IZ4],ELTG[IZ4],03);
                if (T <= 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0 + TX5;
                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                FELD[80] = T;

                IZ5 = IDRUCK;
                FELD[69] = PLTG[IZ5]*TX2;
                if (PDRUCK > 0.0) FELD[69] = PDRUCK*TX2;
                FELD[70] = ELTG[IZ5]*TX1;
                FELD[71] = GLTG[IZ5]*TX3;
                T = VISUM(PLTG[IZ5],ELTG[IZ5],03);
                if (T <= 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0 + TX5;
                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                FELD[72] = T;
                continue;

            label200:
                K1 = K1 + 1;
                N = K1*4 + 1;
                FELD[N] = PLTG[IZ4]*TX2;
                FELD[N+1] = ELTG[IZ4]*TX1;
                FELD[N+2] = GLTG[IZ4]*TX3;
                T = VISUM(PLTG[IZ4],ELTG[IZ4],03);
                if (T <= 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0 + TX5;
                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                FELD[N+3] = T;
                E = VISUM(PLTG[IZ4],T,-21);
                if (ELTG[IZ4] > E) K2 = (int)(K2 + Math.Pow(10,(K1-1)));
                if (NRABC[IZ4] != 0) goto label220;
                
                for(LL = 4; LL <= 26; LL++)     //DO 210 LL = 4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[IZ4] = LL;
                    UWA114(IZ4);
                    goto label220;
                }   //210 CONTINUE
                NRABC[IZ4] = 26;
            
            label220:
                LL = NRABC[IZ4];
                ABC[K1] = ABCD[LL];
            }   //300 CONTINUE

        label400:
            HEAT1 = FELD[3];
            HEAT2 = FELD[2];
            HEAT3 = EWAUS[IHENDE]*TX1;
            if (K == 1) PFDPL = FELD[1];
            if (K == 1) TFDPL = FELD[4];
            FELD[13] = WAUFW/859.845;
            if (PT[1,K] == PT[2,K] && E1T[1,K] == E1T[2,K] && G[1,K] == G[2,K] && G[2,K] == G[3,K]) NFD = 1;

            if ( !QAMI)     UWA105(0,FELD,K1,K2,LLTG[14],NFD);
            if (QAMI)   UWA141(0,FELD,K1,K2,LLTG[14],NFD);

            if (LLTG[14] != 2) goto label900;
            if (QAMI) goto label900;
            if (INENDE <= IHENDE) goto label900;

            I1 = IHENDE + 1;
            I2 = INENDE;

            for(I = I1; I <= I2; I++)   //DO 500 I=I1,I2
            {
                if (NTYP[I] != 11) continue;
                if (NN2[I] != 99) continue;
                IENTN[1] = NN1[I];
                IENTN[2] = NN2[I];
                IENTN[3] = N1[I];
                IENTN[4] = N2[I];
                goto label600;
            }   //500 CONTINUE
            goto label900;

        label600:
            for(M1 = 1; M1 <= 4; M1++) //DO 800 M1=1,4
            {
                IZ4 = IENTN[M1];
                if (IZ4 == 99) NRABC[99] = 2;
                if (NRABC[IZ4] != 0) goto label710;
                
                for(LL = 4; LL <= 26; LL++)     //DO 700 LL=4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[IZ4] = LL;
                    goto label710;
                }   //700 CONTINUE
                NRABC[IZ4] = 26;

            label710:
                LL = NRABC[IZ4];
                ABC[M1] = ABCD[LL];
                FELD[20+M1] = GLTG[IZ4]*TX3;
            }   //800 CONTINUE

            UWA105(4,FELD,0,0,0,0);

        label900:
            K1 = 0;
            K2 = 0;
            for(I = 1; I <= 2; I++)     //DO 1500 I = 1,2
            {
                UWA010(I,1);
                if (KT5 == 0) continue;
                UWA044(I,1);
                
                for(M1 = 1; M1 <= 10; M1++)     //DO 1400 M1 = 1,10
                {
                    IZ3 = LABT[M1];
                    if (IZ3 == 0) goto label1500;
                    if (IZ3 > 92 && IZ3 < 99) continue;
                    L1 = (int)(NANZDU[1]);
                    L2 = (int)(NANZDU[2]);
                    if (IZ3 == L1 || IZ3 == L2) continue;
                    if (KANZ == 0) goto label1100;
                    
                    for(L = 1; L <= KANZ; L++)  //DO 1000 L=1,KANZ
                    {
                        L1 = (int)(NANZ[L]);
                        if (IZ3 == L1) goto label1400;
                    }   //1000 CONTINUE
                    
                label1100:
                    K1 = K1 + 1;
                    FELD[K1] = GLTG[IZ3]*TX3;
                    if (IZ3 == 99) goto label1300;
                    if (NRABC[IZ3] != 0) goto label1210;
                    
                    for(LL = 4; LL <= 26; LL++)     //DO 1200 LL = 4,26
                    {
                        if (QABC[LL])       continue;
                        QABC[LL] = true;
                        NRABC[IZ3] = LL;
                        UWA114(IZ3);
                        ABC[K1] = ABCD[LL];
                        goto label1400;
                    }   //1200 CONTINUE
                    goto label1400;
                    
                label1210:
                    LL = NRABC[IZ3];
                    ABC[K1] = ABCD[LL];
                    goto label1400;
                    
                label1300:
                    NRABC[IZ3] = 2;
                    ABC[K1] = ABCD[2];

                label1400:
                    ;
                }   //1400 CONTINUE
            label1500:
                ;
            }   //1500 CONTINUE
            K2 = K1;
            
            for(I = 1; I <= 2; I++)     //DO 1800 I = 1,2
            {
                UWA010(I,1);
                if (KT5 == 0) continue;
                UWA044(I,1);
                
                for(M1 = 1; M1 <= 10; M1++)      //DO 1700 M1 = 1,10
                {
                    IZ3 = LZUT[M1];
                    if (IZ3 == 0)   break;  //goto label1800
                    K2 = K2 + 1;
                    FELD[K2] = GLTG[IZ3]*TX3;
                    if (NRABC[IZ3] != 0) goto label1610;
                    
                    for(LL = 4; LL <= 26; LL++)     //DO 1600 LL = 4,26
                    {
                        if (QABC[LL])   continue;
                        QABC[LL] = true;
                        NRABC[IZ3] = LL;
                        UWA114(IZ3);
                        ABC[K2] = ABCD[LL];
                        goto label1700;
                    }   //1600 CONTINUE
                    goto label1700;
                label1610:
                    LL = NRABC[IZ3];
                    ABC[K2] = ABCD[LL];

                label1700:
                    ;
                }   //1700 CONTINUE
            }   //1800 CONTINUE
            if (K2 > 0) IFD = 1;

            if ( !QAMI) 
                UWA105(1,FELD,K1,K2,LLTG[14],NFD);
            if (QAMI) 
                UWA141(1,FELD,K1,K2,LLTG[14],NFD);

            if (IABHI < 2) goto label1900;

            K1 = 0;
            I = IHENDE + 1;
            
        label1810:
            I = I - 1;
            if (NTYP[I] != 7) goto label1900;
            if (I != NDRUCK) goto label1810;
            IZ4 = N2[I];
            if (IZ4 == 0) goto label1810;
            if (IZ4 == NBLTG[I,1]) goto label1810;
            L1 = IHENDE + 1;
            
        label1820:
            for(L = L1; L <= INENDE; L++)   //DO 1850 L=L1,INENDE
            {
                if (IZ4 == NBLTG[I,1]) goto label1860;
                if (NN1[L] != IZ4) continue;
                IZ4 = NN2[L];
                if (NTYP[L] != 8) goto label1820;
                if (N2[L] == 0) goto label1820;
                IZ3 = N2[L];
                K1 = K1 + 1;
                K2 = K1;
                FELD[K1] = GLTG[IZ3]*TX3;
                if (NRABC[IZ3] != 0) goto label1840;
                
                for(LL = 4; LL <= 26; LL++)     //DO 1830 LL=4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[IZ3] = LL;
                    UWA114(IZ3);
                    goto label1840;
                }   //1830 CONTINUE
                
            label1840:
                LL = NRABC[IZ3];
                ABC[K1] = ABCD[LL];
                goto label1820;
            }   //1850 CONTINUE
            
        label1860:
            if (K1 == 0) goto label1900;
            UWA105(3,FELD,K1,K2,LLTG[14],NFD);

        label1900:
            K1 = 0;
            K2 = 0;
            K3 = 0;
            K5 = 0;
            GKOLB = 0.0;
            GKOLB1 = 0.0;
            FELD[9] = 0.0;
            
            for(J = 1; J <= ANZDTT; J++)    //DO 3300 J = 1,ANZDTT
            {
                UWA006("RDISC", 52,J);
                UWA006("RDISC", 59,J);
                if (STZMDT[KT10] == 99)     continue;
                IZ1 = ITTEND[J];
                
                for(I = 1; I <= IZ1; I++) //DO 3200 I = 1,IZ1
                {
                    UWA010(I,1);
                    if (LHEIZ == 9 && J == NTTETB[1] && I < 5) continue;
                    if (J < NTTETB[1] && MENTN[J+1] == 1 && I > 4) continue;
                    if (KT2 == 0) continue;
                    if (KOMP1 != J) goto label2000;
                    if (J == 1 && KT2 != 1) goto label2000;
                    if (J == 2 && KT2 != 3) goto label2000;
                    if (J == 3 && KT2 != 5) goto label2000;
                    LTGSTB = LTGAB[1,KT2];
                    FELD[9] = GLTG[LTGSTB]*TX3;
                    continue;
                    
                label2000:
                    KT2M = KT2;
                    KTST = KT2;
                    if (KT3 < KT2) KTST = KT3;
                    KT2 = (int)KTST;
                    UWA044(I,1);
                    
                label2100:
                    K2 = K2 + 1;
                    if (LLTG[14] == 3 && (KT2 == 1 || KT2 == 2)) K2 = K2 - 1;
                    if (LLTG[14] == 3 && (KT2 == 1 || KT2 == 2)) goto label2900;
                    if (LLTG[14] == 3 && KT2 == 5) K2 = K2 - 1;
                    if (LLTG[14] == 3 && KT2 == 5) goto label3100;
                    if (LLTG[14] == 2 && (KT2 == 1 || KT2 == 2)) K2 = K2 - 1;
                    if (LLTG[14] == 2 && (KT2 == 1 || KT2 == 2)) goto label2900;
                    if (LLTG[14] == 2 && KT2 == 5) K2 = K2 - 1;
                    if (LLTG[14] == 2 && KT2 == 5) goto label3100;
                    if (IFLUT[J] < 0) LL = Math.Abs(IFLUT[J]);
                    if (IFLUT[J] < 0) JKT2[LL] = K2;
                    
                    for(LL = 1; LL <= 6; LL++)  //DO 2800 LL = 1,6
                    {
                        LTGSTB = LTGAB[LL,KT2];
                        if (LTGSTB == 0)    continue;
                        Z1 = PLTG[LTGSTB];
                        K1 = K1 + 1;
                        NK2[K2] = K1;
                        
                        if (LTGSTB > 85) goto label2400;
                        int M = 0;
                        
                        for(II = 1; II <= IHENDE; II++)     //DO 2300 II=1,IHENDE
                        {
                            N = LTYP[II] + 1;
                            if (N != 2 && N != 3 && N != 6 && N != 22) continue;
                            if (N == 2 && N1[II] == 19) continue;
                            M = M + 1;
                            IX1 = (int)NANZ[M];
                            if (IX1 == 0) continue;
                            UWA008("UNPACK", ILTG[IX1], ref IX2,ref IX3,ref IX4,ref IX5);
                            if (IX4 == 0) continue;
                            UWA006("RDISC", 52,IX4);
                            if (Z1 != PT[IX5, K]) continue;
                            NN[K1] = M + 100;
                            if (LLTG[14] == 2 && M < 3) NN[K1] = 1;
                            UWA006("RDISC", 52,J);
                            goto label2400;
                        }   //2300 CONTINUE

                        if (LTGSTB == 70 && Z1 == PLTG[10]) NN[K1] = 110;
                        if (LTGSTB == 70 && Z1 == PLTG[10]) NRABC[70] = 1;
                        if (LTGSTB == 70 && Z1 == PLTG[10]) NRABC[10] = 1;

                        UWA006("RDISC", 52,J);
                        
                    label2400:
                        if (Z1 == PST905 || Z1 == PST907) NN[K1] = 3;
                        if (Z1 == PST906 || Z1 == PST908) NN[K1] = 2;
                        if (Z1 == PT[IZ1,K] && NN[K1] < 100) NN[K1] = 99;
                        if (NN[K1] == 99) FELD[74] = PT[IZ1,K]*TX2;
                        if (NN[K1] == 99) FELD[75] = E2T[I,K]*TX1;
                        if (NN[K1] == 99) T = VISUM(PT[IZ1,K],E2T[I,K],03);
                        if (NN[K1] == 99 && T > 0.0) FELD[76] = (T-273.15)*TX0+TX5;
                        if (NN[K1] == 99 && T < 0.0) FELD[76] = T;
                        if (NN[K1] == 99 && T < 0.0 && QENGL) FELD[76]=-(100.0+T*100.0);
                        if (IWESEL > 0 && NN[K1] == 0) NN[K1] = 100;
                        if (NN[K1] == 0) NN[K1] = 1;
                        FELD[45+K1] = GLTG[LTGSTB]*TX3;
                        if (KOMP1 == J && K1 == 1 && LTGSTB > 85) NN[K1] = 99;
                        if (KOMP1 == J && K1 == 2 && LTGSTB > 85) NN[K1] = 99;
                        KT2VOR = KT2;
                        KT3VOR = KT3;
                        if (NN[K1] > 100) goto label2520;
                        if (NN[K1] != 1) goto label2600;

                        IX10 = NTTETB[1] - 1;
                        if (IX10 <= 1) goto label2600;
                        UWA006("RDISC", 52,IX10);
                        UWA006("RDISC", 59,IX10);
                        IZ10 = ITTEND[IX10];
                        UWA010(IZ10,1);
                        if (KT5 == 0) goto label2600;
                        UWA044(IZ10,1);
                        
                        for(KK = 1; KK <= 10; KK++)     //DO 2500 KK=1,10
                        {
                            if (LZUT[KK] == 0) continue;
                            if (LZUT[KK] != LTGSTB) continue;
                            GKOLB = GKOLB + GLTG[LTGSTB]*TX3;
                            goto label2600;
                        }   //2500 CONTINUE
                         
                        for(IZ7 = 1; IZ7 <= ANZTRB; IZ7++)  //DO 2510 IZ7 = 1,ANZTRB
                        {
                            IZ8 = 1;
                            if (IZ7 > 1) IZ8 = NTTETB[IZ7-1] + 1;
                            IZ9 = NTTETB[IZ7];
                            if (J < IZ8 || J > IZ9)  continue;
                            if (NITRE[IZ7] == 7)     goto label2600;
                        }   //2510 CONTINUE
                        NN[K1] = 4;
                        QABC[4] = true;
                        GKOLB1 = GKOLB1 + GLTG[LTGSTB]*TX3;
                        goto label2600;

                    label2520:
                        if (Z1 >= PT[IZ1,K])    goto label2600;
                        if (K5 == 0) goto label2540;
                        for(K6 = 1; K6 <= K5; K6++)     //DO 2530 K6 = 1,K5
                        {
                            IZ7 = (int)NK[K6];
                            if (IZ7 != NN[K1])      continue;
                            NN[K1] = NKK[K6];
                            NRABC[LTGSTB] = (int)NN[K1];
                            goto label2600;
                        }   //2530 CONTINUE
                        
                    label2540:
                        K5 = K5 + 1;
                        NK[K5] = NN[K1];
                        if (NRABC[LTGSTB] > 0) goto label2560;
                        for(K6 = 5; K6 <= 26; K6++)     //DO 2550 K6=5,26
                        {
                            if (QABC[K6])   continue;
                            QABC[K6] = true;
                            NRABC[LTGSTB] = K6;
                            NKK[K5] = K6;
                            NN[K1] = K6;
                            goto label2600;
                        }   //2550 CONTINUE
                        NRABC[LTGSTB] = 4;
                        NKK[K5] = 4;
                        NN[K1] = 4;
                        goto label2600;

                    label2560:
                        K6 = NRABC[LTGSTB];
                        NKK[K5] = K6;
                        NN[K1] = K6;

                    label2600:
                        UWA006("RDISC", 52,J);
                        UWA006("RDISC", 59,J);
                        UWA010(I,1);
                        UWA044(I,1);
                        KT2 = KT2VOR;
                        KT3 = KT3VOR;
                        
                        if (NN[K1] < 99) NRABC[LTGSTB] = (int)NN[K1];
                        for(M1 = 1; M1 <= 10; M1++)     //DO 2700 M1 = 1,10
                        {
                            IZ4 = LZUT[M1];
                            if (IZ4 == 0) goto label2750;
                            if (IZ4 != LTGSTB) continue;
                            NN[K1] = -NN[K1];
                            goto label2750;
                        }   //2700 CONTINUE
                        
                    label2750:
                        if (LIGHT[6] == 1) //sw16.WriteLine("",2760) 
                            sw16.WriteLine(" **TURBOS 3**{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}",J.ToString().PadLeft(6),IZ1.ToString().PadLeft(6),
                                I.ToString().PadLeft(6),KT2.ToString().PadLeft(6),KT3.ToString().PadLeft(6),K1.ToString().PadLeft(6),NN[K1].ToString().PadLeft(6),
                                K2.ToString().PadLeft(6),NK2[K2].ToString().PadLeft(6),LL.ToString().PadLeft(6),LTGSTB.ToString().PadLeft(6),Z1.ToString("0.00000E+0").PadLeft(13));
                            //2760 FORMAT(1H ,'**TURBOS 3**',11I6,E13.5)
                    }   //2800 CONTINUE
                    goto label3100;

                label2900:
                    for(LL = 1; LL <= 6; LL++)  //DO 3000 LL = 1,6
                    {
                        LTGSTB = LTGAB[LL,KT2];
                        if (LTGSTB == 0) continue;
                        Z1 = PLTG[LTGSTB];
                        K3 = K3 + 1;
                        if (Z1 == PST905 || Z1 == PST907) ABC[K3] = ABCD[3];
                        if (Z1 == PST906 || Z1 == PST908) ABC[K3] = ABCD[2];
                        if (Z1 != PST905 && Z1 != PST906) ABC[K3] = ABCD[1];
                        FELD[K3] = GLTG[LTGSTB]*TX3;
                        K4 = K3;
                        if (LLTG[14] != 2)      continue;
                        
                        if (Z1 != PST906 && Z1 != PST908)   continue;
                        K3 = K3 - 1;
                        UWA105(1,FELD,K3,K4,LLTG[14],NFD);
                        K3 = 0;
                        K4 = 0;
                    }   //3000 CONTINUE
                    UWA105(1,FELD,K3,K4,LLTG[14],NFD);
                    IFD = 1;
                    if (KT2 >= KT3) K3 = 0;

                label3100:
                    if(KT2M == KT3) continue;
                    KT2 = KT3;
                    if (KTST != KT3) KT2M = KT3;
                    if (KTST == KT3) KT2 = (int)KT2M;
                    if (KTST == KT3) KT3 = (int)KT2M;
                    goto label2100;
                }   //3200 CONTINUE
            }   //3300 CONTINUE
            
            if (IFD > 0) 
                UWA105(2,FELD,0,0,0,0);
            
            for(JJ = 1; JJ <= ANZTRB; JJ++)     //DO 9200 JJ = 1,ANZTRB
            {
                if (NITRE[JJ] == 7) continue;
                if (JJ > 1 && NITRE[JJ] != 8 && NITRE[JJ] != 9) continue;
                if (K == 2 && JJ > 1 && NRMVAE[JJ] == 40) continue;
                IZ1 = NTTETB[JJ];
                IX8 = IZ1;
                QMOD = false;
                L = 1;
                if (JJ > 1) L = NTTETB[JJ-1] + 1;
                for(J = L; J <= IZ1; J++) //DO 9100 J = L,IZ1
                {
                    UWA006("RDISC", 52,J);
                    UWA006("RDISC", 59,J);
                    if (NTRB[J] == 0) goto label4300;
                    if (IFLUT[J] <= 0) goto label4100;
                    if (IFLUT[J] > 1) goto label4000;
                    IX = 2;
                    if (J == 1 && J != IZ1) IX = 1;
                    if (KOMP1 == J || KOMP2 == J) IX = 5;
                    if (IWESEL != 0) IX = 2;
                    if (JJ == 1 && J == IZ1 && LHEIZ == 2) IX = 6;
                    if (MENTN[J] == 1) IX = 7;
                    if (LHEIZ == 9 && (J == NTTETB[1] || J == NTTETB[2])) IX = 8;
                    goto label4100;
                    
                label4000:
                    IX = 3;
                    if (JJ == 1 && J == IZ1) IX = 4;
                    if (JJ == 1 && J == IZ1 && LHEIZ == 2) IX = 6;
                    if (JJ > 1 && J == IZ1 && STZNDT[JJ] != 0.0) IX = 4;
                    if (MOD[J] == IZ1 && STZNDT[JJ] != 0.0) IX = 4;
                    if (LHEIZ == 9 && (J == NTTETB[1]-1 || J == NTTETB[1] || J == NTTETB[2])) IX = 8;
                    if (IFLUT[J] < 0) LL = Math.Abs(IFLUT[J]);
                    if (IFLUT[J] < 0) IX = LPLOT[LL];
                    
                label4100:
                    IX1 = NTRB[J] - 1;
                    if (LIGHT[6] == 1)
                        sw16.WriteLine(" **TURBOS 4**{0}{1}{2}{3}{4}{5}", JJ.ToString().PadLeft(6),J.ToString().PadLeft(6),IFLUT[J].ToString().PadLeft(6),
                            IX.ToString().PadLeft(6),IX1.ToString().PadLeft(6),NTRB[J].ToString().PadLeft(6));
                        //4200 FORMAT(' ','**TURBOS 4**',6I6)
                    IX6 = J;
                    IX7 = J;
                    if (MOD[J] > 0) IX6 = MOD[J];
                    if (MOD[J] == IZ1) IX8 = J;
                    if (J == KOMP1 && KOMP2 > 0 && MOD[KOMP2] == IZ1) IX8 = KOMP2;
                    if (MOD[J] > 0) QMOD = true;
                    if ( !QMOD) QSTE = false;
                    if ( !QMOD) QSTA = false;
                    if (MOD[J] > 0) QSTE = false;
                    if (MOD[J] > 0) QSTA = false;
                    IANST = 0;
                    K3 = 0;
                    K4 = 0;
                    K7 = 0;
                    FST = 0.0;
                    EZUEE = 0.0;
                    GZUEE = 0.0;
                    QANZDU = false;

                    if (JJ > 1) goto label4300;
                    if (LHEIZ != 2 && LHEIZ != 9) goto label4300;
                    if (LHEIZ == 2 && J != IZ1) goto label4300;
                    if (LHEIZ == 9 && J != IZ1-1) goto label4300;
                    M1 = NTTETB[1] + 1;
                    
                    for(LL = M1; LL <= ANZDTT; LL++) //DO 4220 LL=M1,ANZDTT
                    {
                        if (IFLUT[LL] >= 0) continue;
                        if (Math.Abs(IFLUT[LL]) != J) continue;
                        if (NTRB[LL] <= 1) break;
                        IX3 = NTRB[LL] - 1;
                        
                    label4210:
                        K7 = K7 + 1;
                        QANZPA[K7] = false;
                        QNDWAS[K7] = false;
                        if (K7 >= IX3) goto label4300;
                        goto label4210;
                    }   //4220 CONTINUE

                label4300:
                    QPLOT[J] = false;
                    IZ3 = ITTEND[J];
                    if (K == 1) JZUE[J] = 0;
                    
                    for(I = 1; I <= IZ3; I++) //DO 6400 I = 1,IZ3
                    {
                        UWA010(I,1);
                        if (LIGHT[6] == 1)
                            sw16.WriteLine(" **TURBOS5**{0}{1}{2}{3}{4}{5}", I.ToString().PadLeft(6),IZ3.ToString().PadLeft(6),KT2.ToString().PadLeft(6),KT3.ToString().PadLeft(6),KT5.ToString().PadLeft(6),KT7.ToString().PadLeft(6));
                            //4400 FORMAT(' ','**TURBOS 5**',6I6);

                        if (J != IZ1 || KT7 != 9) goto label4405;
                        UEEP[JJ] = E2T[I,K]*TX1;
                        ELEP[JJ] = (E2T[I,K]- Math.Pow(C2GES[I,K],2.0)/8372.25)*TX1;
                        PELEP[JJ] = PT[I,K]/0.034532;
                        
                        if (!QENGL && K == 1)
                            PELEP[JJ] = PT[I,K]*TX2;

                    label4405:
                        if (KT2 == 0) goto label4430;
                        if ((LLTG[14] == 2 || LLTG[14] == 3) && (KT2 == 1 || KT2 == 2 || KT2 == 5)) goto label4430;
                        
                        //goto label(4410,4410,4410,4420,4410,4420,4410,4420,4420),
                        if(KT7 == 1)    goto label4410;
                        if(KT7 == 2)    goto label4410;
                        if(KT7 == 3)    goto label4410;
                        if(KT7 == 4)    goto label4420;
                        if(KT7 == 5)    goto label4410;
                        if(KT7 == 6)    goto label4420;
                        if(KT7 == 7)    goto label4410;
                        if(KT7 == 8)    goto label4420;
                        if(KT7 == 9)    goto label4420;
                        
                    label4410:
                        if (J == KOMP1) goto label4430;
                        QSTE = true;
                        goto label4430;
                        
                    label4420:
                        if (QSTA) QSTE = true;
                        QSTA = true;
                        if (KT2 > KT3) QSTE = true;
                        if (IX == 3 || IX == 4 || IX == 6) QSTE = true;
                        if (IX == 7) QSTE = false;
                        if (J < NTTETB[1] && MENTN[J+1] == 1 && I > 4) QSTA = false;
                        if (IX == 8 && (J == NTTETB[1]-1 || J == NTTETB[1] && IFLUT[J] > 1 || J == NTTETB[2] && IFLUT[J] > 1)) QSTE = true;
                        if (IX == 8 && (J == NTTETB[1] || J == NTTETB[2]) && IFLUT[J] == 1) QSTE = false;
                        
                    label4430:
                        if (KT7 == 7) continue; // goto label6400;
                        if (KT7 != 1) goto label4700;
                        if (NTRB[J] == 0) goto label4700;

                        I1 = I;
                        if (IDRUCK > 0 && J == IX8) I1 = I + 1;
                        if (K != 1) goto label4500;
                        T = VISUM(XPT[I],XE1T[I1],03);
                        FELD[1] = XPT[I]*TX2;
                        FELD[2] = XE1T[I1]*TX1;
                        FELD[3] = XG[I+1]*TX3;
                        goto label4600;
                        
                    label4500:
                        T = VISUM(YPT[I],YE1T[I1],03);
                        FELD[1] = YPT[I]*TX2;
                        FELD[2] = YE1T[I1]*TX1;
                        FELD[3] = YG[I+1]*TX3;
                        
                    label4600:
                        if (T < 0.0) T = T + 273.15;
                        T = T - 273.15;
                        if (T > 0.0) T = T*TX0 + TX5 + 0.004;
                        if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                        FELD[4] = T;
                        if (LLTG[14] == 2 && J == 1) FELD[3] = G[I+2,K]*TX3;
                        if (LLTG[14] == 3 && J == 1) FELD[3] = G[I+2,K]*TX3;
                        if (J == KOMP2) FELD[3] = G[I1,K]*TX3;

                    label4700:
                        if (KT7 == 5) IANST = 1;
                        if (KT5 == 0) continue;     //goto label6400;
                        if (LLTG[14] != 2 && LLTG[14] != 3 || KT2 != 5) goto label4900;

                        K1 = 0;
                        GF = 0.0;
                        A1 = FELD[1];
                        A2 = FELD[2];
                        A3 = FELD[3];
                        A4 = FELD[4];
                        for(LL = 1; LL <= 6; LL++) //DO 4800 LL = 1,6
                        {
                            LTGSTB = LTGAB[LL,KT2];
                            if (LTGSTB == 0) continue;
                            Z1 = PLTG[LTGSTB];
                            K1 = K1 + 1;
                            if (Z1 == PST905 || Z1 == PST907) ABC[K1] = ABCD[3];
                            if (Z1 == PST906 || Z1 == PST908) ABC[K1] = ABCD[2];
                            FELD[K1] = GLTG[LTGSTB]*TX3;
                            GF = GF + FELD[K1];
                            K2 = K1;
                        }   //4800 CONTINUE

                        UWA105(1,FELD,K1,K2,LLTG[14],NFD);

                        FELD[1] = A1;
                        FELD[2] = A2;
                        FELD[3] = A3 - GF;
                        FELD[4] = A4;

                    label4900:
                        K8 = 0;
                        UWA044(I,1);
                        for(M1 = 1; M1 <= 10; M1++) //DO 6100 M1 = 1,10
                        {
                            IZ4 = LABT[M1];
                            if (LIGHT[6] == 1)
                                sw16.WriteLine(" **TURBOS 10 **", M1.ToString().PadLeft(6),IZ4.ToString().PadLeft(6));
                                //5000 FORMAT(' ','**TURBOS 10**',2I6)
                            if (IZ4 == 0) goto label6200;
                            if (IZ4 >= 41 && IZ4 <= 46) goto label5100;
                            if (IX == 1 && I == IZ3 && IZ4 > 69 && IZ4 < 93)
                                FST = FST + GLTG[IZ4];
                            if (IZ4 >= 70 && IZ4 <= 92) continue;   //goto label6100;
                            if (IZ4 > 92 && IZ4 < 99) FELD[3] = FELD[3]+GLTG[IZ4]*TX3;
                            if (KT7 != 3 && KT7 != 4 && KT7 != 6 && KT7 != 8 && KT7 != 9)
                                continue;       //goto label6100;
                            if (IZ4 == Math.Abs(NANZDU[1])) QANZDU = true;
                            if (I == IZ3) QPLOT[J] = true;
                            K8 = K8 + 1;
                            if (K8 == 1) K7 = K7 + 1;
                            if (K8 == 1) QANZPA[K7] = false;
                            QNDWAS[K7] = false;
                            if (K8 == 1 && IZ4 > 48 && IZ4 < 70) QNDWAS[K7] = true;
                            if (IX == 1 || IX == 5 || IX == 7) continue;    //goto label6100;
                            if (IX == 8 && J != 2 && J != 4) continue;      //goto label6100;
                            if (INENDE == IHENDE) continue;     //goto label6100;
                            L2 = IHENDE + 1;
                            for(L1 = L2; L1 <= INENDE; L1++) //DO 5010 L1=L2,INENDE
                            {
                                if (LTYP[L1] != 8) continue;
                                if (KRUECK[L1] != 1) continue;
                                if (IZ4 == NN1[L1] && NBLTG[L1,1] == 0) continue;
                                if (IZ4 != NN1[L1] && IZ4 != NBLTG[L1,1]) continue;
                                QANZPA[K7] = true;
                                goto label6100;
                            }   //5010 CONTINUE
                            goto label6100;

                        label5100:
                            JZUE[J] = 2;
                            IENTN[1] = 0;
                            IENTN[2] = 0;
                            IENTN[3] = 0;
                            IENTN[4] = 0;
                            IENTN[5] = 0;
                            L2 = IHENDE + 1;
                            
                        label5200:
                            for(L1 = L2; L1 <= INENDE; L1++) //DO 6000 L1 = L2,INENDE
                            {
                                if (IZ4 != NN1[L1]) continue;
                                IZ4 = NN2[L1];
                                if (LTYP[L1] != 8 && LTYP[L1] != 19 && LTYP[L1] != 23)  continue;
                                if (LTYP[L1] == 23) goto label5500;
                                if (LTYP[L1] == 8) goto label5900;

                                K4 = K4 + 1;
                                IX3 = N1[L1];
                                IX4 = N2[L1];
                                IX5 = NN1[L1];
                                I1 = 12*K4 - 3;
                                if (LIGHT[6] == 1)
                                    sw16.WriteLine(" **TURBOS 7**{0}{1}{2}{3}{4}{5}{6} ", L1.ToString().PadLeft(6),IX3.ToString().PadLeft(6),IX4.ToString().PadLeft(6),IX5.ToString().PadLeft(6),K4.ToString().PadLeft(6),I1.ToString().PadLeft(6),NN2[L1].ToString().PadLeft(6));
                                if (NRABC[IX4] != 0) goto label5310;
                                for(LL = 4; LL <= 26; LL++) //DO 5300 LL = 4,26
                                {
                                    if (QABC[LL]) continue;
                                    QABC[LL] = true;
                                    NRABC[IX4] = LL;
                                    UWA114(IX4);
                                    ABDUWA[K4] = ABCD[LL];
                                    goto label5400;
                                }   //5300 CONTINUE
                                goto label5400;
                                
                            label5310:
                                LL = NRABC[IX4];
                                ABDUWA[K4] = ABCD[LL];
                                
                            label5400:
                                T = VISUM(PLTG[IX3],ELTG[IX3],03);
                                if (T < 0.0) T = T + 273.15;
                                T = T - 273.15;
                                if (T > 0.0) T = T*TX0 + TX5 + 0.004;
                                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                                FELD[I1] = PLTG[IX3]*TX2;
                                FELD[I1+1] = ELTG[IX3]*TX1;
                                FELD[I1+2] = GLTG[IX3]*TX3;
                                FELD[I1+3] = T;
                                T = VISUM(PLTG[IX4],ELTG[IX4],23);
                                FELD[I1+4] = PLTG[IX4]*TX2;
                                FELD[I1+5] = ELTG[IX4]*TX1;
                                FELD[I1+6] = GLTG[IX4]*TX3;
                                FELD[I1+7] = (T-273.15)*TX0+TX5;
                                T = VISUM(PLTG[IX5],ELTG[IX5],03);
                                if (T < 0.0) T = T + 273.15;
                                T = T - 273.15;
                                if (T > 0.0) T = T*TX0 + TX5 + 0.004;
                                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                                FELD[I1+8] = PLTG[IX5]*TX2;
                                FELD[I1+9] = ELTG[IX5]*TX1;
                                FELD[I1+10] = GLTG[IX5]*TX3;
                                FELD[I1+11] = T;
                                IZ4 = NN2[L1];
                                goto label5200;

                            label5500:
                                IX3 = NN1[L1];
                                IX4 = N2[L1];
                                IX5 = NN2[L1];
                                K3 = K3 + 1;
                                K4 = K3;
                                I1 = K3*12 - 3;
                                if (LIGHT[6] == 1)
                                    sw16.WriteLine(" **TURBOS**{0}{1}{2}{3}{4}{5}{6} ", L1.ToString().PadLeft(6),IX3.ToString().PadLeft(6),IX4.ToString().PadLeft(6),IX5.ToString().PadLeft(6),K3.ToString().PadLeft(6),K4.ToString().PadLeft(6),I1.ToString().PadLeft(6));
                                    //5600 FORMAT(' ','**TURBOS 7**',7I6)
                                if (NRABC[IX4] != 0) goto label5710;
                                for(LL = 4; LL <= 26; LL++) //DO 5700 LL = 4,26
                                {
                                    if (QABC[LL]) continue;
                                    QABC[LL] = true;
                                    NRABC[IX4] = LL;
                                    UWA114(IX4);
                                    ABDUWA[K3] = ABCD[LL];
                                    goto label5800;
                                }   //5700 CONTINUE
                                goto label5800;
                                
                            label5710:
                                LL = NRABC[IX4];
                                ABDUWA[K3] = ABCD[LL];
                                
                            label5800:
                                T = VISUM(PLTG[IX3],ELTG[IX3],03);
                                if (T < 0.0) T = T + 273.15;
                                T = T - 273.15;
                                if (T > 0.0) T = T*TX0 + TX5 + 0.004;
                                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                                FELD[I1] = PLTG[IX3]*TX2;
                                FELD[I1+1] = ELTG[IX3]*TX1;
                                FELD[I1+2] = GLTG[IX3]*TX3;
                                FELD[I1+3] = T;
                                T = VISUM(PLTG[IX4],ELTG[IX4],23);
                                FELD[I1+4] = PLTG[IX4]*TX2;
                                FELD[I1+5] = ELTG[IX4]*TX1;
                                FELD[I1+6] = GLTG[IX4]*TX3;
                                FELD[I1+7] = (T-273.15)*TX0+TX5;
                                T = VISUM(PLTG[IX5],ELTG[IX5],03);
                                if (T < 0.0) T = T + 273.15;
                                T = T - 273.15;
                                if (T > 0.0) T = T*TX0 + TX5 + 0.004;
                                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                                FELD[I1+8] = PLTG[IX5]*TX2;
                                FELD[I1+9] = ELTG[IX5]*TX1;
                                FELD[I1+10] = GLTG[IX5]*TX3;
                                FELD[I1+11] = T;
                                IZ4 = IX5;
                                goto label5200;

                            label5900:
                                IZ4 = NN2[L1];
                                if (N2[L1] == 0) goto label5200;
                                IENTN[K4+1] = IENTN[K4+1] + 1;
                                goto label5200;
                            }   //6000 CONTINUE

                        label6100:
                        ;
                        }   //6100 CONTINUE

                    label6200:
                        if (I != IZ3) goto label6400;

                        for(M1 = 1; M1 <= 10; M1++) //DO 6300 M1 = 1,10
                        {
                            IZ4 = LZUT[M1];
                            if (IZ4 == 0)   break;  //goto label6400
                            if (IX == 1 && IZ4 > 69 && IZ4 < 86) FST = FST - GLTG[IZ4];
                            if (IZ4 != 31 && IZ4 != 32) continue;
                            GZUEE = GZUEE + GLTG[IZ4];
                            EZUEE = ELTG[IZ4];
                        }   //6300 CONTINUE
                    label6400:
                        ;
                    }   //6400 CONTINUE
                    if (IX6 > J) goto label6500;
                    FELD[5] = PT[IZ3,K]*TX2;
                    A7 = E1T[IZ3+1,K];
                    UWA006("RDISC", 52,J+1);
                    A10 = PT[1,K];
                    A9 = G[1,K];
                    A8 = E1T[1,K];
                    UWA006("RDISC", 52,J);
                    if (GZUEE != 0.0) A7 = (A9*A7-GZUEE*EZUEE)/(A9-GZUEE);
                    FELD[6] = A7*TX1;
                    if (J != IZ1 && A7+10.0 < A8 && JZUE[J] == 0) JZUE[J] = 1;
                    IZUE = JZUE[J];
                    FELD[7] = (A9-GZUEE)*TX3;
                    T = VISUM(PT[IZ3,K],A7,03);
                    if (T < 0.0) T = T + 273.15;
                    T = T - 273.15;
                    if (T > 0.0) T = T*TX0 + TX5 + 0.004;
                    if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                    FELD[8] = T;
                    if (IZUE == 1) HEAT4 = FELD[7];
                    if (IZUE == 1) HEAT5 = A8*TX1;
                    if (IZUE == 1) HEAT6 = FELD[6];
                    if (IZUE == 1 && K == 1) HEAT7 = (VISUM(A10,A8,03)-273.15)*TX0 +TX5+0.004;
                    UWA044(IZ3,1);
                    if (IZUE != 1) FELD[7] = (G[IZ3,K]+SUMGZU-SUMGAB)*TX3;
                    if (J == IZ1) FELD[7] = G[IZ3,K]*TX3;
                    if (KOMP1 == J && KOMP2 > 0) FELD[7] = (A9-GZUEE)*TX3;
                    if (IX != 1) goto label6500;
                    FELD[77] = PT[IZ3,K]*TX2;
                    FELD[78] = E2T[IZ3,K]*TX1;
                    FELD[79] = (G[IZ3,K]-FST)*TX3;
                    T = VISUM(PT[IZ3,K],E2T[IZ3,K],03);
                    if (T < 0.0) T = T + 273.15;
                    T = T - 273.15;
                    if (T > 0.0) T = T*TX0 + TX5 + 0.004;
                    if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                    FELD[80] = T;
                    
                label6500:
                    if (IFLUT[J] <= 0) goto label9100;
                    LPLOT[J] = IX;
                    LLPLOT[J] = IX1;
                    if (LIGHT[6] == 1)
                        sw16.WriteLine(" **TURBOS 9**{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", JJ.ToString().PadLeft(6),IX7.ToString().PadLeft(6),
                            IX8.ToString().PadLeft(6),IX.ToString().PadLeft(6),IX1.ToString().PadLeft(6),IZUE.ToString().PadLeft(6),
                            IANST.ToString().PadLeft(6),K2.ToString().PadLeft(6),ANZDTT.ToString().PadLeft(6),
                            QSTE.ToString().PadLeft(5),QSTA.ToString().PadLeft(5));
                        //6600 FORMAT(1H ,'**TURBOS 9**',9I6,2L5)
                    if (IX6 > J) goto label9100;
                    if (IX != 6) goto label6800;

                    IZ2 = 0;
                    
                label6700:
                    IZ2 = IZ2 + 1;
                    if (IZ2 >= ANZTRB) goto label6800;
                    IZ5 = NTTETB[IZ2] + 1;
                    if ((IFLUT[IZ5]) != NTTETB[1]) goto label6700;
                    UWA006("RDISC", 52,IZ5);
                    IZ6 = ITTEND[IZ5];
                    FELD[77] = PT[IZ6,K]*TX2;
                    FELD[78] = E2T[IZ6,K]*TX1;
                    FELD[79] = G[IZ6,K]*TX3;
                    T = VISUM(PT[IZ6,K],E2T[IZ6,K],03);
                    if (T > 0.0) T = (T-273.15)*TX0 + TX5 + 0.004;
                    if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                    FELD[80] = T;
                    
                label6800:
                    if (JJ == 1) goto label6900;
                    if (STZNDT[JJ] == 0.0) goto label6900;
                    if (J != IZ1) goto label6900;
                    IX4 = NRMVAE[JJ] + 100;
                    if (ILTG[IX4] == 0) goto label6900;
                    QPLOT[J] = true;

                label6900:
                    if ( !QAMI) goto label8000;
                    
                    UWA142(JJ,IX7,IX8,IX,IX1,IZUE,K1,K2,ANZDTT,FELD,LLTG[14]);
                    if (IZUE == 2)      UWA144(K3,K4,FELD,IENTN);
                    goto label9000;

                label8000:
                    //goto label(8100,8200,8300,8400,8500,8600,8700,8800),
                    if(IX == 1)     goto label8100;
                    if(IX == 2)     goto label8200;
                    if(IX == 3)     goto label8300;
                    if(IX == 4)     goto label8400;
                    if(IX == 5)     goto label8500;
                    if(IX == 6)     goto label8600;
                    if(IX == 7)     goto label8700;
                    if(IX == 8)     goto label8800;

                label8100:
                    UWA106(IX7,IX8,IX1,IZUE,FELD,IANST,K2,ANZDTT);
                    goto label8900;

                label8200:
                    UWA107(JJ,IX7,IX8,IX1,IZUE,FELD,IANST,K2,ANZDTT);
                    goto label8900;

                label8300:
                    UWA108(IX7,IX8,IX1,IZUE,FELD,IANST,K2,ANZDTT);
                    goto label8900;

                label8400:
                    UWA109(JJ,IX7,IX1,IZUE,LLTG[14],FELD,IANST,K2,ANZDTT);
                    goto label8900;

                label8500:
                    UWA110(IX7,IX8,IX1,IZUE,FELD,IANST,K2,ANZDTT);
                    goto label8900;

                label8600:
                    UWA111(IX7,IX1,IZUE,FELD,IANST,K2,ANZDTT);
                    goto label8900;

                label8700:
                    UWA112(IX7,IX8,IX1,IZUE,FELD,IANST,K2,ANZDTT);
                    goto label8900;

                label8800:
                    UWA113(JJ,NTTETB[JJ],IX7,IX1,IZUE,FELD,IANST,K2,ANZDTT);

                label8900:
                    if (IZUE == 2) 
                        UWA118(K3,K4,FELD,IENTN);

                    if (QMOD && J == IX6) QMOD = false;

                label9000:
                    if (LHEIZ == 9 && JJ != 2) continue;
                    if (LHEIZ != 9 && JJ > 1 && NDTEIL == 0) continue; //goto label9100;
                    if (J != IZ1) continue;     //goto label9100;
                    if (NDTEIL > 0 && JJ < NDTEIL + 1) continue; //goto label9100;

                    PKLEMM = ARBTA[1] + 0.0002;
                    if (NITRE[1] == 1) PKLEMM = TLSTGE[1] + 0.0002;
                    if (K == 1) PKLEMA = PKLEMM;
                    if (K == 1 && PELEKT > 0.0) PKLEMA = PELEKT;
                    ETAMV = VMECHE[1] + ETAGLR;
                    ETAGV = ARBTA[1]/ETAGE[1] - ARBTA[1] - ETAGLR;
                    UWA010(IZ3,1);
                    UWA006("RDISC", 53,KT9);
                    POL = 2.0;
                    if (XUPM < 3000.0) POL = 4.0;
                    DREHZ = XUPM;
                    FLUTND = IFLUT[J];
                    UWA119();

                label9100:
                    ;
                }   //9100 CONTINUE
            }   //9200 CONTINUE
            HEAT8 = PULEIS/859.845;
            if (QAMI && KOMP1 == NTTETB[1]) X = X + 5.5;
            if (QAMI && KOMP2 == NTTETB[1]) X = X + 5.5;
            return;
        }   //END

        
        static void UWA105(int L, double[] FELD, int K1, double K2, int KKW, int NFD)
        {
            //ENTRY ZEICHN (L,FELD,K1,K2,KKW,NFD)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //DIMENSION FELD(80)

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20) ,
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /KESSEL/ XKESS, YKESS, ISCHWR
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            int M = 0, N = 0, M1 = 0, M2 = 0;
            double V = FACTS/FACT, DX = 0, X1 = 0, Y1 = 0;
            if (L == 1) goto label1000;
            if (L == 2) goto label2000;
            if (L == 3) goto label1600;
            if (L == 4) goto label1800;
            NEWPEN(3);
            PLOT(X,Y,3);
            if (KKW == 2) goto label400;
            if (KKW == 3) goto label200;
            if (IABHI == 2) goto label10;

            PLOT (X-0.55,Y-0.75,2);
            PLOT (X+0.55,Y-0.75,2);
            PLOT (X,Y-1.5,2);
            NEWPEN (1);
            PLOT (X-0.75,Y-1.5,3);
            PLOT (X-0.75,Y-3.0,2);
            PLOT (X+0.75,Y-3.0,2);
            PLOT (X+0.75,Y-1.5,2);
            PLOT (X-0.75,Y-1.5,2);
            PLOT (X,Y-3.0,3);
            PLOT (X,Y-4.0,2);
            XKESS = X;
            YKESS = Y - 4.0;
            goto label40;

        label10:
            XKESS = X;
            YKESS = Y - 3.0 - 1.0*V;
            NEWPEN(3);
            PLOT (X,Y-1.0*V,3);
            PLOT (X+5.0*V+XT,Y-1.0*V,2);
            XDUE1 = X + 5.0*V + XT;
            YDUE1 = Y - 1.0*V;
            if (NDRUCK == 0) goto label20;
            if (KREUZ == 1) goto label20;
            UWA130(X+2.2*V,Y-1.0*V,1,0);
            if (KREUZ == 1) goto label20;
            UWA131(X+2.2*V,Y-1.0*V,FELD[77],FELD[78],FELD[79],FELD[80],1,0);

        label20:
            if (K1 == 0) goto label600;

            for(I = 1; I <= K1; I++) //DO 30 I=1,K1
            {
                N = I*4 + 1;
                M = 0;
                if (K2-K2/10*10 > 0) M = 1;
                K2 = K2/10;
                if (I > 1) goto label25;
                UWA132(X+0.75,Y-2.95-1.0*V,2.2,FELD[N+2],FELD[N+1],3,M,0,1,I,I,ABC);
                continue;   //goto label30;

            label25:
                UWA132(X-2.25,Y-2.95-1.0*V,2.2,FELD[N+2],FELD[N+1],4,M,0,1,I,I,ABC);
            }   //30 CONTINUE
            goto label600;

        label40:
            if (K1 == 0) goto label600;
            if (K1 == 1) goto label100;
            M = 0;
            if (K2-K2/10*10 > 0) M = 1;
            K2 = K2/10;
            if (K1 > 2) K1 = 2;
            UWA132(X+0.75,Y-2.8,3.7,0.0,0.0,3,M,2,1,1,1,ABC);
            if (KREUZ == 1) goto label100;
            UWA130(X+0.75+2.0*V,Y-2.8,1,0);
            if (KREUZ == 2) goto label100;
            UWA131(X+0.75+2.0*V,Y-2.8,FELD[5],FELD[6],FELD[7],FELD[8],1,0);
            
        label100:
            M = 0;
            if (K2-K2/10*10 > 0) M = 1;
            K2 = K2/10;
            UWA132(X+0.75,Y-1.7,3.7,0.0,0.0,3,M,2,1,K1,K1,ABC);
            if (KREUZ == 1) goto label600;
            UWA130(X+0.75+2.0*V,Y-1.7,1,0);
            if (KREUZ == 2) goto label600;
            N = K1*4+1;
            UWA131(X+0.75+2.0*V,Y-1.7,FELD[N],FELD[N+1],FELD[N+2],FELD[N+3],1,0);
            goto label600;

        label200:
            Y = Y - 1.0*V;
            PLOT (X,Y,2);
            PLOT (X,Y-0.7,2);
            NEWPEN(1);
            CIRCL(X+0.3,Y-1.0,0.0,180.0,0.3,0.3,0.0);
            PLOT (X-0.5,Y-1.0,3);
            PLOT (X+0.5,Y-1.0,2);
            PLOT (X+0.5,Y-2.0,2);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X-0.5,Y-1.0,2);
            PLOT (X+0.5,Y-2.0,2);
            PLOT (X-0.5,Y-1.5,3);
            PLOT (X-2.5,Y-1.5,2);
            if (ISCHWR == 0) goto label300;
            PLOT (X-2.5,Y-3.0,2);
            PLOT (X-3.0,Y-3.0,3);
            PLOT (X-2.0,Y-3.0,2);
            PLOT (X-2.0,Y-4.0,2);
            PLOT (X-3.0,Y-4.0,2);
            PLOT (X-3.0,Y-3.0,2);
            NEWPEN(3);
            CIRCL(X-2.30,Y-3.5,0.0,360.0,0.20,0.20,0.0);
            CIRCL(X-2.35,Y-3.5,0.0,360.0,0.15,0.15,0.0);
            CIRCL(X-2.40,Y-3.5,0.0,360.0,0.10,0.10,0.0);
            CIRCL(X-2.45,Y-3.5,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(1);
            PLOT (X,Y-2.0,3);
            PLOT (X,Y-3.5,2);
            PLOT (X-0.75,Y-3.5,2);
            CIRCL(X-0.75,Y-3.5,0.0,360.0,0.25,0.25,0.0);
            AROHD(X-0.85,Y-3.5,X-1.15,Y-3.5,0.2,0.3,16);
            PLOT (X-1.25,Y-3.5,3);
            PLOT (X-2.0,Y-3.5,2);
            PLOT (X+0.5,Y-1.5,3);
            PLOT (X+1.5,Y-1.5,2);
            PLOT (X+1.5,Y-7.5,2);
            XKESS = X + 1.5;
            YKESS = Y - 7.5;
            PLOT (X+1.5,Y-5.2,3);
            PLOT (X-0.4,Y-5.2,2);
            PLOT (X+0.4,Y-5.5,2);
            PLOT (X-0.4,Y-5.8,2);
            PLOT (X+1.5,Y-5.8,2);
            PLOT (X+0.5,Y-5.0,3);
            PLOT (X-0.5,Y-5.0,2);
            PLOT (X-0.5,Y-6.0,2);
            PLOT (X+0.5,Y-6.0,2);
            PLOT (X+0.5,Y-5.0,2);
            PLOT (X-0.5,Y-5.2,3);
            PLOT (X-2.2,Y-5.2,2);
            PLOT (X-2.2,Y-4.0,2);
            PLOT (X-2.8,Y-4.0,3);
            PLOT (X-2.8,Y-5.8,2);
            PLOT (X-1.9,Y-5.8,2);
            CIRCL(X-1.4,Y-5.8,0.0,360.0,0.25,0.25,0.0);
            AROHD(X-1.5,Y-5.8,X-1.8,Y-5.8,0.2,0.3,16);
            PLOT (X-1.4,Y-5.8,3);
            PLOT (X-0.5,Y-5.8,2);
            goto label500;

        label300:
            PLOT (X-2.5,Y-2.0,2);
            PLOT (X-2.0,Y-2.0,2);
            PLOT (X-2.0,Y-3.0,2);
            PLOT (X-3.0,Y-3.0,2);
            PLOT (X-3.0,Y-2.0,2);
            PLOT (X-2.5,Y-2.0,2);
            NEWPEN(3);
            CIRCL(X-2.30,Y-2.5,0.0,360.0,0.20,0.20,0.0);
            CIRCL(X-2.35,Y-2.5,0.0,360.0,0.15,0.15,0.0);
            CIRCL(X-2.40,Y-2.5,0.0,360.0,0.10,0.10,0.0);
            CIRCL(X-2.45,Y-2.5,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(1);
            PLOT (X,Y-2.0,3);
            PLOT (X,Y-3.5,2);
            PLOT (X-0.9,Y-3.5,2);
            CIRCL(X-0.9,Y-3.5,0.0,360.0,0.3,0.3,0.0);
            AROHD(X-1.0,Y-3.5,X-1.4,Y-3.5,0.3,0.3,16);
            PLOT (X-1.5,Y-3.5,3);
            PLOT (X-2.5,Y-3.5,2);
            PLOT (X-2.5,Y-3.0,2);
            PLOT (X+0.5,Y-1.5,3);
            PLOT (X+1.5,Y-1.5,2);
            PLOT (X+1.5,Y-4.5,2);
            XKESS = X + 1.5;
            YKESS = Y - 4.5;
            goto label500;

        label400:
            Y = Y - 1.0*V;
            PLOT (X,Y,2);
            PLOT (X,Y-1.0,2);
            NEWPEN(1);
            PLOT (X-0.75,Y-1.0,3);
            PLOT (X-0.75,Y-2.5,2);
            PLOT (X+0.75,Y-2.5,2);
            PLOT (X+0.75,Y-1.0,2);
            PLOT (X-0.75,Y-1.0,2);
            PLOT (X,Y-2.5,3);
            PLOT (X,Y-4.0,2);
            CIRCL(X+0.5,Y-1.75,0.0,360.0,0.5,0.5,0.0);
            NEWPEN(3);
            CIRCL(X+0.05,Y-1.75,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(1);
            XKESS = X;
            YKESS = Y - 4.0;

        label500:
            if (KREUZ > 0) goto label510;
            FACTOR(FACTS);
            X = X/V;
            Y = Y/V;
            if (KKW == 2) SYMBOL (X+0.9,Y-2.2,XH,"DE",0.0,2);
            if (KKW == 2) SYMBOL (X+0.7,Y-2.0,XH,"P = ",0.0,6);
            if (KKW > 2) SYMBOL (X+1.9,Y-2.2,XH,"DE",0.0,2);
            if (KKW > 2) SYMBOL (X+1.7,Y-2.0,XH,"P = ",0.0,6);
            NUMBER (999.0,999.0,XH,FELD[13],0.0,2);
            SYMBOL (999.0,999.0,XH," MW",0.0,3);
            X = X*V;
            Y = Y*V;
            FACTOR (FACT);

        label510:
            if (K1 == 0) goto label520;
            M = 0;
            if (K2 == 1) M = 1;
            UWA132(X+0.5,Y-1.2,3.7,0.0,0.0,3,M,2,1,K1,K1,ABC);
            if (KREUZ == 1) goto label520;
            UWA130(X+0.5+2.0*V,Y-1.2,1,0);
            if (KREUZ == 2) goto label520;
            N = K1*4 + 1;
            UWA131(X+0.5+2.0*V,Y-1.2,FELD[N],FELD[N+1],FELD[N+2],FELD[N+3],1,0);

        label520:
            Y = Y + 1.0*V;
        
        label600:
            NEWPEN(3);
            PLOT (X,Y,3);
            PLOT (X+5.0/FACT*FACTS,Y,2);
            if (NFD == 1 && KKW != 3) goto label700;
            if (KREUZ == 1) goto label700;
            UWA130(X+2.2*V,Y,1,0);
            if (KREUZ == 2) goto label700;
            UWA131(X+2.2*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);

        label700:
            X = X + 5.0/FACT*FACTS;
            NEWPEN(3);
            PLOT (X,Y,3);
            PLOT (X+XT,Y,2);
            X = X + XT;
            XT = 0.0;
            return;

        label1000:
            if (K1 == 0 && K2 == 0) return;
            DX = 2.2;
            if (IABHI == 2) DX = DX + 1.0;
            if (K1 == 0) goto label1200;

            for(M1 = 1; M1 <= K1; M1++) //DO 1100 M1 = 1,K1
            {
                NEWPEN(3);
                PLOT (X+0.7*(M1-1)/FACT*FACTS,Y,3);
                PLOT (X+0.7*M1/FACT*FACTS,Y,2);
                UWA132(X+0.7*M1*V,Y,DX,FELD[M1],0.0,1,1,1,1,M1,M1,ABC);
            }   //1100 CONTINUE
            if (K2 == K1) goto label1500;

        label1200:
            M2 = K1 + 1;
            for(M1 = M2; M1 <= K2; M1++)    //DO 1400 M1 = M2,K2
            {
                NEWPEN(3);
                PLOT (X+0.7*(M1-1)/FACT*FACTS,Y,3);
                PLOT (X+0.7*M1/FACT*FACTS,Y,2);
                UWA132(X+0.7*M1*V,Y,DX,FELD[M1],0.0,2,1,1,0,M1,M1,ABC);
            }   //1400 CONTINUE

        label1500:
            if (IABHI != 2) goto label1510;

            NEWPEN(3);
            PLOT (X,Y-1.0*V,3);
            PLOT (X+0.7*K2*V,Y-1.0*V,2);

        label1510:
            X = X + 0.7*K2*V;
            return;

        label1600:
            DX = 2.2;
            NEWPEN(3);
            PLOT (X,Y,3);
            PLOT (X+K1*0.7*V,Y,2);
            PLOT (X+K1*0.7*V,Y-1.0*V,3);
            PLOT (X,Y-1.0*V,2);
            
            for(M1 = 1; M1 <= K1; M1++) //DO 1700 M1=1,K1
                UWA132(X+0.7*M1*V,Y-1.0*V,DX,FELD[M1],0.0,1,1,1,1,M1,M1,ABC);    //1700 CONTINUE
            X = X + 0.7*K1*V;
            XDUE1 = X;
            return;

        label1800:
            X1 = XKESS + 1.5*V;
            Y1 = YKESS - 3.0*V;
            NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.0,2);
            PLOT (X1+1.0,Y1-1.0,2);
            PLOT (X1+1.0,Y1,2);
            PLOT (X1,Y1,2);
            PLOT (X1+1.0,Y1-1.0,2);
            CIRCL(X1+0.8,Y1,0.0,180.0,0.3,0.3,0.0);
            NEWPEN(3);
            PLOT (X1+0.5,Y1+0.3,3);
            PLOT (X1+0.5,Y1+0.3+0.7*V,2);
            PLOT (X1+1.0,Y1+0.3+0.7*V,2);
            UWA132(X1 + 1.0, Y1 - 0.5, 2.2, 0.0, 0.0, 4, 0, 2, 0, 1, 1, ABC);
            UWA132(X1 + 1.0, Y1 + 0.3 + 0.7 * V, 2.2, FELD[22], 0.0, 3, 1, 1, 1, 2, 2, ABC);
            UWA132(X1, Y1 - 0.5, -0.7, FELD[23], 0.0, 9, 1, 1, 0, 3, 3, ABC);
            UWA132(X1 + 0.5, Y1 - 1.0, 2.2 - 0.5 / V, 0.0, 0.0, 1, 0, 2, 1, 4, 4, ABC);

            return;

        label2000:
            NEWPEN(3);
            PLOT (X,Y,3);
            X = X + 1.5/FACT*FACTS;
            PLOT (X,Y,2);
            return;
        }   //END

        
        static void UWA106( int J, int IZ1, int IX2, int IZUE, double[] FELD, int IANST, double K2, int ANZDTT)
        {
            //ENTRY TURB1 (J,IZ1,IX2,IZUE,FELD,IANST,K2,ANZDTT);
            //LOGICAL QANZDU, QPLOT
            //INTEGER ANZDTT
            //DIMENSION FELD(80)

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20), UWA106
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS, UWA106
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ, UWA106
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB, UWA106
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7], UWA106
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = 0;
            
            V = FACTS/FACT;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            
        label4:
            NEWPEN(3);

            PLOT (X,Y,3);
            X = X + 3.5/FACT*FACTS;
            PLOT (X,Y,2);
            if (IZUE == 2) goto label100;
            YY = 2.5/FACT*FACTS;
            if (IZ1 > 3) YY = 3.0/FACT*FACTS;
            if (LHEIZ == 9) YY = 3.5*V;
            if (IABHI == 2) YY = YY + 2.0*V;
            if (KREUZ == 1) goto label300;
            UWA130(X-1.7*V,Y,1,0);
            if (KREUZ == 2) goto label300;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            goto label300;

        label100:
            if (KREUZ == 1) goto label200;
            UWA130(X,Y-0.7*V,3,0);
            if (KREUZ == 2) goto label200;
            UWA131(X,Y-0.7*V,FELD[1],FELD[2],FELD[3],FELD[4],3,0);
            
        label200:
            XDUE2 = X;
            YDUE2 = Y;
            YY = 4.5/FACT*FACTS;

        label300:
            NEWPEN(3);
            PLOT (X,Y,3);
            if (IANST != 1) goto label400;

            PLOT (X,Y-1.5,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-1.5,3);
            PLOT (X+0.2,Y-1.5,2);
            PLOT (X-0.2,Y-2.1,2);
            PLOT (X+0.2,Y-2.1,2);
            PLOT (X-0.2,Y-1.5,2);
            PLOT (X-0.1,Y-1.65,3);
            PLOT (X-0.3,Y-1.8,2);
            PLOT (X-0.1,Y-1.95,2);
            CIRCL(X+0.05,Y-1.8,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-2.1,3);

        label400:
            PLOT (X,Y-YY,2);
            Y = Y - YY;
            YWELLE = Y - 0.5;
            NEWPEN(1);
            PLOT (X-XX-IX1*0.5,Y+0.5,2);
            PLOT (X-XX-IX1*0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            NEWPEN(3);
            if (IZUE == 2) goto label700;

            PLOT (X-XX-IX1*0.5,Y-1.5,3);
            PLOT (X-XX-IX1*0.5,Y-2.5/FACT*FACTS-1.0,2);
            PLOT (X+2.0/FACT*FACTS,Y-2.5/FACT*FACTS-1.0,2);
            XT = X + 2.0/FACT*FACTS;
            YT = Y - 2.5/FACT*FACTS - 1.0;
            if (IZUE == 0) goto label600;
            XT = X + 3.5/FACT*FACTS;
            PLOT (XT,YT,2);

            if (KREUZ == 1) goto label500;
            UWA130(XT-1.7*V,YT,2,0);
            if (KREUZ == 2) goto label500;
            UWA131(XT-1.7*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],2,0);
            
        label500:
            NEWPEN(3);
            PLOT (XT,YT,3);
            PLOT (XT+0.5,YT-0.5,2);
            PLOT (XT+0.5,YT+0.5,2);
            PLOT (XT+1.0,YT,2);
            PLOT (XT+1.0,YT,2);
            XT = XT + 1.0;

        label600:
            PLOT (XT,YT,3);
            PLOT (XT+XDXT,YT,2);
            XT = XT + XDXT;
            goto label1000;

        label700:
            PLOT (X-XX-IX1*0.5,Y+0.5,3);
            PLOT (X-XX-IX1*0.5,Y+2.5/FACT*FACTS,2);
            PLOT (X+2.0/FACT*FACTS+XDXT,Y+2.5/FACT*FACTS,2);
            XT = X + 2.0/FACT*FACTS + XDXT;
            YT = Y + 2.5/FACT*FACTS;

        label1000:
            if(IX1 == 0)        goto label1300;
            //goto label(1100,1200,1300,1300,1300),
            if(IX1 == 1)        goto label1100;
            if(IX1 == 2)        goto label1200;
            if(IX1 == 3)        goto label1300;
            if(IX1 == 4)        goto label1300;
            if(IX1 == 5)        goto label1300;

        label1100:
            PLOT (X-1.0,Y-1.35,3);
            PLOT (X-1.0,Y-3.0/FACT*FACTS,2);
            goto label1300;

        label1200:
            PLOT (X-0.5,Y-1.2,3);
            PLOT (X-0.5,Y-3.0/FACT*FACTS,2);
            PLOT (X-1.0,Y-1.35,3);
            PLOT (X-1.0,Y-3.0/FACT*FACTS,2);

        label1300:
            if ( !QPLOT[J]) goto label2000;

            if (IZUE == 2) PLOT (X-XX-0.5*IX1,Y-1.5,3);
            if (IZUE != 2) PLOT (X-XX-0.5*IX1,Y-2.5/FACT*FACTS-1.0,3);
            PLOT (X-XX-0.5*IX1,Y-3.0/FACT*FACTS,2);

        label2000:
            UWA115(J,IX1,IZUE,FELD,1,K2,ANZDTT);
            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y;
            YYTURB[J] = YY;
            X = XT;
            Y = YT;
            return;
        }   //END
        

        static void UWA107( int JJ, int J, int IZ1, int IX2, int IZUE, double[] FELD, int IANST, double K2, int ANZDTT)
        {
            //ENTRY TURB2 (JJ,J,IZ1,IX2,IZUE,FELD,IANST,K2,ANZDTT)
            //LOGICAL QANZDU, QPLOT
            //LOGICAL QNDWAS,QANZPA
            //INTEGER ANZDTT
            //DIMENSION FELD(80)
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20) ,
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /NTEILT/ NDTEIL
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /WESEL / IWESEL,MENTN[4]
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = FACTS/FACT, XV = 0, XN = 0, YV = 0, DY = 0, YN = 0, DX = 0;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            
        label4:
            NEWPEN(3);
            if (JJ > 1) goto label1700;

            PLOT (X,Y,3);
            PLOT (X+3.5/FACT*FACTS,Y,2);
            X = X + 3.5/FACT*FACTS;
            if (J == 1 && IZUE == 2) goto label200;
            if (KREUZ == 1) goto label400;
            if (Y < YWELLE) goto label100;
            UWA130(X-1.8*V,Y,1,0);
            if (KREUZ == 2) goto label400;
            UWA131(X-1.8*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            goto label400;
            
        label100:
            UWA130(X-1.7*V,Y,2,0);
            if (KREUZ == 2) goto label400;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],2,0);
            goto label400;
            
        label200:
            if (KREUZ == 1) goto label300;
            UWA130(X,Y-0.7,3,0);
            if (KREUZ == 2) goto label300;
            UWA131(X,Y-0.7,FELD[1],FELD[2],FELD[3],FELD[4],3,0);
            
        label300:
            XDUE2 = X;
            YDUE2 = Y;
            
        label400:
            YY = 2.5/FACT*FACTS;
            if (Y > YWELLE) YY = - 2.5/FACT*FACTS;
            if (Y > YWELLE && J-1 > 1 && J != IZ1) YY = -3.0/FACT*FACTS;
            if (J == 1 && J+1 == KOMP1) YY = -3.5/FACT*FACTS;
            if (J == 1 && IZUE == 2) YY = -4.5*V;
            if (J == 1 && IABHI == 2) YY = YY - 2.0*V;
            NEWPEN(3);
            PLOT (X,Y,3);
            if (IANST != 1) goto label600;

            if (Y < YWELLE) goto label500;
            if (J > 2) goto label450;
            PLOT (X,Y-1.5,2);
            NEWPEN (1);
            PLOT (X-0.2,Y-1.5,3);
            PLOT (X+0.2,Y-1.5,2);
            PLOT (X-0.2,Y-2.1,2);
            PLOT (X+0.2,Y-2.1,2);
            PLOT (X-0.2,Y-1.5,2);
            PLOT (X-0.1,Y-1.65,3);
            PLOT (X-0.3,Y-1.8,2);
            PLOT (X-0.1,Y-1.95,2);
            CIRCL(X+0.05,Y-1.8,0.0,360.0,0.05,0.05,0.0);
            NEWPEN (3);
            PLOT (X,Y-2.1,3);
            goto label600;
            
        label450:
            PLOT (X,Y-1.0,2);
            NEWPEN (1);
            PLOT (X-0.2,Y-1.0,3);
            PLOT (X+0.2,Y-1.0,2);
            PLOT (X+0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.0,2);
            PLOT (X-0.2,Y-1.15,3);
            PLOT (X-0.4,Y-1.30,2);
            PLOT (X-0.2,Y-1.45,2);
            PLOT (X-0.2,Y-1.6,3);
            PLOT (X+0.2,Y-1.0,2);
            CIRCL(X+0.05,Y-1.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-1.6,3);
            goto label600;
            
        label500:
            if (J > 2) goto label550;
            PLOT (X,Y+1.5,2);
            NEWPEN(1);
            PLOT (X-0.2,Y+1.5,3);
            PLOT (X+0.2,Y+1.5,2);
            PLOT (X-0.2,Y+2.1,2);
            PLOT (X+0.2,Y+2.1,2);
            PLOT (X-0.2,Y+1.5,2);
            PLOT (X-0.1,Y+1.65,3);
            PLOT (X-0.3,Y+1.8,2);
            PLOT (X-0.1,Y+1.95,2);
            CIRCL(X+0.05,Y+1.8,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y+2.1,3);
            goto label600;
            
        label550:
            PLOT (X,Y+1.0,2);
            NEWPEN(1);
            PLOT (X-0.2,Y+1.0,3);
            PLOT (X+0.2,Y+1.0,2);
            PLOT (X+0.2,Y+1.6,2);
            PLOT (X-0.2,Y+1.6,2);
            PLOT (X-0.2,Y+1.0,2);
            PLOT (X-0.2,Y+1.15,3);
            PLOT (X-0.4,Y+1.30,2);
            PLOT (X-0.2,Y+1.45,2);
            PLOT (X-0.2,Y+1.6,3);
            PLOT (X+0.2,Y+1.0,2);
            CIRCL(X+0.05,Y+1.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y+1.6,3);

        label600:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            if (Y < YWELLE) Y = Y + 1.0;
            if (YWELLE == 0.0) YWELLE = Y - 0.5;
            NEWPEN(1);
            PLOT (X,Y,3);
            PLOT (X+XX+IX1*0.5,Y+0.5,2);
            PLOT (X+XX+IX1*0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            if (J != IZ1) goto label700;

            XT = X + XX + 0.5*IX1;
            YT = Y - 1.5 - 1.5/FACT*FACTS;
            NEWPEN(3);
            PLOT (XT,Y-1.5,3);
            PLOT (XT,YT,2);
            X35 = XT;
            Y35 = YT;
            X36 = XT - 0.5;
            Y36 = Y - 4.0/FACT*FACTS;
            if (NDTEIL > 0) XV = X;
            if (NDTEIL > 0) YV = Y;
            if (NDTEIL > 0) XN = XT;
            if (NDTEIL > 0) YN = YT;

            if (KREUZ == 1) goto label1000;
            UWA130(XT,YT,4,0);
            if (KREUZ == 2) goto label1000;
            UWA131(XT,YT,FELD[5],FELD[6],FELD[7],FELD[8],4,0);
            goto label1000;

        label700:
            DY = 0.0;
            if (LHEIZ == 9 && J == 2 && IZ1 == 4) goto label710;
            if (J+1 != IZ1) DY = 0.5/FACT*FACTS;
            if (J+1 == KOMP1) DY = 1.0/FACT*FACTS;
            if (J == 1 && IWESEL > 0) DY = 0.0;
            DX = 2.0*V;
            if (J < IZ1 && MENTN[J+1] == 1) DX = 1.0*V;
            NEWPEN(3);
            PLOT (X+XX+IX1*0.5,Y+0.5,3);
            PLOT (X+XX+IX1*0.5,Y+2.5/FACT*FACTS+DY,2);
            PLOT (X+XX+0.5*IX1+DX,Y+2.5*V+DY,2);
            XT = X + XX + 0.5*IX1 + DX;
            YT = Y + 2.5/FACT*FACTS + DY;
            if (J != IZ1-1 || IABHI != 2) goto label720;
            if (NDRUCK == 0) goto label720;

            XT = XT + 1.5*V;
            PLOT (XT,YT,2);
            PLOT (XDUE1,YDUE1,3);
            PLOT (XDUE1+1.5,YDUE1,2);
            NEWPEN(1);
            PLOT (XDUE1+1.5,YDUE1-0.3,3);
            PLOT (XDUE1+1.5,YDUE1+0.3,2);
            PLOT (XDUE1+2.2,YDUE1-0.4,2);
            PLOT (XDUE1+2.2,YDUE1+0.4,2);
            PLOT (XDUE1+1.5,YDUE1-0.3,2);
            NEWPEN(3);
            PLOT (XDUE1+2.2,YDUE1,3);
            PLOT (XT,YDUE1,2);
            AROHD(XT,YDUE1,XT,YT,0.2*V,0.0,16);
            if (KREUZ == 1) goto label900;
            UWA130(XT-1.7*V,YT,1,0);
            UWA130(XT-1.7*V,YDUE1,1,0);
            if (KREUZ == 2) goto label900;
            UWA131(XT-1.7*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],1,0);
            UWA131(XT-1.7*V,YDUE1,FELD[69],FELD[70],FELD[71],FELD[72],1,0);
            goto label900;

        label710:
            NEWPEN(3);
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-1.0-2.5*V,2);
            PLOT (X+XX+0.5*IX1+2.0*V,Y-1.0-2.5*V,2);
            XT = X + XX + 0.5*IX1 + 2.0*V;
            YT = Y - 1.0 - 2.5*V;

        label720:
            if (IZUE != 1) goto label900;
            PLOT (XT+1.5/FACT*FACTS,YT,2);
            XT = XT + 1.5/FACT*FACTS;
            if (KREUZ == 1) goto label800;
            UWA130(XT-1.7*V,YT,1,0);
            if (KREUZ == 2) goto label800;
            UWA131(XT-1.7*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],1,0);
            
        label800:
            NEWPEN(3);
            PLOT (XT,YT,3);
            PLOT (XT+0.5,YT-0.5,2);
            PLOT (XT+0.5,YT+0.5,2);
            PLOT (XT+1.0,YT,2);
            XT = XT + 1.0;
            
        label900:
            if (MENTN[J+1] == 1) goto label1000;
            NEWPEN(3);
            PLOT (XT,YT,3);
            PLOT (XT+XDXT,YT,2);
            XT = XT + XDXT;

        label1000:
            NEWPEN(3);
            if (IX1 == 0) goto label1600;
            //goto label(1100,1200,1300,1400,1500),
            if(IX1 == 1)        goto label1100;
            if(IX1 == 2)        goto label1200;
            if(IX1 == 3)        goto label1300;
            if(IX1 == 4)        goto label1400;
            if(IX1 == 5)        goto label1500;

        label1100:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-4.0/FACT*FACTS,2);
            goto label1600;

        label1200:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.2,3);
            PLOT (X+0.5,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-4.0/FACT*FACTS,2);
            goto label1600;

        label1300:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.0/FACT*FACTS,2);
            goto label1600;

        label1400:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.1,3);
            PLOT (X+0.5,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.2,3);
            PLOT (X+1.0,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.3,3);
            PLOT (X+1.5,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.0,Y-1.4,3);
            PLOT (X+2.0,Y-4.0/FACT*FACTS,2);
            goto label1600;

        label1500:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.08,3);
            PLOT (X+0.5,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.15,3);
            PLOT (X+1.0,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.25,3);
            PLOT (X+1.5,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.0,Y-1.32,3);
            PLOT (X+2.0,Y-4.0/FACT*FACTS,2);
            NEWPEN(3);
            if (QNDWAS[5]) NEWPEN(1);
            PLOT (X+2.5,Y-1.4,3);
            PLOT (X+2.5,Y-4.0/FACT*FACTS,2);

        label1600:
            if ( !QPLOT[J]) goto label2000;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-4.0/FACT*FACTS,2);
            goto label2000;

        label1700:
            X = XV;
            Y = YV;
            NEWPEN (1);
            PLOT (X,Y,3);
            PLOT (X-XX-0.5*IX1,Y+0.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);

            NEWPEN(3);
            XT = X - XX - 0.5*IX1;
            YT = Y - 3.0*V;
            PLOT (XT,Y-1.5,3);
            PLOT (XT,YT,2);
            PLOT (XT-5.0*V,YT,2);
            XT = XT - 5.0*V;
            if (KREUZ == 1) goto label1710;
            UWA130(XT+2.0*V,YT,1,0);
            if (KREUZ == 2) goto label1710;
            UWA131(XT+2.0*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],1,0);

        label1710:
            NEWPEN(3);
            PLOT (XT,YT,3);
            UWA129(JJ,IX1);
            XT = XN;
            YT = YN;

            if (IX1 == 0) goto label2000;

            NEWPEN(3);
            if (IX1 > 2) goto label1750;
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X-1.0,Y-1.35,3);
            if (QANZPA[1]) goto label1720;
            PLOT (X-1.0,Y-4.0*V,2);
            goto label1730;
            
        label1720:
            PLOT (X-1.0,Y-3.0,2);
            PLOT (X+1.0,Y-3.0,2);

        label1730:
            if (IX1 == 1) goto label2000;
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X-0.5,Y-1.2,3);
            if (QANZPA[2]) goto label1740;
            PLOT (X-0.5,Y-4.0*V,2);
            goto label2000;
            
        label1740:
            PLOT (X-0.5,Y-2.5,2);
            PLOT (X+0.5,Y-2.5,2);
            goto label2000;
            
        label1750:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X-1.5,Y-1.40,3);
            if (QANZPA[1]) goto label1760;
            PLOT (X-1.5,Y-4.0*V,2);
            goto label1770;
            
        label1760:
            PLOT (X-1.5,Y-3.5,2);
            PLOT (X+1.5,Y-3.5,2);

        label1770:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X-1.0,Y-1.3,3);
            if (QANZPA[2]) goto label1780;
            PLOT (X-1.0,Y-4.0*V,2);
            goto label1790;
            
        label1780:
            PLOT (X-1.0,Y-3.0,2);
            PLOT (X+1.0,Y-3.0,2);

        label1790:
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X-0.5,Y-1.2,3);
            if (QANZPA[3]) goto label1800;
            PLOT (X-0.5,Y-4.0*V,2);
            goto label2000;
            
        label1800:
            PLOT (X-0.5,Y-2.5,2);
            PLOT (X+0.5,Y-2.5,2);
        
        label2000:
            UWA115(J,IX1,IZUE,FELD,2,K2,ANZDTT);

            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y;
            YYTURB[J] = -YY;
            if (YY > 0.0) YYTURB[J] = -YY-1.0;
            X = XT;
            Y = YT;
            return;
        }   //END

        
        static void UWA108( int J, int IZ1, int IX2, int IZUE, double[] FELD, int IANST, double K2, int ANZDTT)
        {
            //ENTRY TURB3 (J,IZ1,IX2,IZUE,FELD,IANST,K2,ANZDTT)
            //LOGICAL QANZDU, QPLOT
            //LOGICAL QNDWAS,QANZPA
            //INTEGER ANZDTT
            //DIMENSION FELD(80)

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20) ,
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = FACTS / FACT, XV = 0, XN = 0, YV = 0, DY = 0, YN = 0, DX = 0;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            
        label4:
            NEWPEN(3);
            PLOT (X,Y,3);
            DX = 0.0;
            if (Y < YWELLE) DX = XX+0.5*IX1;
            X = X + 3.5/FACT*FACTS + DX;
            PLOT (X,Y,2);
            if (Y < YWELLE) goto label100;
            if (IZUE == 2) goto label200;
            if (KREUZ == 1) goto label400;
            UWA130(X-1.7*V-DX,Y,1,0);
            if (KREUZ == 2) goto label400;
            UWA131(X-1.7*V-DX,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            goto label400;
            
        label100:
            if (KREUZ == 1) goto label300;
            UWA130(X-1.7*V-DX,Y,2,0);
            if (KREUZ == 2) goto label300;
            UWA131(X-1.7*V-DX,Y,FELD[1],FELD[2],FELD[3],FELD[4],2,0);
            goto label400;
            
        label200:
            if (KREUZ == 1) goto label300;
            UWA130(X,Y-0.7*V,3,0);
            if (KREUZ == 2) goto label300;
            UWA131(X,Y-0.7*V,FELD[1],FELD[2],FELD[3],FELD[4],3,0);
            
        label300:
            XDUE2 = X;
            YDUE2 = Y;
            
        label400:
            YY = 2.5/FACT*FACTS;
            if (Y > YWELLE) YY = -2.5/FACT*FACTS;
            if (Y > YWELLE && J-1 > 1) YY = - 3.0/FACT*FACTS;
            if (J == 1 && IZ1 == 2) YY = -3.0/FACT*FACTS;
            if (J == 1 && IZ1 > 3) YY = -3.0/FACT*FACTS;
            if (J == 1 && IZUE == 2) YY = -4.5/FACT*FACTS;
            if (J == 1 && IABHI == 2) YY = YY - 1.5*V;
            if (LHEIZ == 9) YY = -3.5*V;
            NEWPEN(3);
            PLOT (X,Y,3);
            if (IANST != 1) goto label600;
            if (Y < YWELLE) goto label500;
            PLOT (X,Y+YY+2.0,2);
            NEWPEN(1);
            PLOT (X-0.2,Y+YY+2.0,3);
            PLOT (X+0.2,Y+YY+2.0,2);
            PLOT (X-0.2,Y+YY+1.4,2);
            PLOT (X+0.2,Y+YY+1.4,2);
            PLOT (X-0.2,Y+YY+2.0,2);
            PLOT (X-0.1,Y+YY+1.85,3);
            PLOT (X-0.3,Y+YY+1.70,2);
            PLOT (X-0.1,Y+YY+1.55,2);
            CIRCL(X+0.05,Y+YY+1.7,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y+YY+1.4,3);
            goto label600;
            
        label500:
            PLOT (X,Y+0.5,2);
            NEWPEN(1);
            PLOT (X-0.2,Y+0.5,3);
            PLOT (X+0.2,Y+0.5,2);
            PLOT (X-0.2,Y+1.1,2);
            PLOT (X+0.2,Y+1.1,2);
            PLOT (X-0.2,Y+0.5,2);
            PLOT (X-0.1,Y+0.65,3);
            PLOT (X-0.3,Y+0.80,2);
            PLOT (X-0.1,Y+0.95,2);
            CIRCL(X+0.05,Y+0.8,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y+1.1,3);
            
        label600:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            if (YY > 0.0) Y = Y + 1.0;
            YWELLE = Y - 0.5;
            NEWPEN(1);
            PLOT (X,Y,3);
            PLOT (X+XX+0.5*IX1,Y+0.5,2);
            PLOT (X+XX+0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X-XX-0.5*IX1,Y+0.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            NEWPEN(3);
            if (J == 1 && IZ1 != 2 && IZUE != 2) goto label800;
            DY = 0.0;
            if (J+1 != IZ1) DY = 0.5/FACT*FACTS;
            PLOT (X+XX+0.5*IX1,Y+0.5,3);
            PLOT (X+XX+0.5*IX1,Y+2.5/FACT*FACTS+DY,2);
            PLOT (X-XX-0.5*IX1,Y+0.5,3);
            PLOT (X-XX-0.5*IX1,Y+2.5/FACT*FACTS+DY,2);
            PLOT (X+XX+0.5*IX1+2.0/FACT*FACTS ,Y+2.5/FACT*FACTS+DY,2);
            XT = X + XX + 0.5*IX1 + 2.0/FACT*FACTS;
            YT = Y + 2.5/FACT*FACTS + DY;
            if (IABHI != 2) goto label620;
            if (NDRUCK == 0) goto label620;

            XT = XT + 1.5*V;
            PLOT (XT,YT,2);
            PLOT (XDUE1,YDUE1,3);
            PLOT (XDUE1+1.5,YDUE1,2);
            NEWPEN(1);
            PLOT (XDUE1+1.5,YDUE1-0.3,3);
            PLOT (XDUE1+1.5,YDUE1+0.3,2);
            PLOT (XDUE1+2.2,YDUE1-0.4,2);
            PLOT (XDUE1+2.2,YDUE1+0.4,2);
            PLOT (XDUE1+1.5,YDUE1-0.3,2);
            NEWPEN(3);
            PLOT (XDUE1+2.2,YDUE1,3);
            PLOT (XT,YDUE1,2);
            AROHD(XT,YDUE1,XT,YT,0.2*V,0.0,16);

            if (KREUZ == 1) goto label610;
            UWA130(XT-1.7*V,YT,1,0);
            UWA130(XT-1.7*V,YDUE1,1,0);
            if (KREUZ == 2) goto label610;
            UWA131(XT-1.7*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],1,0);
            UWA131(XT-1.7*V,YDUE1,FELD[69],FELD[70],FELD[71],FELD[72],1,0);

        label610:
            NEWPEN(3);
            PLOT (XT,YT,3);

        label620:
            if (IZUE != 1) goto label1000;
            PLOT (XT+1.5/FACT*FACTS,YT,2);
            XT = XT + 1.5/FACT*FACTS;
            if (KREUZ == 1) goto label700;
            UWA130(XT-1.7*V,YT,1,0);
            if (KREUZ == 2) goto label700;
            UWA131(XT-1.7*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],1,0);
            
        label700:
            NEWPEN(30);
            PLOT (XT,YT,3);
            PLOT (XT+0.5,YT-0.5,2);
            PLOT (XT+0.5,YT+0.5,2);
            PLOT (XT+1.0,YT,2);
            XT = XT + 1.0;
            goto label1000;

        label800:
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            XT = X + XX + 0.5*IX1 + 2.0/FACT*FACTS;
            YT = Y - 1.0 - 2.5*V;
            PLOT (X+XX+0.5*IX1,YT,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,3);
            PLOT (X-XX-0.5*IX1,YT,2);
            PLOT (XT,YT,2);
            if (IZUE == 0) goto label1000;

            PLOT (XT+1.5/FACT*FACTS,YT,2);
            XT = XT + 1.5/FACT*FACTS;
            if (KREUZ == 1) goto label900;
            UWA130(XT-1.6*V,YT,2,0);
            if (KREUZ == 2) goto label900;
            UWA131(XT-1.6*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],2,0);
            
        label900:
            NEWPEN(3);
            PLOT (XT,YT,3);
            PLOT (XT+0.5,YT-0.5,2);
            PLOT (XT+0.5,YT+0.5,2);
            PLOT (XT+1.0,YT,2);
            XT = XT + 1.0;
            
        label1000:
            PLOT (XT+XDXT,YT,2);
            XT = XT + XDXT;

            if (IX1 == 0) goto label1500;
            //goto label(1100,1200,1300,1400,1400),
            if(IX1 == 1)    goto label1100;
            if(IX1 == 2)    goto label1200;
            if(IX1 == 3)    goto label1300;
            if(IX1 == 4)    goto label1400;
            if(IX1 == 5)    goto label1400;

        label1100:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-3.0/FACT*FACTS,2);
            PLOT (X+1.0,Y-2.5,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X-1.0,Y-1.35,2);
            goto label1500;

        label1200:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.2,3);
            PLOT (X+0.5,Y-3.0/FACT*FACTS,2);
            if ( !QANZPA[1]) goto label1210;
            PLOT (X-0.5,Y-1.2,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5,Y-2.0,2);
            
        label1210:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X-1.0,Y-1.35,3);
            if (QANZPA[2]) goto label1220;
            PLOT (X-1.0,Y-3.0/FACT*FACTS,2);
            goto label1500;
            
        label1220:
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-3.0/FACT*FACTS,2);
            goto label1500;

        label1300:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-3.0/FACT*FACTS,2);
            if ( !QANZPA[1]) goto label1310;
            PLOT (X-0.5,Y-1.12,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5,Y-2.0,2);
            
        label1310:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-3.0/FACT*FACTS,2);
            if ( !QANZPA[2]) goto label1320;
            PLOT (X-1.0,Y-1.25,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            
        label1320:
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X-1.5,Y-1.4,3);
            if (QANZPA[3]) goto label1330;
            PLOT (X-1.5,Y-3.0/FACT*FACTS,2);
            goto label1500;
            
        label1330:
            PLOT (X-1.5,Y-3.0,2);
            PLOT (X+1.5,Y-3.0,2);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-3.0/FACT*FACTS,2);

        label1400:
            goto label1500;

        label1500:
            if ( !QPLOT[J]) goto label2000;
            if (J == 1 && IZUE != 2)
                PLOT (X+XX+0.5*IX1,Y-2.5/FACT*FACTS-1.0,3);
            if (J == 1 && IZUE != 2) goto label1600;
            PLOT (X-XX-0.5*IX1,Y-1.5,3);
            DY = 0.0;
            if (IX1 > 2) DY = 0.5;
            PLOT (X-XX-0.5*IX1,Y-3.0-DY,2);
            PLOT (X+XX+0.5*IX1,Y-3.0-DY,2);
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            
        label1600:
            PLOT (X+XX+0.5*IX1,Y-3.0/FACT*FACTS,2);

        label2000:
            UWA115(J,IX1,IZUE,FELD,3,K2,ANZDTT);

            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y;
            YYTURB[J] = -YY;
            if (YY > 0.0) YYTURB[J] = -YY-1.0;
            X = XT;
            Y = YT;
            return;
        }   //END

        
        static void UWA109( int JJ, int J, int IX2, int IZUE, int KKW, double[] FELD, int IANST,double K2, int ANZDTT)
        {
            //ENTRY TURB4 (JJ,J,IX2,IZUE,KKW,FELD,IANST,K2,ANZDTT)
            //LOGICAL QNDWAS,QANZPA
            //LOGICAL QANZDU, QPLOT
            //INTEGER ANZDTT
            //DIMENSION FELD(80)

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20) ,
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /NTEILT/ NDTEIL
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = FACTS / FACT, XV = 0, XN = 0, YV = 0, DY = 0, YN = 0, DX = 0, XND = 0, XK = 0;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            
        label4:
            NEWPEN(3);
            if (JJ > 1) goto label200;
            PLOT (X,Y,3);
            X = X + 4.5/FACT*FACTS;
            PLOT (X,Y,2);
            if (KREUZ == 1) goto label100;
            UWA130(X-1.7*V,Y,1,0);
            if (KREUZ == 2) goto label100;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            
        label100:
            NEWPEN(3);
            PLOT (X,Y,3);
            if (NDTEIL > 0) goto label300;
            if (IANST != 1) goto label500;

            PLOT (X,Y-1.0,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-1.0,3);
            PLOT (X+0.2,Y-1.0,2);
            PLOT (X+0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.0,2);
            PLOT (X-0.2,Y-1.15,3);
            PLOT (X-0.4,Y-1.30,2);
            PLOT (X-0.2,Y-1.45,2);
            PLOT (X-0.2,Y-1.6,3);
            PLOT (X+0.2,Y-1.0,2);
            CIRCL(X+0.05,Y-1.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-1.6,3);
            goto label500;

        label200:
            X = XT + 1.6*V + 0.5*IX1 + XX;
            if (KKW == 2 && JJ-1 != NDTEIL) X = X + 1.4*V;
            Y = YT;
            PLOT (X,Y,3);
            goto label500;

        label300:
            if (IANST != 1) goto label400;
            NEWPEN(1);
            PLOT (X,Y+0.2,3);
            PLOT (X+0.6,Y+0.2,2);
            PLOT (X+0.6,Y-0.2,2);
            PLOT (X,Y-0.2,2);
            PLOT (X,Y+0.2,2);
            PLOT (X+0.6,Y-0.2,2);
            PLOT (X+0.15,Y+0.2,3);
            PLOT (X+0.30,Y+0.4,2);
            PLOT (X+0.45,Y+0.2,2);
            CIRCL(X+0.35,Y,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X+0.6,Y,3);
            
        label400:
            DX = 5.5*V;
            if (NDTEIL == 2 && JJ == 2) DX = 11.0*V;
            if (KKW == 2) DX = DX + 1.4*V*NDTEIL;
            X = X + DX;
            PLOT (X,Y,2);

        label500:
            YY = 2.5*V;
            PLOT (X,Y-YY,2);

            NEWPEN(1);
            Y = Y - YY;
            if (YY < 0.0) Y = Y + 1.0;
            if (YWELLE == 0.0) YWELLE = Y - 0.5;
            PLOT (X,Y,3);
            PLOT (X+XX+0.5*IX1,Y+0.5,2);
            PLOT (X+XX+0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X-XX-0.5*IX1,Y+0.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            NEWPEN(3);

            if (IX1 == 0) goto label1500;
            //goto label(1100,1100,1200,1300,1400),
            if(IX1 == 1)    goto label1100;
            if(IX1 == 2)    goto label1100;
            if(IX1 == 3)    goto label1200;
            if(IX1 == 4)    goto label1300;
            if(IX1 == 5)    goto label1400;

        label1100:
            NEWPEN(3);
            if (IX1 == 1 && QNDWAS[1]) NEWPEN(1);
            if (IX1 == 2 && QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-2.5,2);
            if (IX1 == 1 && (JJ == 1 || !QANZPA[1]))
                PLOT (X+1.0,Y-4.0*V,2);
            if (IX1 == 2 && (JJ == 1 || !QANZPA[2]))
                PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X+1.0,Y-2.5,3);
            if (IX1 == 1 && JJ > 1 && QANZPA[1])
                PLOT (XND-1.0,Y-2.5,3);
            if (IX1 == 2 && JJ > 1 && QANZPA[2])
                PLOT (XND-1.0,Y-2.5,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X-1.0,Y-1.35,2);
            if (IX1 == 1) goto label1500;
            NEWPEN(3);
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.2,3);
            PLOT (X+0.5,Y-2.0,2);
            if (JJ == 1 || !QANZPA[1]) PLOT (X+0.5,Y-4.0*V,2);
            PLOT (X+0.5,Y-2.0,3);
            if (JJ > 1 && QANZPA[1]) PLOT (XND-0.5,Y-2.0,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X-0.5,Y-1.2,2);
            goto label1500;

        label1200:
            NEWPEN(3);
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-2.0,2);
            if (JJ == 1 || !QANZPA[1]) PLOT (X+0.5,Y-4.0*V,2);
            PLOT (X+0.5,Y-2.0,3);
            if (JJ > 1 && QANZPA[1]) PLOT (XND-0.5,Y-2.0,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X-0.5,Y-1.12,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-2.5,2);
            if (JJ == 1 || !QANZPA[2]) PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X+1.0,Y-2.5,3);
            if (JJ > 1 && QANZPA[2]) PLOT (XND-1.0,Y-2.5,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X-1.0,Y-1.25,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-3.0,2);
            if (JJ == 1 || !QANZPA[3]) PLOT (X+1.5,Y-4.0*V,2);
            PLOT (X+1.5,Y-3.0,3);
            if (JJ > 1 && QANZPA[3]) PLOT (XND-1.5,Y-3.0,3);
            PLOT (X-1.5,Y-3.0,2);
            PLOT (X-1.5,Y-1.4,2);
            goto label1500;

        label1300:
            NEWPEN(3);
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.1,3);
            PLOT (X+0.5,Y-2.0,2);
            if (JJ == 1 || !QANZPA[1]) PLOT (X+0.5,Y-4.0*V,2);
            PLOT (X+0.5,Y-2.0,3);
            if (JJ > 1 && QANZPA[1]) PLOT (XND-0.5,Y-2.0,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X-0.5,Y-1.1,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.2,3);
            PLOT (X+1.0,Y-2.5,2);
            if (JJ == 1 || !QANZPA[2]) PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X+1.0,Y-2.5,3);
            if (JJ > 1 && QANZPA[2]) PLOT (XND-1.0,Y-2.5,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X-1.0,Y-1.2,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.3,3);
            PLOT (X+1.5,Y-3.0,2);
            if (JJ == 1 || !QANZPA[3]) PLOT (X+1.5,Y-4.0*V,2);
            PLOT (X+1.5,Y-3.0,3);
            if (JJ > 1 && QANZPA[3]) PLOT (XND-1.5,Y-3.0,3);
            PLOT (X-1.5,Y-3.0,2);
            PLOT (X-1.5,Y-1.3,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.0,Y-1.4,3);
            PLOT (X+2.0,Y-3.5,2);
            if (JJ == 1 || !QANZPA[4]) PLOT (X+2.0,Y-4.0*V,2);
            PLOT (X+2.0,Y-3.5,3);
            if (JJ > 1 && QANZPA[4]) PLOT (XND-2.0,Y-3.5,3);
            PLOT (X-2.0,Y-3.5,2);
            PLOT (X-2.0,Y-1.4,2);
            goto label1500;

        label1400:
            NEWPEN(3);
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.08,3);
            PLOT (X+0.5,Y-2.0,2);
            if (JJ == 1 || !QANZPA[1]) PLOT (X+0.5,Y-4.0*V,2);
            PLOT (X+0.5,Y-2.0,3);
            if (JJ > 1 && QANZPA[1]) PLOT (XND-0.5,Y-2.0,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X-0.5,Y-1.08,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.15,3);
            PLOT (X+1.0,Y-2.5,2);
            if (JJ == 1 || !QANZPA[2]) PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X+1.0,Y-2.5,3);
            if (JJ > 1 && QANZPA[2]) PLOT (XND-1.0,Y-2.5,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X-1.0,Y-1.15,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.25,3);
            PLOT (X+1.5,Y-3.0,2);
            if (JJ == 1 || !QANZPA[3]) PLOT (X+1.5,Y-4.0*V,2);
            PLOT (X+1.5,Y-3.0,3);
            if (JJ > 1 && QANZPA[3]) PLOT (XND-1.5,Y-3.0,3);
            PLOT (X-1.5,Y-3.0,2);
            PLOT (X-1.5,Y-1.25,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.0,Y-1.32,3);
            PLOT (X+2.0,Y-3.5,2);
            if (JJ == 1 || !QANZPA[4]) PLOT (X+2.0,Y-4.0*V,2);
            PLOT (X+2.0,Y-3.5,3);
            if (JJ > 1 && QANZPA[4]) PLOT (XND-2.0,Y-3.5,3);
            PLOT (X-2.0,Y-3.5,2);
            PLOT (X-2.0,Y-1.32,2);
            NEWPEN(3);
            if (QNDWAS[5]) NEWPEN(1);
            PLOT (X+2.5,Y-1.4,3);
            PLOT (X+2.5,Y-4.0,2);
            if (JJ == 1 || !QANZPA[5]) PLOT (X+2.5,Y-4.0*V,2);
            PLOT (X+2.5,Y-4.0,3);
            if (JJ > 1 && QANZPA[5]) PLOT (XND-2.5,Y-4.0,3);
            PLOT (X-2.5,Y-4.0,2);
            PLOT (X-2.5,Y-1.4,2);

        label1500:
            NEWPEN(3);
            XND = X;
            if (JJ == 1 && NDTEIL > 0) YV = YT;
            if (JJ == 1 && NDTEIL > 0) XV = XT;
            PLOT (X-XX-0.5*IX1,Y-1.5,3);
            YT = Y - 2.0 - 0.5*IX1;
            if (IX1 <= 1) YT = Y - 3.0;
            PLOT (X-XX-0.5*IX1,YT,2);
            PLOT (X+XX+0.5*IX1,YT,2);
            if (JJ > 1 && QPLOT[J]) goto label1600;
            YT = YT - 0.5*V;
            XT = X + XX + 0.5*IX1;
            PLOT (XT,Y-1.5,3);
            PLOT (XT,YT,2);
            if (JJ == 1 && NDTEIL > 0) XK = X + XX + 0.5*IX1;
            if (JJ == 1 && NDTEIL > 0) XN = X - XX - 0.5*IX1;
            if (JJ == 1 && NDTEIL > 0) YN = Y - 2.0 - 0.5*IX1;
            if (JJ == 1 && NDTEIL > 0 && IX1 <= 1) YN = Y - 3.0;

            if (JJ > 1) UWA129(JJ,IX1);

            if (KREUZ == 1) goto label2000;
            NEWPEN(1);
            UWA130(XT,YT,4,0);
            if (KREUZ == 2) goto label2000;
            UWA131(XT,YT,FELD[5],FELD[6],FELD[7],FELD[8],4,0);
            goto label2000;

        label1600:
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,YN,2);
            PLOT (XN,YN,2);
            XT = X + XX + 0.5*IX1;

        label2000:
            UWA115(J,IX1,IZUE,FELD,4,K2,ANZDTT);

            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y;
            YYTURB[J] = YY;
            if (NDTEIL == 0) goto label2100;

            if (JJ == 1 || JJ == NDTEIL) XT = XV;
            if (JJ == 1 || JJ == NDTEIL) YT = YV;
            if (JJ == NDTEIL+1) XT = XK;
            if (JJ == NDTEIL+1) YT = YN;

        label2100:
            X = XT;
            Y = YT;
            return;
        }   //END

                
        static void UWA110( int J, int IZ1, int IX2, int IZUE, double[] FELD, int IANST, double K2, int ANZDTT)
        {
            //ENTRY TURB5 (J,IZ1,IX2,IZUE,FELD,IANST,K2,ANZDTT)

            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //LOGICAL QANZDU,QPLOT,QNDWAS,QANZPA
            //INTEGER ANZDTT
            //DIMENSION FELD(80)

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE(20) ,
            //1 YE(20), XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ(20), NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2(15), JKT2(15), YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /WESEL / IWESEL,MENTN[4]
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = FACTS / FACT, XV = 0, XN = 0, YV = 0, DY = 0, YN = 0, DX = 0, YD = 0;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 > 0) XX = 1.0;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 > 0) XX = 1.0;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 > 0) XX = 1.0;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 > 0) XX = 1.0;
            
        label4:
            if (J == KOMP2) goto label1000;

            NEWPEN(3);
            PLOT (X,Y,3);
            DX = 0.0;
            if (J > 1) DX = 2.0;
            X = X + 3.5/FACT*FACTS + DX;
            PLOT (X,Y,2);
            if (KREUZ == 1) goto label200;
            if (Y < YWELLE) goto label100;
            UWA130(X-3.0*V,Y,1,0);
            if (KREUZ == 2) goto label200;
            UWA131(X-3.0*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            goto label200;
            
        label100:
            UWA130(X-DX-1.7*V,Y,2,0);
            if (KREUZ == 2) goto label200;
            UWA131(X-DX-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],2,0);
            
        label200:
            YY = 3.5/FACT*FACTS;
            if (IABHI == 2) YY = YY + 1.5*V;
            if (Y < YWELLE) YY = -2.5/FACT*FACTS;
            XX = 0.0;
            NEWPEN(3);
            DY = Y;
            if (IANST != 1) goto label400;

            PLOT (X,Y,3);
            if (Y < YWELLE) goto label300;
            PLOT (X,Y-1.5,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-1.5,3);
            PLOT (X+0.2,Y-1.5,2);
            PLOT (X-0.2,Y-2.1,2);
            PLOT (X+0.2,Y-2.1,2);
            PLOT (X-0.2,Y-1.5,2);
            PLOT (X-0.1,Y-1.65,3);
            PLOT (X-0.3,Y-1.8,2);
            PLOT (X-0.1,Y-1.95,2);
            CIRCL(X+0.05,Y-1.8,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            DY = Y - 2.1;
            goto label400;
            
        label300:
            PLOT (X,Y+1.5,2);
            NEWPEN(1);
            PLOT (X-0.2,Y+1.5,3);
            PLOT (X+0.2,Y+1.5,2);
            PLOT (X-0.2,Y+2.1,2);
            PLOT (X+0.2,Y+2.1,2);
            PLOT (X-0.2,Y+1.5,2);
            PLOT (X-0.1,Y+1.65,3);
            PLOT (X-0.3,Y+1.8,2);
            PLOT (X-0.1,Y+1.95,2);
            CIRCL(X+0.05,Y+1.8,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            DY = Y + 2.1;

        label400:
            AROHD(X,DY,X,Y-YY,0.2/FACT*FACTS,0.0,16);
            Y = Y - YY;
            if (Y < YWELLE) Y = Y + 1.0;
            YWELLE = Y - 0.5;

            NEWPEN(1);
            PLOT (X,Y,3);
            PLOT (X-2.0,Y+0.5,2);
            PLOT (X-2.0,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X+0.5,Y,2);
            PLOT (X+0.5,Y-1.0,2);
            PLOT (X,Y-1.0,2);
            NEWPEN(3);
            if (J > 1) goto label500;

            PLOT (X,Y-1.0,3);
            PLOT (X,Y-1.6*V,2);
            PLOT (X+0.5,Y-1.6*V,2);
            AROHD(X+0.5,Y-1.6*V,X+0.5,Y-1.0,0.2*V,0.0,16);
            if (KREUZ > 0) goto label500;
            UWA133(X-0.6,Y-2.0*V,XH,FELD[9],0.0,1);
            NEWPEN(3);

        label500:
            PLOT (X-2.0,Y+0.5,3);
            YD = 0.0;
            if (J > 1) YD = 0.5/FACT*FACTS;
            YT = Y + 2.5/FACT*FACTS + YD;
            PLOT (X-2.0,YT,2);
            if (IZUE != 1) goto label700;
            PLOT (X-1.3,YT,2);
            PLOT (X-0.8,YT-0.5,2);
            PLOT (X-0.8,YT+0.5,2);
            PLOT (X-0.3,YT,2);
            if (KREUZ == 1) goto label600;
            NEWPEN(1);
            AROHD(X-1.8,YT+0.5/FACT*FACTS,X-1.8,YT,0.2/FACT*FACTS,0.0,16);
            PLOT (X-1.8,YT+0.5/FACT*FACTS,3);
            PLOT (X-2.0,YT+0.5/FACT*FACTS,2);
            UWA130(X-2.0,YT+0.5/FACT*FACTS,7,0);
            if (KREUZ == 2) goto label600;
            UWA131(X-2.0,YT+0.5/FACT*FACTS,FELD[5],FELD[6],FELD[7],FELD[8],7,0);
            
        label600:
            NEWPEN(3);
            PLOT (X-0.3,YT,3);
            
        label700:
            PLOT (X+0.5,YT,2);

            if (KOMP2 == 0) goto label900;
            if (IX1 <= 0) goto label800;
            PLOT (X-1.5,Y-1.4,3);
            PLOT (X-1.5,Y-4.0/FACT*FACTS,2);
            if (IX1 <= 1) goto label800;
            PLOT (X-1.0,Y-1.25,3);
            PLOT (X-1.0,Y-4.0/FACT*FACTS,2);
            
        label800:
            if ( !QPLOT[J]) goto label900;
            PLOT (X-2.0,Y-1.5,3);
            PLOT (X-2.0,Y-4.0/FACT*FACTS,2);
            
        label900:
            XT = X + 0.5;
            if (IZUE != 0 || NDRUCK == 0 || IABHI != 2) goto label950;
            if (J == KOMP1 && KOMP2 > 0 && KOMP2 != IZ1) goto label950;
            if (J == KOMP1 && KOMP2 == 0 && KOMP1 != IZ1) goto label950;

            NEWPEN(3);
            PLOT (XDUE1,YDUE1,3);
            PLOT (X-0.5,YDUE1,2);
            AROHD(X-0.5,YDUE1,X-0.5,YT,0.2*V,0.0,16);
            if (KREUZ == 1) goto label950;
            UWA130(X-3.0*V,YDUE1,1,0);
            AROHD(X-1.0,YT+0.5*V,X-1.0,YT,0.2*V,0.0,16);
            PLOT (X-1.0,YT+0.5*V,3);
            PLOT (X-1.4*V,YT+0.5*V,2);
            UWA130(X-1.4*V,YT+0.5*V,7,0);
            if (KREUZ == 2) goto label950;
            UWA131(X-3.0*V,YDUE1,FELD[69],FELD[70],FELD[71],FELD[72],1,0);
            UWA131(X-1.4*V,YT+0.5*V,FELD[5],FELD[6],FELD[7],FELD[8],7,0);
            
        label950:
            NEWPEN(3);
            if (KOMP2 > 0) goto label3000;
            X = X + 0.5;
            Y = YT;

        label1000:
            if (KOMP2 == 0) goto label1100;
            if (KREUZ == 1) goto label1100;
            NEWPEN(1);
            AROHD(X-0.2,Y+0.5/FACT*FACTS,X-0.2,Y,0.2/FACT*FACTS,0.0,16);
            PLOT (X-0.2,Y+0.5/FACT*FACTS,3);
            PLOT (X,Y+0.5/FACT*FACTS,2);
            UWA130(X,Y+0.5/FACT*FACTS,8,0);
            if (KREUZ == 2) goto label1100;
            UWA131(X,Y+0.5/FACT*FACTS,FELD[1],FELD[2],FELD[3],FELD[4],8,0);
            
        label1100:
            NEWPEN(3);
            DY = Y;
            if (KOMP2 == 0) goto label1200;
            if (IANST != 1) goto label1200;
            PLOT (X,Y,3);
            PLOT (X,Y-1.0,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-1.0,3);
            PLOT (X+0.2,Y-1.0,2);
            PLOT (X+0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.0,2);
            PLOT (X-0.2,Y-1.15,3);
            PLOT (X-0.4,Y-1.30,2);
            PLOT (X-0.2,Y-1.45,2);
            PLOT (X-0.2,Y-1.6,3);
            PLOT (X+0.2,Y-1.0,2);
            CIRCL(X+0.05,Y-1.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-1.6,3);
            DY = Y - 1.6;
            
        label1200:
            YD = 0.0;
            if (J > 2) YD = 0.5/FACT*FACTS;
            Y = Y - 2.5/FACT*FACTS - YD;
            AROHD(X,DY,X,Y,0.2/FACT*FACTS,0.0,16);
            XX = 2.0;
            if (KOMP2 == 0) IX1 = IX1 - 1;
            if (IX1 == 1) XX = 1.5;
            if (IX1 > 1) XX = 1.0;
            NEWPEN(1);

            PLOT (X,Y,3);
            PLOT (X+XX+0.5*IX1,Y+0.5,2);
            PLOT (X+XX+0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            NEWPEN(3);
            if (J == IZ1) goto label1400;
            if (J != IZ1-1 && MENTN[J+1] != 1) goto label1300;

            DX = 2.0*V;
            if (J < IZ1 && MENTN[J+1] == 1) DX = 1.0*V;
            PLOT (X+XX+0.5*IX1,Y+0.5,3);
            PLOT (X+XX+0.5*IX1,Y+2.5/FACT*FACTS,2);
            PLOT (X+XX+0.5*IX1+DX,Y+2.5*V,2);
            XT = X + XX + 0.5*IX1 + DX;
            YT = Y + 2.5/FACT*FACTS;
            if (IABHI != 2) goto label1220;
            if (NDRUCK == 0) goto label1220;
            XT = XT + 3.5*V;
            PLOT (XT,YT,2);
            PLOT (XDUE1,YDUE1,3);
            PLOT (XDUE1+1.5,YDUE1,2);
            NEWPEN(1);
            PLOT (XDUE1+1.5,YDUE1-0.3,3);
            PLOT (XDUE1+1.5,YDUE1+0.3,2);
            PLOT (XDUE1+2.2,YDUE1-0.4,2);
            PLOT (XDUE1+2.2,YDUE1+0.4,2);
            PLOT (XDUE1+1.5,YDUE1-0.3,2);
            NEWPEN(3);
            PLOT (XDUE1+2.2,YDUE1,3);
            PLOT (XT,YDUE1,2);
            AROHD(XT,YDUE1,XT,YT,0.2*V,0.0,16);

            if (KREUZ == 1) goto label1210;
            UWA130(XT-1.7*V,YT,1,0);
            UWA130(XT-1.7*V,YDUE1,1,0);
            if (KREUZ == 2) goto label1210;
            UWA131(XT-1.7*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],1,0);
            UWA131(XT-1.7*V,YDUE1,FELD[69],FELD[70],FELD[71],FELD[72],1,0);

        label1210:
            NEWPEN(3);

        label1220:
            if (MENTN[J+1] == 1) goto label1600;
            PLOT (XT,YT,3);
            PLOT (XT+XDXT,YT,2);
            XT = XT + XDXT;
            goto label1600;

        label1300:
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            XT = X+XX+0.5*IX1+2.0/FACT*FACTS+XDXT;
            YT = Y - 2.5/FACT*FACTS - 1.0;
            PLOT (X+XX+0.5*IX1,YT,2);
            PLOT (XT,YT,2);
            goto label1600;

        label1400:
            XT = X + XX + 0.5*IX1;
            YT = Y - 3.0/FACT*FACTS;
            if (KREUZ == 1) goto label1500;
            UWA130(XT,YT+0.7,4,0);
            if (KREUZ == 2) goto label1500;
            UWA131(XT,YT+0.7,FELD[5],FELD[6],FELD[7],FELD[8],4,0);
            
        label1500:
            NEWPEN(3);
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,YT,2);
            X35 = XT;
            Y35 = YT;
            X36 = XT - 0.5;
            Y36 = Y - 4.0/FACT*FACTS;
            
        label1600: 
            NEWPEN(3);
            if (KOMP2 != 0) goto label1700;
            if (IX2 == 0) goto label1700;

            PLOT (X-2.5,Y-1.5,3);
            PLOT (X-2.5,Y-4.0/FACT*FACTS,2);
            
        label1700:
            if ( !QPLOT[J]) goto label2000;

            if (J == IZ1) goto label2000;
            if (J != IZ1-1) PLOT (X+XX+0.5*IX1,Y-3.5,3);
            if (J == IZ1-1) PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-4.0/FACT*FACTS,2);
            
        label2000:
            if (IX1 == 0) goto label3000;
            //goto label(2100,2100,2300,2400,2500),
            if(IX1 == 1)    goto label2100;
            if(IX1 == 2)    goto label2100;
            if(IX1 == 3)    goto label2300;
            if(IX1 == 4)    goto label2400;
            if(IX1 == 5)    goto label2500;

        label2100:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.0*V,2);
            if (IX1 == 2) goto label2200;
            goto label3000;

        label2200:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            goto label3000;

        label2300:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.2,3);
            PLOT (X+1.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.5,Y-1.3,3);
            PLOT (X+1.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+2.0,Y-1.4,3);
            PLOT (X+2.0,Y-4.0*V,2);
            goto label3000;

        label2400:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.1,3);
            PLOT (X+1.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.5,Y-1.2,3);
            PLOT (X+1.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+2.0,Y-1.3,3);
            PLOT (X+2.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.5,Y-1.4,3);
            PLOT (X+2.5,Y-4.0*V,2);
            goto label3000;

        label2500:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.08,3);
            PLOT (X+1.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.5,Y-1.15,3);
            PLOT (X+1.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+2.0,Y-1.25,3);
            PLOT (X+2.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.5,Y-1.32,3);
            PLOT (X+2.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[5]) NEWPEN(1);
            PLOT (X+3.0,Y-1.40,3);
            PLOT (X+3.0,Y-4.0*V,2);

        label3000:
            UWA115(J,IX1,IZUE,FELD,5,K2,ANZDTT);
            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y;
            YYTURB[J] = YY;
            if (YY < 0.0) YYTURB[J] = YY-1.0;
            if (J == KOMP2) YYTURB[J] = 2.5/FACT*FACTS;
            X = XT;
            Y = YT;
            return;
        }   //END


        static void UWA111( int J, int IX2, int IZUE, double[] FELD, int IANST, double K2, int ANZDTT)
        {
            //ENTRY TURB6 (J,IX2,IZUE,FELD,IANST,K2,ANZDTT)
            //LOGICAL QANZDU, QPLOT
            //LOGICAL QNDWAS,QANZPA
            //INTEGER ANZDTT
            //DIMENSION FELD(80)
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = FACTS / FACT, DX = 0;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            
        label4:
            NEWPEN(3);
            DX = 0.0;
            if (IX1 > 2) DX = 0.5;
            PLOT (X,Y,3);
            PLOT (X+3.5/FACT*FACTS,Y,2);
            X = X + 3.5/FACT*FACTS;
            if (KREUZ == 1) goto label200;
            if (Y < YWELLE) goto label100;
            UWA130(X-1.7*V,Y,1,0);
            if (KREUZ == 2) goto label200;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            goto label200;
            
        label100:
            UWA130(X-1.7*V,Y,2,0);
            if (KREUZ == 2) goto label200;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],2,0);
            
        label200:
            NEWPEN(3);
            PLOT (X,Y,3);
            X = X + 1.5 + DX;
            PLOT (X,Y,2);
            YY = 2.5/FACT*FACTS;
            if (Y > YWELLE) YY = -2.5/FACT*FACTS;
            if (IANST != 1) goto label400;
            
            if (Y < YWELLE) goto label300;
            PLOT (X,Y-1.0,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-1.0,3);
            PLOT (X+0.2,Y-1.0,2);
            PLOT (X+0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.0,2);
            PLOT (X-0.2,Y-1.15,3);
            PLOT (X-0.4,Y-1.30,2);
            PLOT (X-0.2,Y-1.45,2);
            PLOT (X-0.2,Y-1.6,3);
            PLOT (X+0.2,Y-1.0,2);
            CIRCL(X+0.05,Y-1.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-1.6,3);
            goto label400;
            
        label300:
            PLOT (X,Y+1.0,2);
            NEWPEN(1);
            PLOT (X-0.2,Y+1.0,3);
            PLOT (X+0.2,Y+1.0,2);
            PLOT (X+0.2,Y+1.6,2);
            PLOT (X-0.2,Y+1.6,2);
            PLOT (X-0.2,Y+1.0,2);
            PLOT (X-0.2,Y+1.15,3);
            PLOT (X-0.4,Y+1.30,2);
            PLOT (X-0.2,Y+1.45,2);
            PLOT (X-0.2,Y+1.6,3);
            PLOT (X+0.2,Y+1.0,2);
            CIRCL(X+0.05,Y+1.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y+1.6,3);
            
        label400:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            if (Y < YWELLE) Y = Y + 1.0;
            if (YWELLE == 0.0) YWELLE = Y - 0.5;
            
            NEWPEN(1);
            PLOT (X,Y,3);
            PLOT (X+2.0+DX,Y+0.5,2);
            PLOT (X+2.0+DX,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X-1.5-DX,Y+0.5,2);
            PLOT (X-1.5-DX,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            
            NEWPEN(3);
            PLOT (X+2.0+DX,Y-1.5,3);
            PLOT (X+2.0+DX,Y-3.0,2);
            PLOT (X-1.5-DX,Y-1.5,3);
            PLOT (X-1.5-DX,Y-3.0,2);
            XT = X + 2.0 + DX;
            YT = Y - 3.0;
            X35 = XT;
            X36 = X - 1.5 - DX;
            Y35 = YT;
            Y36 = YT;
            if (KREUZ == 1) goto label500;
            UWA130(X36,Y36,3,0);
            UWA130(X35,Y35,4,0);
            if (KREUZ == 2) goto label500;
            UWA131(X35,Y35,FELD[77],FELD[78],FELD[79],FELD[80],4,0);
            UWA131(X36,Y36,FELD[ 5],FELD[ 6],FELD[ 7],FELD[ 8],3,0);
            
        label500:
            if (IX1 == 0) goto label2000;
            
            NEWPEN(3);
            //goto label(1100,1200,1300),
            if(IX1 == 1)        goto label1100;
            if(IX1 == 2)        goto label1200;
            if(IX1 == 3)        goto label1300;
            
        label1100:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X-1.0,Y-1.35,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0/FACT*FACTS,2);
            goto label2000;
            
        label1200:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X-0.5,Y-1.15,3);
            PLOT (X-0.5,Y-4.0/FACT*FACTS,2);
            if (!QANZPA[1]) goto label1210;
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-2.0,2);
            PLOT (X-0.5,Y-2.0,2);
            
        label1210:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            if (QANZPA[2]) goto label1220;
            PLOT (X+1.0,Y-4.0/FACT*FACTS,2);
            goto label2000;
            
        label1220:
            PLOT (X+1.0,Y-2.5,2);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X-1.0,Y-1.35,3);
            PLOT (X-1.0,Y-4.0/FACT*FACTS,2);
            goto label2000;
            
        label1300:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.2,3);
            PLOT (X+0.5,Y-4.0*V,2);
            if (!QANZPA[1]) goto label1310;
            PLOT (X-0.5,Y-1.2,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5,Y-2.0,2);
            
        label1310:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X-1.0,Y-1.35,3);
            if (!QANZPA[2]) goto label1320;
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            PLOT (X+1.0,Y-1.3,3);
            PLOT (X+1.0,Y-4.0*V,2);
            goto label1330;
            
        label1320:
            PLOT (X-1.0,Y-4.0*V,2);
            
        label1330:
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.0*V,2);
            if (!QANZPA[3]) goto label2000;
            PLOT (X-1.5,Y-1.4,3);
            PLOT (X-1.5,Y-2.5,2);
            PLOT (X+1.5,Y-2.5,2);
            
        label2000:
            UWA115(J,IX1,IZUE,FELD,6,K2,ANZDTT);
            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y;
            YYTURB[J] = -YY;
            if (YY > 0.0) YYTURB[J] = -YY-1.0;
            X = XT;
            Y = YT;
            return;
        }   //END

        
        static void UWA112( int J, int IZ1, int IX2, int IZUE, double[] FELD, int IANST, double K2, int ANZDTT)
        {
            //ENTRY TURB7 (J,IZ1,IX2,IZUE,FELD,IANST,K2,ANZDTT)
            //LOGICAL QANZDU, QPLOT
            //LOGICAL QNDWAS,QANZPA
            //INTEGER ANZDTT
            //DIMENSION FELD(80)

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /WESEL / IWESEL,MENTN[4]
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = FACTS / FACT, XV = 0, XN = 0, YV = 0, DY = 0, YN = 0, DX = 0;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            
        label4:
            NEWPEN(3);
            YY = -2.5*V;
            if (J+1 < IZ1) YY = -3.0*V;
            PLOT (X,Y,3);
            if (IANST != 1) goto label100;
            
            PLOT (X,Y-1.0,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-1.0,3);
            PLOT (X+0.2,Y-1.0,2);
            PLOT (X+0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.6,2);
            PLOT (X-0.2,Y-1.0,2);
            PLOT (X-0.2,Y-1.15,3);
            PLOT (X-0.4,Y-1.30,2);
            PLOT (X-0.2,Y-1.45,2);
            PLOT (X-0.2,Y-1.6,3);
            PLOT (X+0.2,Y-1.0,2);
            CIRCL(X+0.05,Y-1.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-1.6,3);
            
        label100:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            if (Y < YWELLE) Y = Y + 1.0;
            if (YWELLE == 0.0) YWELLE = Y - 0.5;
            NEWPEN(1);
            PLOT (X,Y,3);
            PLOT (X+XX+IX1*0.5,Y+0.5,2);
            PLOT (X+XX+IX1*0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X-1.0*V,Y,2);
            PLOT (X-1.0*V,Y-1.0,3);
            PLOT (X,Y-1.0,2);
            if (J != IZ1) goto label200;
            
            XT = X + XX + 0.5*IX1;
            YT = Y - 1.5 - 1.5*V;
            NEWPEN(3);
            PLOT (XT,Y-1.5,3);
            PLOT (XT,YT,2);
            X35 = XT;
            Y35 = YT;
            X36 = XT - 0.5;
            Y36 = Y - 4.0*V;
            
            if (KREUZ == 1) goto label1000;
            UWA130(XT,YT,4,0);
            if (KREUZ == 2) goto label1000;
            UWA131(XT,YT,FELD[5],FELD[6],FELD[7],FELD[8],4,0);
            goto label1000;
            
        label200:
            DY = 0.0;
            if (J+1 != IZ1) DY = 0.5*V;
            if (J+1 == KOMP1) DY = 1.0*V;
            DX = 2.0*V;
            if (MENTN[J+1] == 1) DX = 1.0*V;
            NEWPEN(3);
            PLOT (X+XX+IX1*0.5,Y+0.5,3);
            PLOT (X+XX+IX1*0.5,Y+2.5*V+DY,2);
            PLOT (X+XX+0.5*IX1+DX,Y+2.5*V+DY,2);
            XT = X + XX + 0.5*IX1 + DX;
            YT = Y + 2.5*V + DY;
            if (IZUE != 1) goto label400;
            PLOT (XT+1.5*V,YT,2);
            XT = XT + 1.5*V;
            if (KREUZ == 1) goto label300;
            UWA130(XT-1.7*V,YT,1,0);
            if (KREUZ == 2) goto label300;
            UWA131(XT-1.7*V,YT,FELD[5],FELD[6],FELD[7],FELD[8],1,0);
            
        label300:
            NEWPEN(3);
            PLOT (XT,YT,3);
            PLOT (XT+0.5,YT-0.5,2);
            PLOT (XT+0.5,YT+0.5,2);
            PLOT (XT+1.0,YT,2);
            XT = XT + 1.0;

        label400:
            if (MENTN[J+1] == 1) goto label1000;
            PLOT (XT,YT,3);
            PLOT (XT+XDXT,YT,2);
            XT = XT + XDXT;
            
        label1000:
            NEWPEN(3);
            if (IX1 == 0) goto label1600;
            //goto label(1100,1200,1300,1400,1500),
            if(IX1 == 1)    goto label1100;
            if(IX1 == 2)    goto label1200;
            if(IX1 == 3)    goto label1300;
            if(IX1 == 4)    goto label1400;
            if(IX1 == 5)    goto label1500;
            
        label1100:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-4.0*V,2);
            goto label1600;
            
        label1200:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.2,3);
            PLOT (X+0.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-4.0*V,2);
            goto label1600;
            
        label1300:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.0*V,2);
            goto label1600;
            
        label1400:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.1,3);
            PLOT (X+0.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.2,3);
            PLOT (X+1.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.3,3);
            PLOT (X+1.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.0,Y-1.4,3);
            PLOT (X+2.0,Y-4.0*V,2);
            goto label1600;
            
        label1500:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.08,3);
            PLOT (X+0.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.15,3);
            PLOT (X+1.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.25,3);
            PLOT (X+1.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.0,Y-1.32,3);
            PLOT (X+2.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[5]) NEWPEN(1);
            PLOT (X+2.5,Y-1.4,3);
            PLOT (X+2.5,Y-4.0*V,2);
            
        label1600:
            if (!QPLOT[J]) goto label2000;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-4.0*V,2);
            
        label2000:
            UWA115(J,IX1,IZUE,FELD,7,K2,ANZDTT);
            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y;
            YYTURB[J] = -YY;
            if (YY > 0.0) YYTURB[J] = -YY-1.0;
            X = XT;
            Y = YT;
            return;
        }   //END

        
        static void UWA113( int JJ, int IZ1, int J, int IX2, int IZUE, double[] FELD, int IANST, double K2, int ANZDTT)
        {
            //ENTRY TURB8 (JJ,IZ1,J,IX2,IZUE,FELD,IANST,K2,ANZDTT)
            //LOGICAL QANZDU, QPLOT
            //LOGICAL QNDWAS,QANZPA
            //INTEGER ANZDTT
            //DIMENSION FELD(80)

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = FACTS / FACT, XV = 0, XN = 0, YV = 0, DY = 0, YN = 0, DX = 0, YM = 0, XM = 0;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;

        label4:
            IX3 = IFLUT[J];
            if (JJ == 1 && J == IZ1 && IX3 == 1) goto label1000;
            if (JJ == 2 && J == IZ1 && IX3 == 1) goto label2000;
            if (JJ == 1 && J == IZ1 && IX3 > 1) goto label3000;
            if (JJ == 2 && J == IZ1 && IX3 > 1) goto label4000;

            NEWPEN(3);
            PLOT (X,Y,3);
            X = X + 3.5/FACT*FACTS;
            PLOT (X,Y,2);
            if (KREUZ == 1) goto label100;
            UWA130(X-1.7*V,Y,2,0);
            if (KREUZ == 2) goto label100;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],2,0);
            
        label100:
            YY = 2.5*V;
            NEWPEN(3);
            PLOT (X,Y,3);
            X = X + XX + 0.5*IX1;
            PLOT (X,Y,2);
            
            if (IANST != 1) goto label200;

            DY = 0.3*V;
            PLOT (X,Y+DY,2);
            NEWPEN(1);
            PLOT (X-0.2,Y+DY,3);
            PLOT (X+0.2,Y+DY,2);
            PLOT (X-0.2,Y+DY+0.6,2);
            PLOT (X+0.2,Y+DY+0.6,2);
            PLOT (X-0.2,Y+DY,2);
            PLOT (X-0.15,Y+DY+0.15,3);
            PLOT (X-0.35,Y+DY+0.30,2);
            PLOT (X-0.15,Y+DY+0.45,2);
            CIRCL(X+0.05,Y+DY+0.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y+DY+0.6,3);
            
        label200:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            if (Y < YWELLE) Y = Y + 1.0;
            if (YWELLE == 0.0) YWELLE = Y - 0.5;
            NEWPEN(1);

            PLOT (X,Y,3);
            PLOT (X-XX-IX1*0.5,Y+0.5,2);
            PLOT (X-XX-IX1*0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X+XX+0.5*IX1+0.5,Y+0.5,2);
            PLOT (X+XX+0.5*IX1+0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);

            NEWPEN(3);
            PLOT (X-XX-IX1*0.5,Y+0.5,3);
            PLOT (X-XX-IX1*0.5,Y+3.5*V,2);
            PLOT (X+XX+0.5*IX1+0.5+2.0*V,Y+3.5*V,2);
            PLOT (X+XX+IX1*0.5+0.5,Y+0.5,3);
            PLOT (X+XX+IX1*0.5+0.5,Y+2.5*V,2);
            PLOT (X+XX+0.5*IX1+0.5+2.0*V,Y+2.5*V,2);
            XT = X + XX + 0.5*IX1 + 0.5 + 2.0*V;
            YT = Y + 3.5*V;
            PLOT (XT,YT,3);
            PLOT (XT+XDXT,YT,2);
            PLOT (XT,YT-1.0*V,3);
            PLOT (XT+XDXT,YT-1.0*V,2);
            XT = XT + XDXT;
            NEWPEN(3);
            if (IX1 == 0) goto label600;
            
            //goto label(300,600,600,600,600),
            if(IX1 == 1)        goto label300;
            if(IX1 == 2)        goto label600;
            if(IX1 == 3)        goto label600;
            if(IX1 == 4)        goto label600;
            if(IX1 == 5)        goto label600;
            
        label300:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X+1.0,Y-2.5,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X-1.0,Y-1.35,2);

        label600:
            PLOT (X-XX-0.5*IX1,Y-1.5,3);
            PLOT (X-XX-0.5*IX1,Y-4.0*V,2);
            PLOT (X+XX+0.5*IX1+0.5,Y-1.5,3);
            PLOT (X+XX+0.5*IX1+0.5,Y-4.0*V,2);
            X35 = X + XX + 0.5*IX1 + 0.5;
            Y35 = Y - 4.0*V;
            X36 = X - XX - 0.5*IX1;
            Y36 = Y - 4.0*V;
            IX3 = 3;
            goto label5000;

        label1000:
            NEWPEN(3);
            PLOT (X,Y,3);
            X = X + 4.0/FACT*FACTS;
            PLOT (X,Y,2);
            if (KREUZ == 1) goto label1100;
            UWA130(X-2.2*V,Y,1,0);
            if (KREUZ == 2) goto label1100;
            UWA131(X-2.2*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            
        label1100:
            YY = -3.5*V;
            NEWPEN(3);
            PLOT (X,Y,3);
            if (IANST != 1) goto label1200;
            
            DY = 1.0*V + 1.0;
            PLOT (X,Y-DY,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-DY,3);
            PLOT (X+0.2,Y-DY,2);
            PLOT (X-0.2,Y-DY-0.6,2);
            PLOT (X+0.2,Y-DY-0.6,2);
            PLOT (X-0.2,Y-DY,2);
            PLOT (X-0.1,Y-DY-0.15,3);
            PLOT (X-0.3,Y-DY-0.30,2);
            PLOT (X-0.1,Y-DY-0.45,2);
            CIRCL(X+0.05,Y-DY-0.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-DY-0.6,3);
            
        label1200:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            NEWPEN(1);

            PLOT (X,Y,3);
            PLOT (X+XX+IX1*0.5+0.5,Y+0.5,2);
            PLOT (X+XX+IX1*0.5+0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);

            NEWPEN(3);
            PLOT (X+XX+IX1*0.5+0.5,Y-1.5,3);
            YM = Y - 2.0 - 0.5*IX1;
            if (IX1 <= 1) YM = Y - 3.0;
            YM = YM - 0.5*V;
            PLOT (X+XX+IX1*0.5+0.5,YM,2);
            XM = X + XX + 0.5*IX1 + 0.5;
            if (KREUZ == 1) goto label1300;
            UWA130(XM,YM,4,0);
            if (KREUZ == 2) goto label1300;
            UWA131(XM,YM,FELD[5],FELD[6],FELD[7],FELD[8],4,0);

        label1300:
            if (IX1 == 0) goto label1800;
            NEWPEN(3);
            //goto label(1400,1500,1600,1700,1800),
            if(IX1 == 1)        goto label1400;
            if(IX1 == 2)        goto label1500;
            if(IX1 == 3)        goto label1600;
            if(IX1 == 4)        goto label1700;
            if(IX1 == 5)        goto label1800;
            
        label1400:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            goto label1800;
            
        label1500:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            goto label1800;
            
        label1600:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.3,3);
            PLOT (X+1.5,Y-4.0*V,2);
            goto label1800;
            
        label1700:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.1,3);
            PLOT (X+0.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.2,3);
            PLOT (X+1.0,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.3,3);
            PLOT (X+1.5,Y-4.0*V,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            PLOT (X+2.0,Y-1.4,3);
            PLOT (X+2.0,Y-4.0*V,2);
            NEWPEN(3);

        label1800:
            IX3 = 2;
            goto label5000;

        label2000:
            NEWPEN(3);
            Y = Y - 1.0*V;
            PLOT (X,Y,3);
            X = X + 3.5*V;
            PLOT (X,Y,2);
            if (KREUZ == 1) goto label2100;
            UWA130(X-1.7*V,Y,1,0);
            if (KREUZ == 2) goto label2100;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            
        label2100:
            YY = -2.5*V;
            NEWPEN(3);
            PLOT (X,Y,3);
            if (IANST != 1) goto label2200;

            DY = 1.0;
            PLOT (X,Y-DY,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-DY,3);
            PLOT (X+0.2,Y-DY,2);
            PLOT (X-0.2,Y-DY-0.6,2);
            PLOT (X+0.2,Y-DY-0.6,2);
            PLOT (X-0.2,Y-DY,2);
            PLOT (X-0.1,Y-DY-0.15,3);
            PLOT (X-0.3,Y-DY-0.30,2);
            PLOT (X-0.1,Y-DY-0.45,2);
            CIRCL(X+0.05,Y-DY-0.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-DY-0.6,3);

        label2200:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            NEWPEN(1);
            
            PLOT (X,Y,3);
            PLOT (X-XX-IX1*0.5,Y+0.5,2);
            PLOT (X-XX-IX1*0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X+0.5*V,Y,2);
            PLOT (X+0.5*V,Y-1.0,3);
            PLOT (X,Y-1.0,2);
            
            NEWPEN(3);
            PLOT (X-XX-IX1*0.5,Y-1.5,3);
            YT = Y - 2.0 - 0.5*IX1;
            if (IX1 <= 1) YT = Y - 3.0;
            PLOT (X-XX-IX1*0.5,YT,2);
            PLOT (XM,YT,2);
            XT = XM;
            YT = YM;

            if (IX1 == 0) goto label2700;
            NEWPEN(3);
            //goto label(2400,2500,2600,2700,2700),
            if(IX1 == 1)    goto label2400;
            if(IX1 == 2)    goto label2500;
            if(IX1 == 3)    goto label2600;
            if(IX1 == 4)    goto label2700;
            if(IX1 == 5)    goto label2700;
            
        label2400:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X-1.0,Y-1.35,3);
            if (!QANZPA[1]) goto label2410;
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0+0.5*V,Y-2.5,2);
            goto label2700;
            
        label2410:
            PLOT (X-1.0,Y-4.0*V,2);
            goto label2700;
            
        label2500:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X-0.5,Y-1.2,3);
            if (QANZPA[1]) goto label2510;
            PLOT (X-0.5,Y-4.0*V,2);
            goto label2520;
            
        label2510:
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5+0.5*V,Y-2.0,2);
            
        label2520:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X-1.0,Y-1.35,3);
            if (QANZPA[2]) goto label2530;
            PLOT (X-1.0,Y-4.0*V,2);
            goto label2700;
            
        label2530:
            PLOT (X-1.0,Y-2.5,2);
            goto label2700;
            
        label2600:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X-0.5,Y-1.12,3);
            if (QANZPA[1]) goto label2610;
            PLOT (X-0.5,Y-4.0*V,2);
            goto label2620;
            
        label2610:
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5+0.5*V,Y-2.0,2);
            
        label2620:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X-1.0,Y-1.25,3);
            if (QANZPA[2]) goto label2630;
            PLOT (X-1.0,Y-4.0*V,2);
            if (!QANZPA[2]) goto label2630;
            PLOT (X-1.0,Y-1.25,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            
        label2630:
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X-1.5,Y-1.4,3);
            if (QANZPA[3]) goto label2640;
            PLOT (X-1.5,Y-4.0*V,2);
            goto label2700;
            
        label2640:
            PLOT (X-1.5,Y-3.0,2);
            PLOT (X+1.5,Y-3.0,2);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.0*V,2);

        label2700:
            IX3 = 2;
            goto label5000;

        label3000:
            NEWPEN(3);
            
            PLOT (X,Y,3);
            X = X + 9.0*V + 1.5;
            PLOT (X,Y,2);
            if (KREUZ == 1) goto label3100;
            UWA130(X-1.7*V,Y,1,0);
            if (KREUZ == 2) goto label3100;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            
        label3100:
            YY = -3.5*V;
            NEWPEN(3);
            PLOT (X,Y,3);
            if (IANST != 1) goto label3200;
            
            DY = 1.0*V + 1.0;
            PLOT (X,Y-DY,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-DY,3);
            PLOT (X+0.2,Y-DY,2);
            PLOT (X-0.2,Y-DY-0.6,2);
            PLOT (X+0.2,Y-DY-0.6,2);
            PLOT (X-0.2,Y-DY,2);
            PLOT (X-0.1,Y-DY-0.15,3);
            PLOT (X-0.3,Y-DY-0.30,2);
            PLOT (X-0.1,Y-DY-0.45,2);
            CIRCL(X+0.05,Y-DY-0.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-DY-0.6,3);
            
        label3200:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            NEWPEN(1);
            PLOT (X,Y,3);
            PLOT (X+XX+IX1*0.5+0.5,Y+0.5,2);
            PLOT (X+XX+IX1*0.5+0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X-XX-IX1*0.5-0.5,Y+0.5,2);
            PLOT (X-XX-IX1*0.5-0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            
            NEWPEN(3);
            PLOT (X+XX+IX1*0.5+0.5,Y-1.5,3);
            YM = Y - 2.0 - 0.5*IX1;
            if (IX1 <= 1) YM = Y - 3.0;
            PLOT (X+XX+IX1*0.5+0.5,YM-0.5*V,2);
            PLOT (X-XX-IX1*0.5-0.5,Y-1.5,3);
            PLOT (X-XX-IX1*0.5-0.5,YM,2);
            PLOT (X+XX+IX1*0.5+0.5,YM,2);
            XN = X - XX - 0.5*IX1;
            YN = YM;
            XM = X + XX + 0.5*IX1 + 0.5;
            YM = YM - 0.5*V;
            if (KREUZ == 1) goto label3300;
            UWA130(XM,YM,4,0);
            if (KREUZ == 2) goto label3300;
            UWA131(XM,YM,FELD[5],FELD[6],FELD[7],FELD[8],4,0);
            
        label3300:
            if (IX1 == 0) goto label3700;
            NEWPEN(3);
            //goto label(3400,3500,3600,3700,3700),
            if(IX1 == 1)    goto label3400;
            if(IX1 == 2)    goto label3500;
            if(IX1 == 3)    goto label3600;
            if(IX1 == 4)    goto label3700;
            if(IX1 == 5)    goto label3700;
            
        label3400:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X-1.0,Y-1.25,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            goto label3700;
            
        label3500:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0*V,2);
            PLOT (X-0.5,Y-1.12,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5,Y-2.0,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X-1.0,Y-1.25,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            goto label3700;
            
        label3600:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0*V,2);
            PLOT (X-0.5,Y-1.12,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5,Y-2.0,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X-1.0,Y-1.23,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.0*V,2);
            PLOT (X-1.5,Y-1.4,3);
            PLOT (X-1.5,Y-3.0,2);
            PLOT (X+1.5,Y-3.0,2);
            
        label3700:
            IX3 = 4;
            goto label5000;

        label4000:
            NEWPEN(3);
            Y = Y - 1.0*V;
            PLOT (X,Y,3);
            X = X + 3.5*V;
            PLOT (X,Y,2);
            if (KREUZ == 1) goto label4100;
            UWA130(X-1.7*V,Y,1,0);
            if (KREUZ == 2) goto label4100;
            UWA131(X-1.7*V,Y,FELD[1],FELD[2],FELD[3],FELD[4],1,0);
            
        label4100:
            YY = -2.5*V;
            NEWPEN(3);
            PLOT (X,Y,3);
            if (IANST != 1) goto label4200;
            
            DY = 1.0;
            PLOT (X,Y-DY,2);
            NEWPEN(1);
            PLOT (X-0.2,Y-DY,3);
            PLOT (X+0.2,Y-DY,2);
            PLOT (X-0.2,Y-DY-0.6,2);
            PLOT (X+0.2,Y-DY-0.6,2);
            PLOT (X-0.2,Y-DY,2);
            PLOT (X-0.1,Y-DY-0.15,3);
            PLOT (X-0.3,Y-DY-0.30,2);
            PLOT (X-0.1,Y-DY-0.45,2);
            CIRCL(X+0.05,Y-DY-0.3,0.0,360.0,0.05,0.05,0.0);
            NEWPEN(3);
            PLOT (X,Y-DY-0.6,3);
            
        label4200:
            PLOT (X,Y+YY,2);
            Y = Y + YY;
            NEWPEN(1);
            
            PLOT (X,Y,3);
            PLOT (X+XX+IX1*0.5,Y+0.5,2);
            PLOT (X+XX+IX1*0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X-XX-IX1*0.5,Y+0.5,2);
            PLOT (X-XX-IX1*0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            
            NEWPEN(3);
            PLOT (X+XX+IX1*0.5,Y-1.5,3);
            YT = YN;
            PLOT (X+XX+IX1*0.5,YT,2);
            PLOT (X-XX-IX1*0.5,Y-1.5,3);
            PLOT (X-XX-IX1*0.5,YT,2);
            if (QPLOT[J]) goto label4300;
            
            UWA129(JJ,IX1);
            goto label4310;
            
        label4300:
            PLOT (XN,YT,2);
            
        label4310:
            XT = XM;
            YT = YM;
            
            if (IX1 == 0) goto label4700;
            NEWPEN(3);
            //goto label(4400,4500,4600,4700,4700),
            if(IX1 == 1)        goto label4400;
            if(IX1 == 2)        goto label4500;
            if(IX1 == 3)        goto label4600;
            if(IX1 == 4)        goto label4700;
            if(IX1 == 5)        goto label4700;
            
        label4400:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X-1.0,Y-1.35,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            goto label4700;
            
        label4500:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.2,3);
            PLOT (X+0.5,Y-4.0*V,2);
            PLOT (X-0.5,Y-1.2,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5,Y-2.0,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X-1.0,Y-1.35,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            goto label4700;
            
        label4600:
            if (QNDWAS[1]) NEWPEN(1);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0*V,2);
            PLOT (X-0.5,Y-1.12,3);
            PLOT (X-0.5,Y-2.0,2);
            PLOT (X+0.5,Y-2.0,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            PLOT (X-1.0,Y-1.23,3);
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.0*V,2);
            PLOT (X-1.5,Y-1.4,3);
            PLOT (X-1.5,Y-3.0,2);
            PLOT (X+1.5,Y-3.0,2);
            
        label4700:
            IX3 = 4;
        
        label5000:
            UWA115(J,IX1,IZUE,FELD,IX3,K2,ANZDTT);
            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y;
            YYTURB[J] = -YY;
            if (YY > 0.0) YYTURB[J] = -YY-1.0;
            X = XT;
            Y = YT;
            return;
        }   //END

        
        static void UWA114(int MN)
        {
            //ENTRY ALFABE (MN)
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            int M = 0, M1 = 0, M2 = 0, M3 = 0, M4 = 0, M5 = 0;

            M4 = 0;
            M5 = 0;
            M2 = MN;
            M3 = IHENDE + 1;
            
        label10:
            for(M = M3; M <= INENDE; M++) //DO 100 M = M3,INENDE
            {
                if (NTYP[M] == 17) continue;
                if (M5 == 1) goto label20;
                M1 = N1[M];
                if (M1 == M2) goto label50;
                M1 = NN1[M];
                if (M1 == M2) goto label60;
                if (M4 == 1) goto label30;

            label20:
                M1 = NN2[M];
                if (NN1[M] == NN2[M]) continue;         // goto label100;
                if (NTYP[M] == 10 && M1 == M2) goto label80;
                if (M1 == M2) goto label70;

            label30:
                if (NTYP[M] != 4 && NTYP[M] != 12) continue;
                M1 = NBLTG[M,1];
                if (M1 == M2) goto label50;
                continue;   // goto label100;

            label50:
                M1 = N2[M];
                if (NTYP[M] != 10) return;
                if (M1 > 0 && NRABC[M1] == 0) NRABC[M1] = NRABC[M2];
                return;

            label60:
                if (NTYP[M] == 6) return;
                M1 = NN2[M];
                M4 = 1;
                if (NRABC[M1] == 0) NRABC[M1] = NRABC[M2];
                M2 = M1;
                goto label10;

            label70:
                M1 = NN1[M];
                M5 = 1;
                if (NRABC[M1] == 0) NRABC[M1] = NRABC[M2];
                M2 = M1;
                goto label10;
                
            label80:
                M1 = N1[M];
                if (NRABC[M1] == 0) NRABC[M1] = NRABC[M2];
                return;
            }   //100 CONTINUE
            return;
        }   //END

                
        static void UWA115(int J, int IX1, int IZUE, double[] FELD,int IX, double K2, int ANZDTT)
        {
            //ENTRY STOPFP (J,IX1,IZUE,FELD,IX,K2,ANZDTT)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //LOGICAL QANZDU, QPLOT
            //LOGICAL QSTE,QSTA
            //INTEGER ANZDTT
            //DIMENSION FELD(80)
            string[] AAA = new string[24];
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /ENTWAS/ KENTW
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /LEISTG/ IELEKT,PELEKT,IGETRB
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /NTURB/ NTT[4]
            //COMMON /STOPF/ QSTE,QSTA
            //COMMON /WESEL / IWESEL,MENTN[4]
            //COMMON /NTEILT/ NDTEIL
            //COMMON /ISTOPF/ ISTANZ[7]
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            int NR = 0, NRND = 0, IBS = 0, M = 0, L1 = 0, L2 = 0, IB = 0;
            double V = FACTS / FACT, DX = 0.0, XS = 0, XP = 0, DY = 0, YP = 0, XW = 0, XR = 0, X3L = 0;
            ISTANZ[J] = 0;
            if (J == 1) NRND = 0;
            IBS = 0;
            if (!QSTE && !QSTA) goto label4000;
            if (!QSTE) IBS = 1;
            if (LHEIZ == 9 && J == NTT[2]) KSTB = KSTB + 1;
            
        label100:
            KSTB = KSTB + 1;
            NEWPEN(3);
            if (IX == 4 && IBS == 1) KSTB = KSTB - 1;
            IB = KSTB;
            if (IB > K2) goto label4000;
            if (IX != 3) goto label400;
            if (IX1 < 2) goto label400;
            if (IBS == 0) goto label400;
            
            for(I = 1; I <= ANZDTT; I++) //DO 200 I = 1,ANZDTT
            {
                if (IFLUT[I] >= 0) continue;
                M = (IFLUT[I]);
                if (M != J) continue;
                IB = (int)JKT2[M];
                KSTB = KSTB - 1;
                goto label400;
            }   //200 CONTINUE
            
        label400:
            L1 = 1;
            if (IB > 1)     L1 = (int)NK2[IB-1] + 1;
            L2 = (int)NK2[IB];
            int N = 0;
            for(ISTB = L1; ISTB <= L2; ISTB++)      //DO 3000 ISTB = L1,L2
            {
                N = N + 1;
                NEWPEN(3);
                if (IX == 4 && IBS == 0) FELD[45+ISTB] = FELD[45+ISTB]/2.0;
                DX = 0.6/FACT*FACTS*N;
                //goto label(1100,1200,1300,1400,1500,1600,1200),
                if(IX == 1)     goto label1100;
                if(IX == 2)     goto label1200;
                if(IX == 3)     goto label1300;
                if(IX == 4)     goto label1400;
                if(IX == 5)     goto label1500;
                if(IX == 6)     goto label1600;
                if(IX == 7)     goto label1200;
                
            label1100:
                XS = X + DX;
                if (IBS == 1) XS = X - XX - IX1*0.5 - DX;
                goto label2000;
                
            label1200:
                XS = X - DX;
                if (IBS == 1) XS = X + XX + 0.5*IX1 + DX;
                if (IBS == 1 && LHEIZ == 9 && J == NTT[1]) XS = XS + 0.5;
                if (IBS == 1 && LHEIZ == 9 && J == NTT[2]) XS = X-XX-0.5*IX1-DX;
                goto label2000;
                
            label1300:
                XS = X - XX - 0.5*IX1 - DX;
                if (IBS == 1) XS = X + XX + 0.5*IX1 + DX;
                if (IBS == 1 && LHEIZ == 9 && J == NTT[1]-1) XS = XS + 0.5;
                goto label2000;
                
            label1400:
                XS = X - XX - 0.5*IX1 - DX;
                if (IBS == 1) XS = X + XX + 0.5*IX1 + DX;
                if (LHEIZ != 9) goto label2000;
                if (J != NTT[1]) goto label2000;
                if (IBS == 0) XS = XS - 0.5;
                if (IBS == 1) XS = XS + 0.5;
                goto label2000;
                
            label1500:
                XS = X - 2.0 - DX;
                if (J == KOMP1 && KOMP2 == 0) XS = X - 2.5 - DX;
                if (J == KOMP2) XS = X + XX + 0.5*IX1 + DX;
                if (KOMP2 == 0 && IBS == 1) XS = X + XX + 0.5*IX1 + DX;
                goto label2000;
                
            label1600:
                XP = 0.0;
                if (IX1 > 2) XP = 0.5;
                XS = X - 1.5 - XP - DX;
                if (IBS == 1) XS = X + 2.0 + XP + DX;

            label2000:
                M = (int)NN[ISTB];
                if (M == 99) goto label2200;
                if (Math.Abs(M) == 99) goto label2200;
                if (Math.Abs(M) >= 100) goto label2200;
                if (M < 0) goto label2100;
                
                AAA[ISTB] = ABCD[M];
                UWA132(XS, Y - 0.4, 2.0, FELD[ISTB + 45], 0.0, 2, 1, 1, 1, ISTB, ISTB, AAA);
                continue;   // goto label3000;

            label2100:
                M = Math.Abs(M);
                AAA[ISTB] = ABCD[M];
                UWA132(XS, Y - 0.4, 2.0, FELD[ISTB + 45], 0.0, 1, 1, 1, 0, ISTB, ISTB, AAA);
                continue;   //goto label3000;

            label2200:
                FACTOR (FACTS);
                XS = XS*FACT/FACTS;
                X = X*FACT/FACTS;
                Y = Y*FACT/FACTS;
                if (Math.Abs(M) >= 100) goto label2400;

                if (IX == 1) goto label2300;
                if (IX == 5) goto label2350;
                if (IX == 2 && !QPLOT[J]) goto label2250;
                
                NR = NR + 1;
                DY = 2.0 + 0.25*NR;
                if (M < 0) goto label2210;
                PLOT (XS,Y-0.55*FACT/FACTS,3);
                PLOT (XS,Y-DY,2);
                AROHD(XS,Y-DY,X+(XX+0.5*IX1)*FACT/FACTS,Y-DY,0.2,0.0,16);
                goto label2220;
                
            label2210:
                AROHD(XS,Y-DY,XS,Y-0.55*FACT/FACTS,0.2,0.0,16);
                PLOT (XS,Y-DY,3);
                PLOT (X+(XX+0.5*IX1)*FACT/FACTS,Y-DY,2);
                
            label2220:
                if (KREUZ > 0) goto label2900;
                NEWPEN(1);
                XP = XS - 0.1;
                YP = Y - DY + 0.2;
                XW = 90.0;
                NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                SYMBOL (999.0,999.0,XH," M",XW,2);
                goto label2900;
                
            label2250:
                NR = NR + 1;
                DY = 1.5 + 0.25*NR;
                if (M < 0) goto label2260;
                PLOT (XS,Y-0.45*FACT/FACTS,3);
                PLOT (XS,Y+DY,2);
                AROHD(XS,Y+DY,X+(XX+0.5*IX1)*FACT/FACTS,Y+DY,0.2,0.0,16);
                goto label2270;
                
            label2260:
                AROHD(XS,Y+DY,XS,Y-0.45*FACT/FACTS,0.2,0.0,16);
                PLOT (XS,Y+DY,3);
                PLOT (X+(XX+0.5*IX1)*FACT/FACTS,Y+DY,2);
            
            label2270:
                if (KREUZ > 0) goto label2900;
                NEWPEN(1);
                XP = XS - 0.1;
                YP = Y - 0.45*FACT/FACTS + 0.2;
                XW = 90.0;
                NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                SYMBOL (999.0,999.0,XH," M",XW,2);
                goto label2900;
                

            label2300:
                if (M < 0) goto label2310;
                PLOT (XS,Y-0.55*FACT/FACTS,3);
                PLOT (XS,Y-2.5,2);
                AROHD(XS,Y-2.5,X-(XX+0.5*IX1)*FACT/FACTS,Y-2.5,0.2,0.0,16);
                goto label2320;
                
            label2310:
                PLOT (X-(XX+0.5*IX1)*FACT/FACTS,Y-2.5,3);
                PLOT (XS,Y-2.5,2);
                AROHD(XS,Y-2.5,XS,Y-0.55*FACT/FACTS,0.2,0.0,16);
                
            label2320: 
                if (KREUZ > 0) goto label2900;
                NEWPEN(1);
                NUMBER (XS-0.1,Y-2.4,XH,FELD[45+ISTB],90.0,NDECM);
                SYMBOL (999.0,999.0,XH," M",90.0,2);
                goto label2900;
                
            label2350:
                PLOT (XS,Y-0.45/V,3);
                PLOT (XS,Y+1.3,2);
                IX5 = IX1;
                if (IX5 < 1) IX5 = 1;
                if (KOMP2 != 0) IX5 = NTRB[KOMP2] - 1;
                XP = 1.5;
                if (IX5 == 2) XP = 1.0;
                if (IX5 > 2) XP = 0.5;
                if (KOMP2 > 0) XP = XP + 0.5;
                AROHD(XS,Y+1.3,X+(XP+0.5*IX5)/V,Y+1.3,0.2*V,0.0,16);
                if (KREUZ > 0) goto label2900;
                NEWPEN(1);
                XP = XS - 0.1;
                YP = Y - 0.45/V + 0.3;
                XW = 90.0;
                NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                SYMBOL (999.0,999.0,XH," M",XW,2);
                goto label2900;

            label2400:
                if (M == 100) goto label2500;
                if (M == -100) goto label2600;
                
                NR = NR + 1;
                ISTANZ[J] = NR;
                DY = 2.0 + 0.25*NR;
                if (M < 0) goto label2410;
                PLOT (XS,Y-0.55*FACT/FACTS,3);
                PLOT (XS,Y-DY,2);
                goto label2420;
                
            label2410:
                AROHD(XS,Y-DY,XS,Y-0.55*FACT/FACTS,0.2,0.0,16);
                
            label2420:
                if (KREUZ > 0) goto label2900;
                NEWPEN(1);
                XP = XS - 0.1;
                YP = Y - DY + 0.2;
                XW = 90.0;
                NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                SYMBOL (999.0,999.0,XH," M",XW,2);
                goto label2900;
                
            label2500:
                NR = NR + 1;
                if (IBS == 1 && IWESEL > 0 && L2-L1 == 0)
                    NR = NR - 1;
                DY = 2.0 + 0.25*NR;
                if (J > 1) DY = 2.5 + 0.25*NR;
                PLOT (XS,Y-0.55*FACT/FACTS,3);
                PLOT (XS,Y-DY,2);
                DX = 0.0;
                if (IX1 < 2) DX = 0.5;
                XP = X + (DX+0.5*NR)*FACT/FACTS;
                if (IBS == 1 && IWESEL > 0 && L2-L1 == 0)
                    XP = XS + 2.0 + 3.5 + XDXT*FACT/FACTS - 2*0.6;
                AROHD(XS,Y-DY,XP,Y-DY,0.2,0.0,16);
                if (IBS == 1 && IWESEL > 0 && L2-L1 == 0)
                    AROHD(XP,Y-DY,XP,Y-0.55*FACT/FACTS,0.2,0.0,16);
                if (KREUZ > 0) goto label2900;
                NEWPEN(1);
                XP = XS - 0.1;
                YP = Y - 2.2;
                XW = 90.0;
                NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                SYMBOL (999.0,999.0,XH," M",XW,2);
                goto label2900;
                
            label2600:
                NR = NR + 1;
                DY = 2.0 + 0.25*NR;
                if (J > 1) DY = 2.5 + 0.25*NR;
                PLOT (X+0.5*NR*FACT/FACTS,Y-DY,3);
                PLOT (XS,Y-DY,2);
                AROHD(XS,Y-DY,XS,Y-0.55*FACT/FACTS,0.2,0.0,16);
                if (KREUZ > 0) goto label2900;
                NEWPEN(1);
                XP = XS - 0.1;
                YP = Y - 2.2;
                XW = 90.0;
                NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                SYMBOL (999.0,999.0,XH," M",XW,2);
                goto label2900;
                
            label2900:
                XS = XS*FACTS/FACT;
                X = X*FACTS/FACT;
                Y = Y*FACTS/FACT;
                FACTOR (FACT);
            }   //3000 CONTINUE
            if (IBS == 1) goto label4000;
            if (!QSTA) goto label4000;
            if (J == 1 && IWESEL == 1) goto label4000;
            if (IX == 4) ISTB = ISTB - 2;
            IBS = 1;
            NR = 0;
            goto label100;
            
        label4000:
            Y = YWELLE;
            if (LHEIZ == 9 && (J == NTT[1] || J == NTT[2])) goto label4200;
            if (IX == 4 && NDTEIL > 0) goto label4500;
            if (IX == 2 && NDTEIL > 0 && (J == 3 || J == 4)) goto label4800;
            XW = X;
            if (IX == 7) goto label4100;
            if (IX == 1 || IX == 3 || IX == 4) XW = X - XX - 0.5*IX1;
            if (J == KOMP2) goto label4100;
            if (J == KOMP1 && KOMP2 > 0) XW = X - 2.0;
            if (J == KOMP1 && KOMP2 == 0) XW = X - 2.5;
            if (IX == 6) XW = X - 1.5;
            if (IX == 6 && IX1 > 2) XW = X - 2.0;
            if (J > 1) XS = XR;
            if (J == 1) XS = X - 2.8/FACT*FACTS;
            if (IX == 1) XS = X - XX - 0.5*IX1 - 2.8/FACT*FACTS;
            if (J == 1 && IX == 3) XS = X - XX - 0.5*IX1 - 2.4/FACT*FACTS;
            if (J == 1 && IX == 3 && IFLUT[4] > 0) XS = X - XX - 0.5*IX1- 3.4/FACT*FACTS;
            if (J == 1 && J == KOMP1) XS = XW - 0.4/FACT*FACTS - DX;
            NEWPEN(1);
            PLOT (XW,Y+0.05,3);
            if (IGETRB == J) goto label4010;
            PLOT (XS,Y+0.05,2);
            PLOT (XS,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            goto label4100;
            

        label4010:
            XP = (XW + XS)*0.5;
            PLOT (XP+0.85,Y+0.05,2);
            PLOT (XP-0.85,Y+0.05,3);
            PLOT (XS,Y+0.05,2);
            PLOT (XS,Y-0.05,3);
            PLOT (XP-0.85,Y-0.05,2);
            PLOT (XP+0.85,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            CIRCL(XP+0.85,Y,0.0,360.0,0.5,0.5,0.5);
            CIRCL(XP+0.40,Y,0.0,360.0,0.05,0.05,0.0);
            CIRCL(XP-0.15,Y,0.0,360.0,0.35,0.35,0.5);
            CIRCL(XP-0.45,Y,0.0,360.0,0.05,0.05,0.0);
            
        label4100: 
            XR = X;
            if (IX > 1) XR = X + XX + 0.5*IX1;
            if (IX == 6) XR = X + 2.0;
            if (IX == 6 && IX1 > 2) XR = X + 2.5;
            if (LHEIZ == 9 && J == NTT[1]-1) XR = XR + 0.5;
            goto label5000;

        label4200:
            if (J == NTT[2]) goto label4300;
            X3L = X - XX - 0.5*IX1 - 0.5;
            goto label5000;
            
        label4300:
            XW = X - XX - 0.5*IX1;
            PLOT (XW,Y+0.05,3);
            PLOT (XR,Y+0.05,2);
            PLOT (XR,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            if (IFLUT[J] == 1) goto label5000;
            XW = X + XX + 0.5*IX1;
            XR = X3L;
            PLOT (XW,Y+0.05,3);
            PLOT (XR,Y+0.05,2);
            PLOT (XR,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            goto label5000;
            
        label4500:
            NRND = NRND + 1;
            //goto label(4600,4700,4700,4700),
            if(NRND == 1)        goto label4600;
            if(NRND == 2)        goto label4700;
            if(NRND == 3)        goto label4700;
            if(NRND == 4)        goto label4700;
            
        label4600:
            X3L = X - XX - 0.5*IX1;
            goto label5000;
            
        label4700:
            XW = X - XX - 0.5*IX1;
            PLOT (XW,Y+0.05,3);
            PLOT (XR,Y+0.05,2);
            PLOT (XR,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            XR = X + XX + 0.5*IX1;
            if (NDTEIL+1 != NRND) goto label5000;
            XW = X3L;
            PLOT (XW,Y+0.05,3);
            PLOT (XR,Y+0.05,2);
            PLOT (XR,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            goto label5000;
            
        label4800:
            NRND = NRND + 1;
            if (NRND > 1) goto label4900;
            X3L = X + XX + 0.5*IX1;
            goto label5000;
            
        label4900:
            XW = X - XX - 0.5*IX1;
            PLOT (XW,Y+0.05,3);
            PLOT (XR,Y+0.05,2);
            PLOT (XR,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            XR = X3L;
            
        label5000:
            Y = YWELLE + 0.5;
            return;
        }   //END
        

        static void UWA118(int K3, int K4, double[] FELD, int[] IENTN)
        {
            //ENTRY EXTAPP (K3,K4,FELD,IENTN)
            //DIMENSION FELD(80)
            //DIMENSION IENTN[5]
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /ABCDEF/ ABDUWA[5]
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            double V = 0, XL = 0;
            int N = 0, L1 = 0;
            V = FACTS/FACT;
            if (K3 == 0) goto label1000;
            
            for(I = 1; I <= K3; I++) //DO 300 I = 1,K3
            {
                N = 12*I-3;
                NEWPEN(3);
                PLOT (X,Y,3);
                if (IENTN[I] <= 0) goto label10;
                PLOT (X+0.7*V*IENTN[I],Y,2);
                X = X + 0.7*V*IENTN[I];
                
            label10:
                PLOT (X+3.5*V,Y,2);
                X = X + 3.5*V;
                
                if (KREUZ == 1) goto label100;
                UWA130(X-1.7*V,Y,1,0);
                if (KREUZ == 2) goto label100;
                UWA131(X-1.7*V,Y,FELD[N],FELD[N+1],FELD[N+2],FELD[N+3],1,0);

            label100:
                NEWPEN(1);
                PLOT (X,Y+0.75,3);
                PLOT (X,Y-0.3,2);
                PLOT (X+0.75,Y-0.75,2);
                PLOT (X+1.5,Y-0.3,2);
                PLOT (X+1.5,Y+0.75,2);
                PLOT (X,Y+0.75,2);
                
                UWA132(X+0.75,Y-0.75,1.45,0.0,0.0,1,0,2,1,I,I,ABDUWA);
                if (KREUZ == 1) goto label200;
                UWA130(X+0.75,Y-1.6,3,0);
                if (KREUZ == 2) goto label200;
                UWA131(X+0.75,Y-1.6,FELD[N+4],FELD[N+5],FELD[N+6],FELD[N+7],3,0);
                
            label200:
                NEWPEN(3);
                PLOT (X+1.5,Y,3);
                PLOT (X+2.0+XDXT,Y,2);
                X = X + 2.0 + XDXT;
            }   //300 CONTINUE
            
        label1000:
            if (K4 == K3) goto label1500;
            
            L1 = K3 + 1;
            for(I = L1; I <= K4; I++) //DO 1400 I = L1,K4
            {
                N = 12*I-3;
                NEWPEN(3);
                PLOT (X,Y,3);
                
                if (IENTN[I] <= 0) goto label1010;
                PLOT (X+0.7*V*IENTN[I],Y,2);
                X = X + 0.7*V*IENTN[I];

            label1010:
                PLOT (X+3.5*V,Y,2);
                X = X + 3.5*V;
                
                if (KREUZ == 1) goto label1100;
                UWA130(X-1.7*V,Y,1,0);
                if (KREUZ == 2) goto label1100;
                UWA131(X-1.7*V,Y,FELD[N+8],FELD[N+9],FELD[N+10],FELD[N+11],1,0);
                
            label1100:
                NEWPEN(1);
                PLOT (X,Y+0.75,3);
                PLOT (X,Y-0.75,2);
                PLOT (X+1.5,Y-0.75,2);
                PLOT (X+1.5,Y+0.75,2);
                PLOT (X,Y+0.75,2);
                
                NEWPEN(3);
                XL = 0.0;
                if (K4 > I) XL = 0.5;
                PLOT (X+0.75,Y+0.75,3);
                PLOT (X+0.75,Y+(2.0-XL)*V,2);
                if (K4 == I) PLOT (X+0.75,YDUE2,2);
                if (K4 == I) PLOT (XDUE2,YDUE2,2);
                if (K4 > I) XDUE1 = X + 0.75;
                if (K4 > I) YDUE1 = Y + 1.5*V;
                if (KREUZ == 1) goto label1200;
                UWA130(X+0.75,Y+(2.0-XL)*V,4,0);
                if (KREUZ == 2) goto label1200;
                UWA131(X+0.75,Y+(2.0-XL)*V,FELD[N],FELD[N+1],FELD[N+2],FELD[N+3],4,0);
                
            label1200:
                UWA132(X+0.75,Y-0.75,1.45,0.0,0.0,1,0,2,1,I,I,ABDUWA);
                if (KREUZ == 1) goto label1300;
                UWA130(X+0.75,Y-1.6,3,0);
                if (KREUZ == 2) goto label1300;
                UWA131(X+0.75,Y-1.6,FELD[N+4],FELD[N+5],FELD[N+6],FELD[N+7],3,0);

            label1300:
                NEWPEN(3);
                PLOT (X,Y,3);
                PLOT (X+0.75,Y-0.55,2);
                PLOT (X+0.75,Y+0.55,2);
                PLOT (X+1.5,Y,2);
                PLOT (X+2.0+XDXT,Y,2);
                X = X + 2.0 + XDXT;
            }   //1400 CONTINUE

        label1500:
            if (IENTN[K4+1] <= 0) return;
            NEWPEN(3);
            PLOT (X,Y,3);
            PLOT (X+0.7*V*IENTN[K4+1],Y,2);
            X = X + 0.7*V*IENTN[K4+1];
            return;
        }   //END

        
        static void UWA119()
        {
            //ENTRY GENERA
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /ELEKTR/ PKLEMM,PGENN,ETAGLR,ETAMV,ETAGV,COSPHI,PH2,MAKEUP
            //1 ,SCR,POL,VOLTG,FLUTND,ENDSCH,DREHZ,PKLEMA
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /PLHEIZ/ KHEIZ
            //COMMON /LEISTG/ IELEKT,PELEKT,IGETRB
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double XG = 0, XP = 0, YG = 0, V = 0, ZZ = 0, YP = 0, XW = 0, XZ = 0;

            if (QAMI) goto label100;

            V = FACTS/FACT;
            XG = X;
            YG = YWELLE;
            XP = XG + 2.3*V;
            PLOT (XG,YG+0.05,3);
            PLOT (XP,YG+0.05,2);
            PLOT (XP,YG-0.05,3);
            PLOT (XG,YG-0.05,2);

            if (IGETRB < 9) goto label10;

            CIRCL(XP+0.7,YG,0.0,360.0,0.35,0.35,0.5);
            CIRCL(XP+0.4,YG,0.0,360.0,0.05,0.05,0.0);
            YG = YG + 0.6;
            CIRCL(XP+1.45,YG,0.0,360.0,0.50,0.50,0.5);
            CIRCL(XP+1.0,YG,0.0,360.0,0.05,0.05,0.0);
            XG = XP + 1.45;
            XP = XG + 1.0*V;
            PLOT (XG,YG+0.05,3);
            PLOT (XP,YG+0.05,2);
            PLOT (XP,YG-0.05,3);
            PLOT (XG,YG-0.05,2);

        label10:
            XG = XP;
            CIRCL(XG+1.5,YG,0.0,360.0,0.75,0.75,0.0);
            SYMBOL (XG+0.65,YG-0.2,0.4,"G",0.0,1);
            if (IELEKT == 9) return;
            if (KREUZ > 0) return;
            FACTOR (FACTS);
            XG = XG/V;
            YG = YG/V;
            if (KHEIZ > 0) goto label20;
            if (PELEKT == 0.0) NUMBER (XG-0.2,YG-1.2,XH,PKLEMM,0.0,IELEKT);
            if (PELEKT != 0.0) NUMBER (XG-0.2,YG-1.2,XH,PELEKT,0.0,IELEKT);
            goto label30;
            
        label20:
            if (PELEKT == 0.0) NUMBER (XG-0.2,YG+1.0,XH,PKLEMM,0.0,IELEKT);
            if (PELEKT != 0.0) NUMBER (XG-0.2,YG+1.0,XH,PELEKT,0.0,IELEKT);
        
        label30:
            SYMBOL (999.0,999.0,XH," MW",0.0,3);
            FACTOR (FACT);
            return;

        label100:
            if (PELEKT != 0.0) PKLEMM = PELEKT;
            ZZ = X;
            X = XT;
            PLOT (X+3.0,YWELLE+0.05,3);
            PLOT (X,YWELLE+0.05,2);
            PLOT (X,YWELLE-0.05,3);
            PLOT (X+3.0,YWELLE-0.05,2);
            PLOT (X+3.0,YWELLE+2.0,3);
            PLOT (X+3.0,YWELLE-2.0,2);
            PLOT (X+7.0,YWELLE-2.0,2);
            PLOT (X+7.0,YWELLE+2.0,2);
            PLOT (X+3.0,YWELLE+2.0,2);
            if (KREUZ > 0) return;
            XP = X + 3.3;
            Z = Y;
            Y = YWELLE;
            NUMBER (XP,Y+1.4,XH,POL,0.0,-1);
            if (QTEXT)
                SYMBOL (999.0,999.0,XH," - POLE GENERATOR",0.0,17);
            if (!QTEXT)
                SYMBOL (999.0,999.0,XH," - POL GENERATOR",0.0,16);
            YP = Y + 0.8;
            XW = 0.0;
            if (QENGL) UWA135(PKLEMM,XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,PKLEMM,XW,3);
            if (QENGL) SYMBOL (999.0,999.0,XH," KW",0.0,3);
            if(!QENGL)SYMBOL (999.0,999.0,XH," MW",0.0,3);
            XP = X + 3.3;
            YP = Y + 0.2;
            if (COSPHI == 0.0) goto label110;
            SYMBOL (XP,YP,XH,"PF ",0.0,3);
            NUMBER (999.0,999.0,XH,COSPHI,0.0,3);
            YP = YP - 0.6;
            
        label110:
            if (PH2 == 0.0) goto label120;
            SYMBOL (XP,YP,XH,"H2 ",0.0,3);
            NUMBER (999.0,999.0,XH,PH2,0.0,2);
            if (QENGL) SYMBOL (999.0,999.0,XH," PSIG",0.0,5);
            if (QSI) SYMBOL (999.0,999.0,XH," BAR",0.0,4);
            if (QTECHN) SYMBOL (999.0,999.0,XH," AT",0.0,3);
            YP = YP - 0.6;
            
        label120:
            if (ETAGLR == 0.0) goto label130;
            SYMBOL (XP,YP,XH,"ML ",0.0,3);
            XZ = XP + 3*XH;
            if (QENGL) UWA135(ETAMV,XZ,YP,XH,XW);
            if (!QENGL) NUMBER (XZ,YP,XH,ETAMV,XW,3);
            if (QENGL) SYMBOL (999.0,999.0,XH," KW",0.0,3);
            if (!QENGL) SYMBOL (999.0,999.0,XH," MW",0.0,3);
            YP = YP - 0.6;
            SYMBOL (XP,YP,XH,"GL ",0.0,3);
            XZ = XP + 3*XH;
            if (QENGL) UWA135(ETAGV,XZ,YP,XH,XW);
            if (!QENGL) NUMBER (XZ,YP,XH,ETAGV,XW,3);
            if (QENGL) SYMBOL (999.0,999.0,XH," KW",0.0,3);
            if (!QENGL) SYMBOL (999.0,999.0,XH," MW",0.0,3);
            
        label130:
            Y = Z;
            X = ZZ;
            return;
        }   //END


        static void UWA120()
        {
            //ENTRY LINK10
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /PLHEIZ/ KHEIZ
            //COMMON /VERTR/ LIBEDI,IENTN[5]

            if (LHEIZ == 1 || LHEIZ == 2) 
                UWA124();

            UWA121();
            UWA125();

            if (KHEIZ > 0 && LHEIZ != 1 && LHEIZ != 2) 
                UWA124();

            UWA128();

            if (LIBEDI > 0) UWA042();

            return;
        }   //END


        static void UWA121()
        {
            //ENTRY VWSTRE
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            int[] NNSK = new int[6];
            double[] FELD1 = new double[22];

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /STUETZ/ NA(30)
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /PRINT/ IWR, TX0, TX13, TX14, TX15, TX16, TX17, TX
            //COMMON /EINSTE/ KEINST,AB,NKABLF,ISAMM,NENTG,KESS,IKESS,NT,IUM
            //COMMON /KONDPL/ KKONDR,ITKW,IMKW,TKWEIN,GKWEIN,IDAMPF,XDAMPF,NN4
            //COMMON /KONDPA/ TKWAUS
            //COMMON /ABLAUF/ XZU0,YZU0
            //COMMON /NTEILT/ NDTEIL
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /KESSEL/ XKESS, YKESS, ISCHWR
            //COMMON /GMINP/ GPMIN[4]
            //COMMON /PUMP/ IPUMP(60)

            int XN04 = 0, XPMP = 0, KPMP = 0, N = 0, NT = 0, NL = 0, KEINST = 0, IKESS = 0, NELEM = 0, M1 = 0, M2 = 0, LL = 0,
                L = 0, NLL = 0, L1 = 0, L2 = 0, NELEMV = 0, M = 0, IP = 0;
            double P = 0, E = 0, GS = 0, GQ = 0, T = 0, E1 = 0;
            YDY = 0.0;
            XZU0 = 0.0;
            YZU0 = 0.0;
            Z1 = 0.0;
            KANZ = 0;
            NN04 = 0;
            KESS = 0;
            int KUMP = 0;
            IUM = 0;
            NENTG = 0;
            NNSK[1] = 0;
            NNSK[2] = 0;
            NNSK[3] = 0;
            NNSK[4] = 0;
            NNSK[5] = 0;
            GKWEIN = GKWEIN*TX3;
            if (ITKW > 0) TKWEIN = TKWEIN*TX0 + TX5;
            if (ITKW == 2) TKWAUS = TKWAUS*TX0 + TX5;

            for(I = 1; I <= IHENDE; I++) //DO 100 I=1,IHENDE
            {
                if (QAMI && I == 2 && LTYP[I] == 8 && NDTEIL > 0) continue;
                if (LTYP[I] != 4 && LTYP[I] != 8) continue;
                JJ = N2[I];
                if (LTYP[I] == 4) NN04 = NN04 + 1;
                if (LTYP[I] == 4 && (PLTG[JJ] == PST905 || PLTG[JJ] == PST907))
                    NNSK[NN04] = 1;
                if (LTYP[I] == 4) continue;     // goto label100;
                if (NN04 > 0) continue;     //goto label100;
                if (LHEIZ == 1 || LHEIZ == 2) continue;     //goto label100;
                Z1 = Z1 + 2.0;
                if (JJ != 0 && NBLTG[I,1] == 0 && NBLTG[I,2] != 0) Z1 = Z1 + 1.0;
            }   //100 CONTINUE
            if (NN04 == 0) YDY = YK1-5.5/FACT;
            XN04 = (NN04);
            if (YDY == 0.0) YDY = (YK1-5.5/FACT-Z1-XN04*3.0)/(XN04+1.0);
            NN4 = 0;
            KPMP = 0;
            NKABLF = 0;
            if (LTYP[1] == 6) KPMP = 1;
            if (LHEIZ == 1 || LHEIZ == 2) KPMP = 1;

            for(I = 1; I <= IHENDE; I++) //DO 9900 I = 1,IHENDE
            {
                if (QAMI && I == 2 && LTYP[I] == 8 && NDTEIL > 0) continue;
                if ((LHEIZ == 1 || LHEIZ == 2) && I < 3) continue;
                N = LTYP[I] + 1;
                if (N == 9 && KUMP != 0 && KUMP == NBLTG[I,1]) continue;
                KUMP = 0;
                NT = NTYP[I];

                FELD1[1] = PW[I] * TX2;
                FELD1[2] = EWAUS[I] * TX1;
                FELD1[3] = GWAS[I] * TX3;
                FELD1[4] = (TWAUS[I]-273.15)*TX0+TX5+0.004;
                if (N != 1) goto label200;
                if (LTYP[I+1] != 13) goto label200;
                FELD1[1] = PW[I+1] * TX2;
                FELD1[2] = EWAUS[I+1] * TX1;
                FELD1[3] = GWAS[I+1] * TX3;
                FELD1[4] = (TWAUS[I+1]-273.15)*TX0+TX5+0.004;
                
            label200:
                NL = 1;
                XKONDK = 0.0;
                XUMPMP = 0.0;
                SUGL = 0.0;
                SUQL = 0.0;
                KEINST = 0;
                IKESS = 0;
                II = 0;
                JJ = 0;
                if (I > 1 && LTYP[I] == 12 && LTYP[I-1] == 12) KEINST = 2;
                if (I > 3 && (LTYP[I] == 2 || LTYP[I] == 21) && LTYP[I-2] == 12 && LTYP[I-3] == 12) KEINST = 1;
                if (LTYP[I] != 2 && LTYP[I] != 21) goto label300;

                if ((LTYP[I+1] == 2 || LTYP[I+1] == 21) && (LTYP[I+2] == 2 || LTYP[I+2] == 21) && LTYP[I+3] == 5 && LTYP[I+4] == 5) IKESS = 1;
                if ((LTYP[I+1] == 2 || LTYP[I+1] == 21) && (LTYP[I+2] == 2 || LTYP[I+2] == 21) && LTYP[I+3] == 5 && LTYP[I+4] == 5) KEINST = 2;
                if ((LTYP[I-1] == 2 || LTYP[I-1] == 21) && (LTYP[I+1] == 2 || LTYP[I+1] == 21) && LTYP[I+2] == 5 && LTYP[I+3] == 5) IKESS = 2;
                if ((LTYP[I-1] == 2 || LTYP[I-1] == 21) && (LTYP[I+1] == 2 || LTYP[I+1] == 21) && LTYP[I+2] == 5 && LTYP[I+3] == 5) KEINST = 3;
                if (I > 2 && (LTYP[I-2] == 2 || LTYP[I-2] == 21) && (LTYP[I-1] == 2 || LTYP[I-1] == 21) && LTYP[I+1] == 5 && LTYP[I+2] == 5) KEINST = 5;
                if (I > 1 && LTYP[I-1] != 2 && LTYP[I-1] != 21 && (LTYP[I+1] == 2 || LTYP[I+1] == 21) && LTYP[I+2] == 5 && LTYP[I+3] == 5)
                    IKESS = 2;
                if (I > 2 && LTYP[I-2] != 2 && LTYP[I-2] != 21 && (LTYP[I-1] == 2 || LTYP[I-1] == 21) && LTYP[I+1] == 5 && LTYP[I+2] == 5)
                    IKESS = 1;
                if (I > 2 && LTYP[I-2] != 2 && LTYP[I-2] != 21 && (LTYP[I-1] == 2 || LTYP[I-1] == 21) && LTYP[I+1] == 5 && LTYP[I+2] == 5)
                    KEINST = 4;
                if ((LTYP[I+1] == 2 || LTYP[I+1] == 21) && LTYP[I+2] == 5 && LTYP[I+3] != 5) IKESS = 2;
                if ((LTYP[I-1] == 2 || LTYP[I-1] == 21) && LTYP[I+1] == 5 && LTYP[I+2] != 5) KEINST = 4;
                if (IKESS == 0 && LTYP[I+1] == 5 && LTYP[I-1] != 2 && LTYP[I-1] != 21) IKESS = 2;
                
            label300:
                if (LTYP[I] == 5 && LTYP[I-1] == 5) IKESS = 1;
                if (I > 2 && LTYP[I] == 5 && (LTYP[I-1] == 2 || LTYP[I-1] == 21) && (LTYP[I-2] == 2 || LTYP[I-2] == 21) && LTYP[I+1] != 5) IKESS = 1;
                if (I > 2 && LTYP[I] == 5 && LTYP[I+1] == 5 && (LTYP[I-1] == 2 || LTYP[I-1] == 21) && (LTYP[I-2] == 2 || LTYP[I-2] == 21) && (LTYP[I-3] == 2 || LTYP[I-3] == 21)) IKESS = 2;
                if (LTYP[I] == 5 && IKESS == 0) KEINST = 1;
                NELEM = 1;
                
                //goto label(4000,1000,1000,6000,2000,1000,9200,8000,8000,5500,1000,
                //1 9900,2000,7500,9900,9900,9900,9900,9900,9900,9900,1000,
                //2 9900,9900),
                
                if(N == 1)      goto label4000;
                if(N == 2)      goto label1000;
                if(N == 3)      goto label1000;
                if(N == 4)      goto label6000;
                if(N == 5)      goto label2000;
                if(N == 6)      goto label1000;
                if(N == 7)      goto label9200;
                if(N == 8)      goto label8000;
                if(N == 9)      goto label8000;
                if(N == 10)      goto label5500;
                if(N == 11)      goto label1000;
                if (N == 12) continue;     //goto label9900;
                if(N == 13)      goto label2000;
                if(N == 14)      goto label7500;
                if (N == 15) continue;     //goto label9900;
                if (N == 16) continue;     //goto label9900;
                if (N == 17) continue;     //goto label9900;
                if (N == 18) continue;     //goto label9900;
                if (N == 19) continue;     //goto label9900;
                if (N == 20) continue;     //goto label9900;
                if (N == 21) continue;     //goto label9900;
                if(N == 22)      goto label1000;
                if (N == 23) continue;     //goto label9900;
                if (N == 24) continue;     //goto label9900;

            label1000:
                II = N1[I];
                NENTG = 0;
                if (II == NA[I]) goto label1300;

                NENTG = NRABC[II];
                if (NRABC[II] != 0) goto label1300;
                IZ2 = II;
                M2 = IHENDE + 1;
                
            label1100:
                for(M1 = M2; M1 <= INENDE; M1++) //DO 1200 M1 = M2,INENDE
                {
                    if (IZ2 != NN2[M1] && IZ2 != N2[M1])    continue;
                    IZ2 = NN1[M1];
                    if (NRABC[IZ2] == 0) goto label1100;
                    NRABC[II] = NRABC[IZ2];
                    UWA114(II);
                    NENTG = NRABC[II];
                    goto label1300;
                }   //    1200 CONTINUE
                
                for(LL = 4; LL <= 26; LL++) //DO 1210 LL=4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[II] = LL;
                    UWA114(II);
                    NENTG = NRABC[II];
                    goto label1300;
                }   //1210 CONTINUE

            label1300:
                P = PLTG[II] - DPLTG[II];
                if (N == 2 && EKONDW[I] != 0.0) P = PW[I] + DTK[I];
                E = ELTG[II] - DELTG[II];
                GS = GLTG[II];
                GQ = GLTG[II]*E;

                for(L = 1; L <= 8; L++) //DO 1400 L = 1,8
                {
                    NLL = NBLTG[I,L];
                    if (NLL == 0) continue;
                    if (NLL < 49 || NLL > 69) continue;
                    GS = GS + GLTG[NLL];
                    GQ = GQ + GLTG[NLL]*ELTG[NLL];
                    if (GS > 0.0) E = GQ/GS;
                }   //1400 CONTINUE

                if (NT == 20) goto label1800;
                T = VISUM(P,E,03);
                if (T < 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0 + TX5;
                if (T < 0.0&& QENGL) T = -(100.0+T*100.0);
                FELD1[5] = P * TX2;
                FELD1[6] = E * TX1;
                FELD1[7] = GS*TX3;
                FELD1[8] = T;
                if (N != 2) goto label1900;
                if (II != 19) goto label1900;

                IKESS = 1;
                if (NRABC[II] != 0) goto label1700;
                IZ2 = II;
                M2 = IHENDE + 1;
                
            label1500:
                for(M1 = M2; M1 <= INENDE; M1++) //DO 1600 M1 = M2,INENDE
                {
                    IZ3 = NN2[M1];
                    if (IZ2 != IZ3) continue;
                    IZ2 = NN1[M1];
                    if (NRABC[IZ2] == 0) continue;
                    NRABC[II] = NRABC[IZ2];
                    UWA114(II);
                    goto label1700;
                }       //1600 CONTINUE
                
            label1700:
                LL = NRABC[II];
                ABC[8] = ABCD[LL];
                goto label1900;

            label1800:
                FELD1[5] = 0.0;
                FELD1[6] = 0.0;
                FELD1[7] = 0.0;
                FELD1[8] = 0.0;

            label1900:
                NELEM = 2;
                if (N2[I] != 0) goto label2000;
                if (NBLTG[I,1] != 0 || NBLTG[I,2] != 0) goto label4000;
                goto label4900;

            label2000:
                JJ = N2[I];
                if (LTYP[I] != 2 && LTYP[I] != 12 && LTYP[I] != 21) goto label2600;
                if (LTYP[I+1] != 8) goto label2100;
                IX3 = NBLTG[I+1,1];
                if (IX3 == JJ) goto label2500;
                goto label2200;
                
            label2100:
                if (LTYP[I+2] != 8) goto label2600;
                IX3 = NBLTG[I+2,1];
                if (IX3 == JJ) IUM = 1;
                if (IX3 == JJ) goto label2500;
                
            label2200:
                IX2 = JJ;
                L2 = IHENDE + 1;
                
            label2300:
                for(L1 = L2; L1 <= INENDE; L1++) //DO 2400 L1 = L2,INENDE
                {
                    if (IX2 != NN1[L1]) continue;
                    IX2 = NN2[L1];
                    if (IX2 == IX3 && LTYP[I+2] == 8) IUM = 1;
                    if (IX2 == IX3) goto label2500;
                    goto label2300;
                }   //2400 CONTINUE
                goto label2600;
                
            label2500:
                XUMPMP = 1.0;
                if (NKABLF == 0) NKABLF = 2;
                if (PLTG[IX3] > 0.0&& ELTG[IX3] > 0.0)
                    T = VISUM(PLTG[IX3],ELTG[IX3],23);
                T = (T-273.15)*TX0 + TX5;

                FELD1[11] = PLTG[IX3]*TX2;
                FELD1[12] = ELTG[IX3]*TX1;
                FELD1[13] = GLTG[IX3]*TX3;
                FELD1[14] = T;
                if (NT == 20) //THEN
                {
                    FELD1[11] =0.0;
                    FELD1[12] =0.0;
                    FELD1[13] =0.0;
                    FELD1[14] =0.0;
                }   ////ENDIF
                if (IUM == 1) goto label4000;

                T = TWAUS[I+1];
                T = (T-273.15)*TX0 + TX5;
                FELD1[16] = PW[I+1]*TX2;
                FELD1[17] = EWAUS[I+1]*TX1;
                FELD1[18] = GWAS[I+1]*TX3;
                FELD1[19] = T;
                KUMP = IX3;
                goto label4000;

            label2600:
                P = PLTG[JJ];
                E = ELTG[JJ];
                if (NT == 20) goto label2700;
                T = VISUM(P,E,03);
                if ((N == 3 || N == 22) && DTK[I] == 0.0) T = UW0011(P,1);
                if (T < 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0+TX5;
                if (T < 0.0&& QENGL) T = -(100.0+T*100.0);
                FELD1[11] = P*TX2;
                FELD1[12] = E*TX1;
                FELD1[13] = GLTG[JJ]*TX3;
                FELD1[14] = T;
                goto label2800;

            label2700:
                FELD1[11] = 0.0;
                FELD1[12] = 0.0;
                FELD1[13] = 0.0;
                FELD1[14] = 0.0;

            label2800:
                if (N == 2 && IPUMP[I] == 1) KEINST = 1;
                if (N != 3 && N != 13 && N != 22) goto label2840;
                L = I;
                
            label2810:
                L = L - 1;
                if (L <= 1) goto label2820;
                if (LTYP[L] != 1 && LTYP[L] != 2 && LTYP[L] != 12 && LTYP[L] != .21 && NTYP[L] != 8) goto label2810;
                if (JJ == NBLTG[L,1]) goto label2830;
                if (LTYP[L] == 12 && LTYP[L-1] == 12) goto label2810;
                if (N == 13 && LTYP[L] == 12 && JJ == NBLTG[L,2]) goto label2830;
                if (LTYP[L] == 2 && LTYP[L-1] == 12 && LTYP[L-2] == 12)
                    goto label2810;
                if (NTYP[L] != 8) goto label2820;
                if (IHENDE == INENDE) goto label2820;
                IZ1 = JJ;
                M2 = IHENDE + 1;
                
            label2812:
                for(M1 = M2; M1 <= INENDE; M1++) //DO 2814 M1 = M2,INENDE
                {
                    if (IZ1 != NN1[M1]) continue;
                    IZ1 = NN2[M1];
                    if (IZ1 == NBLTG[L,1]) goto label2830;
                    goto label2812;
                }   //2814 CONTINUE
                goto label2810;
                
            label2820:
                NKABLF = 1;
                
            label2830:
                if (NKABLF != 1) goto label3100;
                
            label2840:
                if (NRABC[JJ] != 0) goto label3000;
                
                for(LL = 4; LL <= 26; LL++) //DO 2900 LL = 4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[JJ] = LL;
                    UWA114(JJ);
                    AB = ABCD[LL];
                    goto label3100;
                }   //2900 CONTINUE
                
            label3000:
                LL = NRABC[JJ];
                AB = ABCD[LL];

            label3100:
                NELEMV = NELEM;
                NELEM = 3;
                if (NELEMV == 2) NELEM = 4;
                if (NBLTG[I,1] == 0 && NBLTG[I,2] == 0) goto label9200;

            label4000:
                if (NBLTG[I,1] == 0) goto label4300;
                if (N == 1 || N == 5 || N == 9 || N == 11 || N == 19 || N == 23)
                    goto label4300;

                L = I;
                
            label4100:
                L = L + 1;
                if (L > IHENDE) goto label4300;
                if (LTYP[L] == 1) goto label4300;
                if (LTYP[L] != 2 && LTYP[L] != 21 && LTYP[L] != 12) goto label4100;
                IZ1 = N2[L];
                if (IZ1 == NBLTG[I,1]) goto label4200;
                if (LTYP[L] == 2 && LTYP[L-1] == 12 && LTYP[L-2] == 12)
                    goto label4100;
                if (LTYP[L] == 12 && LTYP[L-1] == 12 && LTYP[L+1] == 2)
                    goto label4100;
                goto label4300;
                
            label4200:
                NELEMV = NELEM;
                NELEM = 5;
                if (NELEMV == 2) NELEM = 6;
                if (NELEMV == 3) NELEM = 7;
                if (NELEMV == 4) NELEM = 8;

            label4300:
                M = 1;
                if (NELEM == 5 || NELEM == 6 || NELEM == 7 || NELEM == 8) M = 2;
                if (LTYP[I] == 12 && LTYP[I+1] == 12) M = 3;
                SUGL = 0.0;
                SUQL = 0.0;
                P = 0.0;
                NL = 0;
                
                for(L = M; L <= 8; L++) //DO 4800 L = M,8
                {
                    NLL = NBLTG[I,L];
                    if (NLL == 0) continue;
                    if (N == 1 && !QAMI && NLL > 26 && NLL < 31) continue;
                    if (NLL > 48 && NLL < 70 && (N == 2 || N == 3 || N == 22))
                        continue;
                    if (N != 1) goto label4320;
                    
                    for(IX6 = 2; IX6 <= IHENDE; IX6++)  //DO 4310 IX6=2,IHENDE
                    {
                        if (NTYP[IX6] != 3 && NTYP[IX6] != 15) continue;
                        if (N1[IX6] == 0) continue;
                        IX7 = N2[IX6];
                        if (IX7 != NLL) continue;
                        goto label4650;
                    }   //4310 CONTINUE
                    
                label4320:
                    NL = NL + 1;
                    if (NLL == 100 && N == 1) goto label4600;
                    if (NL == 1) P = PLTG[NLL];
                    SUGL = SUGL + GLTG[NLL];
                    SUQL = SUQL + GLTG[NLL]*ELTG[NLL];
                    if (NLL == 100) goto label4600;
                    if (L == 1 && N == 5 && P != PST905) IKESS = 1;
                    if (L == 1 && N == 5) NN4 = NN4 + 1;
                    if (L == 1 && N == 5) NN04 = NN04 - 1;
                    if (NN4 > 0 && N == 5 && NNSK[NN4] == 1) goto label4500;
                    if (NRABC[NLL] != 0) goto label4700;
                    if (PLTG[NLL] == PST905) goto label4510;
                    
                    for(LL = 4; LL <= 26; LL++) //DO 4400 LL = 4,26
                    {
                        if (QABC[LL]) continue;
                        QABC[LL] = true;
                        NRABC[NLL] = LL;
                        UWA114(NLL);
                        ABC[NL] = ABCD[LL];
                        goto label4800;
                    }   //4400 CONTINUE
                    goto label4800;

                label4500:
                    NL = 1;
                    
                label4510:
                    NRABC[NLL] = 3;
                    ABC[NL] = ABCD[3];
                    goto label4800;

                label4600:
                    NRABC[NLL] = 2;
                    if (N != 1) goto label4700;
                    NL = NL - 1;
                    NELEM = 2;
                    FELD1[5] = GLTG[NLL]*TX3;
                    FELD1[6] = ELTG[NLL]*TX1;
                    if (GLTG[NLL] == 0.0) FELD1[6] = 0.0;
                    goto label4800;

                label4650:
                    KEINST = 1;
                    if (NRABC[NLL] > 0) goto label4670;
                    
                    for(LL = 4; LL <= 26; LL++) //DO 4660 LL=4,26
                    {
                        if (QABC[LL]) continue;
                        QABC[LL] = true;
                        NRABC[NLL] = LL;
                        UWA114(NLL);
                        goto label4670;
                    }   //4660 CONTINUE
                    goto label4800;
                    
                label4670:
                    LL = NRABC[NLL];
                    AB = ABCD[LL];
                    FELD1[7] = GLTG[NLL]*TX3;
                    FELD1[8] = ELTG[NLL]*TX1;
                    continue;

                label4700:
                    LL = NRABC[NLL];
                    ABC[NL] = ABCD[LL];

                label4800:
                    ;
                }   //4800 CONTINUE
                if (NL == 0) goto label4900;
                NELEMV = NELEM;
                NELEM = 9;
                if (NELEMV == 2) NELEM = 10;
                if (NELEMV == 3) NELEM = 11;
                if (NELEMV == 4) NELEM = 12;
                if (NELEMV == 5) NELEM = 13;
                if (NELEMV == 6) NELEM = 14;
                if (NELEMV == 7) NELEM = 15;
                if (NELEMV == 8) NELEM = 16;
                if (NELEMV == 8) NELEM = 16;

                FELD1[9] = SUGL * TX3;
                FELD1[10] = 0.0;
                if (SUGL == 0.0) goto label4900;
                FELD1[10] = SUQL/SUGL*TX1;
                ISAMM = 0;
                if (P <= 0.0) goto label4900;
                E = SUQL/SUGL;
                if (P > 225.0) P = 225.0;
                E1 = VISUM(P,T,-21) + 1.0;
                if (E1 < E) ISAMM = 1;

            label4900:
                if (!((N == 3 || N == 22) && N2[I] == 0)) goto label9200;

                if (NKABLF == 0) NKABLF = 2;
                XUMPMP = 1.0;
                if (NT == 20) goto label5000;

                T = EKONDW[I] - 273.15;
                T = T*TX0+TX5;
                FELD1[16] = PW[I]*TX2;
                FELD1[17] = DEKOND[I]*TX1;
                UWA048(I);
                FELD1[18] = FELD1[3] + (GLTG[II]+SUGL)*TX3;
                FELD1[19] = T;
                P = FELD1[5]/TX2;
                E = VISUM(P,T,-21);
                T = T - 273.15;
                T = T*TX0+TX5;
                FELD1[11] = P*TX2;
                FELD1[12] = E*TX1;
                FELD1[13] = (GLTG[II]+SUGL)*TX3;
                FELD1[14] = T;
                goto label9200;

            label5000:
                FELD1[11] = 0.0;
                FELD1[12] = 0.0;
                FELD1[13] = 0.0;
                FELD1[14] = 0.0;
                FELD1[16] = FELD1[1];
                FELD1[17] = FELD1[2];
                FELD1[18] = FELD1[3];
                FELD1[19] = FELD1[4];
                goto label9200;

            label5500:
                FELD1[15] = QBZWM[I]/1000.0*TX4;
                if (QBZWM[I] == 0.0) FELD1[15] = GWAS[I]*(EWAUS[I]-EWAUS[I-1])*TX4/1000.0;
                goto label9200;

            label6000:
                if (LTYP[I-1] != 0) KPMP = 1;
                if (KPMP == 0) NELEM = 9;
                KPMP = 1;
                if (N1[I] == 0) goto label6600;
                if (N2[I] == 999) goto label6500;

                NELEM = 2;
                II = N1[I];
                JJ = N2[I];
                L1 = IHENDE + 1;
                
            label6100:
                for(L = L1; L <= INENDE; L++) //DO 6200 L = L1,INENDE
                {
                    IZ4 = NN1[L];
                    if (IZ4 == 0) continue;
                    if (IZ4 != JJ) continue;
                    if (LTYP[L] == 0) NELEM = 3;
                    if (LTYP[L] == 3) NELEM = 4;
                    JJ = NN2[L];
                    goto label6100;
                }   //6200 CONTINUE

                P = PLTG[II] - DPLTG[II];
                E = ELTG[II] - DELTG[II];
                T = VISUM(P,E,13);
                if (T < 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0 + TX5;
                if (T < 0.0&& QENGL) T = -(100.0+T*100.0);
                FELD1[5] = P * TX2;
                FELD1[6] = E * TX1;
                FELD1[7] = GLTG[II] * TX3;
                FELD1[8] = T;
                if (NRABC[II] != 0) goto label6400;
                
                for(LL = 4; LL <= 26; LL++) //DO 6300 LL = 4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[II] = LL;
                    UWA114(II);
                    ABC[8] = ABCD[LL];
                    goto label6600;
                }   //6300 CONTINUE
                goto label6600;
                
            label6400:
                LL = NRABC[II];
                ABC[8] = ABCD[LL];
                goto label6600;

            label6500:
                IKESS = 1;

            label6600:
                if (LTYP[I-1] != 18) goto label6900;

                NELEMV = NELEM;
                NELEM = 5;
                if (NELEMV == 2) NELEM = 6;
                if (NELEMV == 3) NELEM = 7;
                if (NELEMV == 4) NELEM = 8;
                NLL = NBLTG[I-1,1];
                P = PLTG[NLL];
                E = ELTG[NLL];
                T = VISUM(P,E,23);
                T = T - 273.15;
                T = T*TX0+TX5;
                FELD1[16] = P*TX2;
                FELD1[17] = E*TX1;
                FELD1[18] = GLTG[NLL]*TX3;
                FELD1[19] = T;
                if (NRABC[NLL] != 0) goto label6800;
                
                for(LL = 4; LL <= 26; LL++) //DO 6700 LL = 4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[NLL] = LL;
                    UWA114(NLL);
                    ABC[NL] = ABCD[LL];
                    goto label6900;
                }   //6700 CONTINUE
                goto label6900;
                
            label6800:
                LL = NRABC[NLL];
                ABC[NL] = ABCD[LL];

            label6900:
                if (K == 1) goto label7100;
                IP = 0;
                IX1 = IHENDE + 1;
                
            label7000:
                IX1 = IX1 - 1;
                if (LTYP[IX1] == 3) IP = IP + 1;
                if (IX1 > I) goto label7000;
                if (GWAS[I] >= GPMIN[IP]*IPUMP[I]) goto label7100;
                LL = NRABC[26+IP];
                AB = ABCD[LL];
                FELD1[21] = (GPMIN[IP]*IPUMP[I]-GWAS[I])*TX3;
                NELEM = NELEM + 10;
                
            label7100:
                if (NELEM > 1 && NELEM < 5 && (LTYP[I+1] == 2 || LTYP[I+1] == 21)) XKONDK = 2.1;
                if (NELEM > 1 && NELEM < 5 && (LTYP[I+1] == 2 || LTYP[I+1] == 21) && DTK[I+1] > 0.0) XKONDK = 1.3;
                if (NELEM == 9 && (LTYP[I+1] == 1 || LTYP[I+1] == 2 || LTYP[I+1] == 21)) XKONDK = 2.3;
                if (LHEIZ != 1 && LHEIZ != 2) goto label9200;
                if (LTYP[I-2] != 0) goto label9200;
                if (LTYP[I+1] == 1 || LTYP[I+1] == 2 || LTYP[I+1] == 21)
                    XKONDK = 2.3;
                goto label9200;

            label7500:
                if (LTYP[I-1] == 0) NELEM = 2;
                if (PW[I] > (PW[I-1]+1.0) && KPMP == 0) NELEM = 3;
                if (PW[I] > (PW[I-1]+1.0) && KPMP == 1) NELEM = 4;
                if (QBZWM[I] != 0.0 && KPMP == 1) NELEM = 1;
                if (QBZWM[I] != 0.0 && KPMP == 0) NELEM = 2;
                goto label9200;

            label8000:
                NL = 0;
                if (IUM == 1) goto label9200;
                JJ = N2[I];
                if (JJ == 0) goto label8400;

                if (N == 9) goto label8100;

                KESS = KESS + 1;
                T = TWAUS[I];
                if (T > 0.0) T = (T-273.15)*TX0 + TX5;
                if (T < 0.0&& QENGL) T = -(100.0+T*100.0);
                FELD1[4] = T;
                P = PW[I];
                if (P > 225.0) P = 225.0;
                T = UW0011(P,1);
                if (TWAUS[I] < 0.0|| TWAUS[I] >= T) IKESS = 1;

            label8100:
                FELD1[13] = GLTG[JJ]*TX3;
                NELEM = 2;
                if (NRABC[JJ] != 0) goto label8300;
                
                for(LL = 4; LL <= 26; LL++) //DO 8200 LL = 4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[JJ] = LL;
                    UWA114(JJ);
                    AB = ABCD[LL];
                    goto label8400;
                }   //8200 CONTINUE
                goto label8400;
                
            label8300:
                LL = NRABC[JJ];
                AB = ABCD[LL];
                
            label8400:
                if (NBLTG[I,1] == 0 && NBLTG[I,2] == 0) goto label9200;
                SUGL = 0.0;
                SUQL = 0.0;
                
                for(L = 1; L <= 8; L++) //DO 9100 L = 1,8
                {
                    NLL = NBLTG[I,L];
                    if (NLL == 0) continue;
                    if (NLL == N2[I+1]) goto label8900;
                    if (NLL == N2[I+2]) goto label8900;
                    if (NLL == N2[I-1]) goto label9000;
                    if (IHENDE == INENDE) goto label8600;
                    IX4 = IHENDE + 1;
                    
                    for(IX5 = IX4; IX5 <= INENDE; IX5++) //DO 8500 IX5 = IX4,INENDE
                    {
                        if (NTYP[IX5] == 10) continue;
                        if (NLL != NN2[IX5]) continue;
                        if (NN1[IX5] == N2[I+1]) IKESS = 1;
                        if (NN1[IX5] == N2[I+1]) goto label8900;
                        if (NN1[IX5] == N2[I+2]) IKESS = 1;
                        if (NN1[IX5] == N2[I+2]) goto label8900;
                        if (NN1[IX5] == N2[I-1] && (LTYP[I-1] == 2 || LTYP[I-1] == 21))
                            goto label9000;
                    }   //8500 CONTINUE
                    
                label8600:
                    SUGL = SUGL + GLTG[NLL];
                    SUQL = SUQL + GLTG[NLL]*ELTG[NLL];
                    if (NRABC[NLL] != 0) goto label8800;
                    
                    for(LL = 4; LL <= 26; LL++) //DO 8700 LL = 4,26
                    {
                        if (QABC[LL]) continue;
                        QABC[LL] = true;
                        NRABC[NLL] = LL;
                        UWA114(NLL);
                        NL = NL + 1;
                        ABC[NL] = ABCD[LL];
                        goto label9100;
                    }   //8700 CONTINUE
                    goto label9100;
                    
                label8800:
                    LL = NRABC[NLL];
                    NL = NL + 1;
                    ABC[NL] = ABCD[LL];
                    goto label9100;
                    
                label8900:
                    NELEMV = NELEM;
                    NELEM = 3;
                    if (NELEMV == 2) NELEM = 4;
                    goto label9100;
                    
                label9000:
                    NELEMV = NELEM;
                    NELEM = 5;
                    if (NELEMV == 2) NELEM = 6;

                label9100:
                    ;
                }   //9100 CONTINUE
                if (NL == 0) goto label9200;

                NELEMV = NELEM;
                NELEM = 9;
                if (NELEMV == 2) NELEM = 10;
                if (NELEMV == 3) NELEM = 11;
                if (NELEMV == 4) NELEM = 12;
                if (NELEMV == 5) NELEM = 13;
                if (NELEMV == 6) NELEM = 14;
                FELD1[9] = SUGL * TX3;
                FELD1[10] = 0.0;
                if (SUGL != 0.0) FELD1[10] = SUQL/SUGL*TX1;

            label9200:
                if ((N == 3 || N == 22) && DTK[I] != 0.0) XKONDK = 0.5;
                if (N != 1) goto label9700;
                if (IDAMPF == 0) goto label9700;
                XDAMPF = 0.0;
                L = I;
                
            label9300:
                L = L + 1;
                if (L > IHENDE) goto label9400;
                if (LTYP[L] != 3) goto label9300;
                if (LTYP[L+1] == 4) goto label9400;
                if (LTYP[L+1] == 8) XDAMPF = XDAMPF + 3.0 + XDX;
                if (LTYP[L+1] == 8 && N2[L+1] > 0 && NBLTG[L+1,1] > 0)
                    XDAMPF = XDAMPF + 1.5;
                if (LTYP[L+2] == 4) goto label9400;
                if (LTYP[L+2] == 8) XDAMPF = XDAMPF + 3.0 + XDX;
                if (LTYP[L+2] == 8 && N2[L+2] > 0 && NBLTG[L+2,1] > 0)
                    XDAMPF = XDAMPF + 1.5;
                
            label9400:
                FELD1[21] = GLTG[IDAMPF]*TX3;
                if (NRABC[IDAMPF] == 0) goto label9500;
                LL = NRABC[IDAMPF];
                AB = ABCD[LL];
                goto label9700;
                
            label9500:
                for(LL = 4; LL <= 26; LL++) //DO 9600 LL = 4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[IDAMPF] = LL;
                    UWA114(IDAMPF);
                    AB = ABCD[LL];
                    goto label9700;
                }   //9600 CONTINUE

            label9700:
                if (QAMI && N == 9 && NN04 != 0) NELEM = NELEM + 20;
                if (N == 4 && N1[I] != 0) FELD1[20] = PULEIS/859.845;
                if (N == 3 || N == 13 || N == 22) FELD1[20] = DTS[I]*TX0;
                if (N == 6) FELD1[20] = DTS[I]*TX0;
                if ((N == 3 || N == 22) && DTK[I] != 0.0) FELD1[21] = DTK[I]*TX0;
                if (NTYP[I] == 20) //THEN
                {
                    FELD1[20] = 0.0;
                    FELD1[21] = 0.0;
                }   ////ENDIF
                if (N == 5 && LTYP[1] == 6) NELEM = 17;

                if (LIGHT[6] == 0)
                    goto label9800;
                
                sw16.WriteLine("0      I      N     NT  NELEM     NL   KANZ   KESS  IKESS KEINST    IUM    NN4   KPMP NKABLF  NENTG XKONDK XUMPMP");
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15} ", I.ToString().PadLeft(7),N.ToString().PadLeft(7),NT.ToString().PadLeft(7),NELEM.ToString().PadLeft(7),
                    NL.ToString().PadLeft(7),KANZ.ToString().PadLeft(7),KESS.ToString().PadLeft(7),IKESS.ToString().PadLeft(7),KEINST.ToString().PadLeft(7),IUM.ToString().PadLeft(7),NN4.ToString().PadLeft(7),
                    KPMP.ToString().PadLeft(7),NKABLF.ToString().PadLeft(7),NENTG.ToString().PadLeft(7),Math.Round(XKONDK,2).ToString().PadLeft(7),Math.Round(XUMPMP,2).ToString().PadLeft(7));
                //9710 FORMAT("'/1X,  14I7,2F7.2)

                sw16.WriteLine("0{0}{1}{2}{3}{4}{5}{6} ", Math.Round(FELD1[1],3).ToString().PadLeft(12),Math.Round(FELD1[2],3).ToString().PadLeft(12),Math.Round(FELD1[3],3).ToString().PadLeft(12),
                    Math.Round(FELD1[4],3).ToString().PadLeft(12),Math.Round(FELD1[5],3).ToString().PadLeft(12),Math.Round(FELD1[6],3).ToString().PadLeft(12),Math.Round(FELD1[7],3).ToString().PadLeft(12));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6} ", Math.Round(FELD1[8],3).ToString().PadLeft(12),Math.Round(FELD1[9],3).ToString().PadLeft(12),Math.Round(FELD1[10],3).ToString().PadLeft(12),
                    Math.Round(FELD1[11],3).ToString().PadLeft(12),Math.Round(FELD1[12],3).ToString().PadLeft(12),Math.Round(FELD1[13],3).ToString().PadLeft(12),Math.Round(FELD1[14],3).ToString().PadLeft(12));
                sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6} ", Math.Round(FELD1[15],3).ToString().PadLeft(12),Math.Round(FELD1[16],3).ToString().PadLeft(12),Math.Round(FELD1[17],3).ToString().PadLeft(12),
                    Math.Round(FELD1[18],3).ToString().PadLeft(12),Math.Round(FELD1[19],3).ToString().PadLeft(12),Math.Round(FELD1[20],3).ToString().PadLeft(12),Math.Round(FELD1[21],3).ToString().PadLeft(12));
                //9720 FORMAT(1H0,7F12.3/1X,7F12.3/1X,7F12.3)
                
                sw16.WriteLine("0{0}{1}{2}", Math.Round(X,3).ToString().PadLeft(12),Math.Round(Y,3).ToString().PadLeft(12),Math.Round(XDX,3).ToString().PadLeft(12));
                //9730 FORMAT(1H0,3F12.3)
                
                if (NL > 0) 
                {
                    string p = "";
                    for(K1 = 1; K1 <= NLESEN; K1++)
                        p = p + ABC[K1].PadLeft(4) + "      ";
                    sw16.WriteLine("+                                        {0}", p);
                    //9740 FORMAT(1H+,40X,8(A4,6X))
                }
                sw16.WriteLine("0");
                
            label9800:
                if (QAMI) 
                    UWA143(FELD1,N,NELEM,NL);

                if (!QAMI) UWA123(FELD1,N,NELEM,NL);
                UWA122(N,NELEM);
            }   //9900 CONTINUE

            NANZEN = KANZ;
            if (!QAMI) goto label10000;

            PLOT (X,Y,3);
            if (KESS != 0) return;
            
            PLOT (3.0/FACT,Y,2);
            AROHD(3.2/FACT,Y,3.0/FACT,Y,0.2,0.0,16);
            if (QTEXT && LLTG[14] == 3)
                SYMBOL (3.0/FACT,Y-0.3,XH,"TO NSSS",0.0,7);
            if (QTEXT && LLTG[14] != 3)
                SYMBOL (3.0/FACT,Y-0.3,XH,"TO BOILER",0.0,9);
            if (!QTEXT)
                SYMBOL (3.0/FACT,Y-0.3,XH,"ZUM DAMPF-",0.0,10);
            if (!QTEXT)
                SYMBOL (3.0/FACT,Y-0.6,XH,"ERZEUGER",0.0,8);
            return;
            
        label10000:
            PLOT (X,Y,3);
            PLOT (X-1.0,Y,2);
            if (LLTG[14] != 3) PLOT (XKESS,Y,2);
            if (LLTG[14] == 3) PLOT (X-1.0,YKESS,2);
            PLOT (XKESS,YKESS,2);
            return;
        }   //END


        static void UWA122(int N, int NELEM)
        {
            //ENTRY ABSTND (N,NELEM)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /DINA4/ IDINA4,XDINA4
            //COMMON /EINSTE/ KEINST,AB,NKABLF,ISAMM,NENTG,KESS,IKESS,NT,IUM

            NEWPEN(1);
            if (!QAMI) goto label2000;

            //goto label(100,200,300,400,500,200,600,700,800,200,100,1000,200,900,
            //    1000,1000,1000,1000,1000,1000,1000,300,1000,1000),
            if(N == 1)      goto label100;
            if(N == 2)      goto label200;
            if(N == 3)      goto label300;
            if(N == 4)      goto label400;
            if(N == 5)      goto label500;
            if(N == 6)      goto label200;
            if(N == 7)      goto label600;
            if(N == 8)      goto label700;
            if(N == 9)      goto label800;
            if(N == 10)      goto label200;
            if(N == 11)      goto label100;
            if(N == 12)      goto label1000;
            if(N == 13)      goto label200;
            if(N == 14)      goto label900;
            if(N == 15)      goto label1000;
            if(N == 16)      goto label1000;
            if(N == 17)      goto label1000;
            if(N == 18)      goto label1000;
            if(N == 19)      goto label1000;
            if(N == 20)      goto label1000;
            if(N == 21)      goto label1000;
            if(N == 22)      goto label300;
            if(N == 23)      goto label1000;
            if(N == 24)      goto label1000;
            
        label100:
            X = X - XK1/2.0 + 1.5;
            Y = Y - 3.0;
            if (LTYP[I+1] == 3 || LTYP[I+2] == 3) return;
            if (KF == 0) PLOT (X,Y,3);
            if (KF == 0) PLOT (38.0/FACT,Y,2);
            X = 38.0/FACT;
            if (LTYP[I+1] == 8) return;
            if (NN04 > 0 && KF == 0) PLOT (X,Y-YDY,2);
            if (NN04 > 0) Y = Y - YDY;
            if (NN04 > 0) return;
            if (KF == 0) PLOT (38.0/FACT,5.5/FACT,2);
            Y = 5.5/FACT;
            return;
            

        label200:
            X = X - 3.4 - XDX;
            if (KF == 1) return;
            PLOT (X+XDX,Y,3);
            PLOT (X,Y,2);
            return;
            
        label300:
            if (NELEM != 2 && NELEM != 6 && NELEM != 10 && NELEM != 14)
                X = X - 3.4 - XDX;
            if (NELEM == 2 || NELEM == 6 || NELEM == 10 || NELEM == 14)
                X = X - 4.4 - XDX;
            if (KF == 1) return;
            PLOT (X+XDX,Y,3);
            PLOT (X,Y,2);
            return;
            
        label400:
            if (NELEM > 9 && NELEM < 19) X = X - 1.0;
            if (NELEM > 9) NELEM = NELEM - 10;
            if (NELEM < 5) X = X - 1.9 - XDX;
            if (NELEM > 4 && NELEM < 9) X = X - 3.0 - XDX;
            if ((NELEM == 2 || NELEM == 6) && KF == 1) X = X - 1.0;
            if ((NELEM == 3 || NELEM == 7) && KF == 1) X = X - 2.0;
            if ((NELEM == 4 || NELEM == 8) && KF == 1) X = X - 3.0;
            if (NELEM != 9 && KF == 0) PLOT (X+XDX,Y,3);
            if (NELEM != 9 && KF == 0) PLOT (X,Y,2);
            if (NELEM != 9) return;
            
            X = 38.0/FACT;
            if (LTYP[I+1] == 8) return;
            if (NN04 > 0 && KF == 0) PLOT (X,Y,3);
            if (NN04 > 0 && KF == 0) PLOT (X,Y-YDY,2);
            if (NN04 > 0) Y = Y - YDY;
            if (NN04 > 0) return;
            if (KF == 0) PLOT (X,Y,3);
            if (KF == 0) PLOT (X,5.5/FACT,2);
            if (KF == 0) PLOT (34.5/FACT,5.5/FACT,2);
            X = 34.5/FACT;
            Y = 5.5/FACT;
            return;
            
        label500:
            if (NELEM == 17) goto label300;
            X = 38.0/FACT;
            Y = Y - 3.0 - YDY;
            if (NN04 == 0 && KF == 0) PLOT (38.0/FACT,5.5/FACT,3);
            if (NN04 == 0 && KF == 0) PLOT (38.0/FACT-3.5,5.5/FACT,2);
            if (KF == 1) NN04 = NN04 - 1;
            if (NN04 == 0) X = 38.0/FACT - 3.5;
            if (NN04 == 0) Y = 5.5/FACT;
            return;
            
        label600:
            X = 36.8/FACT;
            return;
            
        label700:
            X = X - 1.0 - XDX;
            if (KF == 1) return;
            PLOT (X+XDX,Y,3);
            PLOT (X,Y,2);
            return;
            
        label800:
            if (NELEM > 20) goto label810;
            if (NELEM != 10 && NELEM != 12 && NELEM != 14) X = X - 2.0 - XDX;
            if (NELEM == 10 || NELEM == 12 || NELEM == 14) X = X - 3.0 - XDX;
            if (KF == 1) return;
            PLOT (X+XDX,Y,3);
            PLOT (X,Y,2);
            return;
            
        label810:
            if (NELEM != 30) Y = Y - 2.0;
            if (NELEM == 30) Y = Y - 3.0;
            if (NN04 != 0 && KF == 0) PLOT (X,Y,3);
            if (NN04 != 0 && KF == 0) PLOT (X,Y-YDY,2);
            if (NN04 != 0) Y = Y - YDY;
            if (NN04 != 0) return;
            if (KF == 0) PLOT (X,Y,3);
            if (KF == 0) PLOT (X,5.5/FACT,2);
            if (KF == 0) PLOT (34.5/FACT,5.5/FACT,2);
            X = 34.5/FACT;
            Y = 5.5/FACT;
            return;
            
        label900:
            if (NELEM == 2) return;
            if (NELEM != 4 && NELEM != 8) X = X - 1.0;
            if (NELEM == 7 || NELEM == 3) X = 38.0/FACT;
            if (NELEM == 8 || NELEM == 4) X = X - 1.4;

        label1000:
            return;

        label2000:
            //goto label(2100,2200,2300,2400,2500,2600,2900,3000,2700,2500,2100,
            //1 3000,2600,2800,3000,3000,3000,3000,3000,3000,3000,2300,
            //2 3000,3000),
            if(N == 1)      goto label2100;
            if(N == 2)      goto label2200;
            if(N == 3)      goto label2300;
            if(N == 4)      goto label2400;
            if(N == 5)      goto label2500;
            if(N == 6)      goto label2600;
            if(N == 7)      goto label2900;
            if(N == 8)      goto label3000;
            if(N == 9)      goto label2700;
            if(N == 10)      goto label2500;
            if(N == 11)      goto label2100;
            if(N == 12)      goto label3000;
            if(N == 13)      goto label2600;
            if(N == 14)      goto label2800;
            if(N == 15)      goto label3000;
            if(N == 16)      goto label3000;
            if(N == 17)      goto label3000;
            if(N == 18)      goto label3000;
            if(N == 19)      goto label3000;
            if(N == 20)      goto label3000;
            if(N == 21)      goto label3000;
            if(N == 22)      goto label2300;
            if(N == 23)      goto label3000;
            if(N == 24)      goto label3000;

        label2100:
            Y = Y - 2.3 - 0.8/FACT*FACTS;
            if (LTYP[I+1] == 3) return;
            if (KF == 0) PLOT (X,Y,3);
            Y = 4.0/FACT + 3.7/FACT*FACTS + 2.0;
            if (KF == 0) PLOT (X,Y,2);
            if (KF == 0) PLOT (X-1.0,Y,2);
            X = X - 1.0;
            return;
            
        label2200:
            X = X - 4.2 - XDX;
            if (KF == 1) X = X - 1.0;
            return;
            
        label2300:
            X = X - 4.3 - XDX;
            if (KF == 1) X = X - 0.5;
            if (XKONDK > 0.0 && KF == 1) X = X - 1.0;
            if (NELEM == 2 || NELEM == 6 || NELEM == 10 || NELEM == 14)X=X-2.0;
            return;
            
        label2400:
            if (NELEM > 9 && NELEM < 19) X = X - 1.5;
            if (NELEM > 9) NELEM = NELEM - 10;
            if (NELEM < 5) X = X - 1.9 - XDX;
            if (NELEM > 4 && NELEM < 9) X = X - 4.0 - XDX;
            if (NELEM == 9) Y = 4.0/FACT + 3.7/FACT*FACTS + 2.0;
            if (NELEM == 9) X = X - 1.0;
            if ((NELEM == 2 || NELEM == 6) && KF == 1) X = X - 2.5;
            if ((NELEM == 3 || NELEM == 7) && KF == 1) X = X - 5.5;
            if ((NELEM == 4 || NELEM == 8) && KF == 1) X = X - 6.6;
            X = X - XKONDK;
            return;
            
        label2500:
            X = X - 3.5 - XDX;
            return;
            
        label2600:
            X = X - 3.5 - XDX;
            if (N == 6) X = X - 0.5;
            return;
            
        label2700:
            X = X - 3.0 - XDX;
            if (NELEM == 10 || NELEM == 12) X = X - 1.5;
            return;
            
        label2800:
            if (NELEM == 1) X = X - 1.5 - XDX;
            if (NELEM > 2) X = X - 1.9 - XDX;
            return;
            
        label2900:
            if (KF == 0) X = (35.8-XDINA4)/FACT-XDX;
            
        label3000:
            return;
        }   //END
        

        static void UWA123(double[] FELD1, int N, int NELEM, int NL)
        {
            //ENTRY HKLTG (FELD1,N,NELEM,NL)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //DIMENSION FELD1(21)
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20], UWA123
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /EINSTE/ KEINST,AB,NKABLF,ISAMM,NENTG,KESS,IKESS,NT,IUM
            //COMMON /ABLAUF/ XZU0,YZU0
            //COMMON /SPT/ XSPT,YSPT
            //COMMON /DINA4/ IDINA4,XDINA4
            //COMMON /KONDPL/ KKONDR,ITKW,IMKW,TKWEIN,GKWEIN,IDAMPF,XDAMPF,NN4
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2],
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS
            //COMMON /KONDPA/ TKWAUS
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            string AKARTB = "B", AA = "";
            double V = FACTS/FACT, DY = 0, YA = 0, XZU1 = 0, XZU2 = 0, XZU3 = 0, XZU4 = 0, YZU4 = 0, DX = 0,
                XZ = 0;
            //goto label(100,200,300,500,700,900,1200,2000,800,700,100,2000,900,
            // 1100,2000,500,2000,2000,2000,2000,2000,300,2000,2000),
            if(N == 1)      goto label100;
            if(N == 2)      goto label200;
            if(N == 3)      goto label300;
            if(N == 4)      goto label500;
            if(N == 5)      goto label700;
            if(N == 6)      goto label900;
            if(N == 7)      goto label1200;
            if(N == 8)      goto label2000;
            if(N == 9)      goto label800;
            if(N == 10)      goto label700;
            if(N == 11)      goto label100;
            if(N == 12)      goto label2000;
            if(N == 13)      goto label900;
            if(N == 14)      goto label1100;
            if(N == 15)      goto label2000;
            if(N == 16)      goto label500;
            if(N == 17)      goto label2000;
            if(N == 18)      goto label2000;
            if(N == 19)      goto label2000;
            if(N == 20)      goto label2000;
            if(N == 21)      goto label2000;
            if(N == 22)      goto label300;
            if(N == 23)      goto label2000;
            if(N == 24)      goto label2000;

        label100:
            NEWPEN(3);
            PLOT (X,Y,3);
            Y = 4.0/FACT + 3.7/FACT*FACTS + 2.0 + 3.0/FACT*FACTS + 2.0;
            PLOT (X,Y,2);
            NEWPEN(1);
            PLOT (X-0.75,Y,3);
            PLOT (X+0.75,Y,2);
            PLOT (X+0.75,Y-1.5,2);
            PLOT (X-0.75,Y-1.5,2);
            PLOT (X-0.75,Y,2);
            PLOT (X+2.0,Y-0.3,3);
            PLOT (X-0.5,Y-0.3,2);
            PLOT (X+0.5,Y-0.75,2);
            PLOT (X-0.5,Y-1.2,2);
            PLOT (X+2.0,Y-1.2,2);
            if (KKONDR != 0) NEWPEN(3);
            if (KKONDR != 0) PLOT (X+2.0,Y-0.3,2);
            if (KKONDR != 0) NEWPEN(1);
            if (KREUZ > 0) goto label110;
            if (ITKW > 0) UWA133(X+2.2,Y-1.1,0.2,TKWEIN,0.0,3);
            if (ITKW == 2) UWA133(X+2.2,Y-0.4,0.2,TKWAUS,0.0,3);
            if (ITKW == 1 && IMKW > 0);
            
        label1:
            UWA133(X+2.2,Y-0.4,0.2,GKWEIN,0.0,1);
            if (ITKW == 2 && IMKW > 0)
                UWA133(X+4.5,Y-0.4,0.2,GKWEIN,0.0,1);
            
        label110:
            PLOT (X-0.4,Y-1.5,3);
            PLOT (X-0.4,Y-2.3,2);
            PLOT (X+0.4,Y-2.3,2);
            PLOT (X+0.4,Y-1.5,2);
            PLOT (X,Y-2.3,3);
            DY = 2.3+0.8/FACT*FACTS;
            PLOT (X,Y-DY,2);
            if (KREUZ == 1) goto label120;
            UWA130(X,Y-DY,4,0);
            if (KREUZ == 2) goto label120;
            UWA131(X,Y-DY,FELD1[1],FELD1[2],FELD1[3],FELD1[4],4,0);
            
        label120:
            PLOT (X-0.75,Y-0.73,3);
            if (IDAMPF > 0) goto label130;
            PLOT (X-2.5,Y-0.73,2);
            PLOT (X-0.75,Y-0.77,3);
            PLOT (X-2.5,Y-0.77,5);
            CIRCL(X-2.5,Y-0.75,0.0,360.0,0.25,0.25,0.0);
            AROHD(X-2.55,Y-0.75,X-2.95,Y-0.75,0.2,0.2,16);
            PLOT (X-3.0,Y-0.73,3);
            PLOT (X-3.8,Y-0.73,2);
            PLOT (X-3.0,Y-0.77,3);
            PLOT (X-3.8,Y-0.77,5);
            AROHD(X-3.7,Y-0.75,X-3.9,Y-0.75,0.2*V,0.2*V,16);
            goto label140;
            
        label130:
            PLOT (X-2.5-XDAMPF,Y-0.73,2);
            PLOT (X-0.75,Y-0.77,3);
            PLOT (X-2.5-XDAMPF,Y-0.77,5);
            CIRCL(X-2.5-XDAMPF,Y-0.75,0.0,360.0,0.25,0.25,0.0);
            CIRCL(X-XDAMPF-2.575,Y-0.57,135.0,225.0,0.25,0.25,0.0);
            CIRCL(X-XDAMPF-2.925,Y-0.93,-45.0,45.0,0.25,0.25,0.0);
            // UWA132(X-XDAMPF-2.75,Y-0.5,0.5,FELD1[21],0.0,5,1,1,0,1,1,AB);
            NEWPEN(3);
            AROHD(X-XDAMPF-2.75,Y-1.0,X-XDAMPF-2.75,4.0/FACT+3.7/FACT*FACTS+2.75,0.2*V,0.0,16);
            NEWPEN(1);
            
        label140:
            if (NELEM == 1) goto label160;
            if (NELEM == 9) goto label150;

            AA = AKARTB;
            // UWA132(X,Y+1.0,2.2,FELD1[5],FELD1[6],4,1,0,0,1,1,AA);
            if (NELEM == 2) goto label160;

        label150:
            UWA132(X+0.4,Y-2.0,2.5,FELD1[9],FELD1[10],4,ISAMM,0,0,1,NL,ABC);

        label160:
            if (KEINST == 0) goto label2000;
            // UWA132(X,Y+2.6,2.2,FELD1[7],FELD1[8],4,1,0,0,1,1,AB);
            goto label2000;

        label200:
            PLOT (X,Y,3);
            PLOT (X-1.0*V,Y,2);
            X = X - 1.0*V;
            PLOT (X-2.0,Y,2);
            PLOT (X-2.0,Y-1.5,3);
            PLOT (X-2.0,Y+1.5,2);
            PLOT (X-3.2,Y-1.5,3);
            PLOT (X-3.2,Y+1.5,2);
            CIRCL(X-2.0,Y+1.5,52.5,127.5,1.0,1.0,0.0);
            CIRCL(X-3.2,Y-1.5,232.5,307.5,1.0,1.0,0.0);
            PLOT (X-3.2,Y,3);
            PLOT (X-4.2-XDX,Y,2);
            if (KREUZ == 1) goto label210;
            UWA130(X-4.2,Y,1,1);
            if (KREUZ == 2) goto label210;
            UWA131(X-4.2,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);
            
        label210:
            NEWPEN(3);
            PLOT (X-3.0,Y-1.4,3);
            PLOT (X-3.0,Y+1.4,2);
            PLOT (X-3.0,Y+1.0,3);
            PLOT (X-1.8,Y+1.0,2);
            YA = 5.5/FACT*FACTS;
            PLOT (X-1.8,Y+YA,2);
            KANZ = KANZ + 1;
            XE[KANZ] = X - 1.8;
            YE[KANZ] = Y + YA;
            NEWPEN(1);
            if (KREUZ == 1) goto label220;
            UWA130(X-1.8,Y+YA-1.8/FACT*FACTS,3,1);
            if (KREUZ == 2) goto label220;
            UWA131(X-1.8,Y+YA-1.8/FACT*FACTS,FELD1[5],FELD1[6],FELD1[7],FELD1[8],3,1);
            
        label220:
            if (IKESS == 0) goto label230;
            
            IKESS = 0;
            KANZ = KANZ - 1;
            UWA134(X-1.8+0.25*V,Y+5.5*V+0.25*V,0.25,0.2,ABC[8]);
            
        label230:
            if (NENTG == 0) goto label240;
            AA = ABCD[NENTG];
            // UWA132(X-1.80,Y+YA,2.2,FELD1[7],0.0,4,1,1,0,1,1,AA);
            
        label240:
            if (NELEM != 6 && NELEM != 8 && NELEM != 14 && NELEM != 16)
                goto label250;
            
            PLOT (X-3.8,Y-2.0,3);
            PLOT (X-1.5,Y-2.0,2);
            PLOT (X-1.5,Y-1.0,2);
            PLOT (X-2.0,Y-1.0,2);
            XZU1 = X - 3.8;
            if (XZU0 == 0.0) XZU0 = XZU1;
            NKABLF = 2;
            
        label250:
            if (NELEM != 10 && NELEM != 12 && NELEM != 14 && NELEM != 16)
                goto label260;

            UWA132(X-2.0,Y+0.5,0.6,FELD1[9],FELD1[10],6,ISAMM,0,0,1,NL,ABC);
            
        label260:
            if (NELEM != 4 && NELEM != 8 && NELEM != 12 && NELEM != 16)
                goto label2000;
            
            NEWPEN(1);
            if (KEINST == 1) NEWPEN(3);
            PLOT (X-2.0,Y-0.5,3);
            PLOT (X-0.5,Y-0.5,2);
            // UWA132(X-0.5,Y-0.5,2.2,FELD1[13],FELD1[12],1,KEINST,0,1,1,1,AB);
            goto label2000;

        label300:
            PLOT (X,Y,3);
            PLOT (X-0.5,Y,2);
            X = X - 0.5;
            PLOT (X-1.0,Y,2);
            if (XKONDK == 0.0) goto label350;

            PLOT (X-1.5,Y+0.4,2);
            PLOT (X-1.5,Y-0.4,2);
            PLOT (X-2.0,Y,2);
            PLOT (X-2.0,Y+0.5,3);
            PLOT (X-1.0,Y+0.5,2);
            PLOT (X-1.0,Y-0.5,2);
            PLOT (X-2.0,Y-0.5,2);
            PLOT (X-1.2,Y-0.5,3);
            if (KEINST == 1 || KEINST == 3 || KEINST == 5) goto label310;
            PLOT (X-1.2,Y-2.0,2);
            PLOT (X,Y-2.0,2);
            if (XZU0 == 0.0) XZU1 = X;
            if (XZU0 == 0.0) XZU0 = X;
            if (NKABLF == 1) XZU1 = X;
            PLOT (XZU1,Y-2.0,2);
            if (NT == 20) goto label340;
            if (KREUZ == 1) goto label330;
            if (KEINST == 4) goto label305;
            UWA130(X-0.8,Y-2.0,2,1);
            if (KREUZ == 2) goto label330;
            UWA131(X-0.8,Y-2.0,0.0,FELD1[12],FELD1[13],FELD1[14],2,1);
            goto label320;
            
        label305:
            AROHD(X-0.8,Y-2.6,X-0.8,Y-2.0,0.2*V,0.0,16);
            UWA130(X-0.8,Y-2.6,6,1);
            if (KREUZ == 2) goto label330;
            UWA131(X-0.8,Y-2.6,0.0,FELD1[12],FELD1[13],FELD1[14],6,1);
            goto label320;
            
        label310:
            PLOT (X-1.2,Y-1.5,2);
            PLOT (XZU2,Y-1.5,2);
            if (NT == 20) goto label340;
            if (KREUZ == 1) goto label330;
            if (KEINST == 5) goto label325;
            AROHD(X-0.8,Y-2.1,X-0.8,Y-1.5,0.2*V,0.0,16);
            UWA130(X-0.8,Y-2.1,6,1);
            if (KREUZ == 2) goto label330;
            UWA131(X-0.8,Y-2.1,0.0,FELD1[12],FELD1[13],FELD1[14],6,1);
            goto label320;

        label325:
            AROHD(X-0.8,Y-2.6,X-0.8,Y-1.5,0.2*V,0.0,16);
            UWA130(X-0.8,Y-2.6,6,1);
            if (KREUZ == 2) goto label330;
            UWA131(X-0.8,Y-2.6,0.0,FELD1[12],FELD1[13],FELD1[14],6,1);

        label320:
            UWA133(X-1.0,Y+0.60,0.2,FELD1[21],90.0,6);
            
        label330:
            if (NKABLF != 1) goto label340;
            NKABLF = 2;
            // UWA132(XZU1,Y-2.0,0.5,0.0,0.0,3,0,2,1,1,1,AB);
            
        label340:
            X = X - 1.0;

        label350:
            PLOT (X-1.0,Y+0.75,3);
            PLOT (X-1.0,Y-0.75,2);
            PLOT (X-2.5,Y-0.75,2);
            PLOT (X-2.5,Y+0.75,2);
            PLOT (X-1.0,Y+0.75,2);
            PLOT (X-1.0,Y,3);
            PLOT (X-1.75,Y+0.55,2);
            PLOT (X-1.75,Y-0.55,2);
            PLOT (X-2.5,Y,2);
            PLOT (X-4.3,Y,2);
            if (NELEM != 2 && NELEM != 6 && NELEM != 10 && NELEM != 14)
                PLOT (X-4.3-XDX,Y,2);
            if (KREUZ == 1) goto label360;
            UWA130(X-4.3,Y,1,1);
            if (KREUZ == 2) goto label360;
            UWA131(X-4.3,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);
            UWA133(X-2.6,Y+0.20,0.2,FELD1[20],90.0,6);

        label360:
            if (IKESS == 2) goto label380;
            if (IKESS == 1) goto label370;
            NEWPEN(3);
            PLOT (X-1.75,Y+0.75,3);
            YA = 5.3/FACT*FACTS;
            PLOT (X-1.75,Y+YA,2);
            NEWPEN(1);
            KANZ = KANZ + 1;
            XE[KANZ] = X - 1.75;
            YE[KANZ] = Y + YA;
            if (KREUZ == 1) goto label390;
            UWA130(X-1.75,Y+YA-1.8/FACT*FACTS,3,1);
            if (KREUZ == 2) goto label390;
            UWA131(X-1.75,Y+YA-1.8/FACT*FACTS,FELD1[5],FELD1[6],FELD1[7],FELD1[8],3,1);
            goto label390;

        label370:
            NEWPEN(3);
            PLOT (X-3.5,Y-2.0,3);
            PLOT (X-1.75,Y-2.0,2);
            PLOT (X-1.75,Y-0.75,2);
            NEWPEN(1);
            KANZ = KANZ + 1;
            XZU3 = X - 3.5;
            goto label390;

        label380:
            NEWPEN(3);
            PLOT (X-3.5,Y-2.5,3);
            PLOT (X-1.75,Y-2.5,2);
            PLOT (X-1.75,Y-0.75,2);
            NEWPEN(1);
            KANZ = KANZ + 1;
            XZU4 = X - 3.5;

        label390:
            if (NENTG == 0) goto label400;
            AA = ABCD[NENTG];
            // UWA132(X-1.75,Y+YA,2.2,FELD1[7],0.0,4,1,1,0,1,1,AA);

        label400:
            if (XKONDK != 0.0) goto label440;
            if (NELEM != 4 && NELEM != 8 && NELEM != 12 && NELEM != 16)
                goto label440;
            PLOT (X-1.2,Y-0.75,3);
            if (KEINST == 1 || KEINST == 3 || KEINST == 5) goto label410;
            PLOT (X-1.2,Y-2.0,2);
            PLOT (X,Y-2.0,2);
            if (XZU0 == 0.0) XZU1 = X;
            if (XZU0 == 0.0) XZU0 = X;
            if (NKABLF == 1) XZU1 = X;
            PLOT (XZU1,Y-2.0,2);
            if (NT == 20) goto label440;
            if (KREUZ == 1) goto label430;
            if (KEINST == 4) goto label405;
            UWA130(X-0.8,Y-2.0,2,1);
            if (KREUZ == 2) goto label430;
            UWA131(X-0.8,Y-2.0,0.0,FELD1[12],FELD1[13],FELD1[14],2,1);
            goto label430;
            
        label405:
            AROHD(X-0.8,Y-2.6,X-0.8,Y-2.0,0.2*V,0.0,16);
            UWA130(X-0.8,Y-2.6,6,1);
            if (KREUZ == 2) goto label430;
            UWA131(X-0.8,Y-2.6,0.0,FELD1[12],FELD1[13],FELD1[14],6,1);
            goto label430;

        label410:
            PLOT (X-1.2,Y-1.5,2);
            PLOT (XZU2,Y-1.5,2);
            if (KREUZ == 1) goto label430;
            if (KEINST == 5) goto label420;
            AROHD(X-0.8,Y-2.1,X-0.8,Y-1.5,0.2*V,0.0,16);
            UWA130(X-0.8,Y-2.1,6,1);
            if (KREUZ == 2) goto label430;
            UWA131(X-0.8,Y-2.1,0.0,FELD1[12],FELD1[13],FELD1[14],6,1);
            goto label430;
            
        label420:
            AROHD(X-0.8,Y-2.6,X-0.8,Y-1.5,0.2*V,0.0,16);
            UWA130(X-0.8,Y-2.6,6,1);
            if (KREUZ == 2) goto label430;
            UWA131(X-0.8,Y-2.6,0.0,FELD1[12],FELD1[13],FELD1[14],6,1);
            
        label430:
            if (NKABLF != 1) goto label440;
            NKABLF = 2;
            // UWA132(XZU1,Y-2.0,0.5,0.0,0.0,3,0,2,1,1,1,AB);
            
        label440:
            if (NELEM != 2 && NELEM != 6 && NELEM != 10 && NELEM != 14)
                goto label460;

            PLOT (X-1.0,Y-0.5,3);
            PLOT (X-0.5,Y-0.5,2);
            PLOT (X-0.5,Y-1.5,2);
            PLOT (X-1.0,Y-1.5,2);
            CIRCL(X-1.0,Y-1.5,0.0,360.0,0.25,0.25,0.0);
            AROHD(X-1.05,Y-1.5,X-1.45,Y-1.5,0.2,0.3,16);
            PLOT (X-1.5,Y-1.5,3);
            PLOT (X-5.3,Y-1.5,2);
            if (IUM == 0) PLOT (X-5.3,Y,2);
            if (IUM == 1) XZU4 = X - 5.3;
            if (IUM == 1) YZU4 = Y - 1.5;
            if (KREUZ == 1) goto label450;
            AROHD(X-1.9,Y-2.1,X-1.9,Y-1.5,0.2*V,0.0,16);
            UWA130(X-1.9,Y-2.1,6,1);
            if (KREUZ == 2) goto label450;
            UWA131(X-1.9,Y-2.1,0.0,FELD1[12],FELD1[13],FELD1[14],6,1);
            
        label450:
            PLOT (X-4.3,Y,3);
            if (IUM == 1) PLOT (X-6.3-XDX,Y,2);
            if (IUM == 1) goto label460;
            PLOT (X-6.3-XDX,Y,2);
            if (KREUZ == 1) goto label460;
            UWA130(X-6.3,Y,1,1);
            if (KREUZ == 2) goto label460;
            UWA131(X-6.3,Y,FELD1[16],FELD1[17],FELD1[18],FELD1[19],1,1);
            
        label460:
            if (NELEM != 6 && NELEM != 8 && NELEM != 14 && NELEM != 16)
                goto label480;
            
            if (KEINST > 1) goto label470;
            PLOT (X-4.3,Y-2.0,3);
            PLOT (X-2.3,Y-2.0,2);
            PLOT (X-2.3,Y-0.75,2);
            XZU1 = X - 4.3;
            if (XZU0 == 0.0) XZU0 = X - 4.3;
            goto label480;
            
        label470:
            PLOT (X-4.3,Y-1.5,3);
            PLOT (X-2.3,Y-1.5,2);
            PLOT (X-2.3,Y-0.75,2);
            XZU2 = X - 4.3;
            
        label480:
            if (NELEM != 10 && NELEM != 12 && NELEM != 14 && NELEM != 16)
                goto label2000;

            UWA132(X-1.05,Y+0.75,2.2,FELD1[9],FELD1[10],1,ISAMM,0,0,1,NL,ABC);
            goto label2000;

        label500:
            int MIN = 0;
            if (NELEM > 9) MIN = 1;
            if (MIN == 1) NELEM = NELEM - 10;
            if (NELEM == 9) goto label600;
            PLOT (X,Y,3);
            if (NELEM == 2 || NELEM == 6) PLOT (X-2.5,Y,2);
            if (NELEM == 2 || NELEM == 6) X = X - 2.5;
            if (NELEM == 3 || NELEM == 7) PLOT (X-5.5,Y,2);
            if (NELEM == 3 || NELEM == 7) X = X - 5.5;
            if (NELEM == 4 || NELEM == 8) PLOT (X-6.6,Y,2);
            if (NELEM == 4 || NELEM == 8) X = X - 6.6;
            PLOT (X-0.4,Y,2);
            CIRCL(X-0.4,Y,0.0,360.0,0.3,0.3,0.0);
            AROHD(X-0.5,Y,X-0.9,Y,0.3,0.4,16);
            if (IKESS == 0) goto label510;
            IKESS = 0;
            PLOT (X-0.65,Y+0.3,3);
            PLOT (X-0.65,Y+1.3,2);
            PLOT (X-0.75,Y+1.3,3);
            PLOT (X-0.75,Y+0.3,2);
            
        label510:
            PLOT (X-1.0,Y,3);
            if (NELEM > 4) goto label540;
            if (MIN == 0) goto label520;
            PLOT (X-1.9,Y,2);
            // UWA132(X-1.4,Y,2.2,FELD1[21],0.0,2,0,1,1,1,1,AB);
            PLOT (X-1.9,Y,3);
            X = X - 1.5;
            
        label520:
            PLOT (X-1.9-XDX-XKONDK,Y,2);
            if (KREUZ == 1) goto label530;
            UWA130(X-1.9,Y,1,1);
            if (KREUZ == 2) goto label530;
            UWA131(X-1.9,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);
            
        label530:
            if (MIN == 1) X = X + 1.5;
            if (MIN == 1) NELEM = NELEM + 10;
            if (NELEM == 1 || NELEM == 11) goto label2000;
            goto label580;
            
        label540:
            DX = 0.0;
            if (MIN == 0) goto label550;
            PLOT (X-3.5,Y,2);
            // UWA132(X-3.5,Y,2.2,FELD1[21],0.0,2,0,1,1,1,1,AB);
            PLOT (X-3.5,Y,3);
            DX = 1.5;
            
        label550:
            PLOT (X-4.0-DX-XDX,Y,2);
            if (KREUZ == 1) goto label560;
            UWA130(X-4.0-DX,Y,1,1);
            if (KREUZ == 2) goto label560;
            UWA131(X-4.0-DX,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);
            
        label560:
            PLOT (X-0.9,Y+0.2,3);
            PLOT (X-1.4,Y+0.7,2);
            UWA132(X-1.4,Y+0.7,3.5,0.0,0.0,2,0,2,1,NL,NL,ABC);
            if (KREUZ == 1) goto label570;
            UWA130(X-1.4,Y+0.7+1.8/FACT*FACTS,3,1);
            if (KREUZ == 2) goto label570;
            UWA131(X-1.4,Y+0.7+1.8/FACT*FACTS,FELD1[16],FELD1[17],FELD1[18],FELD1[19],3,1);
            
        label570:
            if (MIN == 1) NELEM = NELEM + 10;
            if (NELEM == 5 || NELEM == 15) goto label2000;
            
        label580:
            YSPT = Y + 7.0/FACT*FACTS;
            XSPT = X + 0.3;
            PLOT (X-0.65,Y+0.3,3);
            PLOT (X-0.65,YSPT,2);
            PLOT (X-0.75,YSPT,3);
            PLOT (X-0.75,Y+0.3,2);
            if (KREUZ > 0) goto label590;
            UWA133(X-0.6+0.3/FACT*FACTS,Y+1.0,0.2,FELD1[20],90.0,4);
            
        label590:
            PLOT (X-1.7,YSPT,3);
            PLOT (X+0.3,YSPT,2);
            PLOT (X-0.2,YSPT+1.5,2);
            PLOT (X-1.2,YSPT+1.5,2);
            PLOT (X-1.7,YSPT,2);
            NEWPEN(3);
            UWA132(X-0.2,YSPT+1.5,0.7,0.0,0.0,7,1,2,1,8,8,ABC);
            YA = 1.5 + 3.8/FACT*FACTS;
            if (KREUZ == 1) goto label2000;
            UWA130(X-0.2+0.7/FACT*FACTS,YSPT+YA-1.7/FACT*FACTS,3,1);
            if (KREUZ == 2) goto label2000;
            UWA131(X-0.2+0.7/FACT*FACTS,YSPT+YA-1.7/FACT*FACTS,FELD1[5],FELD1[6],FELD1[7],FELD1[8],3,1);
            goto label2000;
            
        label600:
            PLOT (X,Y,3);
            PLOT (X,Y-0.5,2);
            CIRCL(X+0.3,Y-0.8,0.0,360.0,0.3,0.3,0.0);
            AROHD(X,Y-0.6,X,Y-1.0,0.3,0.3,16);
            if (KREUZ == 1) goto label610;
            UWA130(X,Y-1.6,4,0);
            if (KREUZ == 2) goto label610;
            UWA131(X,Y-1.6,FELD1[1],FELD1[2],FELD1[3],FELD1[4],4,0);
            
        label610:
            if (MIN == 0) goto label620;
            NELEM = NELEM + 10;
            PLOT (X,Y-1.3,3);
            PLOT (X-1.0,Y-1.3,2);
            PLOT (X-1.0,Y+0.8*V+0.1,2);
            AROHD(X-1.0,Y+0.8*V+0.1,X-0.4,Y+0.8*V+0.1,0.2*V,0.0,16);
            if (KREUZ > 0) goto label620;
            UWA133(X-1.1,Y-1.2,XH,FELD1[21],90.0,1);
            
        label620:
            PLOT (X,Y-1.1,3);
            Y = 4.0/FACT + 3.7/FACT*FACTS + 2.0;
            PLOT (X,Y,2);
            PLOT (X-1.0-XKONDK,Y,2);
            goto label2000;

        label700:
            PLOT (X,Y,3);
            PLOT (X-1.0,Y,2);
            PLOT (X-1.75,Y+0.55,2);
            PLOT (X-1.75,Y-0.55,2);
            PLOT (X-2.5,Y,2);
            PLOT (X-3.5-XDX,Y,2);
            PLOT (X-2.5,Y+0.75,3);
            PLOT (X-2.5,Y-0.75,2);
            PLOT (X-1.0,Y-0.75,2);
            PLOT (X-1.0,Y+0.75,2);
            PLOT (X-2.5,Y+0.75,2);
            if (KREUZ == 1) goto label710;
            UWA130(X-3.5,Y,1,1);
            if (KREUZ == 2) goto label710;
            UWA131(X-3.5,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);
            
        label710:
            if (N == 10) goto label730;
            
            if (IDAMPF != 0 && NN4 == 1) goto label720;
            UWA132(X-1.75,Y+0.75,2.0,FELD1[9],FELD1[10],1,ISAMM,0,0,1,NL,ABC);
            
        label720: 
            PLOT (X-1.2,Y-0.75,3);
            PLOT (X-1.2,Y-2.0,2);
            // UWA132(X-1.2,Y-2.0,1.0,0.0,0.0,3,0,2,1,1,1,AB);
            if (KREUZ == 1) goto label2000;
            UWA130(X-0.5,Y-2.0,2,1);
            if (KREUZ == 2) goto label2000;
            UWA131(X-0.5,Y-2.0,0.0,FELD1[12],FELD1[13],FELD1[14],2,1);
            goto label2000;
            
        label730:
            if (IVERD[1] == 1) goto label740;
            AROHD(X-1.75,Y+0.75+2.2*V,X-1.75,Y+0.75,0.2*V,0.0,16);
            if (KREUZ > 0) goto label2000;
            UWA133(X-1.85,Y+1.0,0.2,FELD1[15],90.0,5);
            goto label2000;
            
        label740:
            PLOT (X-1.65,Y+2.75,3);
            PLOT (X-1.65,Y+0.75,2);
            PLOT (X-1.65,Y-0.75,3);
            PLOT (X-1.65,Y-2.75,2);
            PLOT (X-1.85,Y-2.75,3);
            PLOT (X-1.85,Y-0.75,2);
            PLOT (X-1.85,Y+0.75,3);
            PLOT (X-1.85,Y+2.75,2);
            NEWPEN(3);
            PLOT (X-1.75,Y+2.75,3);
            PLOT (X-1.75,Y+0.75,2);
            PLOT (X-1.75,Y-0.75,3);
            PLOT (X-1.75,Y-2.75,2);
            AROHD(X-1.75,Y-2.75,X-1.75,Y-3.15,0.4,0.0,16);
            goto label2000;

        label800:
            XZ = 0.0;
            if (NELEM == 10 || NELEM == 12) XZ = 1.5;
            PLOT (X,Y,3);
            PLOT (X-3.0-XZ-XDX,Y,2);
            if (NELEM == 1) goto label2000;
            if (KREUZ == 1) goto label810;
            UWA130(X-3.0-XZ,Y,1,1);
            if (KREUZ == 2) goto label810;
            UWA131(X-3.0-XZ,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);
            
        label810:
            if (IUM == 1) goto label850;
            if (NELEM == 3) goto label830;
            if (NELEM < 9) goto label820;
            
            UWA132(X-1.5,Y,2.2,FELD1[9],FELD1[10],1,0,0,0,1,NL,ABC);
            if (NELEM == 9) goto label2000;
            if (NELEM == 11) goto label830;
            
        label820:
            // UWA132(X-1.5-XZ,Y,2.2,FELD1[13],0.0,2,0,1,1,1,1,AB);
            if (NELEM != 4 && NELEM != 12) goto label2000;
            
        label830:
            PLOT (X-3.0-XZ,Y-2.0,3);
            if (IKESS != 1) goto label840;
            IKESS = 0;
            PLOT (X-2.25,Y-2.0,2);
            CIRCL(X-1.75,Y-2.0,0.0,360.0,0.25,0.25,0.0);
            AROHD(X-2.2,Y-2.0,X-1.8,Y-2.0,0.2,0.2,16);
            PLOT (X-1.75,Y-2.0,3);
            
        label840:
            PLOT (X-1.5,Y-2.0,2);
            AROHD(X-1.5,Y-2.0,X-1.5,Y,0.2*V,0.0,16);
            XZU1 = X-3.0-XZ;
            goto label2000;
            
        label850:
            PLOT (X-1.5,Y,3);
            PLOT (X-1.5,YZU4,2);
            PLOT (XZU4,YZU4,2);
            IUM = 0;
            goto label2000;

        label900:
            PLOT (X,Y,3);
            PLOT (X-1.0,Y,2);
            PLOT (X-1.5,Y+0.4,2);
            PLOT (X-1.5,Y-0.4,2);
            PLOT (X-2.0,Y,2);
            DX = 3.5;
            if (N == 6) DX = 4.0;
            PLOT (X-DX-XDX,Y,2);
            PLOT (X-2.0,Y+0.5,3);
            PLOT (X-2.0,Y-0.5,2);
            PLOT (X-1.0,Y-0.5,2);
            PLOT (X-1.0,Y+0.5,2);
            PLOT (X-2.0,Y+0.5,2);
            if (KREUZ == 1) goto label910;
            UWA130(X-DX,Y,1,1);
            if (KREUZ == 2) goto label910;
            UWA131(X-DX,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);
            UWA133(X-2.2,Y+0.2,0.2,FELD1[20],90.0,6);

        label910:
            if (N == 6) goto label1000;
            PLOT (X-1.2,Y-0.5,3);
            PLOT (X-1.2,Y-2.0,2);
            PLOT (X,Y-2.0,2);
            if (XZU0 == 0.0) XZU1 = X;
            if (XZU0 == 0.0) XZU0 = X;
            if (NKABLF == 1) XZU1 = X;
            PLOT (XZU1,Y-2.0,2);
            if (KREUZ == 1) goto label930;
            if (KEINST == 2) goto label920;
            UWA130(X-0.5,Y-2.0,2,1);
            if (KREUZ == 2) goto label930;
            UWA131(X-0.5,Y-2.0,0.0,FELD1[12],FELD1[13],FELD1[14],2,1);
            goto label930;
            
        label920:
            PLOT (X-0.5,Y-2.1,3);
            PLOT (X-0.5,Y-1.6,2);
            AROHD(X-0.5,Y-1.6,X-1.2,Y-1.6,0.2*V,0.0,16);
            UWA130(X-0.5,Y-2.1,6,1);
            if (KREUZ == 2) goto label930;
            UWA131(X-0.5,Y-2.1,0.0,FELD1[12],FELD1[13],FELD1[14],6,1);
            
        label930:
            if (NKABLF != 1) goto label940;
            NKABLF = 2;
            // UWA132(XZU1,Y-2.0,0.5,0.0,0.0,3,0,2,1,1,1,AB);

        label940:
            if (NELEM != 7 && NELEM != 15) goto label960;
            if (KEINST > 1) goto label950;
            PLOT (X-3.0-XDX,Y-2.0,3);
            PLOT (X-1.8,Y-2.0,2);
            PLOT (X-1.8,Y-0.5,2);
            XZU1 = X - 3.0 - XDX;
            goto label960;
            
        label950:
            PLOT (X-3.5,Y-1.5,3);
            PLOT (X-1.8,Y-1.5,2);
            PLOT (X-1.8,Y-0.5,2);
            XZU2 = X - 3.5;
            XZU1 = X - 1.2;
            
        label960:
            if (NELEM != 11 && NELEM != 15) goto label2000;
            
            UWA132(X-1.5,Y+0.5,2.2,FELD1[9],FELD1[10],1,ISAMM,0,0,1,NL,ABC);
            goto label2000;

        label1000:
            NEWPEN(3);
            PLOT (X-1.5,Y+0.5,3);
            YA = 5.3/FACT*FACTS;
            PLOT (X-1.5,Y+YA,2);
            NEWPEN(1);
            XE[KANZ-IKESS] = X - 1.5;
            YE[KANZ-IKESS] = Y + YA;
            if (KREUZ == 1) goto label1010;
            UWA130(X-1.5,Y+YA-1.8/FACT*FACTS,3,1);
            if (KREUZ == 2) goto label1010;
            UWA131(X-1.5,Y+YA-1.8/FACT*FACTS,FELD1[5],FELD1[6],FELD1[7],FELD1[8],3,1);

        label1010:
            NEWPEN(3);
            PLOT (X-1.5,Y-0.5,3);
            if (IKESS == 1) goto label1020;
            if (KEINST == 1) goto label1020;
            PLOT (X-1.5,Y-2.0,2);
            PLOT (XZU3,Y-2.0,2);
            if (KREUZ == 1) goto label1030;
            AROHD(X-0.5,Y-2.6,X-0.5,Y-2.0,0.2*V,0.0,16);
            UWA130(X-0.5,Y-2.6,6,1);
            if (KREUZ == 2) goto label1030;
            UWA131(X-.5,Y-2.6,FELD1[11],FELD1[12],FELD1[13],FELD1[14],6,1);
            goto label1030;

        label1020:
            PLOT (X-1.5,Y-2.5,2);
            PLOT (XZU4,Y-2.5,2);
            if (KREUZ == 1) goto label1030;
            UWA130(X-0.5,Y-2.5,2,1);
            if (KREUZ == 2) goto label1030;
            UWA131(X-.5,Y-2.5,FELD1[11],FELD1[12],FELD1[13],FELD1[14],2,1);

        label1030:
            if (NELEM != 12) goto label2000;

            UWA132(X-1.1,Y+0.5,2.2,FELD1[9],FELD1[10],1,ISAMM,0,0,1,NL,ABC);
            goto label2000;

        label1100:
            if (NELEM == 2) goto label2000;
            if (NELEM == 3) goto label1110;
            if (NELEM == 4) goto label1120;
            PLOT (X,Y,3);
            PLOT (X-1.5-XDX,Y,2);
            if (KREUZ == 1) goto label2000;
            UWA130(X-1.5,Y,1,1);
            if (KREUZ == 2) goto label2000;
            UWA131(X-1.5,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);
            goto label2000;

        label1110:
            NELEM = 9;
            goto label500;
            
        label1120:
            NELEM = 1;
            goto label500;

        label1200:
            Y = 4.0/FACT + 3.7/FACT*FACTS + 2.0;
            X = (37.0-XDINA4)/FACT;
            CIRCL(X,Y,0.0,360.0,0.3,0.3,0.0);
            PLOT (X-0.6,Y,3);
            PLOT ((35.8-XDINA4)/FACT-XDX,Y,2);
            if (KREUZ == 1) goto label2000;
            UWA130(X-1.2,Y,1,1);
            if (KREUZ == 2) goto label2000;
            UWA131(X-1.2,Y,FELD1[1],FELD1[2],FELD1[3],FELD1[4],1,1);

        label2000:
            return;
        }   //END

        
        static void UWA124()
        {
            //ENTRY HEIZVW
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /PRINT/ IWR, TX0, TX13, TX14, TX15, TX16, TX17, TX
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /DINA4/ IDINA4,XDINA4
            //COMMON /PLHEIZ/ KHEIZ
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            double YZU = 0, YZUS = 0, Y06 = 0;
            string A = "";
            double V = FACTS / FACT, X06 = 0, YSAM = 0, XZUS = 0, XZU = 0, A10 = 0, A11 = 0, A12 = 0, A13 = 0, A14 = 0;
                
            int L = 0, LL = 0, L1 = IHENDE + 1, M = 0, N = 0;
            for(L = L1; L <= INENDE; L++) //DO 50 L=L1,INENDE
            {
                if (LTYP[L] != 6) continue;
                K2 = NN2[L];
                I = L;
                
            label10:
                I = I + 1;
                if (I > INENDE) goto label100;
                if (NTYP[I] == 17) goto label10;
                if (NN1[I] == 0) goto label10;
                K1 = NN1[I];
                if (K1 != K2) goto label10;
                UWA048(I);
                K2 = NN2[I];
                if (LTYP[I] != 2 && LTYP[I] != 21) goto label20;
                II = N1[I];
                if (II < 35 || II > 39) continue;   // goto label50;
                A1 = 0.0;
                JJ = N2[I];
                if (JJ == 0) A1 = GLTG[II] + SUGL;
                GLTG[K2] = GLTG[K1] + A1;
                goto label10;
                
            label20:
                if (NTYP[I] != 8) goto label40;
                A1 = 0.0;
                JJ = N2[I];
                if (JJ == 0) goto label30;
                J = I;
                
            label21:
                J = J + 1;
                if (J > INENDE) goto label23;
                if (NTYP[J] != 22) goto label21;
                if (N1[J] != JJ) goto label21;
                IZ1 = NN1[J];
                IZ2 = NN2[J];
                if (ELTG[IZ1]-ELTG[IZ2] >= 0.05) goto label23;
                GLTG[JJ] = 0.0;
                ELTG[IZ1] = ELTG[IZ2];
                if (NTYP[J-1] == 2 || NTYP[J-1] == 21) goto label23;
                
            label22:
                J = J - 1;
                if (J <= I) goto label23;
                if (NN2[J] != IZ1) goto label22;
                if (NTYP[J] == 2 || NTYP[J] == 21) goto label23;
                IZ1 = NN1[J];
                IZ2 = NN2[J];
                if (ELTG[IZ1]-ELTG[IZ2] >= 0.05) goto label23;
                ELTG[IZ1] = ELTG[IZ2];
                goto label22;
                
            label23:
                A1 = GLTG[JJ];
                
            label30:
                GLTG[K2] = GLTG[K1] + SUGL - A1;
                goto label10;
                
            label40:
                if (NTYP[I] != 22 && LTYP[I] != 22) goto label10;
                IZ3 = I;
                GLTG[K2] = GLTG[K1] + SUGL;
                II = N1[I];
                if (II == 0) goto label10;
                GLTG[K2] = GLTG[K2] + GLTG[II];
                goto label10;
            }   //50 CONTINUE
            return;

        label100:
            I = L;
            J = IZ3;
            A2 = EWAUS[I]*TX1;
            K2 = NN2[I];
            A3 = GLTG[K2]*TX3;
            A4 = (TWAUS[I]-273.15)*TX0+TX5;
            
            if (A3 < 0.001) //THEN
            {
                A2 =0.0;
                A3 =0.0;
                A4 =0.0;
            }   ////ENDIF
            X = 40.5/FACT - XDINA4/FACT;
            IX1 = 0;
            
        label110:
            L = L + 1;
            if (LTYP[L] == 2 || LTYP[L] == 21) goto label120;
            if (NTYP[L] != 8) goto label110;
            JJ = N2[L];
            if (JJ == 0) goto label110;
            if (GLTG[JJ] <= 0.0) goto label110;
            IX1 = IX1 + 1;
            goto label110;
            
        label120:
            Y = 4.0/FACT + 8.7*V + 3.0;
            if (LHEIZ != 1 && LHEIZ != 2) goto label130;
            Y = 4.0/FACT + 3.7*V + 2.0 + 5.0*V - 1.75 - 1.1*IX1*V - 1.1*V;
            
        label130:
            NEWPEN(1);
            PLOT (X,Y,3);
            X06 = X - 4.5*V;
            PLOT (X06,Y,2);
            PLOT (X06,Y+1.1*V,2);
            if (KREUZ == 1) goto label140;
            UWA130(X06+2.5*V,Y,1,0);
            if (KREUZ == 2) goto label140;
            UWA131(X06+2.5*V,Y,0.0,A2,A3,A4,1,0);
            
        label140:
            X = X - 4.5*V;
            Y = Y + 1.1*V;
            YSAM = 0.0;
            XZUS = 0.0;
            XZU = 0.0;
            Z1 = 0.0;
            
        label150:
            I = I + 1;
            if (I > J) goto label700;
            if (NTYP[I] == 8) goto label400;
            if (NTYP[I] == 22 || LTYP[I] == 22) goto label600;
            if (LTYP[I] != 2 && LTYP[I] != 21) goto label150;

            II = N1[I];
            PLOT (X,Y,3);
            PLOT (X,Y+1.0,2);
            if (DTK[I] == 0.0) goto label160;
            
            PLOT (X+0.3,Y+1.4,2);
            PLOT (X-0.3,Y+1.4,2);
            PLOT (X,Y+1.8,2);
            PLOT (X+0.4,Y+1.8,3);
            PLOT (X+0.4,Y+1.0,2);
            PLOT (X-0.4,Y+1.0,2);
            PLOT (X-0.4,Y+1.8,2);
            PLOT (X,Y+1.8,3);
            Y = Y + 0.8;
            
        label160:
            PLOT (X+0.5,Y+1.75,2);
            PLOT (X-0.5,Y+1.75,2);
            PLOT (X,Y+2.5,2);
            PLOT (X,Y+2.5+1.0*V,2);
            PLOT (X+0.75,Y+1.0,3);
            PLOT (X+0.75,Y+2.5,2);
            PLOT (X-0.75,Y+2.5,2);
            PLOT (X-0.75,Y+1.0,2);
            PLOT (X+0.75,Y+1.0,2);
            if (KREUZ == 1) goto label210;
            UWA130(X,Y+2.5+1.0*V,4,0);
            if (KREUZ == 2) goto label200;
            K1 = NN1[I];
            K2 = NN2[I];
            A2 = ELTG[K2]*TX1;
            A3 = GLTG[K1]*TX3;
            Z1 = Z1 + A3*(A2-ELTG[K1]*TX1);
            A4 = (VISUM(PW[I],ELTG[K2],03)-273.15)*TX0+TX5;
            if (A3 < 0.001) //THEN
            {
                A2 =0.0;
                A3 =0.0;
                A4 =0.0;
            }   //ENDIF
            UWA131(X,Y+2.5+1.0*V,0.0,A2,A3,A4,4,0);
            
            A5 = PLTG[II]-DPLTG[II];
            A6 = ELTG[II]-DELTG[II];
            A7 = GLTG[II]*TX3;
            A8 = 0.0;
            if (A5 > 0.0&& A6 > 0.0) A8 = VISUM(A5,A6,03);
            if (A8 > 0.0) A8 = (A8-273.15)*TX0+TX5;
            A5 = A5*TX2;
            A6 = A6*TX1;
            if (A7 < 0.001) //THEN
            {
                A5 =0.0;
                A6 =0.0;
                A7 =0.0;
                A8 =0.0;
            }//ENDIF
            
        label200:
            UWA130(X-0.75-1.8*V,Y+1.75,1,0);
            if (KREUZ == 2) goto label210;
            UWA131(X-0.75-1.8*V,Y+1.75,A5,A6,A7,A8,1,0);
            
        label210:
            NEWPEN(3);
            PLOT (X-0.75,Y+1.75,3);
            if (LHEIZ != 1 && LHEIZ != 2) goto label212;
            if (LHEIZ == 1 && II > 35) goto label212;
            if (LHEIZ == 2 && II > 36) goto label212;
            if (II == 36) goto label211;
            PLOT (X35,Y+1.75,2);
            PLOT (X35,Y35,2);
            goto label220;
            
        label211:
            PLOT (X36,Y+1.75,2);
            PLOT (X36,Y36,2);
            Y36 = Y + 1.75;
            goto label220;
            
        label212:
            PLOT (X-4.4*V,Y+1.75,2);
            NEWPEN(1);
            if (NRABC[II] > 0) goto label214;
            
            for(LL = 4; LL <= 26; LL++) //DO 213 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[II] = LL;
                UWA114(II);
                goto label214;
            }   //213 CONTINUE
            
        label214:
            LL = NRABC[II];
            A = ABCD[LL];
            UWA134(X-4.4*V,Y+1.75,0.25,0.2,A);
            
        label220:
            NEWPEN(1);
            if (DTK[I] == 0.0) goto label222;
            Y = Y - 0.8;
            PLOT (X-0.4,Y+1.2,3);
            PLOT (X-0.6,Y+1.2,2);
            PLOT (X-0.6,Y+1.0,2);
            
        label222:
            JJ = N2[I];
            A10 = ELTG[JJ]*TX1;
            A11 = GLTG[JJ]*TX3;
            A12 = 0.0;
            if (PLTG[JJ] > 0.0&& ELTG[JJ] > 0.0)
                A12 = (VISUM(PLTG[JJ],ELTG[JJ],23)-273.15)*TX0+TX5;
            
            if (A11 < 0.001) //THEN
            {
                A10 =0.0;
                A11 =0.0;
                A12 =0.0;
            }   //ENDIF
            if (II != 35) goto label250;
            YSAM = 0.0;
            if (LHEIZ != 1 && LHEIZ != 2) goto label240;

            PLOT (X-0.6,Y+1.0,3);
            YT = 4.0/FACT + 3.7/FACT*FACTS + 2.0;
            PLOT (X-0.6,YT,2);
            PLOT (X-3.0,YT,2);
            XT = X - 0.6;
            if (KREUZ == 1) goto label230;
            UWA130(XT,YT+0.7,4,0);
            if (KREUZ == 2) goto label230;
            UWA131(XT,YT+0.7,0.0,A10,A11,A12,4,0);
            
        label230:
            XT = X - 3.0;
            goto label310;

        label240:
            LL = NRABC[JJ];
            AB = ABCD[LL];
            // UWA132(X-0.6,Y+1.0,1.0,0.0,0.0,1,0,2,1,1,1,AB);
            if (KREUZ == 1) goto label310;
            UWA130(X-0.6,Y+1.0-0.5*V,3,0);
            if (KREUZ == 2) goto label310;
            UWA131(X-0.6,Y+1.0-0.5*V,0.0,A10,A11,A12,3,0);
            goto label310;

        label250:
            PLOT (X-0.6,Y+1.0,3);
            IX2 = I;
            
        label260:
            IX2 = IX2 - 1;
            if (NTYP[IX2] == 6 || IX2 < IHENDE) goto label310;
            if (LTYP[IX2] != 2) goto label260;
            IX3 = NBLTG[IX2,1];
            if (IX3 != JJ) goto label270;
            PLOT (X-0.6,Y-1.0*V-YSAM,2);
            YSAM = 0.0;
            goto label300;
            
        label270:
            LL = NRABC[JJ];
            if (LL > 0) goto label290;
            for(LL = 4; LL <= 26; LL++) //DO 280 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[JJ] = LL;
                UWA114(JJ);
                goto label290;
            }   //280 CONTINUE
            
        label290:
            A = ABCD[LL];
            //UWA132(X-0.6,Y+1.0,0.8,0.0,0.0,1,0,2,1,1,1,A);
            YSAM = 0.0;
            
        label300:
            if (KREUZ == 1) goto label310;
            UWA130(X-0.6,Y+1.0-0.5*V,3,0);
            if (KREUZ == 2) goto label310;
            UWA131(X-0.6,Y+1.0-0.5*V,0.0,A10,A11,A12,3,0);
            
        label310:
            if (DTK[I] != 0.0) Y = Y + 0.8;
            if (NBLTG[I,1] == 0 && NBLTG[I,2] == 0) goto label370;

            N = 0;
            SUGL = 0.0;
            SUQL = 0.0;
            
            for(M = 1; M <= 8; M++) //DO 340 M=1,8
            {
                II = NBLTG[I,M];
                if (II == 0) continue;
                if (II > 134 && II < 140) continue;
                SUGL = SUGL + GLTG[II];
                SUQL = SUQL + GLTG[II]*ELTG[II];
                N = N + 1;
                if (N == 1) A1 = VISUM(PLTG[II],A2,-21)*TX1;
                if (NRABC[II] != 0) goto label330;
                if (PLTG[II] == PST905 || PLTG[II] == PST907) NRABC[II] = 3;
                if (PLTG[II] == PST905 || PLTG[II] == PST907) goto label330;
                if (II == 100) NRABC[100] = 2;
                if (II == 100) goto label330;
                
                for(LL = 4; LL <= 26; LL++) //DO 320 LL=4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[II] = LL;
                    UWA114(II);
                    ABC[N] = ABCD[LL];
                    goto label340;
                }   //320 CONTINUE
                goto label340;
                
            label330:
                LL = NRABC[II];
                ABC[N] = ABCD[LL];

            label340:
                ;
            }   //340 CONTINUE
            if (N == 0) goto label370;
            A13 = SUGL*TX3;
            A14 = 0.0;
            if (SUGL > 0.0) A14 = SUQL/SUGL*TX1;
            IX2 = 0;
            if (A14 > A1) IX2 = 1;
            UWA132(X-0.75,Y+1.2,2.2,A13,A14,3,IX2,0,0,1,N,ABC);
            
        label370:
            A14 = DTS[I]*TX0;
            if (NTYP[I] == 20) A14 = 0.0;
            if (KREUZ > 0) goto label380;
            UWA133(X+0.1,Y+2.6,0.2,A14,0.0,6);
            if (DTK[I] == 0.0) goto label380;
            A14 = DTK[I]*TX0;
            if (NTYP[I] == 20) A14 = 0.0;
            UWA133(X+0.1,Y-0.2,0.2,A14,0.0,6);
            
        label380:
            Y = Y + 2.5 + 1.0*V;
            goto label150;

        label400:
            JJ = N2[I];
            if (JJ == 0) goto label460;
            if (GLTG[JJ] < 0.001) goto label150;
            N = I;
            
        label405:
            N = N + 1;
            if (N > J) goto label410;
            if (NTYP[N] != 22) goto label405;
            II = N1[N];
            if (II == 0) goto label405;
            if (II != JJ) goto label405;

            PLOT (X,Y,3);
            PLOT (X,Y+1.1*V,2);
            PLOT (X,Y+0.6*V,3);
            PLOT (X+4.5*V,Y+0.6*V,2);
            XZU = X + 4.5*V;
            YZU = Y + 0.6*V;
            Y = Y + 1.1*V;
            YSAM = YSAM + 1.1*V;
            if (KREUZ == 1) goto label150;
            UWA130(X+2.5*V,YZU,1,0);
            if (KREUZ == 2) goto label150;
            A2 = EWAUS[I]*TX1;
            A3 = GLTG[JJ]*TX3;
            A4 = (TWAUS[I]-273.15)*TX0+TX5;
            UWA131(X+2.5*V,YZU,0.0,A2,A3,A4,1,0);
            goto label150;

        label410:
            if (NTYP[I+2] != 8) goto label420;
            II = NBLTG[I+2,1];
            if (II != JJ) goto label420;
            
            PLOT (X,Y,3);
            PLOT (X,Y+1.1*V,2);
            PLOT (X,Y+0.6*V,3);
            PLOT (X+4.3*V,Y+0.6*V,2);
            XZUS = X + 4.3*V;
            YZUS = Y + 0.6*V;
            Y = Y + 1.1*V;
            YSAM = YSAM + 1.1*V;
            if (KREUZ == 1) goto label150;
            UWA130(X+2.5*V,YZUS,1,0);
            if (KREUZ == 2) goto label150;
            A2 = EWAUS[I]*TX1;
            A3 = GLTG[JJ]*TX3;
            A4 = (TWAUS[I]-273.15)*TX0+TX5;
            UWA131(X+2.5*V,YZUS,0.0,A2,A3,A4,1,0);
            goto label150;
            
        label420:
            LL = NRABC[JJ];
            if (LL > 0) goto label440;
            
            for(LL = 4; LL <= 26; LL++) //DO 430 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[JJ] = LL;
                goto label440;
            }   //430 CONTINUE
            
        label440:
            A = ABCD[LL];
            PLOT (X,Y,3);
            PLOT (X,Y+1.3*V,2);
            A3 = GLTG[JJ]*TX3;
            // UWA132(X,Y+0.9*V,2.7,A3,0.0,3,0,1,1,1,1,A);
            Y = Y + 1.3*V;
            YSAM = YSAM + 1.3*V;
            goto label150;
            
        label460:
            II = NBLTG[I,1];
            if (II == 0) goto label150;
            if (GLTG[II] <= 0.0) goto label150;
            if (NTYP[I-2] != 8) goto label480;
            JJ = N2[I-2];
            if (JJ == 0) goto label480;
            if (JJ != II) goto label480;
            
            PLOT (X,Y,3);
            PLOT (X,Y+1.1*V,2);
            PLOT (XZUS,YZUS,3);
            PLOT (XZUS,Y+0.55*V,2);
            AROHD(XZUS,Y+0.55*V,X,Y+0.55*V,0.2,0.0,16);
            if (KREUZ == 1) goto label470;
            UWA130(X,Y+1.1*V,4,0);
            if (KREUZ == 2) goto label470;
            A2 = EWAUS[I]*TX1;
            K2 = NN2[I];
            A3 = GLTG[K2]*TX3;
            A4 = (TWAUS[I]-273.15)*TX0+TX5;
            UWA131(X,Y+1.1*V,0.0,A2,A3,A4,4,0);
            
        label470:
            Y = Y + 1.1*V;
            YSAM = YSAM + 1.1*V;
            goto label150;
            
        label480:
            LL = NRABC[II];
            if (LL > 0) goto label500;
            
            for(LL = 4; LL <= 26; LL++) //DO 490 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[II] = LL;
                goto label500;
            }   //490 CONTINUE
            
        label500:
            A = ABCD[LL];
            A2 = ELTG[II]*TX1;
            A3 = GLTG[II]*TX3;
            PLOT (X,Y,3);
            PLOT (X,Y+1.5*V,2);
            // UWA132(X,Y+0.6*V,2.4,A3,A2,4,0,0,0,1,1,A);
            if (KREUZ == 1) goto label510;
            UWA130(X,Y+1.5*V,4,0);
            if (KREUZ == 2) goto label510;
            A2 = EWAUS[I]*TX1;
            K2 = NN2[I];
            A3 = GLTG[K2]*TX3;
            A4 = (TWAUS[I]-273.15)*TX0+TX5;
            UWA131(X,Y+1.5*V,0.0,A2,A3,A4,4,0);
            
        label510:
            Y = Y + 1.5*V;
            YSAM = YSAM + 1.5*V;
            goto label150;

        label600:
            II = N1[I];
            Y06 = Y + 1.3*V;
            if (II == 0) goto label610;
            if (GLTG[II] <= 0.0) goto label610;

            PLOT (XZU,YZU,3);
            PLOT (XZU,Y+0.7*V,2);
            AROHD(XZU,Y+0.7*V,X,Y+0.7*V,0.2*V,0.0,16);
            
        label610:
            if (I == J) goto label700;
            if (II == 0) goto label150;
            if (GLTG[II] <= 0.0) goto label150;
            PLOT (X,Y,3);
            PLOT (X,Y+1.2*V,2);
            if (KREUZ == 1) goto label620;
            UWA130(X,Y+1.2*V,4,0);
            if (KREUZ == 2) goto label620;
            A2 = EWAUS[I]*TX1;
            K2 = NN2[I];
            A3 = GLTG[K2]*TX3;
            A4 = (TWAUS[I]-273.15)*TX0+TX5;
            UWA131(X,Y+1.2*V,0.0,A2,A3,A4,4,0);
            
        label620:
            Y = Y + 1.2*V;
            YSAM = YSAM + 1.2*V;
            goto label150;

        label700:
            PLOT (X,Y,3);
            PLOT (X,Y+1.2*V,2);
            AROHD(X,Y+1.2*V,X+4.5*V,Y+1.2*V,0.2*V,0.0,16);
            if (KREUZ == 1) goto label800;
            UWA130(X+2.5*V,Y+1.2*V,1,0);
            if (KREUZ == 2) goto label710;
            A2 = EWAUS[I]*TX1;
            K2 = NN2[I];
            A3 = GLTG[K2]*TX3;
            A4 = (TWAUS[I]-273.15)*TX0+TX5;
            
            if (A3 <= 0.001) //THEN
            {
                A2 = 0.0;
                A4 = 0.0;
            }   //ENDIF
            UWA131(X+2.5*V,Y+1.2*V,0.0,A2,A3,A4,1,0);
            Y06 = Y + 2.3*V;
            
        label710:
            if (Z1 <= 0.0) goto label800;
            
            FACTOR (FACTS);
            X06 = X06/V;
            Y06 = Y06/V;
            SYMBOL (X06+0.2,Y06,XH,"P HEIZ = ",0.0,9);
            Z1 = Z1/1000.0;
            NUMBER (999.0,999.0,XH,Z1,0.0,NDECTE);
            if (QSI)    SYMBOL (999.0,999.0,XH," MJ/S",0.0,5);
            if (QTECHN) SYMBOL (999.0,999.0,XH," GCAL/H",0.0,7);
            FACTOR (FACT);
            
        label800:
            X = XT;
            Y = YT;
            return;
        }   //END
        

        static void UWA125()
        {
            //ENTRY LINIEN
            bool QANZ = false, QENTW = false;
            bool QNDWAS, QPAR;
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            int[] IPAR = new int[8];        //FELD(30),FELD1(30)
            string[] FELD = new string[31], FELD1 = new string[31];
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /PRINT/ IWR, TX0, TX13, TX14, TX15, TX16, TX17, TX
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /KOLBEN/ GKOLB,GKOLB1
            //COMMON /VORW/ NANZVW[20]
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /SPT/ XSPT,YSPT
            //COMMON /REGEL/ KREGEL
            //COMMON /WESEL / IWESEL,MENTN[4]
            //COMMON /ZWEIDR/ IDRUCK,PDRUCK,NDRUCK
            //COMMON /HEIZEN/ DPHEIZ[5],IM[5]
            //COMMON /LVART/ LVAR[4],PVAR[4],HVAR[4]
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /KONDPL/ KKONDR,ITKW,IMKW,TKWEIN,GKWEIN,IDAMPF,XDAMPF,NN4
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /ZUSAMM/ MOD[7]
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            //C
            string AKARTA = "A", AKARTD = "D", ABLANK = "    ", a1;
            int K4 = 0, L = 0, IMERK = 0, IENDE = 0, IZUEE = 0, IX = 0, M1 = 0, NL = 0, NX = 0, NSTB = 0, K5 = 0, 
                K7 = 0, NENTW = 0, LL = 0, LTGSTB = 0, I1 = 0, L1 = 0, I2 = 0, N = 0, J1 = 0, L2 = 0;
            double GZUEE = 0.0, XP = 0, YP = 0, P = 0, PP = 0, GSAB = 0, GSZU = 0, GENTN = 0, T = 0, GENTW = 0, 
                EENTW = 0, X1 = 0, Y1 = 0, EZUEE = 0, DX = 0;

            if (XSPT > 0.0) 
                UWA127();
            K4 = 0;
            KREGEL = 0;
            
            for(L = 1; L <= 7; L++) //DO 10 L=1,7
                IPAR[L] = 0;    //10 CONTINUE

            if (!QAMI)
                UWA126(0,0,0,0,0,0,0,QANZ,0,FELD,0,0,0,QENTW,0);
            if (QAMI)
                UWA145(0,0,0,0,0,0,0,QANZ,0,FELD,0,0,0,QENTW,0);

            J = ANZDTT + 1;

        label100:
            J = J - 1;
            if (J == 0) return;
            I = 0;
            if (IFLUT[J] == 0) goto label100;
            if (IFLUT[J] < 0) I = -IFLUT[J];
            if (IFLUT[J] < 0) IPAR[I] = J;
            if (IFLUT[J] < 0) goto label100;
            UWA006("RDISC", 52,J);
            UWA006("RDISC", 59,J);
            if (MOD[J] > 0) goto label130;
            IZ8 = J;
            if (NTRB[J] > 0) IZ9 = J;
            if (NTRB[J] > 0) goto label120;
            
        label110:
            IZ8 = IZ8 - 1;
            
            if (IZ8 <= 0) 
            {
                Console.WriteLine("FALSCHE EINGABE VON MOD");
                Console.ReadKey();
                Environment.Exit(0);
            }
            if (NTRB[IZ8] == 0) goto label110;
            if (J == MOD[IZ8]) IZ9 = J;
            if (J != MOD[IZ8]) goto label130;
            
        label120:
            K1 = 0;            
            IX = LPLOT[IZ8];
            IX2 = LLPLOT[IZ8];
            X = XTURB[IZ8];
            XX = XXTURB[IZ8];
            Y = YTURB[IZ8];
            YY = YYTURB[IZ8];
            IX1 = IX2;
            if (IX2 > 5) IX1 = IX2 - 6;
            if (IX2 > 11) IX1 = IX2 - 12;
            if (IX2 > 17) IX1 = IX2 - 18;
            
        label130:
            if (J != 2) goto label140;
            if (GKOLB1 == 0.0) goto label140;

            XP = X - XX - 0.5*IX1;
            if (IX == 2) XP = X + XX + 0.5*IX1;
            YP = Y + 3.0/FACT*FACTS;
            if (J == KOMP1) XP = X-2.0;
            if (J == KOMP1) YP = Y + 2.6/FACT*FACTS;
            a1 = AKARTD;
            if (!QAMI)
            {
                // UWA132(XP,YP,2.2,GKOLB1,0.0,3,1,1,0,1,1,a1);
            }
            if (QAMI) XP = X+XX+0.5*IX1;
            if (QAMI) YP = Y - 2.5;
            if (QAMI) 
            {
                // UWA132(XP,YP,2.2,GKOLB1,0.0,4,1,1,0,1,1,a1);
            }
        label140:
            if (J != NTTETB[1]-1) goto label150;
            if (GKOLB == 0.0) goto label150;
            a1 = AKARTA;
            if (J == KOMP2) goto label145;
            XP = X + XX + 0.5*IX1;
            if (IX == 3 || IX == 8) XP = X - XX - 0.5*IX1;
            YP = Y + YYTURB[J+1];
            if (!QAMI){
                // UWA132(XP,YP,2.2,GKOLB,0.0,3,1,1,0,1,1,a1);
            }
            if (QAMI) XP = X+XX+0.5*IX1;
            if (QAMI && (LLTG[14] == 2 || LLTG[14] == 3)) goto label145;
            if (QAMI) {
                // UWA132(XP,YP,0.5,GKOLB,0.0,8,1,1,0,1,1,a1);
            }
            goto label150;
            
        label145:
            XP = X+XX+0.5*IX1;
            YP = Y - 1.4;
            // UWA132(XP,YP,0.5,GKOLB,0.0,9,1,1,0,1,1,a1);

        label150:
            I = ITTEND[J] + 1;
            for(M1 = 1; M1 <= 5; M1++) //DO 160 M1=1,5
                QANZPA[M1] = false;
            
            if (LIGHT[6] == 1)
            {
                sw16.WriteLine("0**LINIEN1*{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10} ", J.ToString().PadLeft(5),IZ9.ToString().PadLeft(5),NTTETB[1].ToString().PadLeft(5),
                    ITTEND[J].ToString().PadLeft(5),MOD[J].ToString().PadLeft(5), IX.ToString().PadLeft(5),IX1.ToString().PadLeft(13),Math.Round(X,5).ToString().PadLeft(13),
                    Math.Round(XX,5).ToString().PadLeft(13),Math.Round(Y,5).ToString().PadLeft(13),Math.Round(YY,5).ToString().PadLeft(13));
            }

        label1000:
            I = I - 1;
            if (IMERK > 0) I = IMERK;
            if (IMERK > 0) UWA006("RDISC", 52,J);
            if (IMERK > 0) UWA006("RDISC", 59,J);
            if (IMERK == I) IMERK = 0;
            if (I == 0) goto label100;
            UWA010(I,1);
            if (J == 1 && KT7 == 5) KREGEL = 1;
            if (J == 1 && KT7 == 3) KREGEL = 2;
            if (J == 1 && (KT7 == 7 || KT7 == 1)) goto label1000;
            if (KT5 == 0 && I > 1) goto label1000;
            P = PT[I,K];
            if (IPAR[J] == 0) goto label1040;
            JJ = IPAR[J];
            UWA006("RDISC", 52,JJ);
            UWA006("RDISC", 59,JJ);
            II = ITTEND[JJ] + 1;
            if (IENDE > 0) II = IENDE;
            
        label1010:
            II = II - 1;
            if (II <= 0) goto label1020;
            UWA010(II,1);
            if (KT5 == 0) goto label1010;
            if (KT7 != 4 && KT7 != 8 && KT7 != 9) goto label1010;
            PP = PT[II,K] + 0.1;
            if (PP < P) goto label1030;
            
        label1020:
            UWA006("RDISC", 52,J);
            UWA006("RDISC", 59,J);
            IMERK = 0;
            UWA010(I,1);
            goto label1040;
            
        label1030:
            IENDE = II;
            IMERK = I;
            UWA044(II,1);
            goto label1050;
            
        label1040:
            UWA044(I,1);

        label1050:
            NL = 0;
            NX = 0;
            NSTB = 0;
            K5 = 0;
            K7 = 0;
            GSAB = 0.0;
            GSZU = 0.0;
            QENTW = false;
            NENTW = 0;
            QANZ = false;
            QPAR = false;
            
            for(L = 1; L <= 16; L++) //DO 1060 L=1,16
                FELD[L] = 0.0.ToString();      //1060 CONTINUE
            
            for(L = 17; L <= 24; L++) //DO 1070 L=17,24
                FELD[L] = ABLANK;   //1070 CONTINUE
            
            for(M1 = 1; M1 <= 10; M1++) //DO 4000 M1 = 1,10
            {
                IZ4 = LABT[M1];
                if (IZ4 == 0) goto label5000;
                IX4 = 0;
                
                for(IZ5 = 2; IZ5 <= 4; IZ5++) //DO 2000 IZ5 = 2,4
                    if (IZ4 == LVAR[IZ5] && NITRE[IZ5] != 7) 
                        goto label4000;     //2000 CONTINUE
                
                if (KT2 == 0) goto label2006;
                
                for(LL = 1; LL <= 6; LL++) //DO 2002 LL=1,6
                {
                    LTGSTB = LTGAB[LL,KT2];
                    if (IZ4 == LTGSTB) goto label4000;
                }   //2002 CONTINUE
                if (KT3 <= KT2) goto label2006;
                
                for(LL = 1; LL <= 6; LL++) //DO 2004 LL=1,6
                {
                    LTGSTB = LTGAB[LL,KT3];
                    if (IZ4 == LTGSTB) goto label4000; 
                }   //2004 CONTINUE
                
            label2006:
                if(IZ4 > 69 && IZ4 < 86 && (KT7 == 4 || KT7 == 8 || KT7 == 9)) 
                    NSTB = IZ4;
                if (IZ4 > 69 && IZ4 < 93) goto label4000;
                if (IZ4 > 92 && IZ4 < 99) goto label4000;
                if (LHEIZ == 1 && IZ4 == IM[1]) goto label4000;
                if (LHEIZ == 2 && (IZ4 == IM[1] || IZ4 == IM[2])) goto label4000;
                if (IZ4 > 40 && IZ4 < 47) goto label2700;
                GENTN = GLTG[IZ4];
                if (IZ4 == Math.Abs(NANZDU[1])) goto label2600;
                if (KT7 != 3 && KT7 != 4 && KT7 != 6 && KT7 != 8 && KT7 != 9)
                    goto label2300;
                if (IZ4 == 10 && J == 1) goto label4000;
                if (IZ4 == 10 && NRABC[IZ4] == NRABC[70]) goto label4000;
                
                K5 = K5 + 1;
                if (IZ4 > 48 && IZ4 < 70 && QANZ) goto label4000;
                if (IZ4 > 48 && IZ4 < 70 && QPAR) goto label4000;
                if (IZ4 > 48 && IZ4 < 70) goto label2550;
                GSAB = GSAB + GLTG[IZ4];
                if (K5 > 1) goto label2010;
                T = VISUM(PLTG[IZ4],ELTG[IZ4],03);
                if (T < 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0+TX5;
                if (T < 0.0&& QENGL) T = -(100.0+T*100.0);
                A1 = PLTG[IZ4]*TX2;
                A2 = ELTG[IZ4]*TX1;
                A4 = T;
                
            label2010:
                for(I1 = 1; I1 <= NANZEN; I1++) //DO 2020 I1=1,NANZEN
                {
                    IZ1 = (int)NANZ[I1];
                    if (IZ4 == IZ1) goto label2030; 
                }   //2020 CONTINUE
                GENTN = GLTG[IZ4];
                goto label2100;
                
            label2030:
                K4 = I1;
                QANZ = true;
                if (NANZ[I1] > 0) goto label2500;

                L1 = IHENDE + 1;
                
                for(L = L1; L <= INENDE; L++) //DO 2040 L=L1,INENDE
                {
                    if (NTYP[L] != 8) continue;
                    if (VERLE[L] == 0.0 && NBLTG[L,1] == 0) continue;
                    if (IZ4 == NN1[L]) goto label2050;
                }   //2040 CONTINUE
                GENTN = GLTG[IZ4];
                goto label2100;

            label2050:
                QPAR = true;
                IZ4 = NN2[L];
                GSAB = GSAB - GLTG[IZ1] + GLTG[IZ4];
                A1 = PLTG[IZ4]*TX2;
                A2 = ELTG[IZ4]*TX1;
                T = VISUM(PLTG[IZ4],ELTG[IZ4],03);
                if (T < 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0+TX5;
                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                A4 = T;
                
                for(I1 = 1; I1 <= NANZEN; I1++) //DO 2060 I1=1,NANZEN
                    if (IZ4 == NANZVW[I1]) goto label2500;      //2060 CONTINUE
                GENTN = GLTG[IZ4];

            label2100:
                IX4 = 0;
                
                for(L = 1; L <= INENDE; L++) //DO 2200 L=1,INENDE
                {
                    if (IZ4 != NN1[L] && IZ4 != N1[L]) continue;
                    if (IZ4 == N1[L] && NTYP[L] == 5 && L <= IHENDE) goto label4000;
                    if (IZ4 == N1[L] && NTYP[L] == 5) goto label2300;
                    if (IZ4 == N1[L] && NTYP[L] != 5) continue;
                    if (NTYP[L] != 8) goto label2140;
                    IX5 = NBLTG[L,1];
                    if (IX5 == 0 || IX5 > 40) goto label2105;
                    UWA008("UNPACK", ILTG[IX5], ref IX6, ref IX7, ref IX8, ref IX9);
                    if (VERLE[L] != 0.0 || IX7 > 0) QPAR = true;
                    if (QPAR) GSAB = GSAB + GLTG[IX5];
                    IX5 = NN2[L];
                    if (QPAR) GENTN = GLTG[IX5];
                    
                label2105:
                    if (N2[L] == 0) goto label2140;
                    
                    for(I1 = 1; I1 <= NANZEN; I1++) //DO 2110 I1=1,NANZEN
                        if (N2[L] == NANZVW[I1]) 
                            goto label2130;     //2110 CONTINUE
                    IZ4 = N2[L];
                    for(I1 = 1; I1 <= NANZEN; I1++) //DO 2120 I1=1,NANZEN
                    {
                        if (NN2[L] == NANZVW[I1]) GENTN = GLTG[IZ4];
                        if (NN2[L] == NANZVW[I1]) goto label2300;   
                    }   //2120 CONTINUE
                    GENTN = GLTG[IZ4];
                    IX4 = NN2[L];
                    goto label2300;
                    
                label2130:
                    IZ4 = NN2[L];
                    GENTN = GLTG[IZ4];
                    goto label2100;
                    
                label2140:
                    IZ4 = NN2[L];
                    if (NTYP[L] == 6) goto label2300;
                    
                    for(I1 = 1; I1 <= NANZEN; I1++) //DO 2150 I1=1,NANZEN
                        if (NN2[L] == NANZVW[I1]) 
                            goto label2160;     //2150 CONTINUE
                    if (NTYP[L] == 22) IZ4 = NN1[L];
                    if (NTYP[L] == 22) goto label2300;
                    goto label2100;
                    
                label2160:
                    if (NTYP[L] != 22) goto label4000;
                    if (N1[L] == 0) goto label2100;
                    
                    A1 = PLTG[IZ4]*TX2;
                    A2 = ELTG[IZ4]*TX1;
                    T = VISUM(PLTG[IZ4],ELTG[IZ4],03);
                    if (T < 0.0) T = T + 273.15;
                    T = T - 273.15;
                    if (T > 0.0) T = T*TX0+TX5;
                    if (T < 0.0&& QENGL) T = -(100.0+T*100.0);
                    A4 = T;
                    IX3 = N1[L];
                    GSAB = GSAB + GLTG[IX3];
                    FELD[25] = (GLTG[IX3]*TX3).ToString();
                    FELD[26] = (ELTG[IX3] * TX1).ToString();
                    if (NRABC[IX3] > 0) goto label2180;
                    
                    for(LL = 4; LL <= 26; LL++) //DO 2170 LL=4,26
                    {
                        if (QABC[LL]) continue;
                        QABC[LL] = true;
                        NRABC[IX3] = LL;
                        goto label2180;
                    }   //2170 CONTINUE
                    
                label2180:
                    LL = NRABC[IX3];
                    FELD[27] = ABCD[LL];
                    goto label4000;
                }   //2200 CONTINUE
                
                if (IHENDE == INENDE) goto label2300;
                L1 = IHENDE + 1;
                
                for(L = L1; L <= INENDE; L++) //DO 2210 L=L1,INENDE
                {
                    if (NTYP[L] != 8) continue;
                if (IZ4 == NBLTG[L,1]) QPAR = true;
                if (IZ4 == NBLTG[L,1]) K5 = K5 - 1;
                if (IZ4 == NBLTG[L,1]) goto label4000;
                }   //2210 CONTINUE
                
            label2300:
                NL = NL + 1;
                IX3 = IZ4;
                if (IX3 == 99) NRABC[IZ4] = 2;
                if (NRABC[IX3] != 0) goto label2390;
                if (IZ4 == IM[1] || IZ4 == IM[2]) goto label2370;
                if (IZ4 == IM[3] || IZ4 == IM[4] || IZ4 == IM[5]) goto label2370;
                if (IHENDE == INENDE) goto label2370;
                L1 = IHENDE + 1;
                
            label2320:
                for(L = L1; L <= INENDE; L++) //DO 2350 L = L1,INENDE
                {
                    if (IX3 != N1[L]) goto label2330;
                    if (NTYP[L] != 10) goto label2370;
                    IX3 = N2[L];
                    if (NRABC[IX3] != 0) goto label2390;
                    goto label2320;
                    
                label2330:
                    for(L2 = 1; L2 <= 8; L2++) //DO 2340 L2 = 1,8
                    {
                        if (IX3 != NBLTG[L,L2]) continue;
                        if (NTYP[L] == 17) goto label2350;
                        if (LTYP[L] != 8) IX3 = N2[L];
                        if (LTYP[L] == 8) IX3 = NN2[L];
                        if (NRABC[IX3] != 0) goto label2390;
                        goto label2320;
                    }   //2340 CONTINUE
                    if (IX3 != NN1[L]) goto label2350;
                    IX3 = NN2[L];
                    if (NRABC[IX3] != 0) goto label2390;
                    goto label2320;
                label2350:
                    ;
                }   //2350 CONTINUE

            label2370:
                for(LL = 4; LL <= 26; LL++) //DO 2380 LL=4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[IX3] = LL;
                    UWA114(IX3);
                    goto label2390;
                }   //2380 CONTINUE
                
            label2390:
                LL = NRABC[IX3];
                NRABC[IZ4] = LL;
                FELD[NL + 8] = (GENTN * TX3).ToString();
                FELD[NL+16] = ABCD[LL];
                if (IX4 == 0) goto label4000;
                IZ4 = IX4;
                GENTN = GLTG[IZ4];
                goto label2100;

            label2500:
                GENTW = 0.0;
                EENTW = 0.0;
                if (!QANZ) goto label2550;

                for(L = 1; L <= 10; L++) //DO 2530 L = 1,10
                {
                    IZ5 = LABT[L];
                    if (IZ5 < 49 || IZ5 > 69) continue;
                    for(I1 = 1; I1 <= INENDE; I1++) //DO 2520 I1 = 1,INENDE
                    {
                        if (NTYP[I1] != 1 && NTYP[I1] != 2 && NTYP[I1] != 21) continue;
                        I2 = N1[I1];
                        if (I2 != IZ4) continue;
                        
                        for(L1 = 1; L1 <= 8; L1++) //DO 2510 L1 = 1,8
                        {
                            IZ6 = NBLTG[I1,L1];
                            if (IZ6 < 49 || IZ6 > 69) continue;
                            if (Math.Abs(PLTG[IZ6]-PLTG[IZ4]) > 0.02) continue;
                            GENTW = GENTW + GLTG[IZ6];
                            if (NENTW == 0) NENTW = IZ6;
                        }   //2510 CONTINUE
                    }   //2520 CONTINUE
                }   //2530 CONTINUE
                if (GENTW <= 0.0) goto label4000;
                EENTW = VISUM(PLTG[IZ4],T,-21);
                if (T > 0.0) T = T - 273.15;
                if (T > 0.0) T = T*TX0+TX5;
                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                FELD[5] = (PLTG[IZ4] * TX2).ToString();
                FELD[6] = (EENTW * TX1).ToString();
                FELD[7] = (GENTW * TX3).ToString();
                FELD[8] = T.ToString();
                QENTW = true;
                goto label4000;

            label2550:
                QENTW = true;
                FELD[5] = (PLTG[IZ4] * TX2).ToString();
                FELD[6] = (ELTG[IZ4] * TX1).ToString();
                FELD[7] = (GLTG[IZ4] * TX3).ToString();
                T = VISUM(PLTG[IZ4],ELTG[IZ4],03);
                if (T < 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0+TX5;
                if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                FELD[8] = T.ToString();
                NENTW = IZ4;
                goto label4000;

            label2600:
                if (J == 1) K7 = 1;
                goto label4000;
                
            label2700:
                if (IHENDE == INENDE) goto label4000;

                for(L = 1; L  <= 30; L++) //DO 2705 L=1,30
                    FELD1[L] = FELD[L];     //2705 CONTINUE
                IZ6 = NL;
                N = 0;
                IX7 = 0;
                IX8 = 0;
                IZ7 = IZ4;
                L1 = IHENDE + 1;
                
            label2710:
                for(J1 = L1; J1 <= INENDE; J1++) //DO 2720 J1 = L1,INENDE
                {
                    IZ3 = NN1[J1];
                    if (IZ3 != IZ4) continue;
                    IZ4 = NN2[J1];
                    if (LTYP[J1] == 19 || LTYP[J1] == 23) N = N + 1;
                    if (LTYP[J1] != 8) continue;
                    IX3 = N2[J1];
                    if (IX3 != 0) goto label2730;
                }   //2720 CONTINUE
                goto label3200;
                
            label2730:
                NL = 0;
                IZ5 = IZ4;
                IZ4 = IX3;
                if (QAMI) X1 = X + XX + 0.5*IX1 + 2.0 + N*(6.5 + XDXT);
                if (QAMI && IX == 1) X1 = X + 2.0 + N*(6.5 + XDXT);
                if (!QAMI) X1=X+XX+0.5*IX1+2.0/FACT*FACTS+N*(3.5/FACT*FACTS+2.0+XDXT);
                if (!QAMI && IX == 1) X1=X+2.0/FACT*FACTS+N*(3.5/FACT*FACTS+2.0+XDXT);
                if (QAMI) Y1 = Y + 3.0/FACT*FACTS;
                if (!QAMI) Y1 = Y + 2.5/FACT*FACTS;
                IX8 = IX8 + 1;
                if (!QAMI) X1 = X1 + 0.7/FACT*FACTS*IX8;
                if (IX7 > 0) QANZ = false;
                if (IX7 > 0) goto label2800;
                    
                for(I1 = 1; I1 <= NANZEN; I1++) //DO 2750 I1 = 1,NANZEN
                {
                    IZ1 = (int)(NANZ[I1]);
                    if (IZ1 == IZ7) 
                        goto label2760;
                }   //2750 CONTINUE
                goto label2800;
                
            label2760:
                QANZ = true;
                K4 = I1;
                IX7 = 1;
                FELD[1] = (PLTG[IZ4] * TX2).ToString();
                FELD[2] = (ELTG[IZ4] * TX1).ToString();
                FELD[3] = (GLTG[IZ4] * TX3).ToString();
                T = VISUM(PLTG[IZ4],ELTG[IZ4],03);
                if (T < 0.0) T = T + 273.15;
                T = T - 273.15;
                if (T > 0.0) T = T*TX0+TX5;
                if (T < 0.0&& QENGL) T = -(100.0+T*100.0);
                FELD[4] = T.ToString();
                if (NANZ[I1] > 0) goto label3100;
                
                for(I1 = 1; I1 <= NANZEN; I1++) //DO 2770 I1 = 1,NANZEN
                    if (IZ4 == NANZVW[I1]) 
                        goto label3100;     //2770 CONTINUE

            label2800:
                L1 = IHENDE + 1;
                IX4 = 0;
                for(L = L1; L <= INENDE; L++) //DO 2900 L=L1,INENDE
                {
                    if (IZ4 != NN1[L]) continue;
                    if (NTYP[L] != 8) goto label2840;
                    if (N2[L] == 0) goto label2840;
                
                    for(I1 = 1; I1 <= NANZEN; I1++) //DO 2810 I1=1,NANZEN
                        if (N2[L] == NANZVW[I1]) 
                            goto label2830;     //2810 CONTINUE
                    IZ4 = N2[L];
                    
                    for(I1 = 1; I1 <= NANZEN; I1++) //DO 2820 I1=1,NANZEN
                        if (NN2[L] == NANZVW[I1]) 
                            goto label3000;     //2820 CONTINUE
                    IX4 = NN2[L];
                    goto label3000;
                    
                label2830:
                    IZ4 = NN2[L];
                    goto label2800;
                    
                label2840:
                    IZ4 = NN2[L];
                    if (NTYP[L] != 22) goto label2800;
                    if (N1[L] == 0) goto label2800;
                    
                    for(I1 = 1; I1 <= NANZEN; I1++) //DO 2850 I1=1,NANZEN
                        if (NN2[L] == NANZVW[I1]) 
                            goto label2860;     //2850 CONTINUE
                    goto label2800;
                    
                label2860:
                    IZ1 = (int)(NANZ[I1]);
                    if (NN1[L] != IZ1) goto label2800;

                    FELD[1] = (PLTG[IZ4] * TX2).ToString();
                    FELD[2] = (ELTG[IZ4] * TX1).ToString();
                    FELD[3] = (GLTG[IZ4] * TX3).ToString();
                    T = VISUM(PLTG[IZ4],ELTG[IZ4],03);
                    if (T < 0.0) T = T + 273.15;
                    T = T - 273.15;
                    if (T > 0.0) T = T*TX0+TX5;
                    if (T < 0.0 && QENGL) T = -(100.0+T*100.0);
                    FELD[4] = T.ToString();
                    IX3 = N1[L];
                    FELD[25] = (GLTG[IX3] * TX3).ToString();
                    FELD[26] = (ELTG[IX3] * TX1).ToString();
                    if (NRABC[IX3] > 0) goto label2880;
                    
                    for(LL = 4; LL <= 26; LL++) //DO 2870 LL=4,26
                    {
                        if (QABC[LL]) continue;
                        QABC[LL] = true;
                        NRABC[IX3] = LL;
                        goto label2880;
                    }   //2870 CONTINUE
                    
                label2880:
                    LL = NRABC[IX3];
                    FELD[27] = ABCD[LL];
                    goto label3000;
                }   //2900 CONTINUE

            label3000:
                NL = NL + 1;
                IX3 = IZ4;
                if (IX3 == 99) NRABC[IZ4] = 2;
                if (NRABC[IX3] != 0) goto label3090;
                if ((IZ7 == IM[3] || IZ7 == IM[4] || IZ7 == IM[5]) && IZ4 > 36 && IZ4 < 40) goto label3070;
                if (IHENDE == INENDE) goto label3070;

                L1 = IHENDE + 1;
                
            label3020:
                for(L = L1; L <= INENDE; L++) //DO 3050 L = L1,INENDE
                {
                    if (IX3 != N1[L]) goto label3030;
                    IX3 = N2[L];
                    if (NTYP[L] == 1 || NTYP[L] == 20 && N2[L] == 0 || NTYP[L] == 22) 
                        IX3 = NN2[L];
                    if (NRABC[IX3] != 0) goto label3090;
                    goto label3020;
                    
                label3030:
                    for(L2 = 1; L2 <= 8; L2++) //DO 3040 L2 = 1,8
                    {
                        if (IX3 != NBLTG[L,L2]) continue;
                        if (NTYP[L] == 17) goto label3050;
                        if (LTYP[L] != 8) IX3 = N2[L];
                        if (LTYP[L] == 8) IX3 = NN2[L];
                        if (NRABC[IX3] != 0) goto label3090;
                        goto label3020;
                    }   //3040 CONTINUE
                    if (IX3 != NN1[L]) goto label3050;
                    IX3 = NN2[L];
                    if (NRABC[IX3] != 0) goto label3090;
                    goto label3020;
                label3050:
                    ;
                }   //3050 CONTINUE
                for(L2 = 1; L2 <= 160; L2++) //DO 3060 L2 = 1,160
                {
                    if (GLTG[IX3] != GLTG[L2]) continue;
                    if (NRABC[L2] == 0) continue;
                    NRABC[IX3] = NRABC[L2];
                    goto label3090;
                }   //3060 CONTINUE

            label3070:
                for(LL = 4; LL <= 26; LL++) //DO 3080 LL=4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[IX3] = LL;
                    UWA114(IZ4);
                    goto label3090;
                }   //3080 CONTINUE
                
            label3090:
                LL = NRABC[IX3];
                NRABC[IZ4] = LL;
                FELD[NL + 8] = (GLTG[IZ4] * TX3).ToString();
                FELD[NL + 16] = (ABCD[LL]).ToString();
                if (IX4 == 0) goto label3100;
                IZ4 = IX4;
                goto label2800;

            label3100:
                FELD[29] = X1.ToString();
                FELD[30] = Y1.ToString();
                NX = NL;
                
                if (LIGHT[6] == 1)
                {
                    sw16.WriteLine("0H**LINIEN2**{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16} ", J.ToString().PadLeft(5),IZ8.ToString().PadLeft(5),
                        NTTETB[1].ToString().PadLeft(5),I.ToString().PadLeft(5),ITTEND[J].ToString().PadLeft(5),IX.ToString().PadLeft(5),IX1.ToString().PadLeft(5),
                        K1.ToString().PadLeft(5),K4.ToString().PadLeft(5),KT7.ToString().PadLeft(5), QANZ.ToString().PadLeft(5),K7.ToString().PadLeft(5),NL.ToString().PadLeft(5),
                        NX.ToString().PadLeft(5),NENTW.ToString().PadLeft(5),QENTW.ToString().PadLeft(5),NSTB.ToString().PadLeft(5));
                }
                
                //6020 FORMAT(1H0,10X,8F10.4);
                if (LIGHT[6] == 1) 
                    sw16.WriteLine("0          {0}{1}{2}{3}{4}{5}{6}{7} ", FELD[1], FELD[2], FELD[3], FELD[4], FELD[5], FELD[6], FELD[7], FELD[8]);
                
                if (LIGHT[6] == 1)  //sw16.WriteLine("",6020) (FELD[L],L=9,16);
                    sw16.WriteLine("0          {0}{1}{2}{3}{4}{5}{6}{7} ", FELD[9], FELD[10], FELD[11], FELD[12], FELD[13], FELD[14], FELD[15], FELD[16]);
                
                if (LIGHT[6] == 1)      //sw16.WriteLine("",6030) (FELD[L],L=17,24);
                    sw16.WriteLine("0          {0}{1}{2}{3}{4}{5}{6}{7} ", FELD[17], FELD[18], FELD[19], FELD[20], FELD[21], FELD[22], FELD[23], FELD[24]);
                
                if (LIGHT[6] == 1)      //sw16.WriteLine("",6020) FELD(29),FELD(30);
                    sw16.WriteLine("0          {0}{1} ", FELD[29], FELD[30]);
                
                if (!QAMI)
                    UWA126(IZ8,NTTETB[1],IX,IX1,-1,K4,KT7,QANZ,K7,FELD,NL,NX,NENTW,QENTW,0);
                if (QAMI)
                    UWA145 (IZ8,NTTETB[1],IX,IX1,-1,K4,KT7,QANZ,K7,FELD,NL,NX,NENTW,QENTW,0);
                
                IZ4 = IZ5;
                goto label2710;
                
            label3200:
                for(L = 1; L <= 30; L++) //DO 3210 L=1,30
                    FELD[L] = FELD1[L];     //3210 CONTINUE
                NL = IZ6;

            label4000:
                ;
            }   //4000 CONTINUE

        label5000:
            NX = NL;
            
            for(M1 = 1; M1 <= 10; M1++) //DO 5200 M1 = 1,10
            {
                IZ4 = LZUT[M1];
                if (IZ4 == 0) goto label6000;
                
                for(IZ5 = 2; IZ5 <= 4; IZ5++) //DO 5010 IZ5 = 2,4
                {
                    if (IZ4 == LVAR[IZ5] && NITRE[IZ5] != 7) 
                        goto label5200;
                    if (IZ4 == NRMVAE[IZ5]+100) 
                        goto label5200;
                }   //5010 CONTINUE
                if (KT2 == 0) goto label5013;
                
                for(LL = 1; LL <= 6; LL++) //DO 5011 LL=1,6
                {
                    LTGSTB = LTGAB[LL,KT2];
                    if (LTGSTB == IZ4) 
                        goto label5200;
                }   //5011 CONTINUE
                if (KT3 <= KT2) goto label5013;
                
                for(LL = 1; LL <= 6; LL++) //DO 5012 LL=1,6
                {
                    LTGSTB = LTGAB[LL,KT3];
                    if (LTGSTB == IZ4) goto label5200;
                }   //5012 CONTINUE
                
            label5013:
                if(IZ4 > 69 && IZ4 < 86 && (KT7 == 4 || KT7 == 8 || KT7 == 9))
                    NSTB = -IZ4;
                if(IZ4 > 69 && IZ4 < 93) goto label5200;
                if (IZ4 > 92 && IZ4 < 99) goto label5200;
                if (IZ4 > 40 && IZ4 < 47) goto label5200;
                if (IZ4 == 31 || IZ4 == 32) goto label5110;
                if (KT7 == 3 || KT7 == 4 || KT7 == 7 || KT7 == 8) goto label5200;
                if (IHENDE == INENDE) goto label5016;
                L1 = IHENDE + 1;
                
                for(L = L1; L <= INENDE; L++) //DO 5015 L=L1,INENDE
                {
                    if (NTYP[L] != 8) continue;
                    if (N2[L] == 0) continue;
                    if (IZ4 == N2[L] && VERLE[L] != 0.0) goto label5200;
                }   //5015 CONTINUE
                
            label5016:
                L = IHENDE + 1;
                
            label5017:
                L = L - 1;
                if (NTYP[L] != 7) goto label5020;
                if (IZ4 == N2[L]) goto label5200;
                if (IZ4 == IDRUCK) goto label5200;
                goto label5017;
                
            label5020:
                NX = NX + 1;
                GSZU = GSZU + GLTG[IZ4];
                IX4 = IZ4;
                if (NRABC[IZ4] != 0) goto label5100;
                if (IHENDE == INENDE) goto label5080;
                L1 = IHENDE + 1;
                
            label5030:
                for(L = L1; L <= INENDE; L++) //DO 5060 L = L1,INENDE
                {
                    if (IX4 != N1[L]) goto label5040;
                    IX4 = N2[L];
                    if (NRABC[IX4] != 0) goto label5100;
                    if (IX4 == N1[L]) continue;
                    goto label5030;
                    
                label5040:
                    for(L2 = 1; L2 <= 8; L2++) //DO 5050 L2 = 1,8
                    {
                        if (IX4 != NBLTG[L,L2]) continue;
                        IX4 = N2[L];
                        if (NRABC[IX4] != 0) goto label5100;
                        if (IX4 == NBLTG[L,L2]) goto label5060;
                        goto label5030;
                    }   //5050 CONTINUE
                    if (IX4 != NN1[L]) goto label5060;
                    IX4 = NN2[L];
                    if (NRABC[IX4] != 0) goto label5100;
                    if (IX4 == NN1[L]) goto label5060;
                    goto label5030;
                label5060:
                    ;
                }   //5060 CONTINUE
                
                for(L2 = 1; L2 <= 160; L2++) //DO 5070 L2 = 1,160
                {
                    if (GLTG[IX4] != GLTG[L2]) continue;
                    NRABC[IX4] = NRABC[L2];
                    if (NRABC[IX4] != 0) goto label5100;
                }   //5070 CONTINUE
                
            label5080:
                for(LL = 4; LL <= 26; LL++) //DO 5090 LL=4,26
                {
                    if (QABC[LL]) continue;
                    QABC[LL] = true;
                    NRABC[IX4] = LL;
                    UWA114(IX4);
                    goto label5100;
                }   //5090 CONTINUE
                goto label5200;
                
            label5100:
                LL = NRABC[IX4];
                FELD[NX + 8] = (GLTG[IZ4] * TX3).ToString();
                FELD[NX+16] = (ABCD[LL]).ToString();
                goto label5200;
                
            label5110:
                GZUEE = GLTG[IZ4]*TX3;
                EZUEE = ELTG[IZ4]*TX1;
                IZUEE = IZ4;

            label5200:
                ;
            }   //5200 CONTINUE

        label6000:
            if (K7 == 0 && K5 == 0 && NX == 0) goto label1000;
            FELD[1] = A1.ToString();
            FELD[2] = A2.ToString();
            FELD[3] = ((GSAB - GSZU) * TX3).ToString();
            FELD[4] = A4.ToString();
            if(!QANZ && !QENTW && NL > 0 && KT7 != 1 && KT7 != 7)
                FELD[9] = (GSAB * TX3).ToString();
            K1 = K1 + 1;
            if (I == ITTEND[J] && J == IZ9) K1 = K1 - 1;
            if (J == NTTETB[KT10] && I == ITTEND[J]-1 && !QANZ && !QENTW && KT7 == 9) K1 = -2;
            if (K1 > 0) QANZPA[K1] = false;
            if (K1 > 0 && QPAR) QANZPA[K1] = true;
            if (LIGHT[6] == 1)
            {
                sw16.WriteLine("0**LINIEN2**{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}{16}" ,J.ToString().PadLeft(5),IZ8.ToString().PadLeft(5),NTTETB[1].ToString().PadLeft(5),
                    I.ToString().PadLeft(5),ITTEND[J].ToString().PadLeft(5),IX.ToString().PadLeft(5),IX1.ToString().PadLeft(5),K1.ToString().PadLeft(5),K4.ToString().PadLeft(5),
                    KT7.ToString().PadLeft(5),QANZ.ToString().PadLeft(5),K7.ToString().PadLeft(5),NL.ToString().PadLeft(5),NX.ToString().PadLeft(5),NENTW.ToString().PadLeft(5),
                    QENTW.ToString().PadLeft(5),NSTB.ToString().PadLeft(5));
            }
            if (LIGHT[6] == 1)      //sw16.WriteLine("",6020) (FELD[L],L=1,8);
                sw16.WriteLine("0          {0}{1}{2}{3}{4}{5}{6}{7} ", FELD[1], FELD[2], FELD[3], FELD[4],
                        FELD[5], FELD[6], FELD[7], FELD[8]);
            if (LIGHT[6] == 1)      //sw16.WriteLine("",6020) (FELD[L],L=9,16);
                sw16.WriteLine("0          {0}{1}{2}{3}{4}{5}{6}{7} ", FELD[9], FELD[10], FELD[11], FELD[12],
                        FELD[13], FELD[14], FELD[15], FELD[16]);
            if (LIGHT[6] == 1)      //sw16.WriteLine("",6030) (FELD[L],L=17,24);
                sw16.WriteLine("0          {0}{1}{2}{3}{4}{5}{6}{7} ", FELD[17], FELD[18], FELD[19], FELD[20],
                        FELD[21], FELD[22], FELD[23], FELD[24]);
            //6020 FORMAT(1H0,10X,8F10.4);
            //6030 FORMAT(1H0,10X,8A10);
            
            if (!QAMI)
                UWA126(IZ8,NTTETB[1],IX,IX1,K1,K4,KT7,QANZ,K7,FELD,NL,NX,NENTW,QENTW,NSTB);
            if (QAMI)
                UWA145 (IZ8,NTTETB[1],IX,IX1,K1,K4,KT7,QANZ,K7,FELD,NL,NX,NENTW,QENTW,NSTB);
            
            if (K1 < 0) K1 = 0;
            
            if (IZUEE == 0) goto label1000;
            if (NRABC[IZUEE] > 0) goto label6110;
            
            for(LL = 4; LL <= 26; LL++) //DO 6100 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[IZUEE] = LL;
                goto label6110;
            }   //6100 CONTINUE
            goto label1000;
            
        label6110:
            LL = NRABC[IZUEE];
            A1 = Convert.ToDouble(ABCD[LL]);
            if (LIGHT[6] == 1)
                sw16.WriteLine("0ZUE-EINSPR{0}{1}{2}{3} ", IZUEE.ToString().PadLeft(6),GZUEE.ToString("0.00000E+0").PadLeft(13),EZUEE.ToString("0.00000E+0").PadLeft(13),A1.ToString().PadLeft(10));
                //6120 FORMAT(0ZUE-EINSPR,I6,2E13.5,A10)
            IZUEE = 0;
            if (QAMI) goto label6200;
            if (J == KOMP1) goto label6130;
            XP = X + XX + 0.5*IX1 + 3.5/FACT*FACTS + 0.5;
            if (IX == 1) XP = X + 3.5/FACT*FACTS + 0.5;
            YP = Y + YYTURB[J+1] + 0.5;
            if (LHEIZ != 2) {
                // UWA132(XP,YP,0.7,GZUEE,EZUEE,8,0,0,0,1,1,A1);
            }
            if (LHEIZ == 2) {
                // UWA132(XP,YP,0.7,GZUEE,EZUEE,5,0,0,0,1,1,A1);
            }
            goto label1000;
            
        label6130:
            XP = X - 0.8;
            YP = Y + 3.0/FACT*FACTS;
            // UWA132(XP,YP,1.0,GZUEE,EZUEE,8,0,0,0,1,1,A1);
            goto label1000;
            
        label6200:
            YP = YTURB[J+1] + YYTURB[J+1];
            IX9 = LPLOT[J+1];
            IX6 = LLPLOT[J+1];
            IX5 = IX6;
            if (IX6 > 5) IX5 = IX6 - 6;
            if (IX6 > 11) IX5 = IX6 - 12;
            if (IX6 > 17) IX5 = IX6 - 18;
            DX = XXTURB[J+1];
            XP = XTURB[J+1] - 4.0;
            if (IX9 != 2) XP = XTURB[J+1] - 2.5 - DX - 0.5*IX5;
            if (J != KOMP1) goto label6210;
            XP = XTURB[J] - 6.0;
            YP = YTURB[J] + 3.0;
            
        label6210:
            NEWPEN(3);
            PLOT (XP,YP,3);
            PLOT (XP-2.6,YP,2);
            // UWA132(XP-0.1,YP,0.6,GZUEE,EZUEE,5,0,0,0,1,1,A1);
            goto label1000;
        }   //END

        
        static void UWA126(int J, int IZ1, int IX, int IX1, int K1, int K4, int KT7, bool QANZ, int K7, string[] FELD, int NL,
            double NX, int NENTW, bool QENTW, int NSTB)
        {
            //ENTRY ANZAPF1 (J,IZ1,IX,IX1,K1,K4,KT7,QANZ,K7,FELD,NL,NX,NENTW,QENTW,NSTB)
            //LOGICAL QANZ,QENTW,QABC
            //LOGICAL QNDWAS,QANZPA
            //LOGICAL QVAEST
            //DIMENSION FELD(30)
            string AKARTA = "A";

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /SPT/ XSPT,YSPT
            //COMMON /NTURB/ NTT[4]
            //COMMON /HEIZ/ IHEIZ,JHEIZ,LHEIZ,PHZ1,PHZ2
            //COMMON /HEIZLT/ X35,Y35,X36,Y36
            //COMMON /WESEL / IWESEL,MENTN[4]
            //COMMON /ISTOPF/ ISTANZ[7]
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /KONDPL/ KKONDR,ITKW,IMKW,TKWEIN,GKWEIN,IDAMPF,XDAMPF,NN4 ER794
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            bool QVAEST = false;
            double V = FACTS / FACT, X1VOR = 0.0, X2VOR = 0.0, Y2VOR = 0.0, Y2PL = 0.0, X2 = 0.0, Y2 = 0.0, 
                XENTW = 0, Y1 = 0, X1 = 0, DY = 0, DX = 0, XP1 = 0, YP1 = 0, P1 = 0, YP = 0;
            int IT = 0, L = 0, LL = 0, N = 0, L2 = 0;
            if (J > 0) goto label100;

            X1VOR = 0.0;
            X2VOR = 0.0;
            Y2VOR = 0.0;
            Y2PL = 0.0;
            X2 = 0.0;
            Y2 = 0.0;
            IT = 0;
            QVAEST = false;
            return;
            
        label100:
            if (!QANZ && !QENTW && KT7 == 9 && K1 == -2) goto label1550;
            if (!QANZ && !QENTW && K1 < 0) goto label1600;
            if (!QANZ && !QENTW && KT7 == 1) goto label1500;
            if (!QANZ && !QENTW && KT7 == 6) goto label1550;
            if (IT != J) II = ISTANZ[J];
            if (IT != J && J == KOMP2) II = ISTANZ[J-1];
            if (IT != J) XENTW = 0.0;
            IT = J;
            if (K7 == 0) goto label200;

            NEWPEN(3);
            if (IX == 1) goto label130;
            if (IX == 2) goto label140;
            if (IX != 3) goto label200;
            
            if (K1 > 1) goto label110;
            PLOT (X-1.0,Y+0.35,3);
            PLOT (X-1.0,Y+2.5,2);
            PLOT (X+1.0,Y+2.5,2);
            PLOT (X+1.0,Y+0.35,3);
            PLOT (X+1.0,YDUE1,2);
            goto label150;
            
        label110:
            if (K1 != 2) goto label120;
            PLOT (X+1.0,Y+0.35,3);
            PLOT (X+1.0,YDUE1,2);
            goto label150;
            
        label120:
            PLOT (X-0.5,Y+0.2,3);
            PLOT (X-0.5,Y+2.5,2);
            PLOT (X+1.0,Y+2.5,2);
            PLOT (X+1.0,YDUE1,2);
            goto label150;
            
        label130:
            PLOT (X-XX-0.5*IX1+0.5*K1,Y+0.35-0.15*K1,3);
            PLOT (X-XX-0.5*IX1+0.5*K1,Y+2.5,2);
            PLOT (X+1.0,Y+2.5,2);
            PLOT (X+1.0,YDUE1,2);
            goto label150;
            
        label140:
            PLOT (X+XX+0.5*IX1-0.5*K1,Y+0.35-0.15*K1,3);
            PLOT (X+XX+0.5*IX1-0.5*K1,YDUE1,2);
            
        label150:
            PLOT (XDUE1,YDUE1,2);
            
        label200:
            if (K1 < 0) goto label900;
            Y1 = Y - 4.0*V;
            //goto label(300,400,500,600,700,800,400,850),
            if(IX == 1)      goto label300;
            if(IX == 2)      goto label400;
            if(IX == 3)      goto label500;
            if(IX == 4)      goto label600;
            if(IX == 5)      goto label700;
            if(IX == 6)      goto label800;
            if(IX == 7)      goto label400;
            if(IX == 8)      goto label850;

        label300:
            if (K1 == 0) X1 = X - XX - 0.5*IX1;
            if (K1 > 0) X1 = X - XX - 0.5*IX1 + 0.5*K1;
            if (IX == 8) goto label1000;
            Y1 = Y - 3.0/FACT*FACTS;
            goto label1000;
            
        label400:
            if (K1 == 0) X1 = X + XX + 0.5*IX1;
            if (K1 > 0) X1 = X + XX + 0.5*IX1 - 0.5*K1;
            if (J > IZ1) X1 = X - XX - 0.5*IX1 + 0.5*K1;
            goto label1000;
            
        label500:
            if (K1 == 0) X1 = X + XX + 0.5*IX1;
            if (IX1 == 1 && K1 == 1) X1 = X + 1.0;
            if (IX1 == 2 && K1 == 1) X1 = X - 1.0;
            if (IX1 == 2 && K1 == 1 && QANZPA[1]) X1 = X + 1.0;
            if (IX1 == 2 && K1 == 2) X1 = X + 0.5;
            if (IX1 == 3 && K1 == 1) X1 = X - 1.5;
            if (IX1 == 3 && K1 == 1 && QANZPA[1]) X1 = X + 1.5;
            if (IX1 == 3 && K1 == 2) X1 = X + 1.0;
            if (IX1 == 3 && K1 == 3) X1 = X + 0.5;
            Y1 = Y - 3.0/FACT*FACTS;
            goto label1000;
            
        label600:
            X1 = X + XX + 0.5*IX1 - 0.5*K1;
            goto label1000;
            
        label700:
            if (KOMP2 == 0) goto label720;
            if (J == KOMP2) goto label710;
            if (K1 == 0) X1 = X - 2.0;
            if (IX1 == 1 && K1 == 1) X1 = X - 1.5;
            if (IX1 == 2 && K1 == 1) X1 = X - 1.5;
            if (IX1 == 2 && K1 == 2) X1 = X - 1.0;
            goto label1000;
            
        label710:
            if (K1 == 0) X1 = X + XX + 0.5*IX1;
            if (K1 > 0) X1 = X + XX + 0.5*IX1 - 0.5*K1;
            goto label1000;
            
        label720:
            IX1 = IX1 - 1;
            if (IX1 < 0) IX1 = 0;
            if (K1 == 0) X1 = X + XX + 0.5*IX1;
            if (K1 > 0) X1 = X + XX + 0.5*IX1 - 0.5*K1;
            if (K1 > IX1) X1 = X - 2.5;
            goto label1000;

        label800:
            if (K1 == 0) X1 = X - 1.5;
            if (IX1 == 1 && K1 == 1) X1 = X + 1.0;
            if (IX1 == 2 && K1 == 1) X1 = X + 1.0;
            if (IX1 == 2 && K1 == 1 && QANZPA[1]) X1 = X - 1.0;
            if (IX1 == 2 && K1 == 2) X1 = X - 0.5;
            if (IX1 == 3 && K1 == 1) X1 = X + 1.5;
            if (IX1 == 3 && K1 == 2) X1 = X - 1.0;
            if (IX1 == 3 && K1 == 2 && QANZPA[2]) X1 = X + 1.0;
            if (IX1 == 3 && K1 == 3) X1 = X + 0.5;
            goto label1000;
            
        label850:
            if (J == NTT[1]-1) goto label860;
            if ((J == NTT[1] || J == NTT[2]) && IFLUT[J] > 1) goto label600;
            if (J == NTT[1] && IFLUT[J] == 1) goto label400;
            if (J == NTT[2] && IFLUT[J] == 1) goto label300;
            X1 = X;
            goto label1000;
            
        label860:
            NEWPEN(3);
            if (K1 == 0) goto label895;
            //goto label(865,870,880,890),
            if(IX1 == 1)     goto label865;
            if(IX1 == 2)     goto label870;
            if(IX1 == 3)     goto label880;
            if(IX1 == 4)     goto label890;
            
        label865:
            X1 = X + 1.0;
            goto label1000;
            
        label870:
            if (K1 == 2) goto label874;
            PLOT (X+1.5,Y-1.40,3);
            PLOT (X+1.5,Y-4.0*V,2);
            X1 = X + 1.5;
            if (QANZPA[1]) goto label872;
            goto label1000;
            
        label872:
            PLOT (X+1.5,Y-3.0,3);
            PLOT (X-1.0,Y-3.0,2);
            PLOT (X-1.0,Y-1.35,2);
            goto label1000;
            
        label874:
            PLOT (X-0.5,Y-1.12,3);
            if (QANZPA[2]) goto label876;
            PLOT (X-0.5,Y-4.0*V,2);
            X1 = X - 0.5;
            goto label1000;
            
        label876:
            PLOT (X-0.5,Y-2.5,2);
            PLOT (X+0.5,Y-2.5,2);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0*V,2);
            X1 = X + 0.5;
            goto label1000;
            
        label880:
            if (K1 == 2) goto label884;
            if (K1 == 3) goto label888;
            PLOT (X-1.5,Y-1.4,3);
            if (QANZPA[1]) goto label882;
            PLOT (X-1.5,Y-4.0*V,2);
            X1 = X - 1.5;
            goto label1000;
            
        label882:
            PLOT (X-1.5,Y-3.0,2);
            PLOT (X+1.5,Y-3.0,2);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.0*V,2);
            X1 = X + 1.5;
            goto label1000;
            
        label884:
            if (QANZPA[1]) goto label885;
            if (QANZPA[2]) goto label885;
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            X1 = X + 1.0;
            goto label1000;
            
        label885:
            PLOT (X-1.0,Y-1.35,3);
            if (QANZPA[2]) goto label886;
            PLOT (X-1.0,Y-4.0*V,2);
            X1 = X - 1.0;
            goto label1000;
            
        label886:
            PLOT (X-1.0,Y-2.5,2);
            PLOT (X+1.0,Y-2.5,2);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.0*V,2);
            X1 = X + 1.0;
            goto label1000;
            
        label888:
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.0*V,2);
            X1 = X + 0.5;
            goto label1000;
            
        label890:
            if (K1 == 1) X1 = X - 2.0;
            if (K1 == 2) X1 = X - 1.5;
            if (K1 == 3) X1 = X + 1.0;
            if (K1 == 4) X1 = X + 0.5;
            goto label1000;
            
        label895:
            X1 = X + XX + 0.5*IX1 + 0.5;
            if (QVAEST) X1 = X - XX - 0.5*IX1;
            QVAEST = true;
            goto label1000;

        label900:
            X1 = Convert.ToDouble(FELD[29]);
            Y1 = Convert.ToDouble(FELD[30]);

        label1000:
            if (QENTW && !QANZ) goto label1200;
            X2 = 0.0;
            Y2 = 0.0;
            if (!QANZ) goto label1300;
            X2 = XE[K4];
            Y2 = YE[K4];
            if (LHEIZ == 9 && J == NTT[2]) goto label1700;
            if (LHEIZ == 9 && IX == 8 && K1 == 0 && X1 < X) goto label1700;
            if (J > IZ1 && IX == 4) goto label1700;

            Y2PL = Y2;
            if (Y2VOR != 0.0) Y2PL = Y2VOR + 1.0*V;
            if (X2VOR-1.0*V > X1) Y2PL = Y2;
            if (NL > 0 && (X2VOR-X2)*FACT < 2.8*V) Y2PL = Y2VOR + 1.0*V;
            if (QENTW && Y2VOR == 0.0 && Math.Abs(X1-X2) < 7.2*V && (LHEIZ == 1 || LHEIZ == 2)) Y2PL = Y2PL + 1.0*V;
            if (QENTW && X1-X2 < 7.2*V) Y2PL = Y2PL + 1.0*V;
            if (IX == 6 && K1 == 1 && QENTW) Y2PL = Y2PL + 1.0*V;
            if (Y2VOR == 0.0 && K4 > 1) Y2PL = Y2PL + 1.0*V;
            L = NL + 1;
            if (J == IZ1 && LHEIZ == 1 && K1 == 1) L = NL;
            if (NL == 0) L = 0;
            DY = 0.75/FACTS;
            if (L > 0 && Y2PL == Y2) Y2PL = Y2PL + DY;
            if (X2VOR > X2 && (X2VOR-X2)*FACT <= 2.7*FACTS)
                Y2PL = Y2PL + DY*L;
            if (X2VOR > X2 && Math.Abs(X1VOR-X2VOR) < 3.8*V && (X2VOR-X2)*FACT > 2.7*FACTS && (X1VOR-X2)*FACT < 6.8*FACTS) Y2PL = Y2PL + DY*L;
            if (Y2PL-Y2 < DY*L) Y2PL = Y2+DY*L;
            if (IDAMPF != 0 && Y2VOR == 0.0 && L == 0) Y2PL = Y2PL+0.5*V;
            if (X1 < XSPT+1.0 && X2 > XSPT+1.0 && Y2PL < YSPT+4.8*V+1.5) Y2PL = YSPT + 4.8*V + 1.5;
            if (X1 > XSPT-3.8 && X2 < XSPT-3.8 && Y2PL < YSPT+4.8*V+1.5) Y2PL = YSPT + 4.8*V + 1.5;
            if (LHEIZ != 2) goto label1010;
            if (Y2PL < Y36-1.0*V) goto label1010;
            if (Y2PL < Y36+1.0*V) Y2PL = Y36+1.0*V;
            
        label1010:
            NEWPEN(3);
            if (J == IZ1 && LHEIZ == 2 && K1 == 0) goto label1120;

            PLOT (X1,Y1,3);
            PLOT (X1,Y2PL,2);
            PLOT (X2,Y2PL,2);
            PLOT (X2,Y2,2);

            if (KREUZ == 1) goto label1300;
            if (J == IZ1 && LHEIZ == 1 && K1 == 1) goto label1130;
            if (X1 < X2) goto label1070;

            if (X1-X2 < 3.8*V) goto label1040;
            DX = X2 + 2.0*V;
            if (X2 < XE[NANZEN] && XE[NANZEN]-X2 < 3.8*V) DX=XE[NANZEN]-1.8*V;
            UWA130(DX,Y2PL,1,0);
            if (KREUZ == 2) goto label1020;
            UWA131(DX,Y2PL,Convert.ToDouble(FELD[1]),Convert.ToDouble(FELD[2]),Convert.ToDouble(FELD[3]),Convert.ToDouble(FELD[4]),1,0);
            
        label1020:
            if (!QENTW) goto label1300;

            if (X1-X2 < 7.2*V) goto label1030;
            UWA130(X2+5.8*V,Y2PL,1,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X2+5.8*V,Y2PL,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),1,0);
            goto label1300;
            
        label1030:
            if (IX == 6 && K1 == 1 && IX1 > 1) goto label1060;
            UWA130(X2+2.0*V,Y2PL,2,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X2 + 2.0 * V, Y2PL, Convert.ToDouble(FELD[5]), Convert.ToDouble(FELD[6]), Convert.ToDouble(FELD[7]), Convert.ToDouble(FELD[8]), 2, 0);
            goto label1300;

        label1040:
            if (X1VOR-X2 < 3.8*V) goto label1050;
            if (X2VOR-X1 < 3.8*V) goto label1050;
            if (Y2PL > Y1-2.0) goto label1050;
            UWA130(X1,Y2PL+0.5*V,4,0);
            if (KREUZ == 2) goto label1060;
            UWA131(X1, Y2PL + 0.5 * V, Convert.ToDouble(FELD[1]), Convert.ToDouble(FELD[2]), Convert.ToDouble(FELD[3]), Convert.ToDouble(FELD[4]), 4, 0);
            goto label1060;
            
        label1050:
            UWA130(X1,Y2PL+0.5*V,3,0);
            if (KREUZ == 2) goto label1060;
            UWA131(X1, Y2PL + 0.5 * V, Convert.ToDouble(FELD[1]), Convert.ToDouble(FELD[2]), Convert.ToDouble(FELD[3]), Convert.ToDouble(FELD[4]), 3, 0);
            
        label1060:
            if (!QENTW) goto label1300;
            UWA130(X2,Y2PL-0.5*V,3,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X2,Y2PL-0.5*V,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),3,0);
            goto label1300;

        label1070:
            if (X2-X1 < 3.8*V) goto label1100;
            UWA130(X2-2.0*V,Y2PL,1,0);
            if (KREUZ == 2) goto label1080;
            UWA131(X2-2.0*V,Y2PL,Convert.ToDouble(FELD[1]),Convert.ToDouble(FELD[2]),Convert.ToDouble(FELD[3]),Convert.ToDouble(FELD[4]),1,0);
            
        label1080:
            if (!QENTW) goto label1300;
            if (X2-X1 < 7.2*V) goto label1090;
            UWA130(X2-5.2*V,Y2PL,1,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X2-5.2*V,Y2PL,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),1,0);
            goto label1300;
            
        label1090:
            UWA130(X2-1.8*V,Y2PL,2,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X2 - 1.8 * V, Y2PL, Convert.ToDouble(FELD[5]), Convert.ToDouble(FELD[6]), Convert.ToDouble(FELD[7]), Convert.ToDouble(FELD[8]), 2, 0);
            goto label1300;

        label1100:
            UWA130(X1,Y2PL+0.5*V,4,0);
            if (KREUZ == 2) goto label1110;
            UWA131(X1, Y2PL + 0.5 * V, Convert.ToDouble(FELD[1]), Convert.ToDouble(FELD[2]), Convert.ToDouble(FELD[3]), Convert.ToDouble(FELD[4]), 4, 0);
            
        label1110:
            if (!QENTW) goto label1300;
            UWA130(X2,Y2PL-0.5*V,3,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X2,Y2PL-0.5*V,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),3,0);
            goto label1300;

        label1120:
            Y1 = Y36;
            if (X2 > X36) X1 = X2;
            if (IX1 == 1 || IX1 == 2) X1 = X + 1.5;
            PLOT (X1,Y1,3);
            PLOT (X1,Y2PL,2);
            PLOT (X2,Y2PL,2);
            PLOT (X2,Y2,2);
            goto label1300;

        label1130:
            if (QENTW) Y2PL = Y2PL + 1.0;
            UWA130(X1,Y2PL+0.5*V,3,0);
            if (KREUZ == 2) goto label1140;
            UWA131(X1,Y2PL+0.5*V,Convert.ToDouble(FELD[1]),Convert.ToDouble(FELD[2]),Convert.ToDouble(FELD[3]),Convert.ToDouble(FELD[4]),3,0);
            
        label1140:
            if (!QENTW) goto label1300;
            UWA130(X1,Y2PL-0.5*V,3,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X1, Y2PL - 0.5 * V, Convert.ToDouble(FELD[5]), Convert.ToDouble(FELD[6]), Convert.ToDouble(FELD[7]), Convert.ToDouble(FELD[8]), 3, 0);
            goto label1300;

        label1200:
            if (!QENTW) goto label1300;
            if (LHEIZ == 9 && J == NTT[2]) goto label1800;
            if (J > IZ1 && IX == 4) goto label1800;
            if (J > IZ1 && IX == 2) goto label1800;
            if (Y2VOR == 0.0) Y2VOR = 4.0/FACT + 3.7*V + 2.0 + 5.0*V;
            if (X2 == 0.0) X2 = X1 - 3.6*V - (IX1-K1)*0.5;
            Y2VOR = Y2VOR + 1.0*V;
            Y2PL = Y2VOR;
            NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y2PL,2);
            PLOT (X2,Y2PL,2);
            if (X2VOR != 0.0) PLOT (X2,Y2PL-1.0*V,2);
            if (X2VOR != 0.0) goto label1230;

            if (NRABC[NENTW] != 0) goto label1220;
            
            for(LL = 4; LL <= 26; LL++) //DO 1210 LL = 4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[NENTW] = LL;
                goto label1220;
            }   //1210 CONTINUE
            
        label1220:
            LL = NRABC[NENTW];
            A1 = Convert.ToDouble(ABCD[LL]);
            // UWA132(X2,Y2PL,0.5,0.0,0.0,4,0,2,1,1,1,A1);

        label1230:
            if (KREUZ == 1) goto label1300;
            if (X1 < X2) goto label1250;
            if (X1-X2 < 3.8*V) goto label1240;
            UWA130(X2+1.8*V,Y2PL,1,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X2 + 1.8 * V, Y2PL, Convert.ToDouble(FELD[5]), Convert.ToDouble(FELD[6]), Convert.ToDouble(FELD[7]), Convert.ToDouble(FELD[8]), 1, 0);
            goto label1300;
            
        label1240:
            UWA130(X1,Y2PL+0.5*V,3,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X1,Y2PL+0.5*V,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),3,0);
            goto label1300;
            
        label1250:
            if (X2-X1 < 3.8*V) goto label1260;
            UWA130(X2-1.8*V,Y2PL,1,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X2-1.8*V,Y2PL,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),1,0);
            goto label1300;
            
        label1260:
            UWA130(X1,Y2PL+0.5*V,3,0);
            if (KREUZ == 2) goto label1300;
            UWA131(X1,Y2PL+0.5*V,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),3,0);

        label1300:
            if (NL == 0) goto label1400;
            if (!QANZ) goto label1330;
            
            for(L = 1; L <= NL; L++) //DO 1320 L = 1,NL
            {
                N = L + 8;
                if (J == IZ1 && (LHEIZ == 1 && K1 == 1 || LHEIZ == 2 && K1 == 0 )) goto label1310;
                if (K4 < NANZEN && XE[K4+1] > X2) goto label1310;
                Y2 = Y2PL;
                if (X2VOR > 0.0 && X2VOR < X2) Y2 = Y2PL - 1.0*V;
                if (X2VOR > 0.0 && X2VOR < X2 && K4 > 2 && XE[K4-2] < X2)
                    Y2 = Y2PL - 2.0*V;
                if (K4 == 1) Y2 = YE[K4];
                if (K4 == 1) DY = 0.0;
                //UWA132(X2,Y2-DY*L,2.2,FELD[N],0.0,3,1,1,1,N+8,N+8,FELD);
                continue;
                
            label1310:
                Y2 = Y2 + 0.5*DY + DY*(L-1);
                // UWA132(X2,Y2,2.2,FELD[N],0.0,4,1,1,1,N+8,N+8,FELD);
            }   //1320 CONTINUE
            goto label1400;

        label1330:
            NEWPEN(3);
            if (LHEIZ == 9 && J == NTT[2]) goto label1900;
            if (J > IZ1 && IX == 4) goto label1900;
            PLOT (X1,Y1,3);
            if (Y2VOR == 0.0) Y2VOR = 4.0/FACT + 3.7*V + 2.0 + 4.5*V;
            Y2VOR = Y2VOR + 1.3*V;
            Y2PL = Y2VOR;
            PLOT (X1,Y2VOR,2);
            if (X2 == 0.0) X2 = X1 - 3.6*V - (IX1-K1)*0.5;
            X2VOR = X2;
            AROHD(X1,Y2VOR,X2-0.5*V,Y2VOR,0.2*V,0.0,16);
            NEWPEN(1);
            
            for(L = 1; L <= NL; L++) //DO 1340 L=1,NL
            {
                N = L + 16;
                UWA134(X2-0.5*V*L,Y2VOR,0.25,0.2,FELD[N]);
            }   //1340 CONTINUE
            if (KREUZ == 1) goto label1400;
            UWA130(X1-1.8*V,Y2VOR,1,0);
            if (KREUZ == 2) goto label1400;
            UWA131(X1 - 1.8 * V, Y2VOR, Convert.ToDouble(FELD[1]), Convert.ToDouble(FELD[2]), Convert.ToDouble(FELD[9]), Convert.ToDouble(FELD[4]), 1, 0);

        label1400:
            if (!QANZ) goto label1405;
            if (X1VOR == 0.0) X1VOR = X1;
            if (X2VOR == 0.0) X2VOR = X2;
            if (X1 < X1VOR) X1VOR = X1;
            if (X2 < X2VOR) X2VOR = X2;
            
        label1405:
            Y2VOR = Y2PL;
            if (J == IZ1 && LHEIZ == 2 && K1 == 0) Y2VOR = Y2PL - 1.0;

            if (J == KOMP1 && KOMP2 > 0) NSTB = 0;
            if (IX == 1 || IX == 3 || IX == 4) NSTB = 0;
            if (NSTB == 0) return;
            LL = NSTB;
            LL = NRABC[LL];
            if (LL > 0) goto label1430;
            XP1 = X;
            if (IX == 2) goto label1420;
            if (J == KOMP2) XP1 = X - 2.5;
            if (J == KOMP1 && KOMP2 == 0) XP1 = X - 2.0;
            if (IX != 6) goto label1410;
            N = J - 1;
            XP1 = XTURB[N]-XXTURB[N];
            if (IWESEL > 0) XP1 = XTURB[N]-0.6/FACT*FACTS;
            
        label1410:
            NEWPEN(3);
            if (NSTB > 0) PLOT (X1,Y-(2.0+II*0.25)*V,3);
            if (NSTB > 0) PLOT (XP1-0.6*V*II,Y-(2.0+0.25*II)*V,2);
            if (NSTB < 0) AROHD(XP1-0.6*V*II,Y-(2.0+0.25*II)*V,X1,Y-(2.0+0.25*II)*V,0.2,0.0,16);
            II = II - 1;
            return;
            
        label1420:
            FELD[30] = AKARTA;
            XP1 = X + XX + 0.5*IX1 - 0.5*K1;
            // UWA132(XP1,Y1-2.0*V,2.2,0.0,0.0,3,1,2,0,30,30,FELD);
            return;
            
        label1430:
            FELD[30] = ABCD[LL];
            XP1 = X + XX + 0.5*IX1;
            if (J == IZ1) goto label1440;
            YP1 = Y - 2.5;
            if (NSTB > 0) {
                // UWA132(X1,YP1,2.2+0.5*K1,0.0,0.0,3,1,2,1,30,30,FELD);
            }
            if (NSTB < 0) {
                // UWA132(X1,YP1,2.2+0.5*K1,0.0,0.0,3,1,2,0,30,30,FELD);
            }
            return;
            
        label1440:
            P1 = Y - 4.0*V;
            if (NSTB > 0) {
                // UWA132(X1,YP1,2.2+0.5*(IX1-K1),0.0,0.0,4,1,2,1,30,30,FELD);
            }
            if (NSTB < 0) 
            {
                // UWA132(X1,YP1,2.2+0.5*(IX1-K1),0.0,0.0,4,1,2,0,30,30,FELD);
            }
            return;

        label1500:
            YY = YYTURB[J];
            Y1 = Y + YY;
            X1 = X - 4.0*V;
            if (IX == 3 && J == 2) X1 = X1 - XX - 0.5*IX1;
            if (IX == 8 && J == 2) X1 = X1 - XX - 0.5*IX1;
            if (NL == 0) goto label1520;
            
            for(L = 1; L <= NL; L++) //DO 1510 L=1,NL
            {
                XP1 = X1 - 0.7*(L-1)*V;
                // UWA132(XP1,Y1,2.2,FELD[L+8],0.0,1,1,1,1,L+16,L+16,FELD);
            }   //1510 CONTINUE
            
        label1520:
            if (NX == NL) return;
            L2 = NL + 1;
            
            for(L = L2; L <= NX; L++) //DO 1530 L=L2,NX
            {
                XP1 = X1 - 0.7*(L-1);
                // UWA132(XP1,Y1,2.2,FELD[L+8],0.0,2,1,1,0,L+16,L+16,FELD);
            }   //1530 CONTINUE
            return;

        label1550:
            X1 = X + XX + 0.5*IX1;
            if (NL == 0) goto label1570;
            
            for(L = 1; L <= NL; L++) //DO 1560 L=1,NL
            {
                Y1 = Y - 2.0 - 1.5*V - 0.5*IX1 + 0.7*L*V;
                if (IX1 <= 1) Y1 = Y - 3.0 - 1.5*V + 0.7*L*V;
                // UWA132(X1,Y1,2.2,FELD[L+8],0.0,3,1,1,0,L+16,L+16,FELD);
            }   //1560 CONTINUE
            
        label1570:
            if (NX == NL) return;
            
            L2 = NL + 1;
            for(L = L2; L <= NX; L++) //DO 1580 L=L2,NX
            {
                Y1 = Y - 2.0 - 0.5*V - 0.5*IX1 + 0.7*L*V;
                if (IX1 <= 1)
                    Y1 = Y - 2.0 - 0.5*V + 0.7*L*V;
                // UWA132(X1,Y1,2.2,FELD[L+8],0.0,4,1,1,0,L+16,L+16,FELD);
            }    //1580 CONTINUE
            return;
            
        label1600:
            X1 = Convert.ToDouble(FELD[29]);
            Y1 = Convert.ToDouble(FELD[30]);
            // UWA132(X1,Y1,2.2,FELD[NL+8],0.0,1,1,1,1,NL+16,NL+16,FELD);
            return;

        label1700:
            IX3 = (int)NANZ[K4];
            if (NRABC[IX3] > 0) goto label1720;
            
            for(LL = 4; LL <= 26; LL++) //DO 1710 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[IX3] = LL;
                goto label1720;
            }   //1710 CONTINUE
            
        label1720:
            LL = NRABC[IX3];
            A1 = Convert.ToDouble(ABCD[LL]);
            NEWPEN(3);
            PLOT (X2,Y2,3);
            X2 = X2 + 0.5*V;
            PLOT (X2,Y2,2);
            NEWPEN(1);
            UWA134(X2+0.5*V,Y2,0.25,0.2,A1.ToString());
            NL = NL + 1;
            FELD[9] = FELD[3];
            FELD[NL+16] = A1.ToString();
            X2 = 0.0;
            
        label1800:
            if (!QENTW) goto label1900;
            
            if (NRABC[NENTW] != 0) goto label1820;
            
            for(LL = 4; LL <= 26; LL++) //DO 1810 LL = 4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[NENTW] = LL;
                goto label1820;
            }   //1810 CONTINUE
            
        label1820:
            LL = NRABC[NENTW];
            if (NL == 0) goto label1830;
            goto label1900;
            
        label1830:
            A1 = Convert.ToDouble(ABCD[LL]);
            NEWPEN(1);
            PLOT (X1,Y1,3);
            if (IFLUT[J] > 1) goto label1840;
            Y1 = Y1 - 1.0*V*K1 - XENTW - 2.0*V;
            YP = Y2VOR + 1.0*V*(IX1+1);
            if (YP > Y1) Y1 = YP;
            PLOT (X1,Y1,2);
            X1 = X1 - 0.5*(K1-1);
            PLOT (X1,Y1,2);
            goto label1850;
            
        label1840:
            IX2 = IX1;
            for(LL = 1; LL <= IX1; LL++) //DO 1845 LL=1,IX1
                if (QANZPA[LL]) IX2 = IX2 - 1;  //1845 CONTINUE
            
            Y1 = Y1 - 1.0*V*(IX2-K1) + XENTW - 2.0*V + 1.0;
            YP = Y2VOR + 1.0*V*K1;
            if (YP > Y1) Y1 = YP;
            PLOT (X1,Y1,2);
            X1 = X1 - 0.5*(IX1-K1);
            PLOT (X1,Y1,2);
            
        label1850:
            // UWA132(X1,Y1,3.7,0.0,0.0,4,0,2,1,1,1,A1);
            if (KREUZ == 1) return;
            UWA130(X1-1.8*V,Y1,1,0);
            if (KREUZ == 2) return;
            UWA131(X1-1.8*V,Y1,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),1,0);
            return;
            
        label1900:
            NEWPEN(3);
            PLOT (X1,Y1,3);
            if (IFLUT[J] > 1) goto label1910;
            Y1 = Y1 - 1.0*V*K1 - XENTW - 2.0*V;
            if (QENTW) XENTW = XENTW + 1.0*V;
            YP = Y2VOR + 1.0*V*IX1;
            if (K1 == 0 && YP > Y1) Y1 = YP;
            PLOT (X1,Y1,2);
            X1 = X1 - 0.5*(K1-1);
            PLOT (X1,Y1,2);
            goto label1920;
            
        label1910:
            if (QENTW && K1 > 1) XENTW = XENTW + 1.0*V;
            IX2 = IX1;
            
            for(LL = 1; LL <= IX1; LL++) //DO 1915 LL=1,IX1
                if (QANZPA[LL]) IX2 = IX2 - 1;  //1915 CONTINUE
            
            Y1 = Y1 - 1.0*V*(IX2-K1) + XENTW - 2.0*V + 1.0;
            YP = Y2VOR + 1.0*V*K1;
            if (K1 == 0 && YP > Y1) Y1 = YP;
            PLOT (X1,Y1,2);
            X1 = X1 - 0.5*(IX1-K1);
            PLOT (X1,Y1,2);
            
        label1920:
            // UWA132(X1,Y1,3.7,0.0,0.0,4,1,2,1,1,1,FELD[17]);
            if (NL <= 1) goto label1940;
            
            for(LL = 2; LL <= NL; LL++) //DO 1930 LL=2,NL
                UWA134(X1-3.7*V-(LL-1)*0.5*V,Y1,0.25,0.2,FELD[LL+16]);   //1930 CONTINUE
            
        label1940:
            if (KREUZ == 1) return;
            UWA130(X1-1.8*V,Y1,1,0);
            if (QENTW) UWA130(X1-1.8*V,Y1,2,0);
            if (KREUZ == 2) return;
            UWA131(X1-1.8*V,Y1,Convert.ToDouble(FELD[1]),Convert.ToDouble(FELD[2]),Convert.ToDouble(FELD[9]),Convert.ToDouble(FELD[4]),1,0);
            
            if (QENTW) 
                UWA131(X1-1.8*V,Y1,Convert.ToDouble(FELD[5]),Convert.ToDouble(FELD[6]),Convert.ToDouble(FELD[7]),Convert.ToDouble(FELD[8]),2,0);
            return;
        }   //END

        
        static void UWA127()
        {   
            //ENTRY SPTABD
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /KOLBEN/ GKOLB,GKOLB1
            //COMMON /PSTABS/ PST905,PST906,PST907,PST908
            //COMMON /PRINT/ IWR, TX0, TX13, TX14, TX15, TX16, TX17, TX
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /SPT/ XSPT,YSPT
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            double V = FACTS/FACT;
            int ISPT = 0, ISPTA = 0, L1 = 0, L = 0, LL = 0, LTGSTB = 0;
            if (QAMI) 
                V = 1.0;
            ISPT = 0;
            IZ1 = IHENDE + 1;
            
        label100:
            IZ1 = IZ1 - 1;
            if (IZ1 == 1) return;
            if (LTYP[IZ1] != 3) goto label100;
            if (N1[IZ1] == 0) goto label100;
            
            IZ4 = N2[IZ1];
            A1 = PLTG[IZ4]*TX2;
            if (QENGL) A1 = PLTG[IZ4]/0.034532;
            A2 = ELTG[IZ4]*TX1;
            A3 = GLTG[IZ4]*TX3;
            A4 = VISUM(PLTG[IZ4],ELTG[IZ4],03);
            if (A4 < 0.0) A4 = A4 + 273.15;
            A4 = A4 - 273.15;
            if (A4 > 0.0) A4 = A4*TX0 + TX5;
            if (A4 < 0.0&& QENGL) A4 = -(100.0+A4*100.0);
            NEWPEN(3);
            PLOT (XSPT,YSPT,3);
            if (QAMI) X = XSPT + 1.3;
            if (!QAMI) X = XSPT + 1.6*V;
            PLOT (X,YSPT,2);
            NEWPEN(1);
            if (KREUZ == 1) goto label110;
            if (!QENGL) UWA130(X-0.5*V,YSPT,1,1);
            if (QENGL) UWA130(X-0.5*V,YSPT,9,1);
            if (KREUZ == 2) goto label110;
            if (!QENGL) UWA131(X-0.5*V,YSPT,A1,A2,A3,A4,1,1);
            if (QENGL) UWA131(X-0.5*V,YSPT,A1,A2,A3,A4,9,1);
            
        label110:
            ISPTA = 0;
            if (IHENDE == INENDE) goto label150;

            L1 = IHENDE + 1;
            
        label120:
            for(L = L1; L <= INENDE; L++) //DO 140 L = L1,INENDE
            {
                IZ3 = NN1[L];
                if (IZ3 == 0) continue;
                if (IZ3 != IZ4) continue;
                IZ4 = NN2[L];
                if (LTYP[L] != 0) goto label130;
                
                NEWPEN(1);
                PLOT (X,YSPT,3);
                PLOT (X,YSPT-1.2*V,2);
                PLOT (X+0.6*V,YSPT-1.2*V,2);
                PLOT (X+0.6*V,YSPT+1.2*V,2);
                PLOT (X,YSPT+1.2*V,2);
                PLOT (X,YSPT,2);
                if (QTEXT) SYMBOL (X+0.4*V,YSPT-1.1*V,XH*V,"CONDENSER",90.0,9);
                if(!QTEXT)SYMBOL (X+.4*V,YSPT-1.1*V,XH*V,"KONDENSATOR",90.0,11);
                X = X + 0.6*V;
                ISPTA = 1;
                goto label120;
                
            label130:
                if (LTYP[L] != 3) goto label120;
                
                AROHD(X,YSPT,X+0.6,YSPT,0.2,0.0,16);
                CIRCL(X+1.1,YSPT,0.0,360.0,0.25,0.25,0.0);
                AROHD(X+0.7,YSPT,X+1.0,YSPT,0.2,0.3,16);
                X = X + 1.1;
                ISPTA = 2;
                goto label120;
            }   //140 CONTINUE
            
            if (ISPTA == 0) goto label150;

            if (NRABC[IZ4] > 0) goto label142;
            
            for(LL = 4; LL <= 26; LL++) //DO 141 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[IZ4] = LL;
                UWA114(IZ4);
                goto label142;
            }   //141 CONTINUE
            
        label142:
            LL = NRABC[IZ4];
            A1 = Convert.ToDouble(ABCD[LL]);
            // UWA132(X,YSPT,1.0,0.0,0.0,3,0,2,1,1,1,A1);
            A2 = ELTG[IZ4]*TX1;
            A3 = GLTG[IZ4]*TX3;
            A4 = VISUM(PLTG[IZ4],ELTG[IZ4],03);
            if (A4 < 0.0) A4 = A4 + 273.15;
            A4 = A4 - 273.15;
            if (A4 > 0.0) A4 = A4*TX0+TX5;
            if (A4 < 0.0&& QENGL) A4 = -(100.0+A4*100.0);
            if (KREUZ == 1) goto label160;
            UWA130(X+0.5*V,YSPT,1,1);
            if (KREUZ == 2) goto label160;
            UWA131(X+0.5*V,YSPT,0.0,A2,A3,A4,1,1);
            goto label160;

        label150:
            if (NRABC[IZ4] > 0) goto label152;
            
            for(LL = 4; LL <= 26; LL++) //DO 151 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[IZ4] = LL;
                UWA114(IZ4);
                goto label152;
            }   //151 CONTINUE
            
        label152:
            LL = NRABC[IZ4];
            A1 = Convert.ToDouble(ABCD[LL]);
            // UWA132(X,YSPT,0.2,0.0,0.0,3,1,2,1,1,1,A1);

        label160:
            for(LL = 1; LL <= ANZTRB; LL++) //DO 220 JJ = 1,ANZTRB
            {
                if (NITRE[JJ] != 7) continue;
                if (ISPT == 1) goto label100;
                ISPT = 1;
                IZ1 = NTTETB[JJ-1] + 1;
                IZ2 = NTTETB[JJ];
                IX3 = ITTEND[IZ2];
                UWA006("RDISC", 52,IZ2);
                Z2 = PT[IX3,K];
                for(J = IZ1; J <= IZ2; J++) //DO 210 J = IZ1,IZ2
                {
                    UWA006("RDISC", 52,J);
                    UWA006("RDISC", 59,J);
                    IZ3 = ITTEND[J];
                    for(I = 1; I <= IZ3; I++) //DO 200 I = 1,IZ3
                    {
                        UWA010(I,1);
                        if (KT2 == 0) continue;
                        K1 = 0;
                        UWA044(I,1);
                        
                        for(LL = 1; LL <= 6; LL++) //DO 190 LL = 1,6
                        {
                            LTGSTB = LTGAB[LL,KT2];
                            if (LTGSTB == 0) continue;
                            Z1 = PLTG[LTGSTB];
                            if (Z1 == PT[IZ3,K] || Z1 == Z2) continue;
                            K1 = K1 + 1;
                            A1 = 0.0;
                            if (Z1 == PST905 || Z1 == PST907) A1 = Convert.ToDouble(ABCD[3]);
                            if (Z1 == PST906 || Z1 == PST908) A1 = Convert.ToDouble(ABCD[2]);
                            IZ5 = NTTETB[1]-1;
                            if (Z1 == PNE[IZ5]) GKOLB = GKOLB + GLTG[LTGSTB]*TX3;
                            if (Z1 == PNE[IZ5-1]) GKOLB1 = GKOLB1 + GLTG[LTGSTB]*TX3;
                            if (Z1 == PNE[IZ3]) 
                                A1 = Convert.ToDouble(ABCD[1]);
                            if (Z1 == PNE[IZ3-1]) 
                                A1 = Convert.ToDouble(ABCD[4]);
                            if (A1 == 0.0) continue;
                            A2 = GLTG[LTGSTB]*TX3;
                            NEWPEN(3);
                            
                            for(int M1 = 1; M1 <= 10; M1++) //DO 170 M1 = 1,10
                            {
                                IZ4 = LZUT[M1];
                                if (IZ4 == 0) continue;
                                if (IZ4 == LTGSTB) goto label180;
                            }   //170 CONTINUE
                            
                            if (I <= 4) {
                                // UWA132(XSPT-1.05,YSPT+1.5+0.7*K1*V,2.0,A2,0.0,4,1,1,1,1,1,A1);
                            }
                            if (I > 4) {
                                // UWA132(XSPT-1.05,YSPT-0.7*K1*V,2.0,A2,0.0,4,1,1,1,1,1,A1);
                            }
                            continue;   // goto label190;
                            
                        label180:
                            if (I <= 4) {
                                // UWA132(XSPT-1.05,YSPT+1.5+0.7*K1*V,2.0,A2,0.0,3,1,1,0,1,1,A1);
                            }
                            if (I > 4) {
                                // UWA132(XSPT-1.05,YSPT-0.7*K1*V,2.0,A2,0.0,3,1,1,0,1,1,A1);
                            }
                        }   //190 CONTINUE

                        if (I > 4) continue;    // goto label200;
                        
                        NEWPEN(1);
                        PLOT (XSPT-1.05,YSPT+1.5,3);
                        PLOT (XSPT-1.05,YSPT+2.0+0.7*K1/FACT*FACTS,2);
                        PLOT (XSPT-0.95,YSPT+1.5,3);
                        PLOT (XSPT-0.95,YSPT+2.0+0.7*K1/FACT*FACTS,2);
                    }   //200 CONTINUE
                }   //210 CONTINUE
            }   //220 CONTINUE
            goto label100;
        }   //END

        
        static void UWA128()
        {
            //ENTRY NAMEN
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC,QOFFEN,QACPSI
            //LOGICAL QUPOCO
            //CHARACTER * 30 UEBER1
            //CHARACTER * 40 UEBER2, UEBER3
            //CHARACTER * 20 BESCHR
            //CHARACTER * 6 NRPROJ
            //CHARACTER * 5 NUMMER
            double[] W1 = new double[21], W2 = new double[21], W3 = new double[21], W4 = new double[21];
            //DIMENSION ITASK[20]
            //integer zeit[3],datum[3]
            //character pkrtit1*32,pkrtit2*40,pkrtit3*40,pkrdate*8

            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /SCHRFT/ IP1,IP2,IP3,UEBER1 ,UEBER2 ,UEBER3 ,
            //1 IPL(160),BESCHR(160) ,NUMMER,NINDEX,KDRPL,
            //1 KTEXT,NRPROJ,NAME
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /FRANKF/ QOFFEN,QACPSI,QUPOCO,IWVB
            //COMMON /KONDTR/ UEEP[3],ELEP[3],PELEP[3]
            //COMMON /ELEKTR/ PKLEMM,PGENN,ETAGLR,ETAMV,ETAGV,COSPHI,PH2,MAKEUP
            //1 ,SCR,POL,VOLTG,FLUTND,ENDSCH,DREHZ,PKLEMA
            //COMMON /HEAT/ HEAT1,HEAT2,HEAT3,HEAT4,HEAT5,HEAT6,HEAT7,HEAT8,
            //1 PFDPL,TFDPL
            //COMMON /REGEL/ KREGEL
            //COMMON /DINA4/ IDINA4,XDINA4
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            //COMMON /PASCAL/ IPASC
            int N = 0, IPLL = 0, LL = 0, L1 = 0;
            double X1 = 0, XP = 0, YP = 0, XW = 0, HEATR = 0, R = 0, X2 = 0, Y1 = 0, Y2 = 0;
            FACTOR (1.0);

            if (QAMI) goto label30;

            NEWPEN(1);
            XH = 0.2;
            X = 4.0;
            Y = 3.8;
            N = 0;
            
            for(I = 1; I <= 160; I++) //DO 10 I = 1,160
            {
                if (IPL[I] == 0) continue;
                if (N >= 15) goto label20;
                IPLL = IPL[I];
                if (NRABC[IPLL] == 0) continue;
                LL = NRABC[IPLL];
                if (N == 5) X = 11.0;
                if (N == 5) Y = 7.3;
                if (N == 10) X = 18.0;
                if (N == 10) Y = 10.8;
                CIRCL(X,Y-N*0.7,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X-0.3,Y-0.1-N*0.7,XH,ABCD[LL],0.0,1);
                SYMBOL (X+0.5,Y-0.1-N*0.7,XH,BESCHR[I],0.0,20);
                N = N + 1;
            }   //10 CONTINUE

        label20:
            NEWPEN(3);
            PLOT (30.5-XDINA4,0.5,3);
            PLOT (30.5-XDINA4,4.0,2);
            PLOT (41.5-XDINA4,4.0,2);
            PLOT (41.5-XDINA4,2.0,3);
            PLOT (30.5-XDINA4,2.0,2);
            PLOT (36.2-XDINA4,2.0,3);
            PLOT (36.2-XDINA4,0.5,2);
            
        label30:
            X = 36.0 - XDINA4;
            if (QAMI) X = 35.5;
            if (IP1 == 0) goto label40;
            
            Y = 3.4;
            if (QAMI) Y = 1.8;
            L1 = IP1;
            Z = IP1;
            XH = 0.4;
            if (IP1 > 25) XH = 0.35;
            X1 = X - XH*Z/2.0;
            NEWPEN(2);
            SYMBOL (X1,Y,XH,UEBER1,0.0,L1);
            
        label40:
            if (IP2 == 0) goto label50;
            
            Y = 2.8;
            if (IP3 == 0) Y = 2.4;
            if (QAMI) Y = 1.3;
            if (QAMI && IP3 == 0) Y = 1.1;
            L1 = IP2;
            Z = IP2;
            XH = 0.25;
            if (IP1 < 21 && IP2 < 34) XH = 0.3;
            X1 = X - XH*Z/2.0;
            NEWPEN(1);
            SYMBOL (X1,Y,XH,UEBER2 ,0.0,L1);
            
        label50:
            if (IP3 == 0) goto label60;
            
            Y = 2.2;
            if (IP2 == 0) Y = 2.4;
            if (QAMI) Y = 0.8;
            if (QAMI && IP2 == 0) Y = 1.1;
            L1 = IP3;
            Z = IP3;
            XH = 0.25;
            if (IP1 < 21 && IP3 < 34) XH = 0.3;
            X1 = X - XH*Z/2.0;
            NEWPEN(1);
            SYMBOL (X1,Y,XH,UEBER3 ,0.0,L1);

        label60:
            NEWPEN(2);
            X = 36.6 - XDINA4;
            Y = 1.4;
            if (QAMI) X = 0.5;
            XH = 0.27;
            Y = 0.8;
            bhel( 36.3 ,0.95, 0.043, 0.0);
            SYMBOL (37.5,1.5,0.2,"  BHARAT HEAVY ",0.0,19);
            SYMBOL (37.5,1.2,0.2,"ELECTRICALS LIMITED",0.0,19);
            SYMBOL (37.5,0.9,0.2,"    HYDERABAD   ",0.0,19);
            NEWPEN(1);
            if (QAMI) goto label80;
            
            NEWPEN(2);
            X1 = 30.7 - XDINA4;
            if(!QTEXT) SYMBOL (X1,1.5,.3,"WAERMESCHALTPLAN",0.0,16);
            if (QTEXT) SYMBOL (X1,1.5,0.3,"HEAT FLOW DIAGRAM",0.0,17);
            NEWPEN(1);
            if (KREUZ > 0) goto label110;

            SYMBOL (30.7,1.15,0.2,"Drg. No. : ",0.0,11);
            SYMBOL (30.7,0.75,0.2,"Date : ",0.0,11);
            //DATTIM (ZEIT[1],ZEIT[2],ZEIT[3],DATUM[2],DATUM[1],DATUM[3],ICPU);
            //write(pkrdate,'(i2,1h/,i2,1h/,i2)') datum;
            SYMBOL (999.0,999.0,0.2, DateTime.Now.ToString("MM/dd/yyyy"),0.0,8);
            goto label90;
            
        label80:
            if (KREUZ > 0) goto label100;
            SYMBOL (3.0,0.55,0.2,NRPROJ,0.0,6);
            SYMBOL (999.0,999.0,0.2,"-WT-TDT-",0.0,8);
            SYMBOL (999.0,999.0,0.2,NUMMER,0.0,5);
            SYMBOL (999.0,999.0,0.2," ",0.0,1);
            SYMBOL (999.0,999.0,0.2,NINDEX,0.0,2);
            SYMBOL (999.0,999.0,0.2," MUELHEIM,  ", 0.0,15);
            //RHTMOD(ITASK);
            SYMBOL (999.0,999.0,0.2,ITASK[11].ToString(),0.0,4);
            SYMBOL (999.0,999.0,0.2,ITASK[12].ToString(),0.0,4);
            SYMBOL (999.0,999.0,XH," ",0.0,1);
            SYMBOL (999.0,999.0,0.2,NAME,0.0,4);
            PLOT (39.0,4.8,3);
            PLOT (39.0,3.8,2);
            PLOT (37.8,4.3,3);
            PLOT (41.2,4.3,2);
            X = 37.8;
            Y = 4.5;
            goto label100;
            
        label90:
            NEWPEN(1);
            PLOT (26.0-XDINA4,2.8,3);
            PLOT (29.3-XDINA4,2.8,2);
            PLOT (27.2-XDINA4,3.3,3);
            PLOT (27.2-XDINA4,2.3,2);
            X = 26.0 - XDINA4;
            Y = 3.0;
            
        label100:
            if (QTECHN) SYMBOL (X,Y,0.2,"AT KCAL/KG",0.0,15);
            if (QENGL) SYMBOL (X,Y,0.2,"PSIA  BTU/LB",0.0,14);
            if (QSI && IPASC == 0)
                SYMBOL (X,Y,0.2,"BAR KJ/KG ",0.0,13);
            if (QSI && IPASC == 1)
                SYMBOL (X,Y,0.2,"KPA KJ/KG",0.0,13);
            if (QTECHN) SYMBOL (X,Y-0.6,0.2,"T/H  C   (X)  ",0.0,16);
            if (QENGL && QTEXT)
                SYMBOL (X,Y-0.6,0.2,"LB/HR F OR",0.0,14);
            if (QENGL && !QTEXT)
                SYMBOL (X,Y-0.6,0.2,"LB/HR F ODER",0.0,16);
            if (QSI) SYMBOL (X,Y-0.6,0.2,"KG/S C (X)",0.0,16);
            if (QENGL && QTEXT)
                SYMBOL (X+1.4,Y-1.0,0.2,"% MOISTURE",0.0,10);
            if (QENGL && !QTEXT)
                SYMBOL (X+1.4,Y-1.0,0.2,"% NAESSE",0.0,8);
            CIRCL(X+1.9,Y-0.4,0.0,360.0,0.05,0.05,0.0);
            X = 25.5 - XDINA4;
            if (QAMI) X = 37.3;
            Y = 1.5;
            if (QAMI) Y = 3.1;
            if (QTEXT && QENGL)
                SYMBOL (X,Y,0.2,"M..MASS FLOW..LB/HR",0.0,19);
            if (QTEXT && QENGL)
                SYMBOL (X,Y-0.5,0.2,"H..ENTHALPY..BTU/LB",0.0,19);
            if (QTEXT && QSI)
                SYMBOL (X,Y,0.2,"M..MASS FLOW..KG/S",0.0,18);
            if (QTEXT && QSI)
                SYMBOL (X,Y-0.5,0.2,"H..ENTHALPY..KJ/KG",0.0,18);
            if (QTEXT && QTECHN)
                SYMBOL (X,Y,0.2,"M..MASS FLOW..T/H",0.0,17);
            if (QTEXT && QTECHN)
                SYMBOL (X,Y-0.5,0.2,"H..ENTHALPY..KCAL/KG",0.0,20);
            if (!QTEXT && QENGL)
                SYMBOL (X,Y,0.2,"M..MASSENSTROM..LB/HR",0.0,21);
            if (!QTEXT && QENGL)
                SYMBOL (X,Y-0.5,0.2,"H..ENTHALPIE..BTU/LB",0.0,20);
            if (!QTEXT && QSI)
                SYMBOL (X,Y,0.2,"M..MASSENSTROM..KG/S",0.0,20);
            if (!QTEXT && QSI)
                SYMBOL (X,Y-0.5,0.2,"H..ENTHALPIE..KJ/KG",0.0,19);
            if (!QTEXT && QTECHN)
                SYMBOL (X,Y,0.2,"M..MASSENSTROM..T/H",0.0,19);
            if (!QTEXT && QTECHN)
                SYMBOL (X,Y-0.5,0.2,"H..ENTHALPIE..KCAL/KG",0.0,21);
            
        label110:
            if (!QAMI) goto label700;
            if (QTEXT) SYMBOL (36.0,28.1,0.3,"HEAT FLOW DIAGRAM",0.0,17);
            if(!QTEXT)SYMBOL (36.0,27.5,.3,"WAERMESCHALTPLAN",0.0,16);
            if (IWVB == 0) goto label300;
            if (KREUZ > 0) goto label300;

            XH = 0.18;
            if (QTEXT && IWVB == 1)
                SYMBOL (3.0,1.6,XH,"NET HEAT RATE =",0.0,15);
            if (QTEXT && IWVB == 2)
                SYMBOL (2.64,1.6,XH,"GROSS HEAT RATE =",0.0,17);
            if(!QTEXT)SYMBOL (2.6,1.6,XH,"WAERMEVERBRAUCH =",0.0,17);
            XP = 6.0;
            YP = 1.8;
            XW = 0.0;
            if (QENGL) UWA135(HEAT1,XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,HEAT1,XW,NDECM);
            SYMBOL (999.0,999.0,XH,"*(",0.0,2);
            NUMBER (999.0,999.0,XH,HEAT2,0.0,1);
            SYMBOL (999.0,999.0,XH,"-",0.0,1);
            NUMBER (999.0,999.0,XH,HEAT3,0.0,1);
            SYMBOL (999.0,999.0,XH,")",0.0,1);
            if (HEAT4 == 0.0) goto label200;
            SYMBOL (999.0,999.0,XH,"+",0.0,1);
            XP = 999.0 + XH;
            if (QENGL) UWA135(HEAT4,XP,YP,XH,XW);
            if (!QENGL) NUMBER (999.0,999.0,XH,HEAT4,XW,NDECM);
            SYMBOL (999.0,999.0,XH,"*(",0.0,2);
            NUMBER (999.0,999.0,XH,HEAT5,0.0,1);
            SYMBOL (999.0,999.0,XH,"-",0.0,1);
            NUMBER (999.0,999.0,XH,HEAT6,0.0,1);
            SYMBOL (999.0,999.0,XH,")",0.0,1);
            
        label200:
            PLOT (5.8,1.7,3);
            PLOT (10.5,1.7,2);
            if (HEAT4 != 0.0) PLOT (15.2,1.7,2);
            if (IWVB != 2) HEAT8 = 0.0;
            XP = 7.6;
            if (HEAT4 != 0.0) XP = 10.0;
            if (HEAT8 != 0.0) XP = 6.0;
            if (HEAT8 != 0.0&& HEAT4 != 0.0) XP = 8.4;
            YP = 1.4;
            if (QENGL) UWA135(PKLEMM,XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,PKLEMM,XW,NDECM);
            if (HEAT8 == 0.0) goto label210;
            SYMBOL (999.0,999.0,XH," + ",0.0,3);
            if (QENGL) XP = 999.18;
            if (QENGL) UWA135(HEAT8,XP,YP,XH,XW);
            if (!QENGL) NUMBER (999.0,999.0,XH,HEAT8,0.0,NDECM);
            
        label210:
            XP = 10.7;
            if (HEAT4 != 0.0) XP = 15.4;
            SYMBOL (XP,1.6,XH," = ",0.0,3);
            HEATR = (HEAT1*(HEAT2-HEAT3)+HEAT4*(HEAT5-HEAT6))/(PKLEMM+HEAT8)/1000.0;
            XP = 999.0 + XH;
            YP = 999.0;
            XW = 0.0;
            if (QENGL) UWA135(HEATR,XP,YP,XH,XW);
            if (!QENGL) HEATR = HEATR*1000.0;
            if (!QENGL) NUMBER (999.0,999.0,XH,HEATR,XW,-1);
            if (QENGL)
                SYMBOL (999.0,999.0,XH," BTU/KW HR",0.0,10);
            if (QSI) SYMBOL (999.0,999.0,XH," KJ/MWS",0.0,7);
            if (QTECHN) SYMBOL (999.0,999.0,XH," KCAL/KWH",0.0,9);
            
        label300:
            if (!QUPOCO) goto label600;
            if (KREUZ > 0) goto label400;
            
            XH = 0.2;
            X = 20.0;
            XP = X;
            YP = 2.0;
            XW = 0.0;
            if (QENGL) UWA135(PKLEMA,XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,PKLEMA,XW,NDECM);
            if (QENGL && QTEXT)
                SYMBOL (999.0,999.0,XH," KW AT ",0.0,7);
            if (QENGL && !QTEXT)
                SYMBOL (999.0,999.0,XH," KW BEI ",0.0,8);
            if (!QENGL && QTEXT)
                SYMBOL (999.0,999.0,XH," MW AT ", 0.0,7);
            if (!QENGL && !QTEXT)
                SYMBOL (999.0,999.0,XH," MW BEI ",0.0,8);
            if (QENGL)
                NUMBER (999.0,999.0,XH,PELEP[1],0.0,2);
            if (!QENGL)
                NUMBER (999.0,999.0,XH,PELEP[1],0.0,4);
            if (QENGL) SYMBOL (999.0,999.0,XH," IN.HG ABS, MU ",0.0,16);
            if (QSI) SYMBOL (999.0,999.0,XH," BAR, MU ",0.0,10);
            if (QTECHN)SYMBOL (999.0,999.0,XH," AT, MU ",0.0,9);
            NUMBER (999.0,999.0,XH,MAKEUP,0.0,2);
            SYMBOL (999.0,999.0,XH," %",0.0,2);
            NUMBER (X,1.7,0.2,PFDPL,0.0,1);
            if (QENGL) SYMBOL (999.0,999.0,XH," PSIA  ",0.0,7);
            if (QSI) SYMBOL (999.0,999.0,XH," BAR ",0.0,6);
            if (QTECHN)SYMBOL (999.0,999.0,XH," AT ",0.0,5);
            if (TFDPL < 10.0&& QENGL)
                SYMBOL (999.0,999.0,XH,"M = ",0.0,4);
            if (TFDPL < 10.0&& !QENGL)
                SYMBOL (999.0,999.0,XH,"X = ",0.0,4);
            if(TFDPL > 0.0)     NUMBER (999.0,999.0,XH, TFDPL,0.0,NDECTE);
            if(TFDPL <= 0.0)    NUMBER (999.0,999.0,XH,-TFDPL,0.0,NDECN);
            if (TFDPL < 10.0&& QENGL)
                SYMBOL (999.0,999.0,XH," %",0.0,2);
            if (TFDPL >= 10.0&& QENGL)
                SYMBOL (999.0,999.0,XH," F",0.0,2);
            if (TFDPL >= 10.0&& !QENGL)
                SYMBOL (999.0,999.0,XH," C",0.0,2);
            if (HEAT7 != 0.0) SYMBOL (999.0,999.0,XH,", ",0.0,3);
            if (HEAT7 != 0.0) NUMBER (999.0,999.0,XH,HEAT7,0.0,NDECTE);
            if (HEAT7 != 0.0&& QENGL)
                SYMBOL (999.0,999.0,XH," F",0.0,2);
            if (HEAT7 != 0.0&& !QENGL)
                SYMBOL (999.0,999.0,XH," C",0.0,2);
            SYMBOL (X,1.4,XH,"TC-",0.0,3);
            NUMBER (999.0,999.0,XH,FLUTND,0.0,-1);
            SYMBOL (999.0,999.0,XH,"F-",0.0,2);
            NUMBER (999.0,999.0,XH,ENDSCH,0.0,-1);
            NUMBER (22.5,1.4,XH,DREHZ,0.0,-1);
            SYMBOL (999.0,999.0,XH," RPM",0.0,4);
            XP = X;
            YP = 1.1;
            if (PGENN == 0.0) goto label310;
            UWA135(PGENN,XP,YP,XH,XW);
            SYMBOL (999.0,999.0,XH," KVA,",0.0,5);
            XP = 999.0;
            
        label310:
            if (VOLTG == 0.0) goto label320;
            NUMBER (XP,999.0,XH,VOLTG,0.0,-1);
            SYMBOL (999.0,999.0,XH," KV,",.0,4);
            XP = 999.0;
            
        label320:
            if (COSPHI == 0.0) goto label330;
            SYMBOL (XP,999.0,XH,"PF ",0.0,3);
            NUMBER (999.0,999.0,XH,COSPHI,0.0,3);
            XP = 999.0;
            
        label330:
            if (SCR == 0.0) goto label340;
            SYMBOL (XP,999.0,XH,",SCR ",0.0,5);
            NUMBER (999.0,999.0,XH,SCR,0.0,2);
            XP = 999.0;
            
        label340:
            if (PH2 == 0.0) goto label350;
            SYMBOL (XP,999.0,XH,",H2 ",0.0,4);
            NUMBER (999.0,999.0,XH,PH2,0.0,-1);
            if (QENGL) SYMBOL (999.0,999.0,XH," PSIG",0.0,5);
            if (QSI) SYMBOL (999.0,999.0,XH," BAR",0.0,4);
            if (QTECHN) SYMBOL (999.0,999.0,XH," AT",0.0,3);
            
        label350:
            if (KREGEL == 0 && QTEXT)
                SYMBOL (X,0.8,XH,"SLIDING PRESSURE",0.0,16);
            if (KREGEL == 1 && QTEXT)
                SYMBOL (X,0.8,XH,"THROTTLE CONTROLLED",0.0,19);
            if (KREGEL == 2 && QTEXT)
                SYMBOL (X,0.8,XH,"NOZZLE CONTROLLED",0.0,17);
            
        label400:
            NEWPEN(1);
            
            X = 40.0;
            Y = 26.5;
            for(I = 1; I <= 6; I++) //DO 510 I=1,6
            {
                N = I - 1;
                R = 0.35 - N*0.02;
                X1 = X + 0.35- N*0.02;
                CIRCL(X1,Y,0.0,360.0,R,R,0.0);
                R = 0.20 - N*0.02;
                X1 = X + 0.2 - N*0.02;
                CIRCL(X1,Y,360.0,180.0,R,R,0.0);
            }   //510 CONTINUE
            PLOT (X+0.18,Y+0.47,3);
            PLOT (X+0.75,Y+0.47,2);
            PLOT (X+0.75,Y+0.03,2);
            PLOT (X+0.46,Y-0.18,2);
            PLOT (X-0.18,Y-0.47,3);
            PLOT (X-0.75,Y-0.47,2);
            PLOT (X-0.75,Y-0.03,2);
            PLOT (X-0.46,Y+0.18,2);
            W1[1] = 70.0;
            W1[2] = 63.5;
            W1[3] = 60.0;
            W1[4] = 56.5;
            W1[5] = 53.5;
            W1[6] = 51.0;
            W1[7] = 49.0;
            W1[8] = 47.0;
            W1[9] = 45.0;
            W1[10] = 43.5;
            W1[11] = 42.0;
            W2[1] = -21.5;
            W2[2] = -18.5;
            W2[3] = -15.0;
            W2[4] = -12.5;
            W2[5] = -10.0;
            W2[6] = -8.0;
            W2[7] = -6.5;
            W2[8] = -5.0;
            W2[9] = -3.5;
            W2[10] = -2.0;
            W2[11] = -0.5;
            
            for(I = 1; I <= 11; I++) //DO 520 I=1,11
            {
                W3[I] = 180.0+W1[I];
                W4[I] = 180.0+W2[I];
                N = I - 1;
                R = 0.5 + N*0.02;
                X1 = X + 0.5 + N*0.02;
                CIRCL(X1,Y,0.0,W1[I],R,R,0.0);
                CIRCL(X1,Y,0.0,W2[I],R,R,0.0);
                X1 = X - 0.5 - N*0.02;
                CIRCL(X1,Y,180.0,W3[I],R,R,0.0);
                CIRCL(X1,Y,180.0,W4[I],R,R,0.0);
            }   //520 CONTINUE
            R = 0.5 + 11*0.02;
            CIRCL(X+0.72,Y+0.01,0.5,40.5,R,R,0.0);
            CIRCL(X-0.72,Y-0.01,180.5,220.5,R,R,0.0);
            R = R + 0.02;
            CIRCL(X+0.74,Y+0.02,2.0,39.0,R,R,0.0);
            CIRCL(X-0.74,Y-0.02,182.0,219.0,R,R,0.0);
            R = R + 0.02;
            CIRCL(X+0.75,Y+0.12,9.50,38.0,R,R,0.0);
            CIRCL(X-0.75,Y-0.12,189.5,218.0,R,R,0.0);
            R = R + 0.02;
            CIRCL(X+0.75,Y+0.21,16.0,37.0,R,R,0.0);
            CIRCL(X-0.75,Y-0.21,196.0,217.0,R,R,0.0);
            R = R + 0.02;
            CIRCL(X+0.75,Y+0.28,20.5,36.0,R,R,0.0);
            CIRCL(X-0.75,Y-0.28,200.5,216.0,R,R,0.0);
            R = R + 0.02;
            CIRCL(X+0.75,Y+0.33,23.5,35.0,R,R,0.0);
            CIRCL(X-0.75,Y-0.33,203.5,215.0,R,R,0.0);
            R = R + 0.02;
            CIRCL(X+0.75,Y+0.38,27.0,34.0,R,R,0.0);
            CIRCL(X-0.75,Y-0.38,207.0,214.0,R,R,0.0);
            R = R + 0.02;
            CIRCL(X+0.75,Y+0.42,29.0,33.0,R,R,0.0);
            CIRCL(X-0.75,Y-0.42,209.0,213.0,R,R,0.0);
            
            for(I = 1; I <= 8; I++) //DO 530 I=1,8
            {
                N = I - 1;
                X1 = X - 0.75 + 0.02*N;
                Y1 = Y + 0.47 - 0.02*N;
                X2 = X - 0.18 - 0.06*N;
                Y2 = Y + 0.03 + 0.04*N;
                PLOT (X1,Y1,3);
                PLOT (X2,Y1,2);
                PLOT (X1,Y2,2);
                PLOT (X1,Y1,2);
            }   //530 CONTINUE
            for(I = 1; I <= 8; I++) //DO 540 I=1,8
            {
                N = I - 1;
                X1 = X + 0.75 - 0.02*N;
                Y1 = Y - 0.47 + 0.02*N;
                X2 = X + 0.18 + 0.06*N;
                Y2 = Y - 0.03 - 0.04*N;
                PLOT (X1,Y1,3);
                PLOT (X2,Y1,2);
                PLOT (X1,Y2,2);
                PLOT (X1,Y1,2);
            }   //540 CONTINUE
            SYMBOL (X-3.6,Y+0.17,0.2,"UTILITY POWER",0.0,13);
            SYMBOL (X-3.4,Y-0.37,0.2,"CORPORATION",0.0,11);
            
        label600:
            NEWPEN(1);
            PLOT (0.0,0.0,3);
            PLOT (0.0,29.7,2);
            PLOT (42.0,29.7,2);
            PLOT (42.0,0.0,2);
            PLOT (0.0,0.0,2);
            
            if (QTEXT) SYMBOL (0.50,11.4,0.15,"COPYING OF THIS DOCUMENT, AND GIVING IT TO",90.0,42);
            if (QTEXT) SYMBOL (0.75,11.4,0.15,"OTHERS AND THE USE OR COMMUNICATION OF THE",90.0,42);
            if (QTEXT) SYMBOL (1.00,11.4,0.15,"CONTENTS THEREOF ARE FORBIDDEN WITHOUT EX-",90.0,42);
            if (QTEXT) SYMBOL (1.25,11.4,0.15,"PRESS AUTHORITY . OFFENDERS ARE LIABLE TO",90.0,42);
            if (QTEXT) SYMBOL (1.50,11.4,0.15,"THE PAYMENT OF DAMAGES.ALL RIGHTS ARE RE-",90.0,42);
            if (QTEXT) SYMBOL (1.75,11.4,0.15,"SERVED IN THE EVENT OF THE GRANT OF A",90.0,42);
            if (QTEXT) SYMBOL (2.00,11.4,0.15,"PATENT OR THE REGISTRATION OF A UTILITY",90.0,42);
            if(QTEXT)SYMBOL (2.25,11.4,0.15,"MODEL OR DESIGN .",90.0,17);
            if (!QTEXT) SYMBOL (0.50,11.4,0.15,"WEITERGABE SOWIE VERVIELFAELTIGUNG DIESER",90.0,42);
            if (!QTEXT) SYMBOL (0.80,11.4,0.15,"UNTERLAGE, VERWERTUNG UND MITTEILUNG IHRES",90.0,42);
            if (!QTEXT) SYMBOL (1.10,11.4,0.15,"INHALTES NICHT GESTATTET,SOWEIT NICHT AUS-",90.0,42);
            if (!QTEXT) SYMBOL (1.40,11.4,0.15,"DRUECKLICH ZUGESTANDEN . ZUWIDERHANDLUNGEN",90.0,42);
            if (!QTEXT) SYMBOL (1.70,11.4,0.15,"VERPFLICHTEN ZU SCHADENERSATZ. ALLE RECHTE",90.0,42);
            if (!QTEXT) SYMBOL (2.00,11.4,0.15,"FUER DEN FALL DER PATENTERTEILUNG ODER GM-",90.0,42);
            if (!QTEXT) SYMBOL (2.30,11.4,0.15,"EINTRAGUNG VORBEHALTEN .",90.0,24);
            SYMBOL (0.50,0.50,0.15,"KRAWAL85.F (BS2000-VERSION V. 20.04.90)",90.0,39);
            SYMBOL (0.75,0.50,0.15,"Established on SUN 4/280s",90.0,25);
            SYMBOL (1.00,0.50,0.15,"at Ramachandrapuram, HYD.",90.0,25);
            SYMBOL (1.25,0.50,0.15,"on 6th of May, 1992.(pkr)",90.0,25);
            return;
            
        label700:
            NEWPEN(1);
            PLOT (0.0,0.35,3);
            PLOT (0.0,29.69,2);
            PLOT (42.0-XDINA4,29.69,2);
            PLOT (42.0-XDINA4,0.0,2);
            PLOT (0.00,0.0,2);
            PLOT (0.0,0.35,2);
            NEWPEN(3);
            PLOT (2.50,0.5,3);
            PLOT (2.50,29.2,2);
            PLOT (41.5-XDINA4,29.2,2);
            PLOT (41.5-XDINA4,0.5,2);
            PLOT (2.50,0.5,2);
            NEWPEN(1);
            if (QTEXT) SYMBOL (0.50,11.4,0.15,"COPYING OF THIS DOCUMENT, AND GIVING IT TO",90.0,42);
            if (QTEXT) SYMBOL (0.75,11.4,0.15,"OTHERS AND THE USE OR COMMUNICATION OF THE",90.0,42);
            if (QTEXT) SYMBOL (1.00,11.4,0.15,"CONTENTS THEREOF,ARE FORBIDDEN WITHOUT EX-",90.0,42);
            if (QTEXT) SYMBOL (1.25,11.4,0.15,"PRESS AUTHORITY . OFFENDERS ARE LIABLE TO",90.0,42);
            if (QTEXT) SYMBOL (1.50,11.4,0.15,"THE PAYMENT OF DAMAGES.ALL RIGHTS ARE RE-",90.0,42);
            if (QTEXT) SYMBOL (1.75,11.4,0.15,"SERVED IN THE EVENT OF THE GRANT OF A",90.0,42);
            if (QTEXT) SYMBOL (2.00,11.4,0.15,"PATENT OR THE REGISTRATION OF A UTILITY",90.0,42);
            if(QTEXT)SYMBOL (2.25,11.4,0.15,"MODEL OR DESIGN .",90.0,17);
            if (!QTEXT) SYMBOL (0.50,11.4,0.15,"WEITERGABE SOWIE VERVIELFAELTIGUNG DIESER",90.0,42);
            if (!QTEXT) SYMBOL (0.80,11.4,0.15,"UNTERLAGE, VERWERTUNG UND MITTEILUNG IHRES",90.0,42);
            if (!QTEXT) SYMBOL (1.10,11.4,0.15,"INHALTES NICHT GESTATTET,SOWEIT NICHT AUS-",90.0,42);
            if (!QTEXT) SYMBOL (1.40,11.4,0.15,"DRUECKLICH ZUGESTANDEN . ZUWIDERHANDLUNGEN",90.0,42);
            if (!QTEXT) SYMBOL (1.70,11.4,0.15,"VERPFLICHTEN ZU SCHADENERSATZ. ALLE RECHTE",90.0,42);
            if (!QTEXT) SYMBOL (2.00,11.4,0.15,"FUER DEN FALL DER PATENTERTEILUNG ODER GM-",90.0,42);
            if (!QTEXT) SYMBOL (2.30,11.4,0.15,"EINTRAGUNG VORBEHALTEN .",90.0,24);
            SYMBOL (0.50,0.50,0.15,"KRAWAL85.F (BS2000-VERSION V. 20.04.90)",90.0,39);
            SYMBOL (0.75,0.50,0.15,"Established on SUN 4/280s",90.0,25);
            SYMBOL (1.00,0.50,0.15,"at Ramachandrapuram, HYD.",90.0,25);
            SYMBOL (1.25,0.50,0.15,"on 6th of May, 1992.(pkr)",90.0,25);
            return;
        }   //END

        
        static void UWA129(int J1, int I1)
        {
            //ENTRY PLOTKO (J1,I1)
            //LOGICAL QABC
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //C
            //COMMON /KONDER/ GKONDA[4],GKONDT[4],TKONDA[4],TKONDT[4],
            //1 PKONDA[4],PKONDT[4],DTKONA[4],DTKONT[4],
            //2 TKONAA[4],TKONAT[4],DKONDA[4],DKONDT[4]
            //COMMON /KONDPL/ KKONDR,ITKW,IMKW,TKWEIN,GKWEIN,IDAMPF,XDAMPF,NN4
            //COMMON /PRINT / IWR,TX0,TX13,TX14,TX15,TX16,TX17,TX18
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            string AKARTB = "B", AA = "";
            double V = 0, X1 = 0, Y1 = 0;
            int LL = 0, L1 = 0, L = 0, NL = 0, M = 0, NLL = 0, M1 = 0, M2 = 0, MM = 0;
            if (INENDE <= IHENDE) return;
            V = FACTS/FACT;
            LL = NRMVAE[J1] + 100;
            L1 = IHENDE + 1;
            
        label100:
            for(L = L1; L <= INENDE; L++) //DO 1500 L=L1,INENDE
            {
                if (NN1[L] != LL) continue;
                if (NN2[L] == 0) continue;
                if (LTYP[L] == 6) continue;
                LL = NN2[L];
                
                A1 = PLTG[LL]*TX2;
                A2 = ELTG[LL]*TX1;
                A3 = GLTG[LL]*TX3;
                A4 = (VISUM(PLTG[LL],ELTG[LL],23)-273.15)*TX0 + TX5;
                
                if (LTYP[L] == 0) goto label200;
                if (LTYP[L] == 3) goto label1100;
                if (NRABC[LL] > 0) goto label1800;
                goto label100;
                
            label200:
                X1 = XT;
                Y1 = Y - 4.5*V - 1.0*V*I1;
                PLOT (X1,Y1,2);
                NEWPEN(1);
                PLOT (X1-0.75,Y1,3);
                PLOT (X1+0.75,Y1,2);
                PLOT (X1+0.75,Y1-1.5,2);
                PLOT (X1-0.75,Y1-1.5,2);
                PLOT (X1-0.75,Y1,2);
                PLOT (X1+2.0,Y1-0.3,3);
                PLOT (X1-0.5,Y1-0.3,2);
                PLOT (X1+0.5,Y1-0.75,2);
                PLOT (X1-0.5,Y1-1.2,2);
                PLOT (X1+2.0,Y1-1.2,2);
                
                if (KKONDR == 0) goto label300;
                NEWPEN(3);
                PLOT (X1+2.0,Y1-0.3,2);
                NEWPEN(1);
                
            label300:
                if (KREUZ > 0) goto label500;
                if (ITKW == 0) goto label400;
                A5 = TKONDA[JJ]*TX0 + TX5;
                if (K == 2) A5 = TKONDT[JJ]*TX0 + TX5;
                UWA133(X1+2.2,Y1-1.1,0.2,A5,0.0,3);
                
            label400:
                if (IMKW == 0) goto label500;
                A5 = GKONDA[JJ]*TX3;
                if (K == 2) A5 = GKONDT[JJ]*TX3;
                UWA133(X1+2.2,Y1-0.4,0.2,A5,0.0,1);
                
            label500:
                PLOT (X1-0.4,Y1-1.5,3);
                PLOT (X1-0.4,Y1-2.3,2);
                PLOT (X1+0.4,Y1-2.3,2);
                PLOT (X1+0.4,Y1-1.5,2);
                PLOT (X1,Y1-2.3,3);
                PLOT (X1,Y1-2.3-1.0*V,2);
                PLOT (X1-0.75,Y1-0.73,3);
                PLOT (X1-2.5,Y1-0.73,2);
                PLOT (X1-0.75,Y1-0.77,3);
                PLOT (X1-2.5,Y1-0.77,5);
                CIRCL(X1-2.5,Y1-0.75,0.0,360.0,0.25,0.25,0.0);
                AROHD(X1-2.55,Y1-0.75,X1-2.95,Y1-0.75,0.2,0.2,16);
                PLOT (X1-3.0,Y1-0.73,3);
                PLOT (X1-3.8,Y1-0.73,2);
                PLOT (X1-3.0,Y1-0.77,3);
                PLOT (X1-3.8,Y1-0.77,5);
                AROHD(X1-3.8,Y1-0.75,X1-4.0,Y1-0.75,0.2*V,0.2*V,16);
                
                NL = 0;
                A5 = 0.0;
                A6 = 0.0;
                
                for(M = 1; M <= 8; M++) //DO 800 M=1,8
                {
                    if (NBLTG[L,M] == 0) continue;
                    NLL = NBLTG[L,M];
                    if (NLL == 100) goto label710;
                    
                    for(M1 = 1; M1 <= INENDE; M1++) //DO 510 M1=1,INENDE
                    {
                        if (NTYP[M1] != 3) continue;
                        M2 = N2[M1];
                        if (M2 == NLL) goto label720;
                    }   //510 CONTINUE
                    NL = NL + 1;
                    A5 = A5 + GLTG[NLL];
                    A6 = A6 + GLTG[NLL]*ELTG[NLL];
                    if (NRABC[NLL] > 0) goto label700;
                    
                    for(MM= 4; MM <= 26; MM++) //DO 600 MM=4,26
                    {
                        if (QABC[MM]) 
                            continue;
                        QABC[MM] = true;
                        NRABC[NLL] = MM;
                        goto label700;
                    }   //600 CONTINUE
                    
                label700:
                    MM = NRABC[NLL];
                    ABC[NL] = ABCD[MM];
                    continue;   // goto label800;
                    
                label710:
                    NRABC[NLL] = 2;
                    A8 = GLTG[NLL]*TX3;
                    A9 = ELTG[NLL]*TX1;
                    if (GLTG[NLL] == 0.0) A9 = 0.0;
                    AA = AKARTB;
                    // UWA132(X1,Y1+1.0,2.2,A8,A9,4,1,0,0,1,1,AA);
                    continue;   //goto label800;
                    
                label720:
                    if (NRABC[NLL] > 0) goto label740;
                    for(MM = 4; MM <= 26; MM++) //DO 730 MM=4,26
                    {
                        if (QABC[MM]) continue;
                        QABC[MM] = true;
                        NRABC[NLL] = MM;
                        goto label740;
                    }   //730 CONTINUE
                    NRABC[NLL] = 26;
                    
                label740:
                    MM = NRABC[NLL];
                    AA = ABCD[MM];
                    A8 = GLTG[NLL]*TX3;
                    A9 = ELTG[NLL]*TX1;
                    if (GLTG[NLL] == 0.0) A9 = 0.0;
                    // UWA132(X1,Y1+2.6,2.2,A8,A9,4,1,0,0,1,1,AA);
                }   //800 CONTINUE
                
                if (NL <= 0) goto label900;
                A7 = 0.0;
                if (A5 > 0.0) A7 = A6/A5*TX1;
                A6 = A5*TX3;
                // UWA132(X1+0.4,Y1-2.0,2.5,A6,A7,4,0,0,0,1,NL,ABC);
                
            label900:
                if (KREUZ == 1) goto label1000;
                UWA130(X1,Y1-2.3-0.6*V,4,0);
                if (KREUZ == 2) goto label1000;
                UWA131(X1,Y1-2.3-0.6*V,A1,A2,A3,A4,4,0);
                
            label1000:
                Y1 = Y1 - 2.3 - 1.0*V;
                if (NRABC[LL] > 0) goto label1800;
                goto label100;
                
            label1100:
                PLOT (X1,Y1,3);
                PLOT (X1,Y1-0.5,2);
                CIRCL(X1+0.3,Y1-0.8,0.0,360.0,0.3,0.3,0.0);
                AROHD(X1,Y1-0.6,X1,Y1-1.0,0.3,0.3,16);
                PLOT (X1,Y1-1.1,3);
                PLOT (X1,Y1-1.1-1.0*V,2);
                
                if (KREUZ == 1) goto label1200;
                UWA130(X1,Y1-1.1-0.6*V,4,0);
                if (KREUZ == 2) goto label1200;
                UWA131(X1,Y1-1.1-0.6*V,A1,A2,A3,A4,4,0);
                
            label1200: 
                Y1 = Y1 - 1.1 - 1.0*V;
                if (NRABC[LL] > 0) goto label1800;
                goto label100;
            }   //1500 CONTINUE
            
            if (NRABC[LL] != 0) goto label1800;
            
            for(L = 4; L <= 26; L++) //DO 1700 L=4,26
            {
                if (QABC[L]) continue;
                QABC[L] = true;
                NRABC[LL] = L;
                goto label1800;
            }   //1700 CONTINUE
            
        label1800:
            L = NRABC[LL];
            A1 = Convert.ToDouble(ABCD[L]);
            // UWA132(X1,Y1,0.3,0.0,0.0,1,0,2,1,1,1,A1);
            return;
        }   //END

        
        static void UWA130(double C,double D,int IK,int NK)
        {   
            //ENTRY KREUZE (C,D,IK,NK)
            //LOGICAL QABC
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            double A = 0, B = 0;
            A = C;
            B = D;
            NEWPEN(1);
            if (FACT >= FACTS) goto label10;
            A = A*FACT/FACTS;
            B = B*FACT/FACTS;
            FACTOR (FACTS);
            
        label10:
            //goto label(100,200,300,400,500,600,700,800,900),
            if(IK == 1)     goto label100;
            if(IK == 2)     goto label200;
            if(IK == 3)     goto label300;
            if(IK == 4)     goto label400;
            if(IK == 5)     goto label500;
            if(IK == 6)     goto label600;
            if(IK == 7)     goto label700;
            if(IK == 8)     goto label800;
            if(IK == 9)     goto label900;
            
        label100:
            if (NK == 1) goto label110;
            AROHD(A,B+0.9,A,B,0.2,0.0,16);
            PLOT (A-1.8,B+0.5,3);
            PLOT (A+1.6,B+0.5,2);
            goto label1000;
        
        label110:
            AROHD(A,B+3.4,A,B,0.2,0.0,16);
            PLOT (A+0.4,B+2.0,3);
            PLOT (A-0.4,B+2.0,2);
            goto label1000;
            
        label200:
            if (NK == 1) goto label210;
            AROHD(A,B-0.9,A,B,0.2,0.0,16);
            PLOT (A-1.8,B-0.5,3);
            PLOT (A+1.6,B-0.5,2);
            goto label1000;
        
        label210:
            AROHD(A,B-3.4,A,B,0.2,0.0,16);
            PLOT (A-0.4,B-1.6,3);
            PLOT (A+0.4,B-1.6,2);
            goto label1000;
            
        label300:
            if (NK == 1) goto label310;
            AROHD(A-3.6,B,A,B,0.2,0.0,16);
            PLOT (A-1.8,B+0.4,3);
            PLOT (A-1.8,B-0.4,2);
            goto label1000;
            
        label310:
            AROHD(A-0.9,B,A,B,0.2,0.0,16);
            PLOT (A-0.5,B+1.6,3);
            PLOT (A-0.5,B-1.8,2);
            goto label1000;
            
        label400:
            if (NK == 1) goto label410;
            AROHD(A+3.6,B,A,B,0.2,0.0,16);
            PLOT (A+2.0,B+0.4,3);
            PLOT (A+2.0,B-0.4,2);
            goto label1000;
            
        label410:
            AROHD(A+0.9,B,A,B,0.2,0.0,16);
            PLOT (A+0.5,B-1.8,3);
            PLOT (A+0.5,B+1.6,2);
            goto label1000;
            
        label500:
            PLOT (A,B,3);
            if (NK == 1) goto label510;
            PLOT (A,B+0.8,2);
            PLOT (A-1.8,B+0.4,3);
            PLOT (A+1.6,B+0.4,2);
            goto label1000;
            
        label510:
            PLOT (A,B+3.4,2);
            PLOT (A+0.4,B+1.8,3);
            PLOT (A-0.4,B+1.8,2);
            goto label1000;
            
        label600:
            PLOT (A,B,3);
            if (NK == 1) goto label610;
            PLOT (A,B-0.8,2);
            PLOT (A-1.8,B-0.4,3);
            PLOT (A+1.6,B-0.4,2);
            goto label1000;
            
        label610:
            PLOT (A,B-3.4,2);
            PLOT (A+0.4,B-1.6,3);
            PLOT (A-0.4,B-1.6,2);
            goto label1000;
            
        label700:
            PLOT (A,B,3);
            if (NK == 1) goto label710;
            PLOT (A-3.4,B,2);
            PLOT (A-1.6,B+0.4,3);
            PLOT (A-1.6,B-0.4,2);
            goto label1000;
            
        label710:
            PLOT (A-0.8,B,2);
            PLOT (A-0.4,B+1.6,3);
            PLOT (A-0.4,B-1.8,2);
            goto label1000;
            
        label800:
            PLOT (A,B,3);
            if (NK == 1) goto label810;
            PLOT (A+3.4,B,2);
            PLOT (A+1.8,B-0.4,3);
            PLOT (A+1.8,B+0.4,2);
            goto label1000;
            
        label810:
            PLOT (A+0.8,B,2);
            PLOT (A+0.4,B+1.6,3);
            PLOT (A+0.4,B-1.8,2);
            goto label1000;
            
        label900:
            if (NK == 1) goto label910;
            AROHD(A,B+0.9,A,B,0.2,0.0,16);
            PLOT (A-3.0,B+0.5,3);
            PLOT (A+1.6,B+0.5,2);
            goto label1000;
            
        label910:
            AROHD(A,B+4.8,A,B,0.2,0.0,16);
            PLOT (A+0.4,B+3.2,3);
            PLOT (A-0.4,B+3.2,2);

        label1000:
            FACTOR (FACT);
            return;
        }   //END

        
        static void UWA131(double C,double D,double P,double H,double G,double T,int ID,int ND)
        {
            //ENTRY DATEN (C,D,P,H,G,T,ID,ND)
            //LOGICAL QABC,QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            double A = 0, B = 0;
            int NDECP = 0;
            NEWPEN(1);
            A = C;
            B = D;
            if (FACT >= FACTS) goto label10;
            A = A*FACT/FACTS;
            B = B*FACT/FACTS;
            FACTOR (FACTS);

        label10:
            //goto label(100,200,300,400,500,600,700,800,900),
            if(ID == 1)     goto label100;
            if(ID == 2)     goto label200;
            if(ID == 3)     goto label300;
            if(ID == 4)     goto label400;
            if(ID == 5)     goto label500;
            if(ID == 6)     goto label600;
            if(ID == 7)     goto label700;
            if(ID == 8)     goto label800;
            if(ID == 9)     goto label900;
            
        label100:
            if (ND == 1) goto label110;
            B = B + 0.5;
            goto label1000;
            
        label110:
            B = B + 2.0;
            goto label1000;

        label200:
            if (ND == 1) goto label210;
            B = B - 0.5;
            goto label1000;
            
        label210:
            B = B - 1.6;
            goto label1000;

        label300:
            if (ND == 1) goto label310;
            A = A - 1.8;
            goto label1000;
            
        label310:
            A = A - 0.5;
            goto label1000;

        label400:
            if (ND == 1) goto label410;
            A = A + 2.0;
            goto label1000;
            
        label410:
            A = A + 0.5;
            goto label1000;
            
        label500:
            if (ND == 1) goto label510;
            B = B + 0.4;
            goto label1000;
            
        label510:
            B = B + 1.8;
            goto label1000;

        label600:
            if (ND == 1) goto label610;
            B = B - 0.4;
            goto label1000;
            
        label610:
            B = B - 1.6;
            goto label1000;

        label700:
            if (ND == 1) goto label710;
            A = A - 1.6;
            goto label1000;
            
        label710:
            A = A - 0.4;
            goto label1000;

        label800:
            if (ND == 1) goto label810;
            A = A + 1.8;
            goto label1000;
            
        label810:
            A = A + 0.4;
            goto label1000;

        label900:
            if (ND == 1) goto label910;
            B = B + 0.5;
            goto label1000;
            
        label910:
            B = B + 3.2;

        label1000:
            NDECP = 4;
            if (P >= 10.0) NDECP = 3;
            if (P >= 100.0) NDECP = 2;
            if (P >= 1000.0) NDECP = 1;
            if (ND == 1) goto label1100;

            if (P == 0.0) SYMBOL (A-1.0,B+0.1,XH,"-",0.0,1);
            if (P > 0.0 && ID != 9) NUMBER (A-1.7,B+0.1,XH,P,0.0,NDECP);
            if (P > 0.0 && ID == 9) NUMBER (A-3.0,B+0.1,XH,P,0.0,2);
            if (P > 0.0 && ID == 9) SYMBOL (999.0,999.0,XH," IN.HG ABS",0.0,10);
            NUMBER (A+0.2,B+0.1,XH,H,0.0,NDECTE);
            if (!QENGL) NUMBER (A-1.7,B-0.3,XH,G,0.0,NDECM);
            if (QENGL && ID != 9) UWA135(G,A-1.7,B-0.3,XH,0.0);
            if (QENGL && ID == 9) UWA135(G,A-3.0,B-0.3,XH,0.0);
            if (T >= 0.0) NUMBER (A+0.2,B-0.3,XH,T,0.0,NDECTE);
            if (T < 0.0) NUMBER (A+0.2,B-0.3,XH,-T,0.0,NDECN);
            goto label1200;

        label1100:
            if (P == 0.0) SYMBOL (A-0.1,B-1.0,XH,"-",90.0,1);
            if (P > 0.0 && ID != 9) NUMBER (A-0.1,B-1.7,XH,P,90.0,NDECP);
            if (P > 0.0 && ID == 9) NUMBER (A-0.1,B-3.0,XH,P,90.0,2);
            if (P > 0.0 && ID == 9) SYMBOL (999.0,999.0,XH," IN.HG ABS",90.0,10);
            NUMBER (A-0.1,B+0.2,XH,H,90.0,NDECTE);
            if (!QENGL) NUMBER (A+0.3,B-1.7,XH,G,90.0,NDECM);
            if (QENGL && ID != 9) UWA135(G,A+0.3,B-1.7,XH,90.0);
            if (QENGL && ID == 9) UWA135(G,A+0.3,B-3.0,XH,90.0);
            if (T >= 0.0) NUMBER (A+0.3,B+0.2,XH,T,90.0,NDECTE);
            if (T < 0.0) NUMBER (A+0.3,B+0.2,XH,-T,90.0,NDECN);

        label1200:
            FACTOR (FACT);
            return;
        }   //END


        static void UWA132(double C,double D,double DL,double G,double H, int IP, int NP,int M,int LL,int K3,int K2,string[] AAA)
        {
            //ENTRY PFEIL (C,D,DL,G,H,IP,NP,M,LL,K3,K2,AAA)
            //LOGICAL QABC,QENGL,QSI,QTECHN,QAMI,QTEXT
            //DIMENSION AAA(30)
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT

            double A = 0, B = 0;

            K1 = K3;
            A = C;
            B = D;
            KK = K2 - K1 + 1;
            K1 = K1 - 1;
            if (FACT >= FACTS) goto label10;
            A = A*FACT/FACTS;
            B = B*FACT/FACTS;
            FACTOR (FACTS);

        label10:
            NEWPEN(1);
            if (NP == 1) NEWPEN(3);
            //goto label(100,200,300,400,500,600,700,800,900),
            if(IP == 1)     goto label100;
            if(IP == 2)     goto label200;
            if(IP == 3)     goto label300;
            if(IP == 4)     goto label400;
            if(IP == 5)     goto label500;
            if(IP == 6)     goto label600;
            if(IP == 7)     goto label700;
            if(IP == 8)     goto label800;
            if(IP == 9)     goto label900;

        label100:
            if (LL == 0) AROHD(A,B+DL,A,B,0.2,0.0,16);
            if (LL == 1) AROHD(A,B,A,B-DL,0.2,0.0,16);
            if (LL == 1) B = B - DL;
            NEWPEN(1);
            if (KREUZ > 0) goto label110;
            if (M > 1) goto label110;
            if (!QENGL) NUMBER (A-0.1,B+0.3,XH,G,90.0,NDECM);
            if (QENGL) UWA135(G,A-0.1,B+0.3,XH,90.0);
            SYMBOL (999.0,999.0,XH," M",90.0,2);
            if (M > 0) goto label110;
            if (G < 0.001) goto label110;
            NUMBER (A+0.3,B+0.3,XH,H,90.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",90.0,2);
        
        label110:
            if (LL == 1) goto label130;
            
            for(J = 1; J <= KK; J++) //DO 120 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.25,B+DL-0.25+0.5*J,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.08,B+DL-0.35+0.5*J,XH,AAA[K1],0.0,1);
            }   //120 CONTINUE
            goto label1000;

        label130:
            for(J = 1; J <= KK; J++) //DO 140 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.25,B+0.25-0.5*J,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.08,B+0.15-0.5*J,XH,AAA[K1],0.0,1);
            }    //140 CONTINUE
            goto label1000;

        label200:
            if (LL == 0) AROHD(A,B-DL,A,B,0.2,0.0,16);
            if (LL == 1) AROHD(A,B,A,B+DL,0.2,0.0,16);
            if (LL == 1) B = B + DL;
            NEWPEN(1);
            if (KREUZ > 0) goto label210;
            if (M > 1) goto label210;
            if (!QENGL) NUMBER (A-0.1,B-DL+0.3,XH,G,90.0,NDECM);
            if (QENGL) UWA135(G,A-0.1,B-DL+0.3,XH,90.0);
            SYMBOL (999.0,999.0,XH," M",90.0,2);
            if (M > 0) goto label210;
            if (G < 0.001) goto label210;
            NUMBER (A+0.3,B-DL+0.3,XH,H,90.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",90.0,2);
            
        label210:
            if (LL == 1) goto label230;
            
            for(J = 1; J <= KK; J++) //DO 220 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.25,B-DL+0.25-0.5*J,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.08,B-DL+0.15-0.5*J,XH,AAA[K1],0.0,1);
            }   //220 CONTINUE
            goto label1000;
            
        label230:
            for(J = 1; J <= KK; J++) //DO 240 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.25,B-0.25+0.5*J,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.08,B-0.35+0.5*J,XH,AAA[K1],0.0,1);
            }   //240 CONTINUE
            goto label1000;

        label300:
            if (LL == 0) AROHD(A-DL,B,A,B,0.2,0.0,16);
            if (LL == 1) AROHD(A,B,A+DL,B,0.2,0.0,16);
            if (LL == 1) A = A + DL;
            NEWPEN(1);
            if (KREUZ > 0) goto label310;
            if (M > 1) goto label310;
            if (!QENGL) NUMBER (A-DL+0.3,B+0.1,XH,G,0.0,NDECM);
            if (QENGL) UWA135(G,A-DL+0.3,B+0.1,XH,0.0);
            SYMBOL (999.0,999.0,XH," M",0.0,2);
            if (M > 0) goto label310;
            if (G < 0.001) goto label310;
            NUMBER (A-DL+0.3,B-0.3,XH,H,0.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",0.0,2);
            
        label310:
            if (LL == 1) goto label330;
            
            for(J = 1; J <= KK; J++) //DO 320 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A-DL+0.50-0.5*J,B,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-DL+0.17-0.5*J,B-0.1,XH,AAA[K1],0.0,1);
            }   //320 CONTINUE
            goto label1000;
            
        label330:
            for(J = 1; J <= KK; J++) //DO 340 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.5*J,B,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.33+0.5*J,B-0.1,XH,AAA[K1],0.0,1);
            }   //340 CONTINUE
            goto label1000;

        label400:
            if (LL == 0) AROHD(A+DL,B,A,B,0.2,0.0,16);
            if (LL == 1) AROHD(A,B,A-DL,B,0.2,0.0,16);
            if (LL == 1) A = A - DL;
            NEWPEN(1);
            if (KREUZ > 0) goto label410;
            if (M > 1) goto label410;
            if (!QENGL) NUMBER (A+0.3,B+0.1,XH,G,0.0,NDECM);
            if (QENGL) UWA135(G,A+0.3,B+0.1,XH,0.0);
            SYMBOL (999.0,999.0,XH," M",0.0,2);
            if (M > 0) goto label410;
            if (G < 0.001) goto label410;
            NUMBER (A+0.3,B-0.3,XH,H,0.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",0.0,2);
            
        label410:
            if (LL == 1) goto label430;
            
            for(J = 1; J <= KK; J++) //DO 420 J=1,KK
            {
                K1 = K1 + 1;
                if (J > 3) goto label415;
                CIRCL(A+DL+0.5*J,B,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A+DL-0.33+0.5*J,B-0.1,XH,AAA[K1],0.0,1);
                continue;   // goto label420;
                
            label415:
                CIRCL(A+DL+0.5*(J-3),B+0.5,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A+DL-0.33+0.5*(J-3),B-0.1+0.5,XH,AAA[K1],0.0,1);
            }   //420 CONTINUE
            goto label1000;
            
        label430:
            for(J = 1; J <= KK; J++) //DO 440 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.5-0.5*J,B,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A+0.17-0.5*J,B-0.1,XH,AAA[K1],0.0,1);
            }   //440 CONTINUE
            goto label1000;

        label500:
            AROHD(A,B+DL,A,B,0.2,0.0,16);
            PLOT (A,B+DL,3);
            PLOT (A-2.2,B+DL,2);
            A = A - 2.2;
            B = B + DL;
            NEWPEN(1);
            if (KREUZ > 0) goto label510;
            if (M > 1) goto label510;
            if (!QENGL) NUMBER (A+0.3,B+0.1,XH,G,0.0,NDECM);
            if (QENGL) UWA135(G,A+0.3,B+0.1,XH,0.0);
            SYMBOL (999.0,999.0,XH," M",0.0,2);
            if (M > 0) goto label510;
            if (G < 0.001) goto label510;
            NUMBER (A+0.3,B-0.3,XH,H,0.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",0.0,2);

        label510:
            for(J = 1; J <= KK; J++) //DO 520 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.5-0.5*J,B,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A+0.17-0.5*J,B-0.1,XH,AAA[K1],0.0,1);
            }   //520 CONTINUE
            goto label1000;

        label600:
            AROHD(A+DL,B,A,B,0.2,0.0,16);
            PLOT (A+DL,B,3);
            PLOT (A+DL,B+2.2,2);
            A = A + DL;
            B = B + 2.2;
            NEWPEN(1);
            if (KREUZ > 0) goto label610;
            if (M > 1) goto label610;
            if (!QENGL) NUMBER (A-0.1,B-2.0,XH,G,90.0,NDECM);
            if (QENGL) UWA135(G,A-0.1,B-2.0,XH,90.0);
            SYMBOL (999.0,999.0,XH," M",90.0,2);
            if (M > 0) goto label610;
            if (G < 0.001) goto label610;
            NUMBER (A+0.3,B-2.0,XH,H,90.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",90.0,2);
            
        label610:
            for(J = 1; J <= KK; J++) //DO 620 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.25,B-0.25+0.5*J,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.08,B-0.35+0.5*J,XH,AAA[K1],0.0,1);
            }   //620 CONTINUE
            goto label1000;

        label700:
            AROHD(A+DL,B,A,B,0.2,0.0,16);
            PLOT (A+DL,B,3);
            PLOT (A+DL,B+3.8,2);
            A = A + DL;
            B = B + 3.8;
            NEWPEN(1);
            
            for(J = 1; J <= KK; J++) //DO 710 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.25,B-0.25+0.5*J,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.08,B-0.35+0.5*J,XH,AAA[K1],0.0,1);
            }   //710 CONTINUE
            goto label1000;

        label800:
            AROHD(A,B+DL,A,B,0.2,0.0,16);
            PLOT (A,B+DL,3);
            PLOT (A+2.2,B+DL,2);
            A = A + 2.2;
            B = B + DL;
            NEWPEN(1);
            if (KREUZ > 0) goto label810;
            if (M > 1) goto label810;
            if (!QENGL) NUMBER (A-2.0,B+0.1,XH,G,0.0,NDECM);
            if (QENGL) UWA135(G,A-2.0,B+0.1,XH,0.0);
            SYMBOL (999.0,999.0,XH," M",0.0,2);
            if (M > 0) goto label810;
            if (G < 0.001) goto label810;
            NUMBER (A-2.0,B-0.3,XH,H,0.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",0.0,2);
            
        label810:
            for(J = 1; J <= KK; J++) //DO 820 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.5*J,B,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.33+0.5*J,B-0.1,XH,AAA[K1],0.0,1);
            }   //820 CONTINUE
            goto label1000;

        label900:
            AROHD(A+DL,B,A,B,0.2,0.0,16);
            PLOT (A+DL,B,3);
            PLOT (A+DL,B-2.2,2);
            A = A + DL;
            B = B - 2.2;
            NEWPEN(1);
            if (KREUZ > 0) goto label910;
            if (M > 1) goto label910;
            if (!QENGL) NUMBER (A-0.1,B+0.2,XH,G,90.0,NDECM);
            if (QENGL) UWA135(G,A-0.1,B+0.2,XH,90.0);
            SYMBOL (999.0,999.0,XH," M",90.0,2);
            if (M > 0) goto label910;
            if (G < 0.001) goto label910;
            NUMBER (A+0.3,B+0.2,XH,H,90.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",90.0,2);
            
        label910:
            for(J = 1; J <= KK; J++) //DO 920 J=1,KK
            {
                K1 = K1 + 1;
                CIRCL(A+0.25,B+0.25-0.5*J,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (A-0.08,B+0.15-0.5*J,XH,AAA[K1],0.0,1);
            }   //920 CONTINUE
            
        label1000:
            FACTOR (FACT);
            return;
        }   //END

        
        static void UWA133(double C,double D,double H,double T,double W,int IS)
        {
            //ENTRY SCHRFD (C,D,H,T,W,IS)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            double A = 0, B = 0;
            int NDECP = 0;
            NEWPEN(1);
            A = C;
            B = D;
            if (FACTS <= FACT) goto label10;
            FACTOR (FACTS);
            A = A*FACT/FACTS;
            B = B*FACT/FACTS;
            
        label10:
            //goto label(100,200,300,400,500,600,700,800),
            if(IS == 1)     goto label100;
            if(IS == 2)     goto label200;
            if(IS == 3)     goto label300;
            if(IS == 4)     goto label400;
            if(IS == 5)     goto label500;
            if(IS == 6)     goto label600;
            if(IS == 7)     goto label700;
            if(IS == 8)     goto label800;
            
        label100:
            if (!QENGL) NUMBER (A,B,H,T,W,NDECM);
            if (QENGL) UWA135(T,A,B,H,W);
            SYMBOL (999.0,999.0,H," M",W,2);
            goto label1000;

        label200:
            NUMBER (A,B,H,T,W,NDECTE);
            SYMBOL (999.0,999.0,H," H",W,2);
            goto label1000;

        label300:
            if (T >= 0.0) NUMBER (A,B,H,T,W,NDECTE);
            if (T < 0.0) NUMBER (A,B,H,-T,W,NDECN);
            if (T < 0.0) goto label1000;
            if (QENGL) SYMBOL (999.0,999.0,H," F",W,2);
            if (!QENGL) SYMBOL (999.0,999.0,H," C",W,2);
            goto label1000;

        label400:
            NUMBER (A,B,H,T,W,NDECM);
            SYMBOL (999.0,999.0,H," MW",W,3);
            goto label1000;

        label500:
            NUMBER (A,B,H,T,W,NDECM);
            if (QSI) SYMBOL (999.0,999.0,H," MJ/S",W,5);
            if (QTECHN) SYMBOL (999.0,999.0,H," GCAL/H",W,7);
            if (QENGL) SYMBOL (999.0,999.0,H,"*1000 BTU/HR",W,12);
            goto label1000;

        label600:
            NUMBER (A,B,H,T,W,1);
            if (QENGL) SYMBOL (999.0,999.0,H," F",W,2);
            if (!QENGL) SYMBOL (999.0,999.0,H," K",W,2);
            goto label1000;

        label700:
            NDECP = 4;
            if (T >= 10.00) NDECP = 3;
            if (T >= 100.0) NDECP = 2;
            if (T >= 1000.0) NDECP = 1;
            NUMBER (A,B,H,T,W,NDECP);
            if (QENGL) SYMBOL (999.0,999.0,H," PSIA",W,5);
            if (QSI) SYMBOL (999.0,999.0,H," BAR ",W,5);
            if (QTECHN) SYMBOL (999.0,999.0,H," AT ",W,5);
            goto label1000;

        label800:
            NUMBER (A,B,H,T,W,NDECTE);
            if (QENGL) SYMBOL (999.0,999.0,H," F",W,2);
            if (!QENGL) SYMBOL (999.0,999.0,H," C",W,2);
            
        label1000:
            FACTOR (FACT);
            return;
        }   //END


        static void UWA134(double C,double D,double R,double H,string S)
        {   
            //ENTRY KREIS (C,D,R,H,S)
            //LOGICAL QABC
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            double A, B;
            A = C;
            B = D;
            FACTOR (FACTS);
            A = A*FACT/FACTS;
            B = B*FACT/FACTS;
            CIRCL(A,B,0.0,360.0,R,R,0.0);
            SYMBOL (A-R-4.0*H/10.0,B-0.5*H,H,S,0.0,1);
            FACTOR (FACT);
            return;
        }   //END

        
        static void UWA135(double Z,double XP,double YP,double XH,double XW)
        {
            //ENTRY ZAHL (Z,XP,YP,XH,XW)
            double IZ, ZZ1, ZZ2, ZZ;
            IZ1 = 0;
            IZ2 = 0;
            if (XW == 0.0) XP = XP - XH;
            if (XW == 0.0 && Z >= 10000.0) XP = XP - XH*0.5;
            if (XW == 90.0) YP = YP - XH;
            if (XP > 990.0) XP = 999.0;
            if (YP > 990.0) YP = 999.0;
            SYMBOL (XP,YP,XH," ",XW,1);
            Z1 = Z*1000.0+0.05;
            IZ = Z1;
            if (IZ < 1000000) goto label1;

            IZ1 = (int)IZ/1000000;
            IZ = IZ - IZ1*1000000;
            ZZ1 = IZ1;
            NUMBER (999.0,999.0,XH,ZZ1,XW,-1);
            SYMBOL (999.0,999.0,XH,",",XW,1);
            
        label1:
            if (IZ1 == 0 && IZ < 1000) goto label2;
            IZ2 = (int)IZ / 1000;
            IZ = IZ - IZ2*1000;
            if (IZ1 != 0 && IZ2 < 100) SYMBOL (999.0,999.0,XH,"0",XW,1);
            if (IZ1 != 0 && IZ2 < 10) SYMBOL (999.0,999.0,XH,"0",XW,1);
            ZZ2 = IZ2;
            NUMBER (999.0,999.0,XH,ZZ2,XW,-1);
            SYMBOL (999.0,999.0,XH,",",XW,1);
            IZ2 = 999;
            
        label2:
            if (IZ2 != 0 && IZ < 100) SYMBOL (999.0,999.0,XH,"0",XW,1);
            if (IZ2 != 0 && IZ < 10) SYMBOL (999.0,999.0,XH,"0",XW,1);
            ZZ = IZ;
            NUMBER (999.0,999.0,XH,ZZ,XW,-1);
            return;
        }   //END

        
        static void UWA136(int IM, int IELEM, double X, double Y, double XXX, double XDXT, double FACT, double FACTS,double XH)
        {
            //ENTRY GAS (IM,IELEM,X,Y,XXX,XDXT,FACT,FACTS,XH)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /GASPRO/ IVERD[2],IKLAB[2],IZWKUE,IREKU,IZUF[2],IBRK[2], UWA136
            //1 IGTURB[2],IKLZU[4],IABHI,KABHI,NGASTA,NGAST,NRGAS ER1986
            //COMMON /GASDAT/ PGAS,PVERD[2],PZUF[2],PGTURB[2],PVVERD[2],
            //1 TVVERD[2],TNVERD[2],TNREKU,TNZUF[2],TNBRK[2], UWA136
            //2 TVTURB[2],TNTURB[2],TABGAS,HU,
            //3 GLUFT,GKLAB[2],GKLZU[4],GBRK[2],GNTURB[2],GABGAS UWA136
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            double V = 0, DX = 0, XL = 0, XWT = 0, YWT = 0;
            int LX = 0, I1 = 0;
            IELEM = 0;
            if (IVERD[1] == 0) return;
            
            if (IM == 0) goto label100;

            XXX = XXX + 3.0;
            IELEM = 1;
            if (IZWKUE == 1) IELEM = IELEM + 1;
            if (IZWKUE == 1) X = X + 1.5;
            if (IZWKUE == 1) XXX = XXX + 3.0;
            if (IVERD[2] > 0) IELEM = IELEM + 1;
            if (IVERD[2] > 0) XXX = XXX + 3.0;
            if (IREKU == 1) IELEM = IELEM + 1;
            if (IREKU == 1) X = X + 1.5;
            if (IREKU == 1) XXX = XXX + 3.0;
            if (IZUF[1] == 1) IELEM = IELEM + 1;
            if (IZUF[1] == 1) X = X + 1.5;
            if (IZUF[1] == 1) XXX = XXX + 3.0;
            if (IBRK[1] > 0) IELEM = IELEM + 1;
            if (IBRK[1] > 0) X = X + 1.5;
            if (IBRK[1] > 0) XXX = XXX + 3.0;
            if (IGTURB[1] > 0) IELEM = IELEM + 1;
            if (IGTURB[1] > 0) X = X + 2.0;
            if (IGTURB[1] > 0) XXX = XXX + 3.0;
            if (IZUF[2] == 1) IELEM = IELEM + 1;
            if (IZUF[2] == 1) X = X + 1.5;
            if (IZUF[2] == 1) XXX = XXX + 3.0;
            if (IBRK[2] > 0) IELEM = IELEM + 1;
            if (IBRK[2] > 0) X = X + 1.5;
            if (IBRK[2] > 0) XXX = XXX + 3.0;
            if (IGTURB[2] > 0) IELEM = IELEM + 1;
            if (IGTURB[2] > 0) X = X + 2.0;
            if (IABHI == 1) X = X + 0.75;
            if (IABHI == 2) X = X + 2.25;
            
            return;

        label100:
            V = FACTS/FACT;
            X = 6.5/FACT;
            Y = 27.1/FACT - 2.25;
            if (NGASTA <= 1) goto label110;
            
            if (QTEXT) SYMBOL (X,Y+4.0,0.3*V,"GT-DATAS REFER TO ONE UNIT",0.0,26);
            if (!QTEXT) SYMBOL (X,Y+4.0,0.3*V,"GT-UWA131 BEZIEHEN SICH AUF EINE GASTURBINE",0.0,42);
            DX = 0.0;
            if (!QTEXT) DX = 2.4*V;
            A1 = (NGAST);
            NUMBER (X+DX,Y+4.0-0.5*V,0.3*V,A1,0.0,-1);
            if (QTEXT && NGAST > 1)
                SYMBOL (X+0.3*V,Y+4.0-0.5*V,0.3*V, " GT-UNITS ARE IN SERVICE",0.0,24);
            if (!QTEXT && NGAST > 1)
                SYMBOL (X+2.7*V,Y+4.0-0.5*V,0.3*V, " GASTURBINEN IN BETRIEB",0.0,23);
            if (QTEXT && NGAST == 1)
                SYMBOL (X+0.3*V,Y+4.0-0.5*V,0.3*V, " GT-UNIT IS IN SERVICE",0.0,24);
            if (!QTEXT && NGAST == 1)
                SYMBOL (X+2.7*V,Y+3.5-0.5*V,0.3*V," GASTURBINE IN BETRIEB ",0.0,23);

        label110:
            if (IABHI == 2) Y = Y - 1.0*V;
            PLOT (X-0.75,Y-3.70,3);
            PLOT (X-0.75-1.5*V,Y-3.70,2);
            PLOT (X-0.75-1.5*V,Y-3.80,3);
            PLOT (X-0.75,Y-3.80,2);
            CIRCL(X-0.75-1.5*V,Y-3.75,0.0,360.0,0.75,0.75,0.0);
            SYMBOL (X-1.70-1.5*V,Y-4.05,0.6,"G",0.0,1);

            if (KREUZ > 0) goto label200;

            if (PGAS > 0.0) UWA133(X-2.45-1.5*V,Y-2.7,0.2,PGAS,0.0,4);

        label200:
            J = 0;
            
        label1000:
            J = J + 1;
            NEWPEN(1);
            if (J == 1 && IVERD[2] == 1) goto label1500;
            if (IVERD[J] == 0) goto label2000;
            
            Y = Y - 7.5;
            PLOT (X-0.05,Y,3);
            PLOT (X-0.05,Y+3.0,2);
            PLOT (X+0.05,Y+3.0,3);
            DASHP(X+0.05,Y,0.2);
            CIRCL(X+0.75,Y+3.75,0.0,360.0,0.75,0.75,0.0);
            PLOT (X-0.5,Y+3.2,3);
            PLOT (X-0.25,Y+4.45,2);
            PLOT (X+0.25,Y+4.45,3);
            PLOT (X+0.5,Y+3.2,2);
            PLOT (X-0.05,Y+4.5,3);
            PLOT (X-0.05,Y+7.55,2);
            PLOT (X+3.0*V+XDXT,Y+7.55,2);
            PLOT (X+3.0*V+XDXT,Y+7.45,3);
            DASHP(X+0.05,Y+7.45,0.2);
            DASHP(X+0.05,Y+4.5,0.2);
            
            if (KREUZ > 0) goto label1200;
            if (J > 1) goto label1100;

            if (PVVERD[J] > 0.0) UWA133(X+.3,Y+1.0+.8*V,XH,PVVERD[J],0.0,7);
            if (TVVERD[J] != 0.0) UWA133(X+.3,Y+1.0+.4*V,XH,TVVERD[J],0.0,8);
            if (GLUFT > 0.0) UWA133(X+.3,Y+1.0 ,XH,GLUFT ,0.0,1);

        label1100:
            if (TNVERD[J] > 0.0) UWA133(X+0.30,Y+5.5,XH,TNVERD[J],0.0,3);
            if (PVERD[J] > 0.0) UWA133(X+0.95,Y+3.9,XH,PVERD[J] ,0.0,4);
            
        label1200:
            if (IKLAB[J] == 0) goto label1300;
            PLOT (X-0.05,Y+6.45,3);
            DASHP(X-2.8*V,Y+6.45,0.2);
            PLOT (X-2.8*V,Y+6.55,3);
            PLOT (X-0.05,Y+6.55,2);
            AROHD(X-2.8*V,Y+6.5,X-3.1*V,Y+6.5,0.3*V,0.0,16);
            
            if (KREUZ > 0) goto label1300;
            if (GKLAB[J] > 0.0) UWA133(X-2.7*V,Y+6.7,XH,GKLAB[J],0.0,1);
            
        label1300:
            if (J == 1) goto label1400;

            PLOT (X-0.75,Y+3.70,3);
            PLOT (XL,Y+3.70,2);
            PLOT (XL,Y+3.80,3);
            PLOT (X-0.75,Y+3.80,2);
            
        label1400:
            Y = Y + 7.5;
            XL = X + 0.75;
            X = X + 3.0*V + XDXT;
            goto label2000;

        label1500:
            PLOT (X+0.05,Y,3);
            PLOT (X+0.05,Y-3.0,2);
            PLOT (X-0.05,Y-3.0,3);
            DASHP(X-0.05,Y,0.2);
            CIRCL(X+0.75,Y-3.75,0.0,360.0,0.75,0.75,0.0);
            PLOT (X-0.5,Y-3.2,3);
            PLOT (X-0.25,Y-4.45,2);
            PLOT (X+0.25,Y-4.45,3);
            PLOT (X+0.5,Y-3.2,2);
            PLOT (X+0.05,Y-4.5,3);
            PLOT (X+0.05,Y-7.45,2);
            PLOT (X+3.0+XDXT,Y-7.45,2);
            PLOT (X+3.0+XDXT,Y-7.55,3);
            DASHP(X-0.05,Y-7.55,0.2);
            DASHP(X-0.05,Y-4.5,0.2);
            
            if (KREUZ > 0) goto label1600;
            
            if (PVVERD[J] > 0.0)UWA133(X+.3,Y-1.0 ,XH,PVVERD[J],.0,7);
            if (TVVERD[J] != 0.0) UWA133(X+.3,Y-1.0-.4*V,XH,TVVERD[J],0.0,8);
            
            if (TNVERD[J] <= 0.0) UWA133(X+0.25,Y-5.5,XH,TNVERD[J],0.0,3);
            if (PVERD[J] <= 0.0) UWA133(X+0.95,Y-3.9,XH,PVERD[J],0.0,4);
            
        label1600:
            if (IKLAB[J] == 0) goto label1700;

            PLOT (X-0.05,Y-6.45,3);
            DASHP(X-2.8*V,Y-6.45,0.2);
            PLOT (X-2.8*V,Y-6.55,3);
            PLOT (X-0.05,Y-6.55,2);
            AROHD(X-2.8*V,Y-6.5,X-3.1*V,Y-6.5,0.3*V,0.0,16);
            
            if (KREUZ > 0) goto label1700;
            if (GKLAB[J] > 0.0) UWA133(X-2.7*V,Y-6.35,XH,GKLAB[J],0.0,1);
            
        label1700:
            Y = Y - 7.5;
            XL = X + 0.75;
            X = X + 3.0*V + XDXT;
            
            if (IZWKUE == 0) goto label1000;

            PLOT (X,Y+0.75,3);
            PLOT (X,Y-0.75,2);
            PLOT (X+1.5,Y-0.75,2);
            PLOT (X+1.5,Y+0.75,2);
            PLOT (X,Y+0.75,2);
            PLOT (X+0.2,Y-1.75,3);
            PLOT (X+0.2,Y+0.55,2);
            PLOT (X+0.75,Y-0.55,2);
            PLOT (X+1.3,Y+0.55,2);
            PLOT (X+1.3,Y-1.75,2);
            PLOT (X+1.5,Y+0.05,3);
            PLOT (X+1.55+3.0*V+XDXT,Y+0.05,2);
            PLOT (X+1.45+3.0*V+XDXT,Y-0.05,3);
            DASHP(X+1.5,Y-0.05,0.2);
            X = X + 1.5 + 3.0*V + XDXT;
            goto label1000;
            
        label2000:
            if (IREKU == 0) goto label3000;

            PLOT (X,Y+0.75,3);
            PLOT (X,Y-0.75,2);
            PLOT (X+1.5,Y-0.75,2);
            PLOT (X+1.5,Y+0.75,2);
            PLOT (X,Y+0.75,2);
            PLOT (X+1.5,Y+0.05,3);
            PLOT (X+1.5+3.0*V+XDXT,Y+0.05,2);
            PLOT (X+1.5+3.0*V+XDXT,Y-0.05,3);
            DASHP(X+1.5,Y-0.05,0.2);
            XWT = X + 0.2;
            YWT = Y - 8.4;
            LX = 1;
            if (IBRK[1] > 0 || IBRK[2] > 0) LX = 0;
            if (LX == 1) goto label2100;
            
            PLOT (X+1.2,Y-7.6,3);
            PLOT (X+1.2,Y,2);
            PLOT (X+0.75,Y-0.55,2);
            PLOT (X+0.3,Y,2);
            PLOT (X+0.3,Y-8.3,2);
            PLOT (X+0.1,Y-8.5,3);
            PLOT (X+0.1,Y+0.55,2);
            PLOT (X+0.75,Y-0.15,2);
            PLOT (X+1.4,Y+0.55,2);
            PLOT (X+1.4,Y-7.4,2);
            NEWPEN(3);
            PLOT (X+0.2,Y-8.4,3);
            PLOT (X+0.2,Y+0.3,2);
            PLOT (X+0.75,Y-0.3,2);
            PLOT (X+1.3,Y+0.3,2);
            PLOT (X+1.3,Y-7.5,2);
            NEWPEN(1);
            goto label2200;
            
        label2100:
            PLOT (X+1.2,Y-7.55,3);
            DASHP(X+1.2,Y+0.2,0.2);
            DASHP(X+0.75,Y-0.55,0.2);
            DASHP(X+0.3,Y+0.2,0.2);
            DASHP(X+0.3,Y-9.55,0.2);
            PLOT (X+1.3,Y-7.45,3);
            PLOT (X+1.3,Y+0.55,2);
            PLOT (X+0.75,Y-0.3,2);
            PLOT (X+0.2,Y+0.55,2);
            PLOT (X+0.2,Y-9.45,2);
            
        label2200:
            if (KREUZ > 0) goto label2300;
            
            if (TNREKU > 0.0) UWA133(X+1.7,Y+0.3,XH,TNREKU,0.0,3);
            
        label2300:
            X = X + 1.5 + 3.0*V + XDXT;
            
        label3000:
            J = 0;
            LX = 1;
            
        label3100:
            J = J + 1;
            if (J > 2) goto label7000;
            if (IZUF[J] == 0) goto label4000;

            PLOT (X,Y+0.75,3);
            PLOT (X,Y-0.75,2);
            PLOT (X+1.5,Y-0.75,2);
            PLOT (X+1.5,Y+0.75,2);
            PLOT (X,Y+0.75,2);
            PLOT (X+0.2,Y+1.75,3);
            PLOT (X+0.2,Y-0.55,2);
            PLOT (X+0.75,Y+0.55,2);
            PLOT (X+1.3,Y-0.55,2);
            PLOT (X+1.3,Y+1.75,2);

            if (LX == 0) goto label3200;

            PLOT (X+1.5,Y+0.05,3);
            PLOT (X+1.5+3.0*V+XDXT,Y+0.05,2);
            PLOT (X+1.5+3.0*V+XDXT,Y-0.05,3);
            DASHP(X+1.5,Y-0.05,0.2);
            goto label3300;

        label3200:
            PLOT (X+1.5,Y+0.1,3);
            PLOT (X+1.5+3.0*V+XDXT,Y+0.1,2);
            PLOT (X+1.5+3.0*V+XDXT,Y-0.1,3);
            PLOT (X+1.5,Y-0.1,2);
            NEWPEN(3);
            PLOT (X+1.5,Y,3);
            PLOT (X+1.5+3.0*V+XDXT,Y,2);
            NEWPEN(1);

        label3300:
            if (KREUZ > 0) goto label3400;

            if (TNZUF[J] > 0.0) UWA133(X+1.7,Y+0.3,XH,TNZUF[J],0.0,3);
            if (PZUF[J] > 0.0) UWA133(X,Y+2.0,XH,PZUF[J],0.0,4);

        label3400:
            X = X + 1.5 + 3.0*V + XDXT;

        label4000:
            if (IBRK[J] == 0) goto label5000;
            LX = 0;
            PLOT (X,Y+0.75,3);
            PLOT (X,Y-0.75,2);
            PLOT (X+1.5,Y-0.75,2);
            PLOT (X+1.5,Y+0.75,2);
            PLOT (X,Y+0.75,2);
            CIRCL(X+1.1,Y,0.0,360.0,0.35,0.35,0.0);
            PLOT (X+0.5,Y-0.25,3);
            PLOT (X+1.0,Y+0.25,2);
            PLOT (X+1.0,Y-0.25,3);
            PLOT (X+0.5,Y+0.25,2);
            PLOT (X+0.7,Y+0.33,3);
            PLOT (X+0.7,Y+1.8,2);
            PLOT (X+0.8,Y+1.8,3);
            PLOT (X+0.8,Y+0.33,2);
            PLOT (X+1.5,Y+0.1,3);
            PLOT (X+1.55+3.0*V+XDXT,Y+0.1,2);
            PLOT (X+1.45+3.0*V+XDXT,Y-0.1,3);
            PLOT (X+1.5,Y-0.1,2);
            NEWPEN(3);
            PLOT (X+1.5,Y,3);
            PLOT (X+1.5+3.0*V+XDXT,Y,2);
            NEWPEN(1);
            
            if (KREUZ > 0) goto label4100;
            
            if (TNBRK[J] > 0.0) UWA133(X+1.7,Y+0.3,XH,TNBRK[J],0.0,3);
            if (GBRK[J] > 0.0) UWA133(X-0.2,Y+2.0,XH,GBRK[J],0.0,1);
            if (!QTEXT && NRGAS == 1) SYMBOL (X-1.5*V,Y+2.0+0.5*V,XH*V,"BRENNSTOFF GAS / LCV =",0.0,22);
            if (!QTEXT && NRGAS == 2) SYMBOL (X-1.5*V,Y+2.0+0.5*V,XH*V,"BRENNSTOFF OEL / LCV =",0.0,22);
            if (QTEXT && NRGAS == 1) SYMBOL (X-1.5*V,Y+2.0+0.5*V,XH*V,"FUEL GAS / LCV =",0.0,16);
            if (QTEXT && NRGAS == 2) SYMBOL (X-1.5*V,Y+2.0+0.5*V,XH*V, "FUEL OIL / LCV =",0.0,16);
            I1 = 23;
            if (QTEXT) I1 = 17;
            UWA133(X-1.5*V+I1*XH*V,Y+2.0+0.5*V,XH,HU,0.0,2);
            
        label4100:
            X = X + 1.5 + 3.0*V + XDXT;

        label5000:
            if (IGTURB[J] == 0) goto label3100;

            if (LX == 1) goto label5100;

            PLOT (X-0.1,Y-0.05,3);
            PLOT (X-0.1,Y-3.25,2);
            PLOT (X+0.1,Y-3.20,3);
            PLOT (X+0.1,Y+0.1,2);
            NEWPEN(3);
            PLOT (X,Y,3);
            PLOT (X,Y-3.22,2);
            NEWPEN(1);
            goto label5200;

        label5100:
            PLOT (X-0.1,Y-0.05,3);
            DASHP(X-0.1,Y-3.25,0.2);
            PLOT (X,Y+0.05,3);
            PLOT (X,Y-3.22,2);

        label5200:
            PLOT (X-0.1,Y-3.25,3);
            PLOT (X-0.1,Y-4.25,2);
            PLOT (X+2.1,Y-4.75,2);
            PLOT (X+2.1,Y-2.75,2);
            PLOT (X-0.1,Y-3.25,2);
            PLOT (X-0.1,Y-3.80,3);
            PLOT (XL,Y-3.80,2);
            PLOT (XL,Y-3.70,3);
            PLOT (X-0.1,Y-3.70,2);
            XL = X + 2.1;

            if (IKLZU[J] == 0.0) goto label5300;

            PLOT (X-0.1,Y+2.8*V,3);
            PLOT (X-0.1,Y+0.3,2);
            PLOT (X,Y+0.3,3);
            DASHP(X,Y+2.8*V,0.2);
            AROHD(X-0.05,Y+0.4*V,X-0.05,Y+0.05,0.3*V,0.0,16);

            if (KREUZ > 0) goto label5300;
            if (GKLZU[J] > 0.0) UWA133(X-0.3,Y+0.4*V,XH,GKLZU[J],90.0,1);

        label5300:
            if (J == 1 && IGTURB[2] == 1) goto label6000;
            if (IABHI > 0 && IREKU == 0) goto label6000;

            if (LX == 1) goto label5400;

            PLOT (X+1.9,Y-4.70,3);
            PLOT (X+1.9,Y-7.4,2);
            if (IREKU == 1) PLOT (XWT+1.2,Y-7.4,2);
            PLOT (X+2.1,Y-4.75,3);
            PLOT (X+2.1,Y-7.6,2);
            if (IREKU == 1) PLOT (XWT+1.0,Y-7.6,2);
            NEWPEN(3);
            PLOT (X+2.0,Y-4.73,3);
            PLOT (X+2.0,Y-7.5,2);
            if (IREKU == 1) PLOT (XWT+1.1,Y-7.5,2);
            NEWPEN(1);
            goto label5500;

        label5400:
            PLOT (X+2.1,Y-4.75,3);
            DASHP(X+2.1,Y-7.55,0.2);
            if (IREKU == 1) DASHP(XWT+1.05,Y-7.55,0.2);
            PLOT (X+2.0,Y-4.73,3);
            PLOT (X+2.0,Y-7.45,2);
            if (IREKU == 1) PLOT (XWT+1.15,Y-7.45,2);

        label5500:
            if (IREKU == 0)
                AROHD(X+2.0,Y-7.4,X+2.0,Y-7.8,0.4*V,0.0,16);

            if (KREUZ > 0) goto label5600;

            if (TNTURB[J] > 0.0)
                UWA133(X+1.9-2.3*V,Y-5.0,XH,TNTURB[J],0.0,3);
            if (GNTURB[J] > 0.0)
                UWA133(X+1.9-2.3*V,Y-5.0-0.4*V,XH,GNTURB[J],0.0,1);
            if (TVTURB[J] > 0.0) UWA133(X-1.7*V,Y-2.5,XH,TVTURB[J],0.0,3);
            if (PGTURB[J] > 0.0) UWA133(X-2.3*V,Y-3.6,XH,PGTURB[J],0.0,4);
            
        label5600:
            if (IKLZU[J+2] == 0) goto label5700;

            PLOT (X+1.7-2.7*V,Y-6.45,3);
            PLOT (X+1.7,Y-6.45,2);
            PLOT (X+1.7,Y-6.55,3);
            DASHP(X+1.7-2.7*V,Y-6.55,0.2);
            AROHD(X+1.9-0.3*V,Y-6.5,X+1.9,Y-6.5,0.3*V,0.0,16);

            if (KREUZ > 0) goto label5700;

            if (GKLZU[J+2] > 0.0)
                UWA133(X+1.9-2.7*V,Y-6.3,XH,GKLZU[J+2],0.0,1);

        label5700:
            if (LX == 1) goto label5800;

            PLOT (X+2.1,Y-7.6,3);
            PLOT (X+2.1,Y-9.5,2);
            PLOT (X+1.9,Y-9.5,3);
            PLOT (X+1.9,Y-7.4,2);
            NEWPEN(3);
            PLOT (X+2.0,Y-7.5,3);
            PLOT (X+2.0,Y-9.5,2);
            NEWPEN(1);
            AROHD(X-2.0,Y-9.5,X-2.0,Y-9.9,0.4,0.0,16);
            goto label5900;
            
        label5800:
            PLOT (X+2.1,Y-7.55,3);
            PLOT (X+2.1,Y-9.5,2);
            PLOT (X+2.0,Y-9.5,3);
            DASHP(X+2.0,Y-7.45,0.2);
            AROHD(X-2.05,Y-9.5,X-2.0,Y-9.9,0.4,0.0,16);
            
        label5900:
            X = X + 2.0 + 3.0*V;
            goto label3100;
            
        label6000:
            if (LX == 1) goto label6100;
            
            PLOT (X+2.0+3.0*V+XDXT,Y+0.1,3);
            PLOT (X+1.9,Y+0.1,2);
            PLOT (X+1.9,Y-2.80,2);
            PLOT (X+2.1,Y-2.75,3);
            PLOT (X+2.1,Y-0.1,2);
            PLOT (X+2.0+3.0*V+XDXT,Y-0.1,2);
            NEWPEN(3);
            PLOT (X+2.0+3.0*V+XDXT,Y,3);
            PLOT (X+2.0,Y,2);
            PLOT (X+2.0,Y-2.77,2);
            NEWPEN(1);
            goto label6200;
            
        label6100:
            PLOT (X+2.0+3.0*V+XDXT,Y+0.05,3);
            PLOT (X+2.0,Y+0.05,2);
            PLOT (X+2.0,Y-2.77,2);
            PLOT (X+2.1,Y-2.75,3);
            DASHP(X+2.1,Y-0.05,0.2);
            DASHP(X+2.0+3.0*V+XDXT,Y-0.05,0.2);
            
        label6200:
            if (KREUZ > 0) goto label6300;
            if (TNTURB[J] > 0.0)UWA133(X+2.5,Y+.3+.4*V,XH,TNTURB[J],0.0,3);
            if (GNTURB[J] > 0.0)UWA133(X+2.5,Y+.3 ,XH,GNTURB[J],0.0,1);

            if (TVTURB[J] > 0.0) UWA133(X-1.7*V,Y-2.5,XH,TVTURB[J],0.0,3);
            if (PGTURB[J] > 0.0) UWA133(X-2.3*V,Y-3.6,XH,PGTURB[J],0.0,4);

        label6300:
            if (IKLZU[J+2] == 0) goto label6400;
            PLOT (X+2.0,Y+0.3,3);
            PLOT (X+2.0,Y+2.8*V,2);
            PLOT (X+2.1,Y+2.8*V,3);
            DASHP(X+2.1,Y+0.3,0.3);
            AROHD(X+2.05,Y+0.1+0.3*V,X+2.05,Y+0.1,0.3*V,0.0,16);
            
            if (KREUZ > 0) goto label6400;
            if (GKLZU[J+2] > 0.0) UWA133(X+1.9,Y+0.4,XH,GKLZU[J+2],90.0,1);
            
        label6400:
            X = X + 2.0 + 3.0 * V + XDXT;
            goto label3100;
            
        label7000:
            NEWPEN(1);
            
            DX = 1.5;
            if (IABHI == 2) DX = 3.0;
            if (LX == 1) goto label7100;
            
            PLOT (X+DX,Y+0.1,3);
            PLOT (X+DX+3.0*V,Y+0.1,2);
            PLOT (X+DX+3.0*V,Y-0.1,3);
            PLOT (X+DX,Y-0.1,2);
            NEWPEN(3);
            PLOT (X+DX,Y,3);
            PLOT (X+DX+3.0*V,Y,2);
            AROHD(X+DX+3.0*V,Y,X+DX+3.3*V,Y,0.3*V,0.0,16);
            NEWPEN(1);
            if (IREKU == 0) goto label7200;
            
            PLOT (X,Y+0.1,3);
            PLOT (X-2.0*V-0.1,Y+0.1,2);
            PLOT (X-2.0*V-0.1,YWT+0.1,2);
            PLOT (XWT+0.1,YWT+0.1,2);
            PLOT (XWT-0.1,YWT-0.1,3);
            PLOT (X-2.0*V+0.1,YWT-0.1,2);
            PLOT (X-2.0*V+0.1,Y-0.1,2);
            PLOT (X,Y-0.1,2);
            NEWPEN(3);
            PLOT (X,Y,3);
            PLOT (X-2.0*V,Y,2);
            PLOT (X-2.0*V,YWT,2);
            PLOT (XWT,YWT,2);
            NEWPEN(1);
            goto label7200;
            
        label7100:
            PLOT (X+DX,Y+0.05,3);
            PLOT (X+DX+3.0*V,Y+0.05,2);
            PLOT (X+DX+3.0*V,Y-0.05,3);
            DASHP(X+DX,Y-0.05,0.2);
            AROHD(X+DX+3.0*V,Y,X+DX+3.3*V,Y,0.3*V,0.0,16);
            
        label7200:
            if (KREUZ > 0) goto label7300;
            
            if (TABGAS > 0.0) UWA133(X+DX+.3*V,Y+.3+.4*V,XH,TABGAS,0.0,3);
            if (GABGAS > 0.0) UWA133(X+DX+.3*V,Y+.3 ,XH,GABGAS,0.0,1);

        label7300:
            if (IABHI == 2) goto label7400;
            X = X + 0.75;
            Y = Y + 2.25;
            return;
            
        label7400:
            PLOT (X,Y+0.75,3);
            PLOT (X,Y-0.75,2);
            PLOT (X+3.0,Y-0.75,2);
            PLOT (X+3.0,Y+0.75,2);
            PLOT (X,Y+0.75,2);
            PLOT (X+1.5,Y+0.75,3);
            PLOT (X+1.5,Y-0.75,2);
            NEWPEN(3);
            PLOT (X+0.75,Y+0.75,3);
            PLOT (X+1.30,Y+1.50,2);
            PLOT (X+0.20,Y+1.50,2);
            PLOT (X+0.75,Y+2.25,2);
            PLOT (X+0.75,Y+2.25+1.0*V,2);
            PLOT (X+2.25,Y+2.25+1.0*V,2);
            PLOT (X+2.25,Y+2.25,3);
            PLOT (X+1.70,Y+1.50,2);
            PLOT (X+2.80,Y+1.50,2);
            PLOT (X+2.25,Y+0.75,2);
            X = X + 2.25;
            Y = Y + 2.25 + 1.0*V;
            return;
        }   //END


        static void UWA141(int L,double[] FELD,int K1, int K2, int KKW, int NFD)
        {
            //ENTRY PLOT1 (L,FELD,K1,K2,KKW,NFD)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //DIMENSION FELD(80)
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /KESSEL/ XKESS, YKESS, ISCHWR
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            int NDECP = 0, M1 = 0, M2 = 0;
            double XP = 0, YP = 0, XW = 0;
            if (L == 1) goto label1000;

            NEWPEN(3);
            PLOT (X,Y,3);
            PLOT (X+4.2/FACT,Y,2);
            NEWPEN(1);
            if (QTEXT && KKW == 3)
                SYMBOL (X+0.2,Y-0.3,XH,"FROM NSSS",0.0,9);
            if (QTEXT && KKW != 3)
                SYMBOL (X+0.2,Y-0.3,XH,"FROM BOILER",0.0,11);
            if (!QTEXT)
                SYMBOL (X+0.2,Y-0.3,XH,"VOM DAMPFERZEUGER",0.0,17);
            if (NFD == 1 && KKW != 3) goto label100;
            if (KREUZ == 1) goto label100;
            PLOT (X+4.0,Y+0.6,3);
            PLOT (X+0.2,Y+0.6,2);
            AROHD(X+2.2,Y+1.0,X+2.2,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label100;
            NDECP = 4;
            if (FELD[1] >= 10.0) NDECP = 3;
            if (FELD[1] >= 100.0) NDECP = 2;
            if (FELD[1] >= 1000.0) NDECP = 1;
            NUMBER (X+0.3,Y+0.7,XH,FELD[1],0.0,NDECP);
            NUMBER (X+2.4,Y+0.7,XH,FELD[2],0.0,NDECTE);
            XP = X + 0.3;
            YP = Y + 0.2;
            XW = 0.0;
            if (QENGL) UWA135(FELD[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[3],XW,NDECM);
            if(FELD[4] > 0.0)NUMBER (X+2.4,Y+0.2,XH, FELD[4],0.0,NDECTE);
            if(FELD[4] <= 0.0)NUMBER (X+2.4,Y+0.2,XH,-FELD[4],0.0,NDECN);
            
        label100:
            X = 7.2/FACT;
            return;

        label1000:
            if (K1 == 0 && K2 == 0) return;
            if (K1 == 0) goto label1200;
            
            for(M1 = 1; M1 <= K1; M1++) //DO 1100 M1 = 1,K1
            {
                NEWPEN(3);
                PLOT (X+0.7*(M1-1),Y,3);
                PLOT (X+0.7*M1,Y,2);
                AROHD(X+0.7*M1,Y,X+0.7*M1,Y-3.0,0.2,0.0,16);
                NEWPEN(1);
                CIRCL(X+0.7*M1+0.25,Y-3.25,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X+0.7*M1-0.05,Y-3.35,XH,ABC[M1],0.0,1);
                if (KREUZ > 0) continue;
                XP = X + 0.7*M1 - 0.2;
                YP = Y - 2.8;
                XW = 90.0;
                if (QENGL) UWA135(FELD[M1],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[M1],XW,NDECM);
                if (QENGL) SYMBOL (999.0,999.0,XH," LB/HR",XW,6);
                if (QSI) SYMBOL (999.0,999.0,XH," KG/S",XW,5);
                if (QTECHN) SYMBOL (999.0,999.0,XH," T/H",XW,4);
            }   //1100 CONTINUE
            if (K2 == K1) goto label1500;
            
        label1200:
            M2 = K1 + 1;
            for(M1 = M2; M1 <= K2; M1++) //DO 1400 M1 = M2,K2
            {
                NEWPEN(1);
                CIRCL(X+0.7*M1+0.25,Y-3.25,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X+0.7*M1-0.05,Y-3.35,XH,ABC[M1],0.0,1);
                if (KREUZ > 0) goto label1300;
                XP = X + 0.7*M1 - 0.2;
                YP = Y - 2.8;
                XW = 90.0;
                if (QENGL) UWA135(FELD[M1],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[M1],XW,NDECM);
                if (QENGL) SYMBOL (999.0,999.0,XH," LB/HR",XW,6);
                if (QSI) SYMBOL (999.0,999.0,XH," KG/S",XW,5);
                if (QTECHN) SYMBOL (999.0,999.0,XH," T/H",XW,4);
                NEWPEN(3);
                
            label1300:
                AROHD(X+0.7*M1,Y-3.0,X+0.7*M1,Y,0.2,0.0,16);
                PLOT (X+0.7*(M1-1),Y,3);
                PLOT (X+0.7*M1,Y,2);
            }   //1400 CONTINUE
            
        label1500:
            X = X + 0.7*K2;
            return;
        }   //END
            

        static void UWA142(int JJ,int J,int IZ1,int IX,int IX2,int IZUE,int K1,int K2,int ANZDTT,double[] FELD, double LKKW)
        {
            //ENTRY PLOT2 (JJ,J,IZ1,IX,IX2,IZUE,K1,K2,ANZDTT,FELD,LKKW) 
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //LOGICAL QNDWAS,QANZPA
            //LOGICAL QANZDU,QPLOT
            //INTEGER ANZDTT
            //DIMENSION FELD(80),
            string[] AAA = new string[24];
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /NTEILT/ NDTEIL
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /QWAS/ QNDWAS[5],QANZPA[5]
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ

            int IBS = 0, IUE = 0, NDECP = 0, IB = 0, M = 0, N = 0, L = 0, IZVOR = 0, NRND = 0;
            double ND = 0, XP = 0, YP = 0, XW = 0, DY = 0, DXD = 0, DX1 = 0, DX = 0, XND = 0, YND = 0, L1 = 0, L2 = 0,
                XS = 0, XR = 0, X3L = 0, XKOND = 0, YKOND = 0;

            if (J == 1) IUE = 0;
            IX1 = IX2;
            if (IX1 > 17) goto label3;
            if (IX1 > 11) goto label2;
            if (IX1 > 5) goto label1;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label1:
            IX1 = IX1 - 6;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            if (IX == 3 && IX1 == 3) XX = 0.0;
            goto label4;
            
        label2:
            IX1 = IX1 - 12;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 > 1) XX = 0.5;
            goto label4;
            
        label3:
            IX1 = IX1 - 18;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            if (IX == 3 && IX1 == 3) XX = 0.0;
            
        label4:
            NDECP = 4;
            if (FELD[1] >= 10.0) NDECP = 3;
            if (FELD[1] >= 100.0) NDECP = 2;
            if (FELD[1] >= 1000.0) NDECP = 1;
            NEWPEN(3);
            if (J == KOMP1) goto label7000;
            if (J == KOMP2) goto label7100;
            if (JJ > 1) goto label7;
            if (IX == 4) ND = NDTEIL;
            
            PLOT (X,Y,3);
            if (IX == 4) PLOT (X+3.5,Y,2);
            if (IX != 2 && IX != 4) PLOT (X+2.5+XX+0.5*IX1,Y,2);
            if (IX == 2) PLOT (X+4.0,Y,2);
            NEWPEN(1);
            if (IUE > 0 && QTEXT)
                SYMBOL (X,Y-0.3,XH,"FROM REHEATER",0.0,13);
            if (IUE > 0 && !QTEXT)
                SYMBOL (X,Y-0.3,XH,"VOM ZWISCHEN-",0.0,13);
            if (IUE > 0 && !QTEXT)
                SYMBOL (X,Y-0.6,XH,"UEBERHITZER",0.0,11);
            if (IUE == 1) SYMBOL (999.0,999.0,XH," 1",0.0,2);
            if (IUE == 2) SYMBOL (999.0,999.0,XH," 2",0.0,2);
            IUE = 0;
            if (IX == 4) X = X + 3.5;
            if (IX != 2 && IX != 4) X = X + 2.5 + XX + 0.5*IX1;
            if (IX == 2) X = X + 4.0;
            if (IZUE == 2 && J == 1 && IX != 2) goto label5;
            if (KREUZ == 1) goto label6;
            PLOT (X-3.8,Y+0.6,3);
            PLOT (X,Y+0.6,2);
            AROHD(X-1.8,Y+1.0,X-1.8,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label6;
            NUMBER (X-3.7,Y+0.7,XH,FELD[1],0.0,NDECP);
            NUMBER (X-1.6,Y+0.7,XH,FELD[2],0.0,NDECTE);
            XP = X - 3.7;
            YP = Y + 0.2;
            XW = 0.0;
            if (QENGL) UWA135(FELD[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[3],XW,NDECM);
            if(FELD[4] > 0.0)NUMBER (X-1.6,Y+0.2,XH, FELD[4],0.0,NDECTE);
            if(FELD[4] <= 0.0)NUMBER (X-1.6,Y+0.2,XH,-FELD[4],0.0,NDECN);
            NEWPEN(3);
            goto label7;
            
        label5:
            if (KREUZ == 1) goto label6;
            AROHD(X-3.8,Y-1.0,X,Y-1.0,0.2,0.0,16);
            PLOT (X-1.8,Y-1.4,3);
            PLOT (X-1.8,Y-0.6,2);
            if (KREUZ == 2) goto label6;
            NUMBER (X-3.7,Y-0.8,XH,FELD[1],0.0,NDECP);
            NUMBER (X-1.6,Y-0.8,XH,FELD[2],0.0,NDECTE);
            XP = X - 3.7;
            YP = Y - 1.4;
            XW = 0.0;
            if (QENGL) UWA135(FELD[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[3],XW,NDECM);
            if(FELD[4] > 0.0)NUMBER (X-1.6,Y-1.4,XH, FELD[4],0.0,NDECTE);
            if(FELD[4] <= 0.0)NUMBER (X-1.6,Y-1.4,XH,-FELD[4],0.0,NDECN);
            
        label6:
            NEWPEN(3);

        label7:
            //goto label(1000,2000,3000,4000),
            if(IX == 1)     goto label1000;
            if(IX == 2)     goto label2000;
            if(IX == 3)     goto label3000;
            if(IX == 4)     goto label4000;

        label1000:
            YY = 3.5;
            if (IZUE == 0 && IZ1 > 2) YY = 4.0;
            if (IX2 > 15) YY = 5.0;
            if (IZUE == 2) XDUE2 = X;
            if (IZUE == 2) YDUE2 = Y;
            AROHD(X,Y,X,Y-YY,0.2,0.0,16);
            Y = Y - YY;
            YWELLE = Y - 0.5;
            NEWPEN(1);
            PLOT (X-XX-IX1*0.5,Y+0.5,2);
            PLOT (X-XX-IX1*0.5,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            if (QTEXT)
                SYMBOL (X-XX-0.5*IX1+0.1,Y-0.4,XH,"HP -",0.0,4);
            if (!QTEXT)
                SYMBOL (X-XX-0.5*IX1+0.1,Y-0.4,XH,"HD -",0.0,4);
            SYMBOL (X-XX-0.5*IX1+0.1,Y-0.8,XH,"TURBINE",0.0,7);
            
            if (KREUZ == 1) goto label1010;
            
            AROHD(X-XX-0.5*IX1-3.9,Y-2.0,X-XX-0.5*IX1,Y-2.0,0.2,0.0,16);
            PLOT (X-XX-0.5*IX1-1.7,Y-1.6,3);
            PLOT (X-XX-0.5*IX1-1.7,Y-2.4,2);
            if (KREUZ == 2) goto label1010;
            NDECP = 4;
            if (FELD[77] >= 10.0) NDECP = 3;
            if (FELD[77] >= 100.0) NDECP = 2;
            if (FELD[77] >= 1000.0) NDECP = 1;
            NUMBER (X-XX-0.5*IX1-3.8,Y-1.9,XH,FELD[77],0.0,NDECP);
            NUMBER (X-XX-0.5*IX1-1.5,Y-1.9,XH,FELD[78],0.0,NDECTE);
            XP = X-XX-0.5*IX1-3.8;
            YP = Y - 2.4;
            XW = 0.0;
            if (QENGL) UWA135(FELD[79],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[79],XW,NDECM);
            if (FELD[80] > 0.0)
                NUMBER (X-XX-0.5*IX1-1.5,Y-2.4,XH, FELD[80],0.0,NDECTE);
            if (FELD[80] <= 0.0)
                NUMBER (X-XX-0.5*IX1-1.5,Y-2.4,XH,-FELD[80],0.0,NDECN);
            
        label1010:
            NEWPEN(3);
            if (IZUE == 0) goto label1015;
            PLOT (X-XX-IX1*0.5,Y-1.5,3);
            PLOT (X-XX-IX1*0.5,Y-3.0,2);
            if (IX1 != 0) goto label1020;
            if (IZUE == 1 && IX2 < 16) goto label1100;
            PLOT (X+3.0+XDXT,Y-3.0,2);
            XT= X + 3.0 + XDXT;
            YT= Y - 3.0;
            goto label6000;
            
        label1015:
            PLOT (X-XX-0.5*IX1,Y+0.5,3);
            PLOT (X-XX-0.5*IX1,Y+3.5,2);
            PLOT (X-0.15,Y+3.5,2);
            CIRCL(X-0.15,Y+3.5,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+3.0+XDXT,Y+3.5,2);
            XT = X + 3.0 + XDXT;
            YT = Y + 3.5;
            if (IX1 == 0) goto label1080;
            
        label1020:
            //goto label(1030,1030,1050,1060,1070),
            if(IX1 == 1)    goto label1030;
            if(IX1 == 2)    goto label1030;
            if(IX1 == 3)    goto label1050;
            if(IX1 == 4)    goto label1060;
            if(IX1 == 5)    goto label1070;
            
        label1030:
            PLOT (X-1.0,Y-1.35,3);
            PLOT (X-1.0,Y-3.5,2);
            if (IX1 == 2) goto label1040;
            if (IZUE == 0) goto label1080;
            PLOT (X-1.5,Y-3.0,3);
            if (IZUE == 1 && IX2 < 16) goto label1100;
            PLOT (X-1.15,Y-3.0,2);
            CIRCL(X-1.15,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+3.0+XDXT,Y-3.0,2);
            XT= X + 3.0 + XDXT;
            YT= Y - 3.0;
            goto label6000;
            
        label1040:
            PLOT (X-0.5,Y-3.5,3);
            PLOT (X-0.5,Y-1.2,2);
            if (IZUE == 0) goto label1080;
            PLOT (X-1.5,Y-3.0,3);
            if (IZUE == 1 && IX2 < 16) goto label1100;
            PLOT (X-1.15,Y-3.0,2);
            CIRCL(X-1.15,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-0.65,Y-3.0,2);
            CIRCL(X-0.65,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+3.0+XDXT,Y-3.0,2);
            XT= X + 3.0 + XDXT;
            YT= Y - 3.0;
            goto label6000;
            
        label1050:
            PLOT (X-0.5,Y-1.12,3);
            PLOT (X-0.5,Y-3.5,2);
            PLOT (X-1.0,Y-3.5,3);
            PLOT (X-1.0,Y-1.25,2);
            PLOT (X-1.5,Y-1.4,3);
            PLOT (X-1.5,Y-3.5,2);
            if (IZUE == 0) goto label1080;
            PLOT (X-2.0,Y-3.0,3);
            if (IZUE == 1 && IX2 < 16) goto label1100;
            PLOT (X-1.65,Y-3.0,2);
            CIRCL(X-1.65,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-1.15,Y-3.0,2);
            CIRCL(X-1.15,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-0.65,Y-3.0,2);
            CIRCL(X-0.65,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+3.0+XDXT,Y-3.0,2);
            XT= X + 3.0 + XDXT;
            YT= Y - 3.0;
            goto label6000;
            
        label1060:
            PLOT (X-0.5,Y-1.1,3);
            PLOT (X-0.5,Y-3.5,2);
            PLOT (X-1.0,Y-3.5,3);
            PLOT (X-1.0,Y-1.2,2);
            PLOT (X-1.5,Y-1.3,3);
            PLOT (X-1.5,Y-3.5,2);
            PLOT (X-2.0,Y-3.5,3);
            PLOT (X-2.0,Y-1.4,2);
            if (IZUE == 0) goto label1080;
            PLOT (X-2.5,Y-3.0,3);
            if (IZUE == 1 && IX2 < 16) goto label1100;
            PLOT (X-2.15,Y-3.0,2);
            CIRCL(X-2.15,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-1.65,Y-3.0,2);
            CIRCL(X-1.65,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-1.15,Y-3.0,2);
            CIRCL(X-1.15,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-0.65,Y-3.0,2);
            CIRCL(X-0.65,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+3.0+XDXT,Y-3.0,2);
            XT= X + 3.0 + XDXT;
            YT= Y - 3.0;
            goto label6000;
            
        label1070:
            PLOT (X-0.5,Y-1.08,3);
            PLOT (X-0.5,Y-3.5,2);
            PLOT (X-1.0,Y-3.5,3);
            PLOT (X-1.0,Y-1.15,2);
            PLOT (X-1.5,Y-1.25,3);
            PLOT (X-1.5,Y-3.5,2);
            PLOT (X-2.0,Y-3.5,3);
            PLOT (X-2.0,Y-1.32,2);
            PLOT (X-2.5,Y-1.4,3);
            PLOT (X-2.5,Y-3.5,2);
            if (IZUE == 0) goto label1080;
            PLOT (X-3.0,Y-3.0,3);
            if (IZUE == 1 && IX2 < 16) goto label1100;
            PLOT (X-2.65,Y-3.0,2);
            CIRCL(X-2.65,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-2.15,Y-3.0,2);
            CIRCL(X-2.15,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-1.65,Y-3.0,2);
            CIRCL(X-1.65,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-1.15,Y-3.0,2);
            CIRCL(X-1.15,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X-0.65,Y-3.0,2);
            CIRCL(X-0.65,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+3.0+XDXT,Y-3.0,2);
            XT= X + 3.0 + XDXT;
            YT= Y - 3.0;
            goto label6000;
            
        label1080:
            if (!QPLOT[J]) goto label6000;
            PLOT (X-XX-0.5*IX1,Y-1.5,3);
            PLOT (X-XX-0.5*IX1,Y-3.0,2);
            goto label6000;
            
        label1100:
            X = X - XX - 0.5*IX1;
            PLOT (X-6.5,Y-3.0,2);
            AROHD(X-6.3,Y-3.0,X-6.5,Y-3.0,0.2,0.0,16);
            NEWPEN(1);
            
            if (QTEXT)
                SYMBOL (X-6.3,Y-2.9,XH,"TO REHEATER",0.0,11);
            if (!QTEXT)
                SYMBOL (X-6.3,Y-2.9,XH,"ZUM ZWISCHENUEBERHITZER",0.0,23);
            IUE = 1;
            if (J == 2) IUE = 2;
            if (IUE == 1) SYMBOL (999.0,999.0,XH," 1",0.0,2);
            if (IUE == 2) SYMBOL (999.0,999.0,XH," 2",0.0,2);
            if (KREUZ == 1) goto label1110;
            PLOT (X-6.3,Y-3.6,3);
            PLOT (X-2.5,Y-3.6,2);
            AROHD(X-4.3,Y-4.0,X-4.3,Y-3.0,0.2,0.0,16);
            if (KREUZ == 2) goto label1110;
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            if (FELD[5] >= 1000.0) NDECP = 1;
            NUMBER (X-6.2,Y-3.5,XH,FELD[5],0.0,NDECP);
            NUMBER (X-4.1,Y-3.5,XH,FELD[6],0.0,NDECTE);
            XP = X - 6.2;
            YP = Y - 3.9;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[7],XW,NDECM);
            if(FELD[8] > 0.0)NUMBER (X-4.1,Y-3.9,XH, FELD[8],0.0,NDECTE);
            if(FELD[8] <= 0.0)NUMBER (X-4.1,Y-3.9,XH,-FELD[8],0.0,NDECN);
            
        label1110:
            IZUE = 0;
            X = X + XX + 0.5*IX1;
            XT = X + 3.0 + XDXT;
            YT = Y + 3.5;
            goto label6000;

        label2000:
            YY = -3.5;
            if (Y < YWELLE) YY = 3.0;
            AROHD(X,Y,X,Y+YY,0.2,0.0,16);
            Y = Y + YY;
            if (Y < YWELLE) Y = Y + 1.0;
            if (J == 1) YWELLE = Y - 0.5;
            NEWPEN(1);
            PLOT (X,Y,3);
            PLOT (X+XX+0.5*IX1,Y+0.5,2);
            PLOT (X+XX+0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            if (J == 1 && J == IZ1) goto label2005;
            if (J == IZ1 && QTEXT)
                SYMBOL (X+0.1,Y-0.4,XH,"LP -",0.0,4);
            if (J == IZ1 && !QTEXT)
                SYMBOL (X+0.1,Y-0.4,XH,"ND -",0.0,4);
            if (J != IZ1 && QTEXT)
                SYMBOL (X+0.1,Y-0.4,XH,"IP -",0.0,4);
            if (J != IZ1 && !QTEXT)
                SYMBOL (X+0.1,Y-0.4,XH,"MD -",0.0,4);
            SYMBOL (X+0.1,Y-0.8,XH,"TURBINE",0.0,7);
            
        label2005:
            NEWPEN(3);
            if (J == IZ1) goto label2010;
            PLOT (X+XX+0.5*IX1,Y+0.5,3);
            PLOT (X+XX+0.5*IX1,Y+3.0,2);
            PLOT (X+XX+0.5*IX1+3.0+XDXT,Y+3.0,2);
            goto label2020;
            
        label2010:
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-4.0,2);
            PLOT (X+XX+0.5*IX1+3.5,Y-4.0,2);
            AROHD(X+XX+0.5*IX1+3.5,Y-4.0,X+XX+0.5*IX1+3.5,Y-5.0,0.2,0.0,16);
            
        label2020:
            if (!QPLOT[J]) goto label2025;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-3.0,2);
            
        label2025:
            if (IX1 != 0) goto label2030;
            if (J == IZ1) goto label2090;
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label2030:
            //goto label(2040,2040,2060,2070,2080),
            if(IX1 == 1)        goto label2040;
            if(IX1 == 2)        goto label2040;
            if(IX1 == 3)        goto label2060;
            if(IX1 == 4)        goto label2070;
            if(IX1 == 5)        goto label2080;
            
        label2040:
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-2.0,2);
            if (IX1 > 1) goto label2050;
            if (J == IZ1) goto label2090;
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label2050:
            PLOT (X+0.5,Y-2.0,3);
            PLOT (X+0.5,Y-1.2,2);
            if (J == IZ1) goto label2090;
            XT= X + XX + 0.5*IX1 + 3.0 +XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label2060:
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-2.0,2);
            PLOT (X+1.0,Y-2.0,3);
            PLOT (X+1.0,Y-1.25,2);
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-2.0,2);
            if (J == IZ1) goto label2090;
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label2070:
            PLOT (X+0.5,Y-1.1,3);
            PLOT (X+0.5,Y-2.0,2);
            PLOT (X+1.0,Y-2.0,3);
            PLOT (X+1.0,Y-1.2,2);
            PLOT (X+1.5,Y-1.3,3);
            PLOT (X+1.5,Y-2.0,2);
            PLOT (X+2.0,Y-2.0,3);
            PLOT (X+2.0,Y-1.4,2);
            if (J == IZ1) goto label2090;
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;

        label2080:
            PLOT (X+0.5,Y-1.08,3);
            PLOT (X+0.5,Y-2.0,2);
            PLOT (X+1.0,Y-2.0,3);
            PLOT (X+1.0,Y-1.15,2);
            PLOT (X+1.5,Y-1.25,3);
            PLOT (X+1.5,Y-2.0,2);
            PLOT (X+2.0,Y-2.0,3);
            PLOT (X+2.0,Y-1.32,2);
            PLOT (X+2.5,Y-1.4,3);
            PLOT (X+2.5,Y-2.0,2);
            if (J == IZ1) goto label2090;
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label2090:
            XT = X+XX+0.5*IX1+5.5;
            YT = Y - 5.0;
            YK1 = YT - 3.0;
            XK1 = 4.0;
            NEWPEN(1);
            if (KREUZ == 1) goto label6000;
            AROHD(XT+1.7,YT+0.5,XT-2.0,YT+0.5,0.2,0.0,16);
            PLOT (XT+0.2,YT+0.9,3);
            PLOT (XT+0.2,YT+0.2,2);
            if (KREUZ == 2) goto label6000;
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            if (FELD[5] >= 1000.0) NDECP = 1;
            NUMBER (XT-1.8,YT+0.6,XH,FELD[5],0.0,NDECP);
            NUMBER (XT+0.4,YT+0.6,XH,FELD[6],0.0,NDECTE);
            if (!QENGL) NUMBER (XT-1.8,YT+0.2,XH,FELD[7],0.0,NDECM);
            XP = XT - 1.8;
            YP = YT + 0.2;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if(FELD[8] > 0.0)NUMBER (XT+.4,YT+.2,XH, FELD[8],0.0,NDECTE);
            if(FELD[8] <= 0.0)NUMBER (XT+.4,YT+.2,XH,-FELD[8],0.0,NDECN);
            goto label6000;

        label3000:
            if (J == 1) goto label3010;
            if (IZUE == 2) XDUE2 = X;
            if (IZUE == 2) YDUE2 = Y;
            DY = 0.0;
            YY = -3.5;
            if (Y < YWELLE) YY = 3.0;
            AROHD(X,Y,X,Y+YY,0.2,0.0,16);
            Y = Y + YY;
            if (Y < YWELLE) Y = Y + 1.0;
            goto label3020;
            
        label3010:
            DY = 0.0;
            if (IZUE == 0 && IZ1 > 2) DY = 0.5;
            YY = -3.5 - DY;
            if (IZUE == 2) XDUE2 = X;
            if (IZUE == 2) YDUE2 = Y;
            if (IX2 > 15) YY = -5.0;
            AROHD(X,Y,X,Y+YY,0.2,0.0,16);
            Y = Y + YY;
            YWELLE = Y - 0.5;
            
        label3020:
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            NEWPEN(1);
            
            PLOT (X,Y,3);
            PLOT (X-XX-0.5*IX1,Y+0.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X+XX+0.5*IX1,Y+0.5,2);
            PLOT (X+XX+0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            if (J == 1 && QTEXT)
                SYMBOL (X-XX-0.5*IX1+0.5,Y-0.6,XH,"HP -",0.0,4);
            if (J == 1 && !QTEXT)
                SYMBOL (X-XX-0.5*IX1+0.5,Y-0.6,XH,"HD -",0.0,4);
            if (J != 1 && QTEXT)
                SYMBOL (X-XX-0.5*IX1+0.5,Y-0.6,XH,"IP -",0.0,4);
            if (J != 1 && !QTEXT)
                SYMBOL (X-XX-0.5*IX1+0.5,Y-0.6,XH,"MD -",0.0,4);
            SYMBOL (X+0.1,Y-0.6,XH,"TURBINE",0.0,7);
            
            NEWPEN(3);
            DXD = 3.0;
            if (IX2 > 15 && IZUE == 0) DXD = 3.5;
            if (J == 1 && IZUE == 0) DXD = DXD + DY;
            if (IZUE != 1) AROHD(X-XX-0.5*IX1,Y+0.5,X-XX-0.5*IX1,Y+DXD,0.2,0.0,16);
            if (IZUE != 1) PLOT (X-0.15,Y+DXD,2);
            if (IZUE != 1) CIRCL(X-0.15,Y+DXD,180.0,0.0,0.15,0.15,0.0);
            if (QANZDU && IX1 == 1) PLOT (X+0.85,Y+DXD,2);
            if (QANZDU && IX1 == 1) CIRCL(X+0.85,Y+DXD,180.0,0.0,.15,.15,0.0);
            if (QANZDU && IX1 == 2) PLOT (X+0.35,Y+DXD,2);
            if (QANZDU && IX1 == 2) CIRCL(X+0.35,Y+DXD,180.0,0.0,.15,.15,0.0);
            if (IZUE != 1) PLOT (X+XX+0.5*IX1+3.0+XDXT,Y+DXD,2);
            if (IZUE != 1) AROHD(X+XX+0.5*IX1,Y+0.5,X+XX+0.5*IX1,Y+DXD,0.2,0.0,16);
            if (IX1 != 0) goto label3040;
            if (IZUE == 1) goto label3150;
            if (!QPLOT[J]) goto label3030;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-2.5,2);
            PLOT (X-XX-0.5*IX1,Y-2.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            
        label3030:
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT = Y + DXD;
            goto label6000;
            
        label3040:
            //goto label(3050,3070,3090,3110,3130),
            if(IX1 == 1)    goto label3050;
            if(IX1 == 2)    goto label3070;
            if(IX1 == 3)    goto label3090;
            if(IX1 == 4)    goto label3110;
            if(IX1 == 5)    goto label3130;
            
        label3050:
            PLOT (X+1.0,Y-1.35,3);
            PLOT (X+1.0,Y-3.0,2);
            PLOT (X+1.0,Y-2.0,3);
            PLOT (X-1.0,Y-2.0,2);
            PLOT (X-1.0,Y-1.35,2);
            if (IZUE == 1) goto label3150;
            if (!QPLOT[J]) goto label3060;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-2.5,2);
            PLOT (X+1.15,Y-2.5,2);
            CIRCL(X+1.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-XX-0.5*IX1,Y-2.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            
        label3060:
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label3070:
            PLOT (X+0.5,Y-1.2,3);
            PLOT (X+0.5,Y-3.0,2);
            if (YY > 0.0) PLOT (X+0.15,Y-3.0,2);
            if (YY > 0.0) CIRCL(X+0.15,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.85,Y-3.0,2);
            CIRCL(X-0.85,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.0,Y-3.0,2);
            PLOT (X-1.0,Y-3.5,3);
            PLOT (X-1.0,Y-1.35,2);
            if (IZUE == 1) goto label3150;
            if (!QPLOT[J]) goto label3080;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-2.5,2);
            PLOT (X+0.65,Y-2.5,2);
            CIRCL(X+0.65,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            if (YY > 0.0) PLOT (X+0.15,Y-2.5,2);
            if (YY > 0.0) CIRCL(X+0.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.85,Y-2.5,2);
            CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-XX-0.5*IX1,Y-2.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            
        label3080:
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;

        label3090:
            PLOT (X+0.5,Y-1.2,3);
            PLOT (X+0.5,Y-3.0,2);
            if (YY > 0.0) PLOT (X+0.15,Y-3.0,2);
            if (YY > 0.0) CIRCL(X+0.15,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.60,Y-3.0,2);
            CIRCL(X-0.60,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.75,Y-3.0,2);
            PLOT (X-0.75,Y-1.25,3);
            PLOT (X-0.75,Y-3.5,2);
            PLOT (X+1.0,Y-3.5,3);
            PLOT (X+1.0,Y-1.35,2);
            if (IZUE == 1) goto label3150;
            if (!QPLOT[J]) goto label3100;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-2.5,2);
            PLOT (X+1.15,Y-2.5,2);
            CIRCL(X+1.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X+0.65,Y-2.5,2);
            CIRCL(X+0.65,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            if (YY > 0.0) PLOT (X+0.15,Y-2.5,2);
            if (YY > 0.0) CIRCL(X+0.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.60,Y-2.5,2);
            CIRCL(X-0.60,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-XX-0.5*IX1,Y-2.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            
        label3100:
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label3110:
            PLOT (X-0.5,Y-1.1,3);
            PLOT (X-0.5,Y-2.5,2);
            PLOT (X+1.0,Y-1.2,3);
            PLOT (X+1.0,Y-3.0,2);
            PLOT (X-1.5,Y-3.5,3);
            PLOT (X-1.5,Y-1.3,2);
            PLOT (X+2.0,Y-4.0,3);
            PLOT (X+2.0,Y-1.4,2);
            if (IZUE == 1) goto label3150;
            if (!QPLOT[J]) goto label3120;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-2.5,2);
            PLOT (X+2.15,Y-2.5,2);
            CIRCL(X+2.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X+1.15,Y-2.5,2);
            CIRCL(X+1.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.35,Y-2.5,2);
            CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.35,Y-2.5,2);
            CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-XX-0.5*IX1,Y-2.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            
        label3120:
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label3130:
            PLOT (X-0.5,Y-1.08,3);
            PLOT (X-0.5,Y-2.5,2);
            PLOT (X+1.0,Y-3.0,3);
            PLOT (X+1.0,Y-1.15,2);
            PLOT (X-1.5,Y-3.5,3);
            PLOT (X-1.5,Y-1.25,2);
            PLOT (X+2.0,Y-1.32,3);
            PLOT (X+2.0,Y-4.0,2);
            PLOT (X-2.5,Y-1.4,3);
            PLOT (X-2.5,Y-4.5,2);
            if (IZUE == 1) goto label3150;
            if (!QPLOT[J]) goto label3140;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-2.5,2);
            PLOT (X+2.15,Y-2.5,2);
            CIRCL(X+2.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X+1.15,Y-2.5,2);
            CIRCL(X+1.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.35,Y-2.5,2);
            CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.35,Y-2.5,2);
            CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.35,Y-2.5,2);
            CIRCL(X-2.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-XX-0.5*IX1,Y-2.5,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            
        label3140:
            XT= X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT= Y + 3.0;
            goto label6000;
            
        label3150:
            IZUE = 0;
            AROHD(X-XX-0.5*IX1,Y-1.5,X-XX-0.5*IX1,Y-2.5,0.2,0.0,16);
            AROHD(X+XX+0.5*IX1,Y-1.5,X+XX+0.5*IX1,Y-2.5,0.2,0.0,16);
            if (IX1 == 0) goto label3210;
            
            //goto label(3160,3160,3180,3190,3200),
            if(IX1 == 1)        goto label3160;
            if(IX1 == 2)        goto label3160;
            if(IX1 == 3)        goto label3180;
            if(IX1 == 4)        goto label3190;
            if(IX1 == 5)        goto label3200;
            
        label3160:
            PLOT (X+1.15,Y-2.5,2);
            CIRCL(X+1.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            if (IX1 == 2) goto label3170;
            goto label3210;
            
        label3170:
            PLOT (X-0.35,Y-2.5,2);
            CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            goto label3210;
            
        label3180:
            PLOT (X+0.90,Y-2.5,2);
            CIRCL(X+0.90,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.35,Y-2.5,2);
            CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.85,Y-2.5,2);
            CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            goto label3210;
            
        label3190:
            PLOT (X+2.15,Y-2.5,2);
            CIRCL(X+2.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X+1.15,Y-2.5,2);
            CIRCL(X+1.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.35,Y-2.5,2);
            CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.35,Y-2.5,2);
            CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            goto label3210;
            
        label3200:
            PLOT (X+2.15,Y-2.5,2);
            CIRCL(X+2.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X+1.15,Y-2.5,2);
            CIRCL(X+1.15,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-0.35,Y-2.5,2);
            CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.35,Y-2.5,2);
            CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.35,Y-2.5,2);
            CIRCL(X-2.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);

        label3210:
            DX1 = 2.3;
            if (J == 2) DX1 = 0.0;
            DX = X - XX - 0.5*IX1;
            PLOT (DX-DX1-4.2,Y-2.5,2);
            AROHD(DX-DX1-4.1,Y-2.5,DX-DX1-4.3,Y-2.5,0.2,0.0,16);
            NEWPEN(1);
            if (QTEXT)
                SYMBOL (DX-DX1-4.0,Y-2.8,XH,"TO REHEATER",0.0,11);
            if (!QTEXT)
                SYMBOL (DX-DX1-4.0,Y-2.8,XH,"ZUM ZWISCHEN-",0.0,13);
            if (!QTEXT)
                SYMBOL (DX-DX1-4.0,Y-3.1,XH,"UEBERHITZER",0.0,11);
            IUE = 1;
            if (J == 2) IUE = 2;
            if (IUE == 1) SYMBOL (999.0,999.0,XH," 1",0.0,2);
            if (IUE == 2) SYMBOL (999.0,999.0,XH," 2",0.0,2);
            if (KREUZ == 1) goto label3220;
            PLOT (DX-DX1-4.2,Y-1.9,3);
            PLOT (DX-DX1-0.4,Y-1.9,2);
            AROHD(DX-DX1-2.2,Y-1.6,DX-DX1-2.2,Y-2.5,0.2,0.0,16);
            if (KREUZ == 2) goto label3220;
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            if (FELD[5] >= 1000.0) NDECP = 1;
            NUMBER (DX-DX1-4.1,Y-1.8,XH, FELD[5],0.0,NDECP);
            NUMBER (DX-DX1-2.0,Y-1.8,XH, FELD[6],0.0,NDECTE);
            XP = DX-DX1-4.1;
            YP = Y - 2.3;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[7],XW,NDECM);
            if (FELD[8] > 0.0)
                NUMBER (DX-DX1-2.0,Y-2.3,XH, FELD[8],0.0,NDECTE);
            if (FELD[8] <= 0.0)
                NUMBER (DX-DX1-2.0,Y-2.3,XH,-FELD[8],0.0,NDECN);
            
        label3220:
            XT = X + XX + 0.5*IX1 + 3.0 + XDXT;
            YT = Y + 3.5;
            goto label6000;

        label4000:
            DX = ND*10.0 - 1.0 + XX + 0.5*IX1;
            ND = ND - 1;
            if (ND < 0) ND = 0;
            XND = X;
            YND = Y;
            PLOT (X,Y,3);
            PLOT (X+DX,Y,2);
            X = X + DX;
            AROHD(X,Y,X,Y-3.0,0.2,0.0,16);
            YY = -3.0;
            Y = Y + YY;
            XX = 1.5;
            if (IX1 == 1) XX = 1.0;
            if (IX1 >= 2) XX = 0.5;
            NEWPEN(1);
            if (YWELLE == 0.0) YWELLE = Y - 0.5;
            
            PLOT (X,Y,3);
            PLOT (X+XX+0.5*IX1,Y+0.5,2);
            PLOT (X+XX+0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X-XX-0.5*IX1,Y-1.5,2);
            PLOT (X-XX-0.5*IX1,Y+0.5,2);
            PLOT (X,Y,2);
            PLOT (X,Y-1.0,2);
            XK1 = 2*(XX + 0.5*IX1);
            XP = X - 1.4;
            YP = Y - 0.4;
            if (IX1 > 2) XP = X - 1.9;
            if (IX1 > 2) YP = Y - 0.6;
            Z = IFLUT[J];
            NUMBER (XP,YP,XH,Z,0.0,-1);
            if (QTEXT)
                SYMBOL (999.0,999.0,XH," FLOW",0.0,5);
            if (!QTEXT)
                SYMBOL (999.0,999.0,XH,"-FLUT.",0.0,6);
            if (IX1 <= 2 && QTEXT)
                SYMBOL (XP,Y-0.8,XH,"LP -",0.0,4);
            if (IX1 <= 2 && !QTEXT)
                SYMBOL (XP,Y-0.8,XH,"ND -",0.0,4);
            if (IX1 <= 2) SYMBOL (X+0.1,Y-0.8,XH,"TURBINE",0.0,7);
            if (IX1 > 2 && QTEXT)
                SYMBOL (999.0,999.0,XH," LP",0.0,3);
            if (IX1 > 2 && !QTEXT)
                SYMBOL (999.0,999.0,XH,"ND",0.0,2);
            if (IX1 > 2) SYMBOL (X+0.1,Y-0.6,XH,"- TURBINE",0.0,9);
            
            NEWPEN(3);
            if (IX1 > 2) goto label4020;
            AROHD(X+XX+0.5*IX1,Y-1.5,X+XX+0.5*IX1,Y-5.2,0.2,0.0,16);
            AROHD(X-XX-0.5*IX1,Y-1.5,X-XX-0.5*IX1,Y-5.2,0.2,0.0,16);
            YK1 = Y - 5.2;
            NEWPEN(1);
            if (KREUZ == 1) goto label4010;
            AROHD(X+XX+0.5*IX1+3.7,YK1+0.6,X+XX+0.5*IX1,YK1+0.6,0.2,0.0,16);
            AROHD(X+XX+0.5*IX1,YK1+0.6,X-XX-0.5*IX1,YK1+0.6,0.2,0.0,16);
            PLOT (X+XX+0.5*IX1+2.2,YK1+1.0,3);
            PLOT (X+XX+0.5*IX1+2.2,YK1+0.2,2);
            if (KREUZ == 2) goto label4010;
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            if (FELD[5] >= 1000.0) NDECP = 1;
            NUMBER (X+XX+0.5*IX1+0.2,YK1+0.8,XH,FELD[5],0.0,NDECP);
            NUMBER (X+XX+0.5*IX1+2.4,YK1+0.8,XH,FELD[6],0.0,NDECTE);
            if (FELD[8] > 0.0)
                NUMBER (X+XX+0.5*IX1+2.4,YK1+0.2,XH, FELD[8],0.0,NDECTE);
            if (FELD[8] <= 0.0)
                NUMBER (X+XX+0.5*IX1+2.4,YK1+0.2,XH,-FELD[8],0.0,NDECN);
            XP = X+XX+0.5*IX1+0.2;
            YP = YK1 + 0.2;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[7],XW,NDECM);
            
        label4010:
            NEWPEN(3);
            YK1 = YK1 - 3.0;
            if (IX1 != 0) goto label4020;
            XT= X + XX + 0.5*IX1;
            YT = Y - 5.2;
            goto label6000;
            
        label4020:
            //goto label(4030,4030,4050,4060,4080),
            if(IX1 == 1)    goto label4030;
            if(IX1 == 2)    goto label4030;
            if(IX1 == 3)    goto label4050;
            if(IX1 == 4)    goto label4060;
            if(IX1 == 5)    goto label4080;
            
        label4030:
            NEWPEN(3);
            if (IX1 == 1 && QNDWAS[1]) NEWPEN(1);
            if (IX1 == 2 && QNDWAS[2]) NEWPEN(1);
            AROHD(X-1.0,Y-1.35,X-1.0,Y-3.0,0.2,0.0,16);
            AROHD(X+1.0,Y-1.35,X+1.0,Y-3.0,0.2,0.0,16);
            PLOT (X-1.35,Y-3.0,2);
            CIRCL(X-1.35,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-4.0,Y-3.0,2);
            if (IX1 != 1) goto label4040;
            XT= X + XX + 0.5*IX1;
            YT= Y - 5.2;
            goto label6000;
            
        label4040:
            NEWPEN(3);
            if (QNDWAS[1]) NEWPEN(1);
            AROHD(X-0.5,Y-1.2,X-0.5,Y-2.5,0.2,0.0,16);
            AROHD(X+0.5,Y-1.2,X+0.5,Y-2.5,0.2,0.0,16);
            PLOT (X-0.85,Y-2.5,2);
            CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.35,Y-2.5,2);
            CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-5.00,Y-2.5,2);
            XT= X + XX + 0.5*IX1;
            YT= Y - 5.2;
            goto label6000;
            
        label4050:
            NEWPEN(3);
            if (QNDWAS[1]) NEWPEN(1);
            AROHD(X-0.5,Y-1.12,X-0.5,Y-2.5,0.2,0.0,16);
            AROHD(X+0.5,Y-1.12,X+0.5,Y-2.5,0.2,0.0,16);
            if (JJ > 1 && QANZPA[1]) goto label4051;
            PLOT (X-0.85,Y-2.5,2);
            CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.35,Y-2.5,2);
            CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.85,Y-2.5,2);
            CIRCL(X-1.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-6.00,Y-2.5,2);
            goto label4052;
            
        label4051:
            PLOT (X-0.5,Y-2.5,3);
            PLOT (X+0.85,Y-2.5,2);
            CIRCL(X+0.85,Y-2.5,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+1.35,Y-2.5,2);
            CIRCL(X+1.35,Y-2.5,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+1.85,Y-2.5,2);
            CIRCL(X+1.85,Y-2.5,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+4.00,Y-2.5,2);
            
        label4052:
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            AROHD(X-1.0,Y-1.25,X-1.0,Y-3.0,0.2,0.0,16);
            AROHD(X+1.0,Y-1.25,X+1.0,Y-3.0,0.2,0.0,16);
            if (JJ > 1 && QANZPA[2]) goto label4053;
            PLOT (X-1.35,Y-3.0,2);
            CIRCL(X-1.35,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.85,Y-3.0,2);
            CIRCL(X-1.85,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-5.00,Y-3.0,2);
            goto label4054;
            
        label4053:
            PLOT (X-1.0,Y-3.0,3);
            PLOT (X+1.35,Y-3.0,2);
            CIRCL(X+1.35,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+1.85,Y-3.0,2);
            CIRCL(X+1.85,Y-3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+5.00,Y-3.0,2);
            
        label4054:
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            AROHD(X-1.5,Y-1.40,X-1.5,Y-3.5,0.2,0.0,16);
            AROHD(X+1.5,Y-1.40,X+1.5,Y-3.5,0.2,0.0,16);
            if (JJ > 1 && QANZPA[3]) goto label4055;
            PLOT (X-1.85,Y-3.5,2);
            CIRCL(X-1.85,Y-3.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-4.0,Y-3.5,2);
            goto label4056;
            
        label4055:
            PLOT (X-1.5,Y-3.5,3);
            PLOT (X+1.85,Y-3.5,2);
            CIRCL(X+1.85,Y-3.5,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+6.00,Y-3.5,2);

        label4056:
            NEWPEN(3);
            AROHD(X+2.0,Y-1.5,X+2.0,Y-5.2,0.2,0.0,16);
            AROHD(X-2.0,Y-1.5,X-2.0,Y-5.2,0.2,0.0,16);
            YK1 = Y - 5.2;
            if (KREUZ > 1) goto label4057;
            NEWPEN(1);
            AROHD(X,YK1+0.6,X-XX-0.5*IX1,YK1+0.6,0.2,0.0,16);
            AROHD(X,YK1+0.6,X+XX+0.5*IX1,YK1+0.6,0.2,0.0,16);
            PLOT (X+0.3,YK1+1.0,3);
            PLOT (X+0.3,YK1+0.2,2);
            if (KREUZ == 2) goto label4057;
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            if (FELD[5] >= 1000.0) NDECP = 1;
            NUMBER (X-1.9,YK1+0.8,XH,FELD[5],0.0,NDECP);
            NUMBER (X+0.4,YK1+0.8,XH,FELD[6],0.0,NDECTE);
            XP = X - 1.9;
            YP = YK1 + 0.2;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[7],XW,NDECM);
            if (FELD[8] > 0.0) NUMBER (X+.4,YK1+.2,XH, FELD[8],0.0,NDECTE);
            if (FELD[8] <= 0.0) NUMBER (X+.4,YK1+.2,XH,-FELD[8],0.0,NDECN);
            
        label4057:
            YK1 = YK1 - 3.0;
            XT= X + XX + 0.5*IX1;
            YT= Y - 5.2;
            
            if (JJ > 1) UWA146(JJ);
            goto label6000;
            
        label4060:
            NEWPEN(3);
            if (QNDWAS[1]) NEWPEN(1);
            AROHD(X-0.5,Y-1.10,X-0.5,Y-2.5,0.2,0.0,16);
            AROHD(X+0.5,Y-1.10,X+0.5,Y-2.5,0.2,0.0,16);
            PLOT (X-0.85,Y-2.5,2);
            CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.35,Y-2.5,2);
            CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.85,Y-2.5,2);
            CIRCL(X-1.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.35,Y-2.5,2);
            CIRCL(X-2.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-7.00,Y-2.5,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            AROHD(X-1.0,Y-1.20,X-1.0,Y-3.0,0.2,0.0,16);
            AROHD(X+1.0,Y-1.20,X+1.0,Y-3.0,0.2,0.0,16);
            PLOT (X-1.35,Y-3.0,2);
            CIRCL(X-1.35,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.85,Y-3.0,2);
            CIRCL(X-1.85,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.35,Y-3.0,2);
            CIRCL(X-2.35,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-6.00,Y-3.0,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            AROHD(X-1.5,Y-1.30,X-1.5,Y-3.5,0.2,0.0,16);
            AROHD(X+1.5,Y-1.30,X+1.5,Y-3.5,0.2,0.0,16);
            PLOT (X-1.85,Y-3.5,2);
            CIRCL(X-1.85,Y-3.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.35,Y-3.5,2);
            CIRCL(X-2.35,Y-3.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-5.00,Y-3.5,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            AROHD(X-2.0,Y-1.40,X-2.0,Y-4.0,0.2,0.0,16);
            AROHD(X+2.0,Y-1.40,X+2.0,Y-4.0,0.2,0.0,16);
            PLOT (X-2.35,Y-4.0,2);
            CIRCL(X-2.35,Y-4.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-4.00,Y-4.0,2);
            
            NEWPEN(3);
            AROHD(X+2.5,Y-1.50,X+2.5,Y-5.7,0.2,0.0,16);
            AROHD(X-2.5,Y-1.50,X-2.5,Y-5.7,0.2,0.0,16);
            YK1 = Y - 5.7;
            NEWPEN(1);
            if (KREUZ == 1) goto label4070;
            AROHD(X,YK1+0.6,X-XX-0.5*IX1,YK1+0.6,0.2,0.0,16);
            AROHD(X,YK1+0.6,X+XX+0.5*IX1,YK1+0.6,0.2,0.0,16);
            PLOT (X,YK1+1.0,3);
            PLOT (X,YK1+0.2,2);
            if (KREUZ == 2) goto label4070;
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            if (FELD[5] >= 1000.0) NDECP = 1;
            NUMBER (X-2.1,YK1+0.8,XH,FELD[5],0.0,NDECP);
            NUMBER (X+0.2,YK1+0.8,XH,FELD[6],0.0,NDECTE);
            if(FELD[8] > 0.0)NUMBER (X+.2,YK1+.2,XH, FELD[8],0.0,NDECTE);
            if(FELD[8] <= 0.0)NUMBER (X+.2,YK1+.2,XH,-FELD[8],0.0,NDECN);
            XP = X - 2.1;
            YP = YK1 + 0.2;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[7],XW,NDECM);
            
        label4070:
            YK1 = YK1 - 3.0;
            XT= X + XX + 0.5*IX1;
            YT= Y - 5.7;
            goto label6000;
            
        label4080:
            NEWPEN(3);
            if (QNDWAS[1]) NEWPEN(1);
            AROHD(X-0.5,Y-1.08,X-0.5,Y-2.5,0.2,0.0,16);
            AROHD(X+0.5,Y-1.08,X+0.5,Y-2.5,0.2,0.0,16);
            PLOT (X-0.85,Y-2.5,2);
            CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.35,Y-2.5,2);
            PLOT (X-1.85,Y-2.5,2);
            CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            CIRCL(X-1.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.35,Y-2.5,2);
            CIRCL(X-2.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.85,Y-2.5,2);
            CIRCL(X-2.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-8.50,Y-2.5,2);
            NEWPEN(3);
            if (QNDWAS[2]) NEWPEN(1);
            AROHD(X-1.0,Y-1.15,X-1.0,Y-3.0,0.2,0.0,16);
            AROHD(X+1.0,Y-1.15,X+1.0,Y-3.0,0.2,0.0,16);
            PLOT (X-1.35,Y-3.0,2);
            CIRCL(X-1.35,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-1.85,Y-3.0,2);
            CIRCL(X-1.85,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.35,Y-3.0,2);
            CIRCL(X-2.35,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.85,Y-3.0,2);
            CIRCL(X-2.85,Y-3.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-7.50,Y-3.0,2);
            NEWPEN(3);
            if (QNDWAS[3]) NEWPEN(1);
            AROHD(X-1.5,Y-1.25,X-1.5,Y-3.5,0.2,0.0,16);
            AROHD(X+1.5,Y-1.25,X+1.5,Y-3.5,0.2,0.0,16);
            PLOT (X-1.85,Y-3.5,2);
            CIRCL(X-1.85,Y-3.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.35,Y-3.5,2);
            CIRCL(X-2.35,Y-3.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.85,Y-3.5,2);
            CIRCL(X-2.85,Y-3.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-6.50,Y-3.5,2);
            NEWPEN(3);
            if (QNDWAS[4]) NEWPEN(1);
            AROHD(X-2.0,Y-1.32,X-2.0,Y-4.0,0.2,0.0,16);
            AROHD(X+2.0,Y-1.32,X+2.0,Y-4.0,0.2,0.0,16);
            PLOT (X-2.35,Y-4.0,2);
            CIRCL(X-2.35,Y-4.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-2.85,Y-4.0,2);
            CIRCL(X-2.85,Y-4.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-5.5,Y-4.0,2);
            NEWPEN(3);
            if (QNDWAS[5]) NEWPEN(1);
            AROHD(X-2.5,Y-1.40,X-2.5,Y-4.5,0.2,0.0,16);
            AROHD(X+2.5,Y-1.40,X+2.5,Y-4.5,0.2,0.0,16);
            PLOT (X-2.85,Y-4.5,2);
            CIRCL(X-2.85,Y-4.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X-4.50,Y-4.5,2);
            
            NEWPEN(3);
            AROHD(X+3.0,Y-1.50,X+3.0,Y-6.2,0.2,0.0,16);
            AROHD(X-3.0,Y-1.50,X-3.0,Y-6.2,0.2,0.0,16);
            YK1 = Y - 6.2;
            NEWPEN(1);
            if (KREUZ == 1) goto label4090;
            AROHD(X,YK1+0.6,X-XX-0.5*IX1,YK1+0.6,0.2,0.0,16);
            AROHD(X,YK1+0.6,X+XX+0.5*IX1,YK1+0.6,0.2,0.0,16);
            PLOT (X,YK1+1.0,3);
            PLOT (X,YK1+0.2,2);
            if (KREUZ == 2) goto label4090;
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            if (FELD[5] >= 1000.0) NDECP = 1;
            NUMBER (X-2.1,YK1+0.8,XH,FELD[5],0.0,NDECP);
            NUMBER (X+0.2,YK1+0.8,XH,FELD[6],0.0,NDECTE);
            if(FELD[8] > 0.0)NUMBER (X+.2,YK1+.2,XH, FELD[8],0.0,NDECTE);
            if(FELD[8] <= 0.0)NUMBER (X+.2,YK1+.2,XH,-FELD[8],0.0,NDECN);
            XP = X - 2.1;
            YP = YK1 + 0.2;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[7],XW,NDECM);
            
        label4090:
            YK1 = YK1 - 3.0;
            XT= X + XX + 0.5*IX1;
            YT= Y - 6.2;

        label6000:
            KSTB = KSTB + 1;
            NEWPEN(3);
            if (IX == 4 && IBS == 1) KSTB = KSTB - 1;
            IB = KSTB;
            if (IB > K2) goto label8000;
            if (IX != 3) goto label6030;
            if (IX1 < 2) goto label6030;
            if (IBS == 0) goto label6030;
            
            for(I = 1; I <= ANZDTT; I++) //DO 6010 I=1,ANZDTT
            {
                if (IFLUT[I] >= 0) continue;
                M = Math.Abs(IFLUT[I]);
                if (M != J) continue;
                IB = (int)JKT2[M];
                KSTB = KSTB - 1;
                goto label6030;
            }   //6010 CONTINUE
            sw16.WriteLine(" *** FALSCHE STOPFBUCHSSCHALTUNG ***   {0}{1} ", IB.ToString().PadLeft(5),JKT2[IB].ToString().PadLeft(5));
            //6020 FORMAT(1H ,35H*** FALSCHE STOPFBUCHSSCHALTUNG ***,3X,2I5)
            return;
            
        label6030:
            L1 = 1;
            if (IB > 1) L1 = NK2[IB-1] + 1;
            L2 = NK2[IB];
            N = 0;
            
            for(L = (int)L1; L <= L2; L++) //DO 6210 L = L1,L2
            {
                N = N + 1;
                ISTB = L;
                NEWPEN(3);
                if (IX == 4 && IBS == 0) FELD[45+ISTB] = FELD[45+ISTB]/2.0;
                //goto label(6040,6050,6060,6070),
                if(IX == 1)     goto label6040;
                if(IX == 2)     goto label6050;
                if(IX == 3)     goto label6060;
                if(IX == 4)     goto label6070;
                
            label6040:
                XS = X + 0.6*N;
                if (IBS == 1) XS = X - XX - IX1*0.5 - 0.6*N;
                goto label6080;
                
            label6050:
                XS = X - 0.6*N;
                if (IBS == 1) XS = X + XX + 0.5*IX1 + 0.6*N;
                goto label6080;
                
            label6060:
                XS = X - XX - 0.5*IX1 - 0.6*N;
                if (IBS == 1) XS = X + XX + 0.5*IX1 + 0.6 *N;
                goto label6080;
                
            label6070:
                XS = X - XX - 0.5*IX1 - 0.6*N;
                if (IBS == 1) XS = X + XX + 0.5*IX1 + 0.6*N;
                
            label6080:
                M = (int)NN[ISTB];
                if (M == 99) goto label6110;
                if (M < 0) goto label6090;
            
                AAA[ISTB] = ABCD[M];
                AROHD(XS,Y-0.4,XS,Y+2.0,0.2,0.0,16);
                NEWPEN(1);
                goto label6100;
                
            label6090:
                M = Math.Abs(M);
                AAA[ISTB] = ABCD[M];
                AROHD(XS,Y+2.0,XS,Y-0.4,0.2,0.0,16);
                NEWPEN(1);
                
            label6100:
                CIRCL(XS+0.25,Y+2.25,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (XS-0.05,Y+2.15,XH,AAA[ISTB],0.0,1);
                if (KREUZ != 0) goto label6210;
                XP = XS - 0.2;
                YP = Y - 0.3;
                XW = 90.0;
                if (QENGL) UWA135(FELD[45+ISTB],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                if (QENGL) SYMBOL (999.0,999.0,XH," LB/HR",XW,6);
                if (QSI) SYMBOL (999.0,999.0,XH," KG/S",XW,5);
                if (QTECHN) SYMBOL (999.0,999.0,XH," T/H",XW,4);
                goto label6210;

            label6110:
                if (IX == 1) goto label6130;
                PLOT (XS,Y-0.45,3);
                PLOT (XS,Y+1.5,2);
                if (KREUZ != 0) goto label6120;
                NEWPEN(1);
                XP = XS - 0.2;
                YP = Y - 0.3;
                XW = 90.0;
                if (QENGL) UWA135(FELD[45+ISTB],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                if (QENGL) SYMBOL (999.0,999.0,XH," LB/HR",XW,6);
                if (QSI) SYMBOL (999.0,999.0,XH," KG/S",XW,5);
                if (QTECHN) SYMBOL (999.0,999.0,XH," T/H",XW,4);
                NEWPEN(3);
                
            label6120:
                if (J != IZ1) AROHD(XS,Y+1.5,X+XX+0.5*IX1,Y+1.5,0.2,0.0,16);
                if (J == IZ1) PLOT (XS,Y+1.5,3);
                if (J == IZ1) PLOT (X+XX+0.5*IX1,Y+1.5,2);
                if (J == IZ1) AROHD(X+XX+0.5*IX1,Y+1.5,X+XX+0.5*IX1,Y+0.5,0.2,0.0,16);
                goto label6210;

            label6130:
                PLOT (XS,Y-0.55,3);
                PLOT (XS,Y-2.5,2);
                NEWPEN(1);
                if (KREUZ == 1) goto label6140;
                AROHD(XS+3.7,Y-1.1,XS,Y-1.1,0.2,0.0,16);
                PLOT (XS+2.2,Y-0.7,3);
                PLOT (XS+2.2,Y-1.5,2);
                if (KREUZ == 2) goto label6140;
                NDECP = 4;
                if (FELD[74] >= 10.0) NDECP = 3;
                if (FELD[74] >= 100.0) NDECP = 2;
                if (FELD[74] >= 1000.0) NDECP = 1;
                NUMBER (XS+0.3,Y-1.0,XH, FELD[74],0.0,NDECP);
                NUMBER (XS+2.3,Y-1.0,XH, FELD[75],0.0,NDECTE);
                if(FELD[76] > 0.0)NUMBER (XS+2.3,Y-1.4,XH,FELD[76],0.0,NDECTE);
                if(FELD[76] <= 0.0)NUMBER (XS+2.3,Y-1.4,XH,-FELD[76],0.0,NDECN);
                XP = XS + 0.3;
                YP = Y - 1.4;
                XW = 0.0;
                if (QENGL) UWA135(FELD[45+ISTB],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                
            label6140:
                NEWPEN(3);
                PLOT (XS,Y-2.5,3);
                if (IX1 > 0) goto label6150;
                AROHD(XS,Y-2.5,X-1.5,Y-2.5,0.2,0.0,16);
                goto label6210;
                
            label6150:
                //goto label(6160,6170,6180,6190,6200),
                if(IX1 == 1)    goto label6160;
                if(IX1 == 2)    goto label6170;
                if(IX1 == 3)    goto label6180;
                if(IX1 == 4)    goto label6190;
                if(IX1 == 5)    goto label6200;
                
            label6160:
                PLOT (X-0.85,Y-2.5,2);
                CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                AROHD(X-1.15,Y-2.5,X-1.5,Y-2.5,0.2,0.0,16);
                goto label6210;
                
            label6170:
                PLOT (X-0.35,Y-2.5,2);
                CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-0.85,Y-2.5,2);
                CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                AROHD(X-1.15,Y-2.5,X-1.5,Y-2.5,0.2,0.0,16);
                goto label6210;
                
            label6180:
                PLOT (X-0.35,Y-2.5,2);
                CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-0.85,Y-2.5,2);
                CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-1.35,Y-2.5,2);
                CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                AROHD(X-1.65,Y-2.5,X-2.0,Y-2.5,0.2,0.0,16);
                goto label6210;
                
            label6190:
                PLOT (X-0.35,Y-2.5,2);
                CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-0.85,Y-2.5,2);
                CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-1.35,Y-2.5,2);
                CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-1.85,Y-2.5,2);
                CIRCL(X-1.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                AROHD(X-2.15,Y-2.5,X-2.5,Y-2.5,0.2,0.0,16);
                goto label6210;
                
            label6200:
                PLOT (X-0.35,Y-2.5,2);
                CIRCL(X-0.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-0.85,Y-2.5,2);
                CIRCL(X-0.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-1.35,Y-2.5,2);
                CIRCL(X-1.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-1.85,Y-2.5,2);
                CIRCL(X-1.85,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                PLOT (X-2.35,Y-2.5,2);
                CIRCL(X-2.35,Y-2.5,0.0,180.0,0.15,0.15,0.0);
                AROHD(X-2.65,Y-2.5,X-3.0,Y-2.5,0.2,0.0,16);

            label6210:
                ;
            }   //6210 CONTINUE

            if(IBS == 1) goto label8000;
            if (IX == 4) ISTB = ISTB - 2;
            IBS = 1;
            goto label6000;

        label7000:
            YY = 4.0;
            XX = 0.0;
            PLOT (X,Y,3);
            if (KOMP2 == 0 && IZ1 > 1) goto label7010;
            PLOT (X+XDXT,Y,2);
            X = X + XDXT;
            XDXT = 0.0;
            
        label7010:
            PLOT (X+6.0,Y,2);
            X = X + 6.0;
            NEWPEN(1);
            if (KREUZ == 1) goto label7020;
            PLOT (X-3.8,Y+0.6,3);
            PLOT (X,Y+0.6,2);
            AROHD(X-1.8,Y+1.0,X-1.8,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label7020;
            NUMBER (X-3.7,Y+0.7,XH,FELD[1],0.0,NDECP);
            NUMBER (X-1.6,Y+0.7,XH,FELD[2],0.0,NDECTE);
            XP = X - 3.7;
            YP = Y + 0.3;
            XW = 0.0;
            if (QENGL) UWA135(FELD[3],XP,YP,XH,XW);
            if (!QENGL)NUMBER (XP,YP,XH,FELD[3],XW,NDECM);
            if(FELD[4] > 0.0)NUMBER (X-1.6,Y+0.3,XH, FELD[4],0.0,NDECTE);
            if(FELD[4] <= 0.0)NUMBER (X-1.6,Y+0.3,XH,-FELD[4],0.0,NDECN);
            
        label7020:
            NEWPEN(3);
            AROHD(X,Y,X,Y-YY,0.2,0.0,16);
            Y = Y - YY;
            YWELLE = Y - 0.5;

            NEWPEN(1);
            PLOT (X-2.0,Y+0.5,2);
            PLOT (X-2.0,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            PLOT (X,Y,2);
            PLOT (X+0.5,Y,2);
            PLOT (X+0.5,Y-1.0,2);
            PLOT (X,Y-1.0,2);

            NEWPEN(3);
            PLOT (X,Y-1.0,3);
            PLOT (X,Y-2.0,2);
            PLOT (X+0.5,Y-2.0,2);
            AROHD(X+0.5,Y-2.0,X+0.5,Y-1.0,0.2,0.0,16);
            if (KREUZ > 0) goto label7030;
            NEWPEN(1);
            XP = X - 0.2;
            YP = Y - 2.3;
            XW = 0.0;
            
            if (QENGL) UWA135(FELD[9],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[9],XW,NDECM);
            if (QENGL) SYMBOL (X,Y-2.6,XH,"LB/HR",0.0,5);
            if (QSI) SYMBOL (X,Y-2.6,XH,"KG/S",0.0,4);
            if (QTECHN) SYMBOL (X,Y-2.6,XH,"T/H",0.0,3);
            NEWPEN(3);
            
        label7030:
            if (IZUE == 1) goto label7040;
            IZVOR = IZUE;
            PLOT (X-2.0,Y+0.5,3);
            PLOT (X-2.00,Y+3.0,2);
            PLOT (X-0.15,Y+3.0,2);
            CIRCL(X-0.15,Y+3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+0.50,Y+3.0,2);
            if (J == KOMP1 && KOMP2 == 0) goto label7120;
            XT = X;
            YT = Y;
            if (!QPLOT[J]) goto label8100;
            PLOT (X-2.0,Y-1.5,3);
            PLOT (X-2.0,Y-4.0,2);
            goto label8100;
            
        label7040:
            PLOT (X-2.0,Y-1.5,3);
            PLOT (X-2.00,Y-3.5,2);
            AROHD(X-2.0,Y-3.5,X-8.0,Y-3.5,0.2,0.0,16);
            NEWPEN(1);
            if (QTEXT) SYMBOL (X-7.5,Y-3.8,XH, "TO REHEATER",0.0,11);
            if (!QTEXT)
                SYMBOL (X-7.5,Y-3.8,XH,"ZUM ZWISCHENUEBERHITZER",0.0,23);
            if (KREUZ == 1) goto label7050;
            PLOT (X-7.50,Y-3.0,3);
            PLOT (X-3.70,Y-3.0,2);
            AROHD(X-5.5,Y-2.6,X-5.5,Y-3.5,0.2,0.0,16);
            if (KREUZ == 2) goto label7050;
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            if (FELD[5] >= 1000.0) NDECP = 1;
            NUMBER (X-7.5,Y-2.9,XH,FELD[5],0.0,NDECP);
            NUMBER (X-5.3,Y-2.9,XH,FELD[6],0.0,NDECTE);
            XP = X - 7.5;
            YP = Y - 3.3;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[7],XW,NDECM);
            if (FELD[8] > 0.0) NUMBER (X-5.3,YP,XH, FELD[8],XW,NDECTE);
            if (FELD[8] <= 0.0) NUMBER (X-5.3,YP,XH,-FELD[8],XW,NDECN);
            if (!QPLOT[J]) goto label7050;
            NEWPEN(3);
            PLOT (X-2.0,Y-3.5,3);
            PLOT (X-2.0,Y-4.0,2);
            
        label7050:
            IZVOR = IZUE;
            IZUE = 0;
            XT = X;
            YT = Y;
            goto label8100;
            
        label7100:
            if (IZVOR == 0) goto label7110;
            PLOT (X-6.00,Y+3.0,3);
            PLOT (X-0.15,Y+3.0,2);
            CIRCL(X-0.15,Y+3.0,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+0.50,Y+3.0,2);
            NEWPEN(1);
            if (QTEXT) SYMBOL (X-5.8,Y+2.7,XH,"FROM REHEATER",0.0,13);
            if (!QTEXT)
                SYMBOL (X-5.8,Y+2.7,XH,"VOM ZWISCHENUEBERHITZER",0.0,23);
            if (KREUZ == 1) goto label7120;
            PLOT (X-6.0,Y+3.5,3);
            PLOT (X-2.2,Y+3.5,2);
            AROHD(X-4.0,Y+3.9,X-4.0,Y+3.0,0.2,0.0,16);
            if (KREUZ == 2) goto label7120;
            XP = X - 5.8;
            YP = Y + 3.2;
            XW = 0.0;
            NUMBER (XP,Y+3.6,XH,FELD[1],0.0,NDECP);
            NUMBER (X-3.8,Y+3.6,XH,FELD[2],0.0,NDECTE);
            if (QENGL) UWA135(FELD[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[3],XW,NDECM);
            if (FELD[4] > 0.0) NUMBER (X-3.8,YP,XH, FELD[4],XW,NDECTE);
            if (FELD[4] <= 0.0) NUMBER (X-3.8,YP,XH,-FELD[4],XW,NDECN);
            goto label7120;
            
        label7110:
            NEWPEN(1);
            if (KREUZ == 1) goto label7120;
            PLOT (X-3.8,Y+3.9,3);
            PLOT (X-3.8,Y+3.1,2);
            PLOT (X-5.5,Y+3.5,3);
            PLOT (X-1.8,Y+3.5,2);
            AROHD(X-1.8,Y+3.5,X-1.8,Y+3.0,0.2,0.0,16);
            if (KREUZ == 2) goto label7120;
            XP = X - 5.4;
            YP = Y + 3.2;
            XW = 0.0;
            NUMBER (XP,Y+3.6,XH,FELD[1],XW,NDECP);
            NUMBER (X-3.6,Y+3.6,XH,FELD[2],XW,NDECTE);
            if (QENGL) UWA135(FELD[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[3],XW,NDECM);
            if (FELD[4] > 0.0) NUMBER (X-3.6,YP,XH, FELD[4],XW,NDECTE);
            if (FELD[4] <= 0.0) NUMBER (X-3.6,YP,XH,-FELD[4],XW,NDECN);
            
        label7120:
            X = X + 0.5;
            NEWPEN(3);
            AROHD(X,Y+3.0,X,Y,0.2,0.0,16);
            NEWPEN(1);
            if (J == KOMP1 && KOMP2 == 0 && IX1 > 0) IX1 = IX1 - 1;
            XX = 2.0;
            if (IX1 == 1) XX = 1.5;
            if (IX1 == 2) XX = 1.0;
            if (IX1 > 2) XX = 0.5;
            PLOT (X+XX+0.5*IX1,Y+0.5,2);
            PLOT (X+XX+0.5*IX1,Y-1.5,2);
            PLOT (X,Y-1.0,2);
            
            NEWPEN(3);
            if (J == IZ1) goto label7150;
            if (J != IZ1-1) goto label7130;
            PLOT (X+XX+0.5*IX1,Y+0.5,3);
            PLOT (X+XX+0.5*IX1,Y+3.0,2);
            PLOT (X+XX+0.5*IX1+4.0+XDXT,Y+3.0,2);
            XT = X + XX + 0.5*IX1 + 4.0 + XDXT;
            YT = Y + 3.0;
            goto label7140;

        label7130:
            PLOT (X+XX+0.5*IX1,Y+0.5,3);
            PLOT (X+XX+0.5*IX1,Y+3.5,2);
            PLOT (X+XX+0.5*IX1+4.0+XDXT,Y+3.5,2);
            XT = X + XX + 0.5*IX1 + 4.0 + XDXT;
            YT = Y + 3.5;
            
        label7140:
            if (!QPLOT[J]) goto label7170;
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-4.5-0.5*IX1,2);
            goto label7170;
            
        label7150:
            PLOT (X+XX+0.5*IX1,Y-1.5,3);
            PLOT (X+XX+0.5*IX1,Y-3.0,2);
            PLOT (X+XX+0.5*IX1+3.5,Y-3.0,2);
            PLOT (X+XX+0.5*IX1+3.5,Y-5.0,2);
            XT = X + XX + 0.5*IX1 + 3.5;
            YT = Y - 5.0;
            if (KREUZ == 1) goto label7160;
            NEWPEN(1);
            NDECP = 4;
            if (FELD[5] >= 10.0) NDECP = 3;
            if (FELD[5] >= 100.0) NDECP = 2;
            PLOT (XT+2.2,YT+1.4,3);
            PLOT (XT+2.2,YT+0.6,2);
            AROHD(XT+4.2,YT+1.0,XT,YT+1.0,0.2,0.0,16);
            if (KREUZ == 2) goto label7160;
            NUMBER (XT+0.2,YT+1.1,XH,FELD[5],0.0,NDECP);
            NUMBER (XT+2.4,YT+1.1,XH,FELD[6],0.0,NDECTE);
            if(FELD[8] > 0.0)NUMBER (XT+2.4,YT+.7,XH, FELD[8],0.0,NDECTE);
            if(FELD[8] <= 0.0)NUMBER (XT+2.4,YT+.7,XH,-FELD[8],0.0,NDECN);
            XP = XT + 0.2;
            YP = YT + 0.7;
            XW = 0.0;
            if (QENGL) UWA135(FELD[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD[7],0.0,NDECM);
            
        label7160:
            YK1 = YT - 3.0;
            XK1 = 4.0;
            XT = XT - 3.5;
            
        label7170:
            if (IX2 == 0) goto label7300;
            NEWPEN(3);
            if (J == KOMP2) goto label7200;
            PLOT (X-2.5,Y-1.5,3);
            PLOT (X-2.5,Y-4.0,2);
            
        label7200:
            if (IX1 == 0) goto label7300;
            DX = 0.0;
            if (QPLOT[J]) DX = 0.5;
            
            //goto label(7210,7220,7230),
            if(IX1 == 1)    goto label7210;
            if(IX1 == 2)    goto label7220;
            if(IX1 == 3)    goto label7230;

        label7210:
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-4.5,2);
            PLOT (X+1.5-DX,Y-4.5,2);
            goto label7300;
            
        label7220:
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-5.0,2);
            PLOT (X+1.5-DX,Y-5.0,2);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-4.5,2);
            PLOT (X+0.5-DX,Y-4.5,2);
            goto label7300;
            
        label7230:
            PLOT (X+1.5,Y-1.4,3);
            PLOT (X+1.5,Y-5.5,2);
            PLOT (X+1.5-DX,Y-5.5,2);
            PLOT (X+1.0,Y-1.25,3);
            PLOT (X+1.0,Y-5.0,2);
            PLOT (X+0.5-DX,Y-5.0,2);
            PLOT (X+0.5,Y-1.12,3);
            PLOT (X+0.5,Y-4.5,2);
            PLOT (X-0.5-DX,Y-4.5,2);
            
        label7300:
            KSTB = KSTB + 1;
            IB = KSTB;
            if (IB > K2) goto label8000;
            L1 = 1;
            if (IB > 1) L1 = NK2[IB-1] + 1;
            L2 = NK2[IB];
            N = 0;
            
            for(L = (int)L1; L <= L2; L++) //DO 7350 L = L1,L2
            {
                N = N + 1;
                ISTB = L;
                NEWPEN(3);
                if (KSTB > 1) goto label7320;
                XS = X - 2.5 - N*0.6;
                M = (int)NN[ISTB];
                if (N == 1) goto label7310;
                if (M == 99) goto label7315;
                AAA[ISTB] = ABCD[M];
                AROHD(XS,Y-0.4,XS,Y+2.0,0.2,0.0,16);
                NEWPEN(1);
                CIRCL(XS+0.25,Y+2.25,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (XS-0.05,Y+2.15,XH,AAA[ISTB],0.0,1);
                
            label7305:
                if (KREUZ > 0) goto label7350;
                XP = XS - 0.2;
                YP = Y - 0.3;
                XW = 90.0;
                if (QENGL) UWA135(FELD[45+ISTB],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                if (QSI) SYMBOL (999.0,999.0,XH," KG/S",90.0,5);
                if (QTECHN) SYMBOL (999.0,999.0,XH," T/H",90.0,4);
                if (QENGL) SYMBOL (999.0,999.0,XH," LB/HR",90.0,6);
                goto label7350;
                
            label7310:
                PLOT (X,Y-3.0,3);
                PLOT (X-2.35,Y-3.0,2);
                CIRCL(X-2.35,Y-3.0,0.0,180.0,0.15,0.15,0.0);
                PLOT (XS,Y-3.0,2);
                if (M > 0) PLOT (XS,Y-0.6,2);
                if (M < 0) AROHD(XS,Y-3.0,XS,Y-0.6,0.2,0.0,16);
                if (KREUZ > 0) goto label7350;
                NEWPEN(1);
                XP = XS - 0.2;
                YP = Y - 3.0;
                XW = 90.0;
                if (QENGL) UWA135(FELD[45+ISTB],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                if (QTECHN) SYMBOL (999.0,999.0,XH," T/H",90.0,4);
                if (QSI) SYMBOL (999.0,999.0,XH," KG/S",90.0,5);
                if (QENGL) SYMBOL (999.0,999.0,XH," LB/HR",90.0,6);
                goto label7350;
                
            label7315:
                PLOT (XS,Y-0.4,3);
                PLOT (XS,Y+2.0,2);
                PLOT (X-0.65,Y+2.0,2);
                CIRCL(X-0.65,Y+2.0,180.0,0.0,0.15,0.15,0.0);
                PLOT (X-0.15,Y+2.0,2);
                CIRCL(X-0.15,Y+2.0,180.0,0.0,0.15,0.15,0.0);
                AROHD(X+0.15,Y+2.0,X+XX+0.5*IX1,Y+2.0,0.2,0.0,16);
                NEWPEN(1);
                goto label7305;
                
            label7320:
                XS = X + XX + 0.5*IX1 + N*0.6;
            M = (int)NN[ISTB];
                if (M < 0) goto label7330;
                AAA[ISTB] = ABCD[M];
                AROHD(XS,Y-0.4,XS,Y+2.0,0.2,0.0,16);
                goto label7340;
                
            label7330:
                M = Math.Abs(M);
                AAA[ISTB] = ABCD[M];
                AROHD(XS,Y+2.0,XS,Y-0.4,0.2,0.0,16);
                
            label7340:
                NEWPEN(1);
                CIRCL(XS+0.25,Y+2.25,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (XS-0.05,Y+2.15,XH,AAA[ISTB],0.0,1);
                if (KREUZ > 0) goto label7350;
                XP = XS - 0.2;
                YP = Y - 0.3;
                XW = 90.0;
                if (QENGL) UWA135(FELD[45+ISTB],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[45+ISTB],XW,NDECM);
                if (QTECHN) SYMBOL (999.0,999.0,XH," T/H",90.0,4);
                if (QSI) SYMBOL (999.0,999.0,XH," KG/S",90.0,5);
                if (QENGL) SYMBOL (999.0,999.0,XH," LB/HR",90.0,6);

            label7350:
                ;
            }   //7350 CONTINUE
            if (KSTB == 2) goto label8000;
            goto label7300;

        label8000:
            Y = YWELLE;
            if (IX == 4 && NDTEIL > 0) goto label8010;
            XW = X;
            if (IX == 1 || IX > 2) XW = X - XX - 0.5*IX1;
            XS = XR;
            if (J == 1) XS = X - 2.0;
            if (J == 1 && (IX == 1 || IX == 3)) XS = X - XX - 0.5*IX1 - 2.0;
            if (J == KOMP1 || J == KOMP2) XW = X - 2.5;
            if (J == KOMP1 || J == KOMP2) XS = XW - 3.0;
            
            NEWPEN(1);
            PLOT (XW,Y+0.05,3);
            PLOT (XS,Y+0.05,2);
            PLOT (XS,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            XR = X;
            
            if (IX > 1) XR = X + XX + 0.5*IX1;
            if (J == KOMP1 || J == KOMP2) XR = X + 2.0;
            goto label8100;
            
        label8010:
            if (JJ == 1) NRND = 0;
            NRND = NRND + 1;
            //goto label(8020,8030,8030,8030),
            if(NRND == 1)       goto label8020;
            if(NRND == 2)       goto label8030;
            if(NRND == 3)       goto label8030;
            if(NRND == 4)       goto label8030;
            
        label8020:
            X3L = X - XX - 0.5*IX1;
            XKOND = XT;
            YKOND = YT;
            XT = XND;
            YT = YND;
            goto label8100;
            
        label8030:
            XW = X - XX - 0.5*IX1;
            NEWPEN(1);
            if (XR == 0.0) XR = XW - 0.5;
            PLOT (XW,Y+0.05,3);
            PLOT (XR,Y+0.05,2);
            PLOT (XR,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            XR = X + XX + 0.5*IX1;
            XT = XND;
            YT = YND;
            if (NDTEIL+1 != NRND) goto label8100;
            XW = X3L;
            PLOT (XW,Y+0.05,3);
            PLOT (XR,Y+0.05,2);
            PLOT (XR,Y-0.05,3);
            PLOT (XW,Y-0.05,2);
            XT = XKOND;
            YT = YKOND;
            
        label8100:
            XTURB[J] = X;
            XXTURB[J] = XX;
            YTURB[J] = Y + 0.5;
            if (J == KOMP1 && KOMP2 > 0) YTURB[J] = Y;
            YYTURB[J] = -YY;
            if (YY > 0.0) YYTURB[J] = -YY-1.0;
            X = XT;
            Y = YT;
            if (J == IZ1 && IX == 2) XT = X - 5.5;
            return;
        }   //END


        static void UWA143(double[] FELD1, int N, int NELEM, int NL)
        {
            //ENTRY PLOT3 (FELD1,N,NELEM,NL)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //DIMENSION FELD1(21)
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /EINSTE/ KEINST,AB,NKABLF,ISAMM,NENTG,KESS,IKESS,NT,IUM
            //COMMON /ABLAUF/ XZU0,YZU0
            //COMMON /KONDTR/ UEEP[3],ELEP[3],PELEP[3]
            //COMMON /SPT/ XSPT,YSPT
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            double P = 0, XP = 0, YP = 0, XW = 0, XZU1 = 0, XZU2 = 0, MIN = 0, XZ = 0;
            int NDECP = 0;
            
            NEWPEN(1);
            
            //goto label(1000,2000,3000,4000,5000,3000,6000,7000,8000,3000,1000,
            //1 10000,3000,9000,10000,10000,10000,10000,10000,10000,10000,
            //2 3000,10000,10000),
            if(N == 1)      goto label1000;
            if(N == 2)      goto label2000;
            if(N == 3)      goto label3000;
            if(N == 4)      goto label4000;
            if(N == 5)      goto label5000;
            if(N == 6)      goto label3000;
            if(N == 7)      goto label6000;
            if(N == 8)      goto label7000;
            if(N == 9)      goto label8000;
            if(N == 10)      goto label3000;
            if(N == 11)      goto label1000;
            if(N == 12)      goto label10000;
            if(N == 13)      goto label3000;
            if(N == 14)      goto label9000;
            if(N == 15)      goto label10000;
            if(N == 16)      goto label10000;
            if(N == 17)      goto label10000;
            if(N == 18)      goto label10000;
            if(N == 19)      goto label10000;
            if(N == 20)      goto label10000;
            if(N == 21)      goto label10000;
            if(N == 22)      goto label3000;
            if(N == 23)      goto label10000;
            if(N == 24)      goto label10000;
            
        label1000:
            PLOT (X,Y,3);
            PLOT (X-XK1,Y,2);
            PLOT (X-XK1,Y-2.0,2);
            PLOT (X,Y-2.0,2);
            PLOT (X,Y,2);
            PLOT (X-XK1/2.0,Y-2.0,3);
            PLOT (X-XK1/2.0,Y-3.0,2);
            PLOT (X-XK1/2.0+1.5,Y-3.0,2);
            if (KREUZ == 1) goto label1010;
            PLOT (X-XK1/2.0-1.5,Y-2.1,3);
            PLOT (X-XK1/2.0-1.5,Y-2.9,2);
            AROHD(X-XK1/2.0-3.5,Y-2.5,X-XK1/2.0,Y-2.5,0.2,0.0,16);
            
        label1010:
            if (QTEXT)
                SYMBOL (X-XK1/2.0-0.9,Y-0.6,XH,"CONDENSER",0.0,9);
            if (!QTEXT)
                SYMBOL (X-XK1/2.0-1.1,Y-0.6,XH,"KONDENSATOR",0.0,11);
            if (KREUZ > 0) goto label1020;
            P = FELD1[1]/0.034532/14.223315;
            if (QENGL)
                NUMBER (X-XK1/2.0-1.4,Y-1.0,XH,P,0.0,2);
            if (QENGL)
                SYMBOL (999.0,999.0,XH," IN.HG ABS ",0.0,10);
            XH = 0.15;
            if (XK1 > 3.8) XH = 0.2;
            if (QENGL)
                SYMBOL (X-XK1/2.0-9*XH,Y-1.4,XH,"ELEP ", 0.0,5);
            if (QENGL)
                NUMBER (999.0,999.0,XH,ELEP[1],0.0,1);
            if (QENGL)
                SYMBOL (999.0,999.0,XH," BTU/LB",0.0,7);
            if (QENGL)
                SYMBOL (X-XK1/2.0-9*XH,Y-1.8,XH,"UEEP ",0.0,5);
            if (QENGL)
                NUMBER (999.0,999.0,XH,UEEP[1],0.0,1);
            if (QENGL)
                SYMBOL (999.0,999.0,XH," BTU/LB",0.0,7);
            XH = 0.2;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (X-XK1/2.0-3.5,Y-2.4,XH,FELD1[1],0.0,NDECP);
            NUMBER (X-XK1/2.0-1.4,Y-2.4,XH,FELD1[2],0.0,NDECTE);
            XP = X - XK1/2.0 - 3.5;
            YP = Y - 2.9;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            NUMBER (X-XK1/2.0-1.4,Y-2.9,XH,FELD1[4],0.0,NDECTE);
            
        label1020:
            if (NELEM == 1) goto label1070;
            if (NELEM == 9) goto label1040;
            CIRCL(X+3.0,Y-0.5,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X+2.70,Y-0.6,XH,"B",0.0,1);
            NEWPEN(3);
            AROHD(X+2.5,Y-0.5,X,Y-0.5,0.2,0.0,16);
            NEWPEN(1);
            if (KREUZ > 0) goto label1030;
            XP = X + 0.2;
            YP = Y - 0.4;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[5],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[5],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            if(FELD1[5] != 0.0)NUMBER (X+0.2,Y-0.8,XH,FELD1[6],0.0,NDECTE);
            if(FELD1[5] != 0.0)SYMBOL (999.0,999.0,XH," H",0.0,2);
            
        label1030:
            if (NELEM == 2) goto label1070;
            
        label1040:
            AROHD(X+2.5,Y-1.5,X,Y-1.5,0.2,0.0,16);
            if (KREUZ > 0) goto label1050;
            XP = X + 0.2;
            YP = Y - 1.4;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[9],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[9],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            
        label1050:
            for(J = 1; J <= NL; J++) //DO 1060 J=1,NL
            {
                CIRCL(X+2.5+J*0.5,Y-1.5,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X+2.20+J*0.5,Y-1.6,XH,ABC[J],0.0,1);
            }   //1060 CONTINUE
            
        label1070:
            if (KEINST == 0) goto label10000;
            NEWPEN(3);
            PLOT (X-XK1-0.5,Y+0.7,3);
            PLOT (X-XK1-0.5,Y-1.5,2);
            AROHD(X-XK1-0.5,Y-1.5,X-XK1,Y-1.5,0.2,0.0,16);
            NEWPEN(1);
            CIRCL(X-XK1-0.25,Y+0.95,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X-XK1-0.6,Y+0.85,XH,AB,0.0,1);
            if (KREUZ > 0) goto label10000;
            XP = X - XK1 - 0.6;
            YP = Y - 1.3;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[7],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            goto label10000;

        label2000:
            PLOT (X,Y,3);
            PLOT (X-0.7,Y,2);
            PLOT (X-3.4,Y,3);
            PLOT (X-2.7,Y,2);
            if (QTEXT)
                SYMBOL (X-2.6,Y+0.6,XH,"DEAERATOR",0.0,9);
            if (NELEM != 4 && NELEM != 8 && NELEM != 12 && NELEM != 16)
                goto label3040;

            if (KEINST == 1) NEWPEN(3);
            PLOT (X-2.5,Y-1.0,3);
            PLOT (X-2.5,Y-2.0,2);
            AROHD(X-2.5,Y-2.0,X-0.2,Y-2.0,0.2,0.0,16);
            NEWPEN(1);
            CIRCL(X+0.3,Y-2.0,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X,Y-2.1,XH,AB,0.0,1);
            if (KREUZ > 0) goto label3040;
            XP = X - 2.4;
            YP = Y - 1.9;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[13],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[13],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            XP = X - 2.4;
            YP = Y - 2.3;
            XW = 0.0;
            NUMBER (XP,YP,XH,FELD1[12],XW,NDECTE);
            SYMBOL (999.0,999.0,XH," H",XW,2);
            goto label3040;
            
        label3000:
            PLOT (X,Y,3);
            PLOT (X-0.9,Y,2);
            PLOT (X-0.9,Y-0.2,2);
            PLOT (X-2.5,Y+0.2,2);
            PLOT (X-2.5,Y,2);
            PLOT (X-2.7,Y,2);
            if (N != 3 && N != 22) goto label3020;
            if (KREUZ > 0) goto label3010;
            if (QTEXT)
                SYMBOL (X-2.6,Y+0.6,XH,"TD ",0.0,3);
            if (!QTEXT) SYMBOL (X-2.6,Y+0.6,XH,"DT ",0.0,3);
            NUMBER (999.0,999.0,XH,FELD1[20],0.0,1);
            if (QENGL) SYMBOL (999.0,999.0,XH," F",0.0,2);
            if (!QENGL) SYMBOL (999.0,999.0,XH," K",0.0,2);
            
        label3010:
            if (QTEXT)
                SYMBOL (X-2.4,Y-0.8,XH,"HTR  ",0.0,5);
            if (!QTEXT) SYMBOL (X-2.4,Y-0.8,XH, "VW  ",0.0,4);
            Z = KANZ + 1;
            NUMBER (999.0,999.0,XH,Z,0.0,-1);
            goto label3040;
            
        label3020:
            if (N != 13) goto label3040;
            if (KREUZ > 0) goto label3030;
            if (QTEXT)
                SYMBOL (X-2.6,Y+0.6,XH,"TD ",0.0,3);
            if (!QTEXT) SYMBOL (X-2.6,Y+0.6,XH,"DT ",0.0,3);
            NUMBER (999.0,999.0,XH,FELD1[20],0.0,1);
            if (QENGL)
                SYMBOL (999.0,999.0,XH," F",0.0,2);
            if (!QENGL) SYMBOL (999.0,999.0,XH," K",0.0,2);
            
        label3030:
            if (QTEXT)
                SYMBOL (X-1.8,Y-0.8,XH,"DC",0.0,2);
            
        label3040:
            PLOT (X-2.7,Y-1.0,3);
            PLOT (X-2.7,Y+1.0,2);
            PLOT (X-0.7,Y+1.0,2);
            PLOT (X-0.7,Y-1.0,2);
            PLOT (X-2.7,Y-1.0,2);
            if (KREUZ == 1) goto label3050;
            AROHD(X-3.4,Y+3.7,X-3.4,Y,0.2,0.0,16);
            PLOT (X-3.0,Y+2.2,3);
            PLOT (X-3.8,Y+2.2,2);
            if (KREUZ == 2) goto label3050;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (X-3.5,Y+0.2,XH,FELD1[1],90.0,NDECP);
            NUMBER (X-3.5,Y+2.3,XH,FELD1[2],90.0,NDECTE);
            XP = X - 3.0;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            NUMBER (X-3.0,Y+2.3,XH,FELD1[4],90.0,NDECTE);
            
        label3050:
            //goto label(3100,3200,3300,3200,3400,3200,3300,3200,3500,3200,3300,
            //1 3200,3400,3200,3300,3200,3300,3200,3800),
            if(NELEM == 1)      goto label3100;
            if(NELEM == 2)      goto label3200;
            if(NELEM == 3)      goto label3300;
            if(NELEM == 4)      goto label3200;
            if(NELEM == 5)      goto label3400;
            if(NELEM == 6)      goto label3200;
            if(NELEM == 7)      goto label3300;
            if(NELEM == 8)      goto label3200;
            if(NELEM == 9)      goto label3500;
            if(NELEM == 10)      goto label3200;
            if(NELEM == 11)      goto label3300;
            if(NELEM == 12)      goto label3200;
            if(NELEM == 13)      goto label3400;
            if(NELEM == 14)      goto label3200;
            if(NELEM == 15)      goto label3300;
            if(NELEM == 16)      goto label3200;
            if(NELEM == 17)      goto label3300;
            if(NELEM == 18)      goto label3200;
            if(NELEM == 19)      goto label3800;
            
        label3100:
            AROHD(X-1.7,Y+3.5,X-1.7,Y+1.0,0.2,0.0,16);
            if (KREUZ > 0) goto label3700;
            XP = X - 1.8;
            YP = Y + 1.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[15],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[15],XW,NDECM);
            SYMBOL (999.0,999.0,XH," Q",90.0,1);
            goto label3700;
            
        label3200:
            NEWPEN(3);
            AROHD(X-1.7,Y+5.0,X-1.7,Y+1.0,0.2,0.0,16);
            NEWPEN(1);
            if (KREUZ == 1) goto label3210;
            AROHD(X-2.7,Y+3.2,X-1.7,Y+3.2,0.2,0.0,16);
            PLOT (X-2.3,Y+4.7,3);
            PLOT (X-2.3,Y+1.3,2);
            
        label3210:
            if (NENTG == 0) goto label3220;
            NEWPEN(3);
            AROHD(X+0.8,Y+4.5,X-1.7,Y+4.5,0.2,0.0,16);
            NEWPEN(1);
            CIRCL(X+1.3,Y+4.5,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X+1.0,Y+4.4,XH,ABCD[NENTG],0.0,1);
            if (KREUZ > 0) goto label3230;
            XP = X - 1.4;
            YP = Y + 4.6;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[7],0.0,NDECM);
            SYMBOL (999.0,999.0,XH," M",0.0,2);
            
        label3220:
            NDECP = 4;
            if (KREUZ > 0) goto label3230;
            if (FELD1[5] >= 10.0) NDECP = 3;
            if (FELD1[5] >= 100.0) NDECP = 2;
            if (FELD1[5] >= 1000.0)NDECP = 1;
            NUMBER (X-2.4,Y+1.3,XH,FELD1[5],90.0,NDECP);
            NUMBER (X-2.4,Y+3.4,XH,FELD1[6],90.0,NDECTE);
            XP = X - 1.9;
            YP = Y + 1.3;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[7],XW,NDECM);
            if(FELD1[8] > 0.0)NUMBER (X-1.9,Y+3.4,XH,FELD1[8],90.0,NDECTE);
            if(FELD1[8] <= 0.0)NUMBER (X-1.9,Y+3.4,XH,-FELD1[8],90.0,NDECN);
            
        label3230:
            KANZ = KANZ + 1;
            XE[KANZ] = X - 1.7;
            YE[KANZ] = Y + 5.0;
            //goto label(3700,3600,3300,3300,3400,3400,3300,3300,3500,3500,3300,
            //1 3300,3400,3400,3300,3300),
            if(NELEM == 1)      goto label3700;
            if(NELEM == 2)      goto label3600;
            if(NELEM == 3)      goto label3300;
            if(NELEM == 4)      goto label3300;
            if(NELEM == 5)      goto label3400;
            if(NELEM == 6)      goto label3400;
            if(NELEM == 7)      goto label3300;
            if(NELEM == 8)      goto label3300;
            if(NELEM == 9)      goto label3500;
            if(NELEM == 10)      goto label3500;
            if(NELEM == 11)      goto label3300;
            if(NELEM == 12)      goto label3300;
            if(NELEM == 13)      goto label3400;
            if(NELEM == 14)      goto label3400;
            if(NELEM == 15)      goto label3300;
            if(NELEM == 16)      goto label3300;

        label3300:
            if (N == 2) goto label3340;
            PLOT (X-1.7,Y-1.0-XKONDK,3);
            if (KEINST == 1 && (N == 3 || N == 22)) goto label3310;
            PLOT (X-1.7,Y-2.0,2);
            if (XZU0 == 0.0) XZU1 = X;
            if (XZU0 == 0.0) XZU0 = X;
            if (NT == 20 && (NELEM == 8 || NELEM == 16)) goto label3330;
            if (YZU0 == 0.0) YZU0 = Y-2.0;
            if (NKABLF == 1) XZU1 = X;
            PLOT (XZU1,Y-2.0,2);
            if (NT == 20) goto label3330;
            if (XZU1 == XZU0) PLOT (XZU1,YZU0,2);
            if (KREUZ == 1) goto label3330;
            if (!(KEINST == 1 && N == 13))
                AROHD(X-1.2,Y-3.0,X-1.2,Y-2.0,0.2,0.0,16);
            if (KEINST == 1 && N == 13) PLOT (X-1.2,Y-3.0,3);
            if (KEINST == 1 && N == 13) PLOT (X-1.2,Y-2.15,2);
            if (KEINST == 1 && N == 13) CIRCL(X-1.2,Y-2.15,270.0,90.0,0.15,0.15,0.0);
            if (KEINST == 1 && N == 13) PLOT (X-1.2,Y-1.5,2);
            if (KEINST == 1 && N == 13) AROHD(X-1.2,Y-1.5,X-1.7,Y-1.5,0.2,0.0,16);
            goto label3320;
            
        label3310:
            PLOT (X-1.7,Y-1.5,2);
            PLOT (X+XDX+1.55,Y-1.5,2);
            CIRCL(X+XDX+1.85,Y-1.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X+XDX+1.85,Y-1.5,3);
            PLOT (XZU2,Y-1.5,2);
            PLOT (X+XDX+3.4,Y-2.0,3);
            PLOT (X+2.0*XDX+5.1,Y-2.0,2);
            if (KREUZ == 1) goto label3330;
            AROHD(X-1.2,Y-3.0,X-1.2,Y-1.5,0.2,0.0,16);
            
        label3320:
            PLOT (X+0.1,Y-2.6,3);
            PLOT (X-3.0,Y-2.6,2);
            if (KREUZ == 2) goto label3330;
            SYMBOL (X-2.2,Y-2.4,XH,"-",0.0,1);
            NUMBER (X-1.0,Y-2.4,XH,FELD1[12],0.0,NDECTE);
            XP = X - 3.0;
            YP = Y - 3.0;
            XW = 0.0;
            
            if (QENGL) UWA135(FELD1[13],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[13],XW,NDECM);
            NUMBER (X-1.0,Y-3.0,XH,FELD1[14],0.0,NDECTE);
            
        label3330:
            if (NKABLF != 1) goto label3340;
            NKABLF = 2;
            AROHD(XZU1,Y-2.0,XZU1+0.5,Y-2.0,0.2,0.0,16);
            CIRCL(XZU1+1.0,Y-2.0,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (XZU1+0.70,Y-2.1,XH,AB,0.0,1);
            
        label3340:
            //goto label(3700,3600,3700,3700,3400,3400,3400,3400,3500,3500,3500,
            //1 3500,3400,3400,3400,3400),
            if(NELEM == 1)      goto label3700;
            if(NELEM == 2)      goto label3600;
            if(NELEM == 3)      goto label3700;
            if(NELEM == 4)      goto label3700;
            if(NELEM == 5)      goto label3400;
            if(NELEM == 6)      goto label3400;
            if(NELEM == 7)      goto label3400;
            if(NELEM == 8)      goto label3400;
            if(NELEM == 9)      goto label3500;
            if(NELEM == 10)      goto label3500;
            if(NELEM == 11)      goto label3500;
            if(NELEM == 12)      goto label3500;
            if(NELEM == 13)      goto label3400;
            if(NELEM == 14)      goto label3400;
            if(NELEM == 15)      goto label3400;
            if(NELEM == 16)      goto label3400;

        label3400:
            if (KEINST == 1 && N == 13) goto label3410;
            if (KEINST == 2) goto label3410;
            PLOT (X-3.4-XDX,Y-2.0,3);
            XZU1 = X - 3.4 - XDX;
            PLOT (X-3.4,Y-2.0,2);
            AROHD(X-3.4,Y-2.0,X-2.7,Y-1.0,0.2,0.0,16);
            goto label3420;
            
        label3410:
            PLOT (X-3.4-XDX,Y-1.5,3);
            XZU2 = X - 3.4 - XDX;
            PLOT (X-3.05,Y-1.5,2);
            AROHD(X-3.05,Y-1.5,X-2.7,Y-1.0,0.2,0.0,16);
            
        label3420:
            //goto label(3700,3600,3700,3700,3700,3600,3700,3700,3500,3500,3500,
            //1 3500,3500,3500,3500,3500),NELEM
            if(NELEM == 1)      goto label3700;
            if(NELEM == 2)      goto label3600;
            if(NELEM == 3)      goto label3700;
            if(NELEM == 4)      goto label3700;
            if(NELEM == 5)      goto label3700;
            if(NELEM == 6)      goto label3600;
            if(NELEM == 7)      goto label3700;
            if(NELEM == 8)      goto label3700;
            if(NELEM == 9)      goto label3500;
            if(NELEM == 10)      goto label3500;
            if(NELEM == 11)      goto label3500;
            if(NELEM == 12)      goto label3500;
            if(NELEM == 13)      goto label3500;
            if(NELEM == 14)      goto label3500;
            if(NELEM == 15)      goto label3500;
            if(NELEM == 16)      goto label3500;

        label3500:
            NEWPEN(1);
            if (ISAMM == 1) NEWPEN(3);
            AROHD(X-1.0,Y+3.5,X-1.0,Y+1.0,0.2,0.0,16);
            NEWPEN(1);
            if (KREUZ > 0) goto label3510;
            XP = X - 1.1;
            YP = Y + 1.3;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[9],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[9],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            NUMBER (X-0.6,Y+1.3,XH,FELD1[10],90.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",XW,2);
            
        label3510:
            for(I = 1; I <= NL; I++) //DO 3520 I=1,NL
            {
                CIRCL(X-.75,Y+3.25+I*0.5,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X-1.08,Y+3.15+I*0.5,XH,ABC[I],0.0,1);
            }   //3520 CONTINUE
            if (N == 13 && XUMPMP == 1.0) goto label3600;
            
            //goto label(3700,3600,3700,3700,3700,3600,3700,3700,3700,3600,3700,
            //1 3700,3700,3600,3700,3700),
            if(NELEM == 1)      goto label3700;
            if(NELEM == 2)      goto label3600;
            if(NELEM == 3)      goto label3700;
            if(NELEM == 4)      goto label3700;
            if(NELEM == 5)      goto label3700;
            if(NELEM == 6)      goto label3600;
            if(NELEM == 7)      goto label3700;
            if(NELEM == 8)      goto label3700;
            if(NELEM == 9)      goto label3700;
            if(NELEM == 10)      goto label3600;
            if(NELEM == 11)      goto label3700;
            if(NELEM == 12)      goto label3700;
            if(NELEM == 13)      goto label3700;
            if(NELEM == 14)      goto label3600;
            if(NELEM == 15)      goto label3700;
            if(NELEM == 16)      goto label3700;

        label3600:
            if (N == 2) goto label10000;
            PLOT (X-1.7,Y-1.0-XKONDK,3);
            PLOT (X-1.7,Y-2.0,2);
            PLOT (X-2.7,Y-2.0,2);
            PLOT (X-2.95,Y-1.59,2);
            if (NELEM == 2 || NELEM == 10) PLOT (X-3.38,Y-0.880,2);
            if (NELEM == 6 || NELEM == 14)
                CIRCL(X-2.95,Y-1.59,301.0,121.0,0.15,0.15,0.0);
            if (NELEM == 6 || NELEM == 14) PLOT (X-3.38,Y-0.880,2);
            if (N == 13 && NELEM == 13) CIRCL(X-2.95,Y-1.59,301.0,121.0,0.15,0.15,0.0);
            if (N == 13 && NELEM == 13) PLOT (X-3.38,Y-0.88,2);
            CIRCL(X-3.38,Y-0.88,301.0,-59.0,0.25,0.25,0.0);
            AROHD(X-3.40,Y-0.83,X-3.6,Y-0.49,0.3,0.3,16);
            AROHD(X-3.63,Y-0.45,X-3.9,Y,0.2,0.0,16);
            if (KREUZ == 1) goto label3620;
            AROHD(X-1.9,Y-3.0,X-1.9,Y-2.0,0.2,0.0,16);
            PLOT (X-0.6,Y-2.6,3);
            PLOT (X-3.7,Y-2.6,2);
            if (KREUZ == 2) goto label3610;
            SYMBOL (X-2.6,Y-2.5,XH,"-",0.0,1);
            NUMBER (X-1.7,Y-2.5,XH,FELD1[12],0.0,NDECTE);
            XP = X - 3.7;
            YP = Y - 3.0;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[13],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[13],XW,NDECM);
            NUMBER (X-1.7,Y-3.0,XH,FELD1[14],0.0,NDECTE);
            
        label3610:
            PLOT (X-4.8,Y+2.2,3);
            PLOT (X-4.0,Y+2.2,2);
            AROHD(X-4.4,Y+3.7,X-4.4,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label3620;
            NDECP = 4;
            if (FELD1[16] >= 10.0) NDECP = 3;
            if (FELD1[16] >= 100.0) NDECP = 2;
            if (FELD1[16] >= 1000.0)NDECP = 1;
            NUMBER (X-4.5,Y+0.2,XH,FELD1[16],90.0,NDECP);
            NUMBER (X-4.5,Y+2.3,XH,FELD1[17],90.0,NDECTE);
            XP = X - 4.0;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[18],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[18],XW,NDECM);
            NUMBER (X-4.0,Y+2.3,XH,FELD1[19],90.0,NDECTE);
            
        label3620:
            if (N == 13 && XUMPMP == 1.0) XUMPMP = 0.0;
            
        label3700:
            PLOT (X-2.7,Y,3);
            PLOT (X-3.4-XUMPMP,Y,2);
            if (XKONDK == 0.0) goto label10000;

            PLOT (X-0.7,Y-1.0,3);
            PLOT (X-0.7,Y-1.5,2);
            PLOT (X-2.7,Y-1.5,2);
            PLOT (X-2.7,Y-1.0,2);
            if (KREUZ > 0) goto label10000;
            if (QTEXT)
                SYMBOL (X-2.6,Y-1.35,XH,"TD ",0.0,3);
            if (!QTEXT) SYMBOL (X-2.6,Y-1.35,XH,"DT ",0.0,3);
            NUMBER (999.0,999.0,XH,FELD1[21],0.0,1);
            if (QENGL)
                SYMBOL (999.0,999.0,XH," F",0.0,2);
            if (!QENGL) SYMBOL (999.0,999.0,XH," K",0.0,2);
            goto label10000;
            
        label3800:
            PLOT (X-1.7,Y-1.0,3);
            PLOT (X-1.7,Y-2.0,2);
            PLOT (X,Y-2.0,2);
            CIRCL(X-1.45,Y+3.75,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X-1.8,Y+3.65,XH,ABC[NL],0.0,1);
            AROHD(X-1.7,Y+3.5,X-1.7,Y+1.0,0.2,0.0,16);
            if (KREUZ > 0) goto label10000;
            XP = X - 1.8;
            YP = Y + 1.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[9],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[9],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            NUMBER (X-1.3,Y+1.2,XH,FELD1[10],90.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",XW,2);
            goto label10000;

        label4000:
            MIN = 0;
            if (NELEM > 9) MIN = 1;
            if (MIN == 1) NELEM = NELEM - 10;
            //goto label(4100,4100,4100,4100,4100,4100,4100,4100,4500),NELEM
            if(NELEM == 1)      goto label4100;
            if(NELEM == 2)      goto label4100;
            if(NELEM == 3)      goto label4100;
            if(NELEM == 4)      goto label4100;
            if(NELEM == 5)      goto label4100;
            if(NELEM == 6)      goto label4100;
            if(NELEM == 7)      goto label4100;
            if(NELEM == 8)      goto label4100;
            if(NELEM == 9)      goto label4500;
            
        label4100:
            PLOT (X,Y,3);
            if (NELEM == 2 || NELEM == 6) PLOT (X-1.0,Y,2);
            if (NELEM == 2 || NELEM == 6) X = X - 1.0;
            if (NELEM == 3 || NELEM == 7) PLOT (X-2.0,Y,2);
            if (NELEM == 3 || NELEM == 7) X = X - 2.0;
            if (NELEM == 4 || NELEM == 8) PLOT (X-3.0,Y,2);
            if (NELEM == 4 || NELEM == 8) X = X - 3.0;
            PLOT (X-0.4,Y,2);
            CIRCL(X-0.4,Y,0.0,360.0,0.3,0.3,0.0);
            AROHD(X-0.5,Y,X-0.9,Y,0.3,0.4,16);
            if (IKESS == 0) goto label4110;
            IKESS = 0;
            PLOT (X-0.68,Y+0.3,3);
            PLOT (X-0.68,Y+1.3,2);
            PLOT (X-0.72,Y+1.3,3);
            PLOT (X-0.72,Y+0.3,2);
            
        label4110:
            PLOT (X-1.0,Y,3);
            //goto label(4200,4200,4200,4200,4300,4300,4300,4300,10000),NELEM
            if(NELEM == 1)      goto label4200;
            if(NELEM == 2)      goto label4200;
            if(NELEM == 3)      goto label4200;
            if(NELEM == 4)      goto label4200;
            if(NELEM == 5)      goto label4300;
            if(NELEM == 6)      goto label4300;
            if(NELEM == 7)      goto label4300;
            if(NELEM == 8)      goto label4300;
            if(NELEM == 9)      goto label10000;
            
        label4200:
            if (MIN == 0) goto label4220;
            PLOT (X-1.9,Y,2);
            AROHD(X-1.4,Y,X-1.4,Y+2.3,0.2,0.0,16);
            CIRCL(X-1.15,Y+2.55,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X-1.45,Y+2.45,XH,AB,0.0,1);
            if (KREUZ != 0) goto label4210;
            XP = X - 1.5;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[21],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[21],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            
        label4210:
            PLOT (X-1.9,Y,3);
            X = X - 1.0;
            
        label4220:
            PLOT (X-1.9,Y,2);
            if (KREUZ == 1) goto label4230;
            PLOT (X-2.3,Y+2.2,3);
            PLOT (X-1.5,Y+2.2,2);
            AROHD(X-1.9,Y+3.7,X-1.9,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label4230;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (X-2.0,Y+0.2,XH,FELD1[1],90.0,NDECP);
            NUMBER (X-2.0,Y+2.3,XH,FELD1[2],90.0,NDECTE);
            XP = X - 1.5;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            NUMBER (X-1.5,Y+2.3,XH,FELD1[4],90.0,NDECTE);
            
        label4230:
            if (MIN == 1) X = X + 1.0;
            if (MIN == 1) NELEM = NELEM + 10;
            if (NELEM == 1 || NELEM == 11) goto label10000;
            goto label4400;

        label4300:
            if (MIN == 0) goto label4320;
            PLOT (X-3.0,Y,2);
            AROHD(X-3.0,Y,X-3.0,Y+2.3,0.2,0.0,16);
            CIRCL(X-2.75,Y+2.55,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X-3.05,Y+2.45,XH,AB,0.0,1);
            if (KREUZ != 0) goto label4310;
            XP = X - 3.1;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[21],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[21],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            
        label4310:
            PLOT (X-3.0,Y,3);
            X = X - 1.0;
            
        label4320:
            PLOT (X-3.0,Y,2);
            if (KREUZ == 1) goto label4330;
            PLOT (X-3.4,Y+2.2,3);
            PLOT (X-2.6,Y+2.2,2);
            AROHD(X-3.0,Y+3.7,X-3.0,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label4330;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (X-3.1,Y+0.2,XH,FELD1[1],90.0,NDECP);
            NUMBER (X-3.1,Y+2.3,XH,FELD1[2],90.0,NDECTE);
            XP = X - 2.6;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            NUMBER (X-2.6,Y+2.3,XH,FELD1[4],90.0,NDECTE);
            
        label4330:
            PLOT (X-0.9,Y+0.2,3);
            PLOT (X-1.4,Y+0.7,2);
            AROHD(X-1.4,Y+0.7,X-1.4,Y+4.0,0.2,0.0,16);
            CIRCL(X-1.15,Y+4.25,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X-1.5,Y+4.15,XH,ABC[NL],0.0,1);
            if (KREUZ == 1) goto label4340;
            PLOT (X-2.0,Y+3.5,3);
            PLOT (X-2.0,Y+0.5,2);
            AROHD(X-2.4,Y+2.2,X-1.4,Y+2.2,0.2,0.0,16);
            if (KREUZ == 2) goto label4340;
            NDECP = 4;
            if (FELD1[16] >= 10.0) NDECP = 3;
            if (FELD1[16] >= 100.0) NDECP = 2;
            if (FELD1[16] >= 1000.0)NDECP = 1;
            NUMBER (X-2.1,Y+0.6,XH,FELD1[16],90.0,NDECP);
            NUMBER (X-2.1,Y+2.3,XH,FELD1[17],90.0,NDECTE);
            XP = X - 1.6;
            YP = Y + 0.6;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[18],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[18],XW,NDECM);
            NUMBER (X-1.6,Y+2.3,XH,FELD1[19],90.0,NDECTE);
            
        label4340:
            if (MIN == 1) X = X + 1.0;
            if (MIN == 1) NELEM = NELEM + 10;
            if (NELEM == 5 || NELEM == 15) goto label10000;

        label4400:
            PLOT (X-0.68,Y+0.3,3);
            PLOT (X-0.68,Y+6.0,2);
            PLOT (X-0.72,Y+6.0,3);
            PLOT (X-0.72,Y+0.3,2);
            if (KREUZ > 0) goto label4410;
            XP = X - 0.85;
            YP = Y + 1.0;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[20],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[20],XW,NDECM);
            if (QENGL) SYMBOL (999.0,999.0,XH," KW",90.0,3);
            if (!QENGL) SYMBOL (999.0,999.0,XH," MW",90.0,3);
            
        label4410:
            PLOT (X-1.7,Y+6.0,3);
            PLOT (X+0.3,Y+6.0,2);
            PLOT (X-0.2,Y+7.5,2);
            PLOT (X-1.2,Y+7.5,2);
            PLOT (X-1.7,Y+6.0,2);
            if (QTEXT)
                SYMBOL (X-0.9,Y+6.1,XH,"BFP.",90.0,4);
            if (QTEXT)
                SYMBOL (X-0.3,Y+6.1,XH,"TURBINE",90.0,7);
            NEWPEN(3);
            AROHD(X+0.5,Y+7.5,X-0.2,Y+7.5,0.2,0.0,16);
            PLOT (X+0.5,Y+7.5,3);
            PLOT (X+0.5,Y+11.0,2);
            NEWPEN(1);
            CIRCL(X+0.75,Y+11.25,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X+0.45,Y+11.15,XH,ABC[8],0.0,1);
            if (KREUZ == 1) goto label4420;
            PLOT (X-0.1,Y+7.7,3);
            PLOT (X-0.1,Y+11.0,2);
            AROHD(X-0.5,Y+9.5,X+0.5,Y+9.5,0.2,0.0,16);
            if (KREUZ == 2) goto label4420;
            NDECP = 4;
            if (FELD1[5] >= 10.0) NDECP = 3;
            if (FELD1[5] >= 100.0) NDECP = 2;
            if (FELD1[5] >= 1000.0)NDECP = 1;
            NUMBER (X-0.2,Y+7.7,XH,FELD1[5],90.0,NDECP);
            NUMBER (X-0.2,Y+9.7,XH,FELD1[6],90.0,NDECTE);
            if(FELD1[8] > 0.0)NUMBER (X+0.4,Y+9.7,XH,FELD1[8],90.0,NDECTE);
            if(FELD1[8] <= 0.0)NUMBER (X+0.4,Y+9.7,XH,-FELD1[8],90.0,NDECN);
            XP = X + 0.4;
            YP = Y + 7.7;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[7],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[7],XW,NDECM);
            
        label4420:
            XSPT = X + 0.3;
            YSPT = Y + 6.0;
            goto label10000;

        label4500:
            CIRCL(X+0.5,Y,0.0,360.0,0.25,0.25,0.0);
            AROHD(X+0.1,Y,X+0.4,Y,0.2,0.25,16);
            PLOT (X+0.5,Y,3);
            PLOT (38.0/FACT,Y,2);
            if (KREUZ == 1) goto label4510;
            XP = 37.5/FACT;
            PLOT (XP+1.7,Y+0.6,3);
            PLOT (XP-2.0,Y+0.6,2);
            AROHD(XP,Y+1.0,XP,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label4510;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (XP-2.0,Y+0.7,XH,FELD1[1],0.0,NDECP);
            NUMBER (XP+0.2,Y+0.7,XH,FELD1[2],0.0,NDECTE);
            YP = Y + 0.3;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[3],XP-2.0,YP,XH,XW);
            if (!QENGL) NUMBER (XP-2.0,YP,XH,FELD1[3],XW,NDECM);
            NUMBER (XP+0.2,YP,XH,FELD1[4],0.0,NDECTE);
            
        label4510:
            if (MIN == 0) goto label10000;
            NELEM = NELEM + 10;
            PLOT (X+1.0,Y,3);
            PLOT (X+1.0,Y-1.0,2);
            AROHD(X+1.0,Y-1.0,X+3.3,Y-1.0,0.2,0.0,16);
            CIRCL(X+3.8,Y-1.0,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X+3.5,Y-1.1,XH,AB,0.0,1);
            if (KREUZ > 0) goto label10000;
            XP = X + 1.2;
            YP = Y - 0.9;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[21],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[21],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            goto label10000;

        label5000:
            if (NELEM == 17) goto label3000;
            PLOT (X,Y,3);
            PLOT (X,Y-0.7,2);
            PLOT (X+0.2,Y-0.7,2);
            PLOT (X-0.2,Y-2.3,2);
            PLOT (X,Y-2.3,2);
            PLOT (X,Y-3.0-YDY,2);
            if (KREUZ == 1) goto label5010;
            AROHD(X-3.9,Y-3.0,X,Y-3.0,0.2,0.0,16);
            PLOT (X-1.7,Y-2.6,3);
            PLOT (X-1.7,Y-3.4,2);
            if (KREUZ == 2) goto label5010;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0) NDECP = 1;
            NUMBER (X-3.8,Y-2.9,XH,FELD1[1],0.0,NDECP);
            NUMBER (X-1.5,Y-2.9,XH,FELD1[2],0.0,NDECTE);
            NUMBER (X-1.5,Y-3.3,XH,FELD1[4],0.0,NDECTE);
            XP = X - 3.8;
            YP = Y - 3.3;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            
        label5010:
            PLOT (X-1.0,Y-2.5,3);
            PLOT (X+1.0,Y-2.5,2);
            PLOT (X+1.0,Y-0.5,2);
            PLOT (X-1.0,Y-0.5,2);
            PLOT (X-1.0,Y-2.5,2);
            if (IKESS == 0 && QTEXT) SYMBOL (X-.9,Y-1.1,XH,"GLAND",0.0,5);
            if (IKESS == 1 && QTEXT) SYMBOL (X-.9,Y-1.1,XH,"SJAE" ,0.0,4);
            if (QTEXT)
                SYMBOL (X+0.1,Y-2.1,XH,"COND",0.0,4);
            CIRCL(X-3.0,Y-1.5,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X-3.30,Y-1.6,XH,ABC[NL],0.0,1);
            if (ISAMM == 1) NEWPEN(3);
            AROHD(X-3.0,Y-1.5,X-1.0,Y-1.5,0.2,0.0,16);
            NEWPEN(1);
            if (KREUZ > 0) goto label5020;
            XP = X - 2.8;
            YP = Y - 1.4;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[9],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[9],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            NUMBER (X-2.8,Y-1.9,XH,FELD1[10],0.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",XW,2);
            
        label5020:
            PLOT (X+1.0,Y-1.5,3);
            PLOT (X+1.5,Y-1.5,2);
            AROHD(X+1.5,Y-1.5,X+1.5,Y,0.2,0.0,16);
            CIRCL(X+1.75,Y+0.25,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X+1.45,Y+0.15,XH,AB,0.0,1);
            if (KREUZ == 1) goto label10000;
            PLOT (X+2.1,Y,3);
            PLOT (X+2.1,Y-2.8,2);
            AROHD(X+2.6,Y-1.3,X+1.5,Y-1.3,0.2,0.0,16);
            if (KREUZ == 2) goto label10000;
            SYMBOL (X+2.0,Y-2.5,XH,"-",90.0,1);
            NUMBER (X+2.0,Y-1.2,XH,FELD1[12],90.0,NDECTE);
            XP = X + 2.5;
            YP = Y - 2.7;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[13],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[13],XW,NDECM);
            NUMBER (X+2.5,Y-1.2,XH,FELD1[14],90.0,NDECTE);
            goto label10000;

        label6000:
            CIRCL(X,Y,0.0,360.0,0.3,0.3,0.0);
            PLOT (X-0.6,Y,3);
            PLOT (X-1.2,Y,2);
            if (KREUZ == 1) goto label10000;
            PLOT (X-1.6,Y+2.2,3);
            PLOT (X-0.8,Y+2.2,2);
            AROHD(X-1.2,Y+3.7,X-1.2,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label10000;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (X-1.3,Y+0.2,XH,FELD1[1],90.0,NDECP);
            NUMBER (X-1.3,Y+2.3,XH,FELD1[2],90.0,NDECTE);
            XP = X - 0.8;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            NUMBER (X-0.8,Y+2.3,XH,FELD1[4],90.0,NDECTE);
            goto label10000;

        label7000:
            if (KESS != 1) goto label7010;
            AROHD(X,Y,X-2.5,Y,0.2,0.0,16);
            X = X - 2.5;
            if (QTEXT) SYMBOL (X+0.3,Y-0.3,XH,"TO BOILER",0.0,9);
            if (!QTEXT) SYMBOL (X+0.3,Y-0.3,XH,"ZUM DAMPF-",0.0,10);
            if (!QTEXT) SYMBOL (X+0.3,Y-0.6,XH,"ERZEUGER",0.0,8);
            
        label7010:
            PLOT (X,Y,3);
            if (IKESS == 1) NEWPEN(3);
            PLOT (X-2.0,Y,2);
            AROHD(X-1.0,Y,X-1.0,Y+4.0,0.2,0.0,16);
            NEWPEN(1);
            CIRCL(X-0.75,Y+4.25,0.0,360.0,0.25,0.25,1);
            SYMBOL (X-1.1,Y+4.15,XH,AB,0.0,1);
            if (KREUZ == 1) goto label10000;
            AROHD(X-2.0,Y+2.2,X-1.0,Y+2.2,0.2,0.0,16);
            PLOT (X-1.6,Y+4.0,3);
            PLOT (X-1.6,Y+0.2,2);
            if (KREUZ == 2) goto label10000;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (X-1.7,Y+0.2,XH,FELD1[1],90.0,NDECP);
            NUMBER (X-1.7,Y+2.4,XH,FELD1[2],90.0,NDECTE);
            XP = X - 1.3;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[13],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[13],XW,NDECM);
            if(FELD1[4] > 0.0)NUMBER (XP,Y+2.4,XH, FELD1[4],XW,NDECTE);
            if(FELD1[4] <= 0.0)NUMBER (XP,Y+2.4,XH,-FELD1[4],XW,NDECN);
            goto label10000;

        label8000:
            XZ = 0.0;
            if (NELEM > 20) goto label8070;
            if (NELEM == 10 || NELEM == 12 || NELEM == 14) XZ = 1.0;
            PLOT (X,Y,3);
            PLOT (X-2.0-XZ,Y,2);
            if (NELEM == 1) goto label10000;
            if (KREUZ == 1) goto label8010;
            PLOT (X-2.4-XZ,Y+2.2,3);
            PLOT (X-1.6-XZ,Y+2.2,2);
            AROHD(X-2.0-XZ,Y+3.7,X-2.0-XZ,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label8010;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (X-2.1-XZ,Y+0.2,XH,FELD1[1],90.0,NDECP);
            NUMBER (X-2.1-XZ,Y+2.3,XH,FELD1[2],90.0,NDECTE);
            XP = X - 1.6 - XZ;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            NUMBER (X-1.6-XZ,Y+2.3,XH,FELD1[4],90.0,NDECTE);
            
        label8010:
            if (NELEM < 9) goto label8040;
            AROHD(X-1.0,Y+2.5,X-1.0,Y,0.2,0.0,16);
            if (KREUZ > 0) goto label8020;
            XP = X - 1.1;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[9],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[9],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            NUMBER (X-0.6,Y+0.2,XH,FELD1[10],90.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",XW,2);
            
        label8020:
            for(J = 1; J <= NL; J++) //DO 8030 J=1,NL
            {
                CIRCL(X-0.75,Y+2.25+J*0.5,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X-1.08,Y+2.15+J*0.5,XH,ABC[J],0.0,1);
            }   //8030 CONTINUE
            
        label8040:
            if (NELEM != 2 && NELEM != 4 && NELEM != 6 && NELEM != 10 && NELEM != 12 && NELEM != 14) goto label8060;
            AROHD(X-1.0-XZ,Y,X-1.0-XZ,Y+2.5,0.2,0.0,16);
            if (KREUZ > 0) goto label8050;
            XP = X - 1.1 - XZ;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[13],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[13],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            
        label8050:
            CIRCL(X-0.75-XZ,Y+2.75,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X-1.05-XZ,Y+2.65,XH,AB,0.0,1);
            
        label8060:
            if (NELEM != 3 && NELEM != 4 && NELEM != 11 && NELEM != 12)
                goto label10000;
            PLOT (X-2.0-XZ-XDX,Y-2.0,3);
            PLOT (X-1.0-XZ,Y-2.0,2);
            PLOT (X-1.0-XZ,Y-1.25,2);
            CIRCL(X-1.0-XZ+0.25,Y-1.0,0.0,360.0,0.25,0.25,0.0);
            AROHD(X-1.0-XZ,Y-1.20,X-1.0-XZ,Y-0.80,0.25,0.25,16);
            AROHD(X-1.0-XZ,Y-0.75,X-1.0-XZ,Y,0.2,0.0,16);
            XZU1 = X - 2.0 - XZ - XDX;
            goto label10000;
            
        label8070:
            if (NELEM == 30) XZ = 1.0;
            PLOT (X,Y,3);
            PLOT (X,Y-2.0-XZ,2);
            if (KREUZ == 1) goto label8080;
            PLOT (X-1.5,Y-1.6-XZ,3);
            PLOT (X-1.5,Y-2.4-XZ,2);
            AROHD(X-3.7,Y-2.0-XZ,X,Y-2.0-XZ,0.2,0.0,16);
            if (KREUZ == 2) goto label8080;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0) NDECP = 1;
            NUMBER (X-3.6,Y-1.9-XZ,XH,FELD1[1],0.0,NDECP);
            NUMBER (X-1.3,Y-1.9-XZ,XH,FELD1[2],0.0,NDECTE);
            NUMBER (X-1.3,Y-2.3-XZ,XH,FELD1[4],0.0,NDECTE);
            XP = X - 3.6;
            YP = Y - 2.3 - XZ;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            
        label8080:
            if (NELEM != 29 && NELEM != 30) goto label8110;
            AROHD(X-2.5,Y-1.0,X,Y-1.0,0.2,0.0,16);
            if (KREUZ > 0) goto label8090;
            XP = X - 2.3;
            YP = Y - 0.9;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[9],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[9],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            NUMBER (X-2.3,Y-1.3,XH,FELD1[10],0.0,NDECTE);
            SYMBOL (999.0,999.0,XH," H",XW,2);
            
        label8090:
            for(J = 1; J <= NL; J++) //DO 8100 J=1,NL
            {
                CIRCL(X-2.0-0.5*J,Y-1.0,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X-2.3-0.5*J,Y-1.1,XH,ABC[J],0.0,1);
            }   //8100 CONTINUE
            
        label8110:
            if (NELEM != 22 && NELEM != 30) goto label10000;
            AROHD(X,Y-1.0-XZ,X-2.5,Y-1.0-XZ,0.2,0.0,16);
            CIRCL(X-2.5,Y-1.0-XZ,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X-2.8,Y-1.1-XZ,XH,AB,0.0,1);
            if (KREUZ > 0) goto label10000;
            XP = X - 2.3;
            YP = Y - 0.9 - XZ;
            XW = 0.0;
            if (QENGL) UWA135(FELD1[13],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[13],XW,NDECM);
            SYMBOL (999.0,999.0,XH," M",XW,2);
            goto label10000;

        label9000:
            //goto label(9010,10000,9020,9030),NELEM
            if(NELEM == 1)      goto label9010;
            if(NELEM == 2)      goto label10000;
            if(NELEM == 3)      goto label9020;
            if(NELEM == 4)      goto label9030;
            
        label9010:
            PLOT (X,Y,3);
            PLOT (X-1.0,Y,2);
            if (KREUZ == 1) goto label10000;
            PLOT (X-1.4,Y+2.2,3);
            PLOT (X-0.6,Y+2.2,2);
            AROHD(X-1.0,Y+3.7,X-1.0,Y,0.2,0.0,16);
            if (KREUZ == 2) goto label10000;
            NDECP = 4;
            if (FELD1[1] >= 10.0) NDECP = 3;
            if (FELD1[1] >= 100.0) NDECP = 2;
            if (FELD1[1] >= 1000.0)NDECP = 1;
            NUMBER (X-1.1,Y+0.2,XH,FELD1[1],90.0,NDECP);
            NUMBER (X-1.1,Y+2.3,XH,FELD1[2],90.0,NDECTE);
            XP = X - 0.6;
            YP = Y + 0.2;
            XW = 90.0;
            if (QENGL) UWA135(FELD1[3],XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,FELD1[3],XW,NDECM);
            NUMBER (X-0.6,Y+2.3,XH,FELD1[4],90.0,NDECTE);
            goto label10000;
            
        label9020:
            NELEM = 7;
            goto label4500;
            
        label9030:
            NELEM = 1;
            goto label4100;
            
        label10000:
            return;
        }   //END


        static void UWA144(int K3, int K4,double[] FELD,int[] IENTN)
        {
            //ENTRY PLOT4 (K3,K4,FELD,IENTN)
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            //DIMENSION FELD(80)
            //DIMENSION IENTN[5]
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /ABCDEF/ ABDUWA[5]
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            int N = 0, NDECP = 0, L1 = 0;
            double XP = 0, YP = 0, XW = 0, XL = 0;

            if (K3 == 0) goto label1000;

            for(I = 1; I <= K3; I++) //DO 100 I = 1,K3
            {
                NEWPEN(3);
                PLOT (X,Y,3);

                if (IENTN[I] <= 0) goto label5;
                PLOT (X+0.7*IENTN[I],Y,2);
                X = X + 0.7*IENTN[I];
                
            label5:
                PLOT (X+2.5,Y,2);
                NEWPEN(1);
                if (KREUZ == 1) goto label10;
                PLOT (X+2.3,Y+0.6,3);
                PLOT (X-1.5,Y+0.6,2);
                AROHD(X+0.5,Y+1.0,X+0.5,Y,0.2,0.0,16);
                if (KREUZ == 2) goto label10;
                N = 12*I - 3;
                NDECP = 4;
                if (FELD[N] >= 10.0) NDECP = 3;
                if (FELD[N] >= 100.0) NDECP = 2;
                if (FELD[N] >= 1000.0) NDECP = 1;
                NUMBER (X-1.4,Y+0.8,XH,FELD[N],0.0,NDECP);
                NUMBER (X+0.7,Y+0.8,XH,FELD[N+1],0.0,NDECTE);
                XP = X - 1.4;
                YP = Y + 0.2;
                XW = 0.0;
                if (QENGL) UWA135(FELD[N+2],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[N+2],XW,NDECM);
                if (FELD[N+3] > 0.0)
                    NUMBER (X+0.7,Y+0.2,XH, FELD[N+3],0.0,NDECTE);
                if (FELD[N+3] <= 0.0)
                    NUMBER (X+0.7,Y+0.2,XH,-FELD[N+3],0.0,NDECN);
                
            label10:
                PLOT (X+2.5,Y,3);
                PLOT (X+2.5,Y+1.0,2);
                PLOT (X+4.5,Y+1.0,2);
                PLOT (X+4.5,Y-0.6,2);
                PLOT (X+3.5,Y-1.0,2);
                PLOT (X+2.5,Y-0.6,2);
                PLOT (X+2.5,Y,2);

                if (QTEXT)
                    SYMBOL (X+2.7,Y+0.6,XH,"MOISTURE",0.0,8);
                if (QTEXT)
                    SYMBOL (X+2.6,Y+0.2,XH,"SEPARATOR",0.0,9);
                AROHD(X+3.5,Y-1.0,X+3.5,Y-2.5,0.2,0.0,16);
                CIRCL(X+3.75,Y-2.75,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X+3.45,Y-2.85,XH,ABDUWA[I],0.0,1);
                if (KREUZ == 1) goto label20;
                AROHD(X-0.3,Y-2.0,X+3.5,Y-2.0,0.2,0.0,16);
                PLOT (X+1.7,Y-2.4,3);
                PLOT (X+1.7,Y-1.6,2);
                if (KREUZ == 2) goto label20;
                NDECP = 4;
                if (FELD[N+4] >= 10.0) NDECP = 3;
                if (FELD[N+4] >= 100.0) NDECP = 2;
                if (FELD[N+4] >= 1000.0) NDECP = 1;
                NUMBER (X-0.2,Y-1.8,XH,FELD[N+4],0.0,NDECP);
                NUMBER (X+1.9,Y-1.8,XH,FELD[N+5],0.0,NDECTE);
                XP = X - 0.2;
                YP = Y - 2.4;
                XW = 0.0;
                if (QENGL) UWA135(FELD[N+6],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[N+6],XW,NDECM);
                NUMBER (X+1.9,Y-2.4,XH,FELD[N+7],0.0,NDECTE);
                
            label20:
                NEWPEN(3);
                PLOT (X+4.5,Y,3);
                PLOT (X+6.5+XDXT,Y,2);
                X = X + 6.5 + XDXT;
            }   //100 CONTINUE

        label1000:
            if (K4 == K3) goto label1200;
            L1 = K3 + 1;
            
            for(I = L1; I <= K4; I++) //DO 1100 I = L1,K4
            {
                N = 12*I - 3;
                NEWPEN(3);
                PLOT (X,Y,3);

                if (IENTN[I] <= 0) goto label1005;
                PLOT (X+0.7*IENTN[I],Y,2);
                X = X + 0.7*IENTN[I];
                
            label1005:
                PLOT (X+2.5,Y,2);
                NEWPEN(1);
                if (KREUZ == 1) goto label1010;
                PLOT (X+2.3,Y+0.6,3);
                PLOT (X-1.5,Y+0.6,2);
                AROHD(X+0.5,Y+1.0,X+0.5,Y,0.2,0.0,16);
                if (KREUZ == 2) goto label1010;
                NDECP = 4;
                if (FELD[N+8] >= 10.0) NDECP = 3;
                if (FELD[N+8] >= 100.0) NDECP = 2;
                if (FELD[N+8] >= 1000.0) NDECP = 1;
                NUMBER (X-1.4,Y+0.8,XH,FELD[N+8],0.0,NDECP);
                NUMBER (X+0.7,Y+0.8,XH,FELD[N+9],0.0,NDECTE);
                XP = X - 1.4;
                YP = Y + 0.2;
                XW = 0.0;
                if (QENGL) UWA135(FELD[N+10],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[N+10],XW,NDECM);
                if (FELD[N+11] > 0.0);
                NUMBER (X+0.7,Y+0.2,XH, FELD[N+11],0.0,NDECTE);
                if (FELD[N+11] <= 0.0)
                    NUMBER (X+0.7,Y+0.2,XH,-FELD[N+11],0.0,NDECN);
                
            label1010:
                PLOT (X+2.5,Y+1.0,3);
                PLOT (X+4.5,Y+1.0,2);
                PLOT (X+4.5,Y-1.0,2);
                PLOT (X+2.5,Y-1.0,2);
                PLOT (X+2.5,Y+1.0,2);
                if(QTEXT)SYMBOL (X+2.6,Y+0.4,XH,"REHEA TER",0.0,9);
                Z = I - K3;
                if(K4-K3 > 1 && QTEXT)  NUMBER (X+2.8,Y-0.6,XH,Z,0.0,-1);
                XL = 0.0;
                if (K4 != I) XL = 0.4;
                if (KREUZ == 1) goto label1020;
                AROHD(X+7.3,Y+1.8-XL,X+3.5,Y+1.8-XL,0.2,0.0,16);
                PLOT (X+5.5,Y+2.2-XL,3);
                PLOT (X+5.5,Y+1.4-XL,2);
                if (KREUZ == 2) goto label1020;
                NDECP = 4;
                if (FELD[N] >= 10.0) NDECP = 3;
                if (FELD[N] >= 100.0) NDECP = 2;
                if (FELD[N] >= 1000.0) NDECP = 1;
                NUMBER (X+3.7,Y+2.0-XL,XH,FELD[N],0.0,NDECP);
                NUMBER (X+5.8,Y+2.0-XL,XH,FELD[N+1],0.0,NDECTE);
                XP = X + 3.7;
                YP = Y + 1.5 - XL;
                XW = 0.0;
                if (QENGL) UWA135(FELD[N+2],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[N+2],XW,NDECM);
                if (FELD[N+3] > 0.0)
                    NUMBER (X+5.8,Y+1.5-XL,XH, FELD[N+3],0.0,NDECTE);
                if (FELD[N+3] <= 0.0)
                    NUMBER (X+5.8,Y+1.5-XL,XH,-FELD[N+3],0.0,NDECN);
                
            label1020:
                NEWPEN(3);
                if (K4 == I) PLOT (X+3.5,Y+2.0,3);
                if (K4 == I) PLOT (XDUE2,Y+2.0,2);
                if (K4 == I) PLOT (XDUE2,YDUE2,2);
                if (K4 != I) XDUE1 = X + 3.5;
                if (K4 != I) YDUE1 = Y + 1.5;
                PLOT (X+3.5,Y+2.0,3);
                if (K4 != I) PLOT (X+3.5,Y+1.5,3);
                PLOT (X+3.5,Y+0.8,2);
                PLOT (X+3.7,Y+0.8,2);
                PLOT (X+3.3,Y-0.8,2);
                PLOT (X+3.5,Y-0.8,2);
                PLOT (X+3.5,Y-1.0,2);
                NEWPEN(1);
                AROHD(X+3.5,Y-1.0,X+3.5,Y-2.5,0.2,0.0,16);
                CIRCL(X+3.75,Y-2.75,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X+3.45,Y-2.85,XH,ABDUWA[I],0.0,1);
                if (KREUZ == 1) goto label1030;
                AROHD(X-0.3,Y-2.0,X+3.5,Y-2.0,0.2,0.0,16);
                PLOT (X+1.7,Y-2.4,3);
                PLOT (X+1.7,Y-1.6,2);
                if (KREUZ == 2) goto label1030;
                NDECP = 4;
                if (FELD[N+4] >= 10.0) NDECP = 3;
                if (FELD[N+4] >= 100.0) NDECP = 2;
                if (FELD[N+4] >= 1000.0) NDECP = 1;
                NUMBER (X-0.2,Y-1.8,XH,FELD[N+4],0.0,NDECP);
                NUMBER (X+1.9,Y-1.8,XH,FELD[N+5],0.0,NDECTE);
                XP = X - 0.2;
                YP = Y - 2.4;
                XW = 0.0;
                if (QENGL) UWA135(FELD[N+6],XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,FELD[N+6],XW,NDECM);
                NUMBER (X+1.9,Y-2.4,XH,FELD[N+7],0.0,NDECTE);
                
            label1030:
                NEWPEN(3);
                PLOT (X+4.5,Y,3);
                PLOT (X+6.5+XDXT,Y,2);
                X = X + 6.5 + XDXT;
            }   //1100 CONTINUE

        label1200:
            IENTN[K4+1] = IENTN[K4+1] - 1;
            if (IENTN[K4+1] <= 0) return;
            NEWPEN(3);
            PLOT (X,Y,3);
            PLOT (X+0.7*IENTN[K4+1],Y,2);
            X = X + 0.7*IENTN[K4+1];
            return;
        }   //END
        

        static void UWA145(int J,int IZ1,int IX,int IX1,int K1,int K4,int KT7,bool QANZ,int K7, string[] FELD,int NL,int NX,int NENTW,bool QENTW,int NSTB)
        {
            //ENTRY PLOT5 (J,IZ1,IX,IX1,K1,K4,KT7,QANZ,K7,FELD,NL,NX,NENTW,QENTW,NSTB)
            //LOGICAL QANZ,QPLOT,QENTW
            //LOGICAL QENGL,QSI,QTECHN,QAMI,QTEXT,QABC
            bool QSPT = false;
            //DIMENSION FELD(30)
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /DUE/ XDUE2,YDUE2,XDUE1,YDUE1
            //COMMON /SPT/ XSPT,YSPT
            //COMMON /MODELL/ KOMP1,KOMP2
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            int NDECP = 0, LL = 0, L = 0, L2 = 0;
            double X1VOR = 0, X2VOR = 0, Y1VOR = 0.0, Y2VOR = 0, YNSPT = 0, X2 = 0, X1 = 0, Y1 = 0, DX = 0, X10 = 0, Y2 = 0, XVSPT = 0,
                XP = 0, YP = 0, XW = 0, Y2PL = 0, XP1 = 0, DY = 0;

            if (J > 0) goto label100;
            X1VOR = 0.0;
            X2VOR = 0.0;
            Y1VOR = 0.0;
            Y2VOR = 0.0;
            YNSPT = 0.0;
            X2 = 0.0;
            
            return;

        label100:
            if (NX > 0 && (KT7 == 1 || KT7 == 2 || KT7 == 6)) goto label7600;
            if (K1 < 0) goto label6000;
            NEWPEN(3);
            
            //goto label(1000,2000,3000,4000,5000),
            if(IX == 1)     goto label1000;
            if(IX == 2)     goto label2000;
            if(IX == 3)     goto label3000;
            if(IX == 4)     goto label4000;
            if(IX == 5)     goto label5000;
            
        label1000:
            if (K1 == 0) goto label1200;
            Y1 = Y - 3.5;
            //goto label(1010,1020,1050),
            if(IX1 == 1)    goto label1010;
            if(IX1 == 2)    goto label1020;
            if(IX1 == 3)    goto label1050;
            
        label1010:
            X1 = X - 1.0;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 1.0 - 0.5*IX1 + 0.5*K1;
            PLOT (X1,Y1,2);
            PLOT (X1-0.35,Y1,2);
            CIRCL(X1-0.35,Y1,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-1.50,Y1,2);
            X1 = X1 - 1.5;
            goto label7000;
            
        label1020:
            //goto label(1030,1040),
            if(K1 == 1)     goto label1030;
            if(K1 == 2)     goto label1040;
            
        label1030:
            X1 = X - 1.0;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 1.0 - 0.5*IX1 + 0.5*K1;
            PLOT (X1,Y1,2);
            PLOT (X1-0.35,Y1,2);
            CIRCL(X1-0.35,Y1,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-1.50,Y1,2);
            PLOT (X1-1.5,Y1-0.5,2);
            X1 = X1 - 1.5;
            Y1 = Y1 - 0.5;
            goto label7000;
            
        label1040:
            X1 = X - 0.5;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 1.0 - 0.5*IX1 + 0.5*K1;
            PLOT (X1,Y1,2);
            PLOT (X1,Y1-0.5,2);
            PLOT (X1-0.85,Y1-0.5,2);
            CIRCL(X1-0.85,Y1-0.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-1.85,Y1-0.5,2);
            CIRCL(X1-1.85,Y1-0.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-3.00,Y1-0.5,2);
            X1 = X1 - 3.0;
            Y1 = Y1 - 0.5;
            goto label7000;
            
        label1050:
            //goto label(1060,1070,1080),K1
            if(K1 == 1)     goto label1060;
            if(K1 == 2)     goto label1070;
            if(K1 == 3)     goto label1080;
            
        label1060:
            X1 = X - 1.5;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 1.0 - 0.5*IX1 + 0.5*K1;
            PLOT (X1,Y1,2);
            PLOT (X1-0.35,Y1,2);
            CIRCL(X1-0.35,Y1,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-1.50,Y1,2);
            PLOT (X1-1.5,Y1-1.0,2);
            X1 = X1 - 1.5;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label1070:
            X1 = X - 1.0;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 1.0 - 0.5*IX1 + 0.5*K1;
            PLOT (X1,Y1,2);
            PLOT (X1,Y1-0.5,2);
            PLOT (X1-0.85,Y1-0.5,2);
            CIRCL(X1-0.85,Y1-0.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-1.85,Y1-0.5,2);
            CIRCL(X1-1.85,Y1-0.5,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-3.00,Y1-0.5,2);
            PLOT (X1-3.0,Y1-1.0,2);
            X1 = X1 - 3.0;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label1080:
            X1 = X - 0.5;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 1.0 - 0.5*IX1 + 0.5*K1;
            PLOT (X1,Y1,2);
            PLOT (X1,Y1-1.0,2);
            PLOT (X1-1.35,Y1-1.0,2);
            CIRCL(X1-1.35,Y1-1.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-2.35,Y1-1.0,2);
            CIRCL(X1-2.35,Y1-1.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-3.35,Y1-1.0,2);
            CIRCL(X1-3.35,Y1-1.0,0.0,180.0,0.15,0.15,0.0);
            PLOT (X1-4.50,Y1-1.0,2);
            X1 = X1 - 4.5;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label1200:
            X1 = X - XX - 0.5*IX1;
            Y1 = Y - 3.0;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 1.5 - 0.5*IX1;
            PLOT (X1,Y1,2);
            goto label7000;
            
        label2000:
            if (K1 == 0) goto label2200;
            Y1 = Y - 2.0;
            //goto label(2010,2020,2050,2090,2140),
            if(IX1 == 1)        goto label2010;
            if(IX1 == 2)        goto label2020;
            if(IX1 == 3)        goto label2050;
            if(IX1 == 4)        goto label2090;
            if(IX1 == 5)        goto label2140;

        label2010:
            X1 = X + 1.0;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-0.5,2);
            X1 = X1 - 0.5;
            goto label7000;
            
        label2020:
            //goto label(2030,2040),K1
            if(K1 == 1)        goto label2030;
            if(K1 == 2)        goto label2040;
            
        label2030:
            X1 = X + 1.0;
            PLOT (X1,Y1,3);
            PLOT (X1-0.5,Y1,2);
            PLOT (X1-0.5,Y1-0.5,2);
            X1 = X1 - 0.5;
            Y1 = Y1 - 0.5;
            goto label7000;
            
        label2040:
            X1 = X + 0.5;
            PLOT (X1,Y1,3);
            PLOT (X1-1.0,Y1,2);
            PLOT (X1-1.0,Y1-0.5,2);
            X1 = X1 - 1.0;
            Y1 = Y1 - 0.5;
            goto label7000;
            
        label2050:
            //goto label(2060,2070,2080),K1
            if(K1 == 1)        goto label2060;
            if(K1 == 1)        goto label2070;
            if(K1 == 1)        goto label2080;
            
        label2060:
            X1 = X + 1.5;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.0,2);
            PLOT (X1-0.5,Y1-1.0,2);
            X1 = X1 - 0.5;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label2070:
            X1 = X + 1.0;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-0.5,2);
            PLOT (X1-1.0,Y1-0.5,2);
            PLOT (X1-1.0,Y1-1.0,2);
            X1 = X1 - 1.0;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label2080:
            X1 = X + 0.5;
            PLOT (X1,Y1,3);
            PLOT (X1-1.5,Y1,2);
            PLOT (X1-1.5,Y1-1.0,2);
            X1 = X1 - 1.5;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label2090:
            //goto label(2100,2110,2120,2130),K1
            if(IX1 == 1)        goto label2100;
            if(IX1 == 2)        goto label2110;
            if(IX1 == 3)        goto label2120;
            if(IX1 == 4)        goto label2130;
            
        label2100:
            X1 = X + 2.0;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.0,2);
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label2110:
            X1 = X + 1.5;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.0,2);
            PLOT (X1-0.5,Y1-1.0,2);
            X1 = X1 - 0.5;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label2120:
            X1 = X + 1.0;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-0.5,2);
            PLOT (X1-1.0,Y1-0.5,2);
            PLOT (X1-1.0,Y1-1.0,2);
            X1 = X1 - 1.0;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label2130:
            X1 = X + 0.5;
            PLOT (X1,Y1,3);
            PLOT (X1-1.5,Y1,2);
            PLOT (X1-1.5,Y1-1.0,2);
            X1 = X1 - 1.5;
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label2140:
            //goto label(2150,2160,2170,2180,2190),
            if(K1 == 1)     goto label2150;
            if(K1 == 2)     goto label2160;
            if(K1 == 3)     goto label2170;
            if(K1 == 4)     goto label2180;
            if(K1 == 5)     goto label2190;
            
        label2150:
            X1 = X + 2.5;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.5,2);
            Y1 = Y1 - 1.5;
            goto label7000;
            
        label2160:
            X1 = X + 2.0;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.5,2);
            PLOT (X1-0.5,Y1-1.5,2);
            X1 = X1 - 0.5;
            Y1 = Y1 - 1.5;
            goto label7000;
            
        label2170:
            X1 = X + 1.5;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.0,2);
            PLOT (X1-1.0,Y1-1.0,2);
            PLOT (X1-1.0,Y1-1.5,2);
            X1 = X1 - 1.0;
            Y1 = Y1 - 1.5;
            goto label7000;
            
        label2180:
            X1 = X + 1.0;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-0.5,2);
            PLOT (X1-1.5,Y1-0.5,2);
            PLOT (X1-1.5,Y1-1.5,2);
            X1 = X1 - 1.5;
            Y1 = Y1 - 1.5;
            goto label7000;
            
        label2190:
            X1 = X + 0.5;
            PLOT (X1,Y1,3);
            PLOT (X1-2.0,Y1,2);
            PLOT (X1-2.0,Y1-1.5,2);
            X1 = X1 - 2.0;
            Y1 = Y1 - 1.5;
            goto label7000;
            
        label2200:
            X1 = X + XX + 0.5*IX1;
            Y1 = Y - 3.0;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 0.5 - 0.5*IX1;
            PLOT (X1,Y1,2);
            goto label7000;

        label3000:
            if (K1 == 0) goto label3200;
            //goto label(3010,3020,3050,3090,3140),
            if(IX1 == 1)        goto label3010;
            if(IX1 == 2)        goto label3020;
            if(IX1 == 3)        goto label3050;
            if(IX1 == 4)        goto label3090;
            if(IX1 == 5)        goto label3140;
            
        label3010:
            X1 = X + 1.0;
            Y1 = Y - 3.0;
            PLOT (X1,Y1,3);
            PLOT (X1-0.5,Y1,2);
            X1 = X1 - 0.5;
            goto label7000;
            
        label3020:
            //goto label(3030,3040),K1
            if(K1 == 1)        goto label3010;
            if(K1 == 2)        goto label3040;
            
        label3030:
            X1 = X - 1.0;
            Y1 = Y - 3.5;
            goto label7000;
            
        label3040:
            X1 = X - 2.0;
            Y1 = Y - 3.0;
            goto label7000;
            
        label3050:
            //goto label(3060,3070,3080),K1
            if(K1 == 1)        goto label3060;
            if(K1 == 2)        goto label3070;
            if(K1 == 3)        goto label3080;
            
        label3060:
            X1 = X + 1.0;
            Y1 = Y - 3.5;
            PLOT (X1,Y1,3);
            PLOT (X1-0.5,Y1,2);
            X1 = X1 - 0.5;
            goto label7000;
            
        label3070:
            X1 = X - 0.75;
            Y1 = Y - 3.5;
            goto label7000;
            
        label3080:
            X1 = X - 1.75;
            Y1 = Y - 3.0;
            goto label7000;
            
        label3090:
            //goto label(3100,3110,3120,3130),K1
            if(IX1 == 1)        goto label3100;
            if(IX1 == 2)        goto label3110;
            if(IX1 == 3)        goto label3120;
            if(IX1 == 4)        goto label3130;
            
        label3100:
            X1 = X + 2.0;
            Y1 = Y - 4.0;
            goto label7000;
            
        label3110:
            X1 = X - 1.5;
            Y1 = Y - 3.5;
            goto label7000;
            
        label3120:
            X1 = X + 1.0;
            Y1 = Y - 3.0;
            goto label7000;
            
        label3130:
            X1 = X - 0.5;
            Y1 = Y - 2.5;
            goto label7000;
            
        label3140:
            //goto label(3150,3160,3170,3180,3190),K1
            if(K1 == 1)        goto label3150;
            if(K1 == 1)        goto label3160;
            if(K1 == 2)        goto label3170;
            if(K1 == 3)        goto label3180;
            if(K1 == 5)        goto label3190;
            
        label3150:
            X1 = X - 2.5;
            Y1 = Y - 4.5;
            goto label7000;
            
        label3160:
            X1 = X + 2.0;
            Y1 = Y - 4.0;
            goto label7000;
            
        label3170:
            X1 = X - 1.5;
            Y1 = Y - 3.5;
            
        label3180:
            X1 = X + 1.0;
            Y1 = Y - 3.0;
            goto label7000;
            
        label3190:
            X1 = X - 0.5;
            Y1 = Y - 2.5;
            goto label7000;
            
        label3200:
            X1 = X + XX + 0.5*IX1;
            Y1 = Y - 2.5;
            PLOT (X1,Y1,3);
            Y1 = Y1 - 0.5 - 0.5*IX1;
            PLOT (X1,Y1,2);
            goto label7000;

        label4000:
            if (K1 == 0) goto label4200;
            //goto label(4010,4020,4050,4090,4140),IX1
            if(IX1 == 1)        goto label4010;
            if(IX1 == 2)        goto label4020;
            if(IX1 == 3)        goto label4050;
            if(IX1 == 4)        goto label4090;
            if(IX1 == 5)        goto label4140;
            
        label4010:
            X1 = X - 4.0;
            Y1 = Y - 3.0;
            goto label7000;
            
        label4020:
            //goto label(4030,4040),K1
            if(K1 == 1)        goto label4040;
            if(K1 == 2)        goto label4030;
            
        label4030:
            X1 = X - 4.0;
            Y1 = Y - 3.0;
            goto label7000;
            
        label4040:
            X1 = X - 5.0;
            Y1 = Y - 2.5;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-0.5,2);
            NEWPEN(3);
            Y1 = Y1 - 0.5;
            goto label7000;
            
        label4050:
            //goto label(4060,4070,4080),K1
            if(IX1 == 1)        goto label4060;
            if(IX1 == 2)        goto label4070;
            if(IX1 == 3)        goto label4080;
            
        label4060:
            X1 = X - 4.0;
            Y1 = Y - 3.5;
            goto label7000;
            
        label4070:
            X1 = X - 5.0;
            Y1 = Y - 3.0;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-0.5,2);
            NEWPEN(3);
            Y1 = Y1 - 0.5;
            goto label7000;
            
        label4080:
            X1 = X - 6.0;
            Y1 = Y - 2.5;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.0,2);
            NEWPEN(3);
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label4090:
            //goto label(4100,4110,4120,4130),K1
            if(K1 == 1)        goto label4100;
            if(K1 == 2)        goto label4110;
            if(K1 == 3)        goto label4120;
            if(K1 == 4)        goto label4130;
            
        label4100:
            X1 = X - 4.0;
            Y1 = Y - 4.0;
            goto label7000;
            
        label4110:
            X1 = X - 5.0;
            Y1 = Y - 3.5;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-0.5,2);
            NEWPEN(3);
            Y1 = Y1 - 0.5;
            goto label7000;
            
        label4120:
            X1 = X - 6.0;
            Y1 = Y - 3.0;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.0,2);
            NEWPEN(3);
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label4130:
            X1 = X - 7.0;
            Y1 = Y - 2.5;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.5,2);
            NEWPEN(3);
            Y1 = Y1 - 1.5;
            goto label7000;
            
        label4140:
            //goto label(4150,4160,4170,4180,4190),K1
            if(K1 == 1)        goto label4150;
            if(K1 == 2)        goto label4160;
            if(K1 == 3)        goto label4170;
            if(K1 == 4)        goto label4180;
            if(K1 == 5)        goto label4190;
            
        label4150:
            X1 = X - 4.5;
            Y1 = Y - 4.5;
            goto label7000;
            
        label4160:
            X1 = X - 5.5;
            Y1 = Y - 4.0;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-0.5,2);
            NEWPEN(3);
            Y1 = Y1 - 0.5;
            goto label7000;
            
        label4170:
            X1 = X - 6.5;
            Y1 = Y - 3.5;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.0,2);
            NEWPEN(3);
            Y1 = Y1 - 1.0;
            goto label7000;
            
        label4180:
            X1 = X - 7.5;
            Y1 = Y - 3.0;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-1.5,2);
            NEWPEN(3);
            Y1 = Y1 - 1.5;
            goto label7000;
            
        label4190:
            X1 = X - 8.5;
            Y1 = Y - 2.5;
            if (!QANZ && QENTW) NEWPEN(1);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-2.0,2);
            NEWPEN(3);
            Y1 = Y1 - 2.0;
            goto label7000;
            
        label4200:
            X1 = X + XX + 0.5*IX1;
            Y1 = YK1 + 3.0;
            goto label7000;

        label5000:
            Y1 = Y - 4.0;
            if (J == KOMP1 && KOMP2 == 0) X1 = X - 2.5;
            if (J == KOMP1 && KOMP2 == 0) goto label7000;
            if (J == KOMP1 && KOMP2 > 0) X1 = X - 2.0;
            if (J == KOMP1 && KOMP2 > 0) goto label7000;
            Y1 = Y - 4.5 - 0.5*IX1;
            if (K1 == 0) X1 = X+XX+0.5*IX1;
            if (K1 == 0) goto label7000;
            Y1 = Y - 4.5 - 0.5*IX1 + 0.5*K1;
            DX = 0.0;
            if (QPLOT[J]) DX = 0.5;
            
            //goto label(5010,5020,5030,5040),IX1
            if(IX1 == 1)        goto label5010;
            if(IX1 == 2)        goto label5020;
            if(IX1 == 3)        goto label5030;
            if(IX1 == 4)        goto label5040;
            
        label5010:
            X1 = X + 1.5 - DX;
            goto label7000;
            
        label5020:
            if (K1 == 1) X1 = X+1.5-DX;
            if (K1 == 2) X1 = X+0.5-DX;
            goto label7000;
            
        label5030:
            if (K1 == 1) X1 = X + 1.5 - DX;
            if (K1 == 2) X1 = X + 0.5 - DX;
            if (K1 == 3) X1 = X - 0.5 - DX;
            goto label7000;
            
        label5040:
            if (K1 == 1) X1 = X + 2.0 - DX;
            if (K1 == 2) X1 = X + 1.0 - DX;
            if (K1 == 3) X1 = X - DX;
            if (K1 == 4) X1 = X - 1.0 - DX;
            goto label7000;
            
        label6000:
            X1 = Convert.ToDouble(FELD[29]);
            Y1 = Convert.ToDouble(FELD[30]);

        label7000:
            X10 = X + XX + 0.5*IX1 - 0.5*K1;
            if (K7 == 0) goto label7100;
            YY = YYTURB[J];

            NEWPEN(3);
            if (K1 == 0) goto label7060;
            if (!QANZ) goto label7010;
            //goto label(7010,7020),IX1
            if(IX1 == 1)        goto label7010;
            if(IX1 == 2)        goto label7020;
            
        label7010:
            AROHD(X+1.0,Y+0.35,X+1.0,Y+1.5,0.2,0.0,16);
            AROHD(X-1.0,Y+0.35,X-1.0,Y+1.5,0.2,0.0,16);
            PLOT (X-0.15,Y+1.5,2);
            CIRCL(X-0.15,Y+1.5,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+XX+0.5*IX1-0.5,Y+1.5,2);
            goto label7050;
            
        label7020:
            //goto label(7030,7040),K1
            if(K1 == 1)        goto label7030;
            if(K1 == 2)        goto label7040;
            
        label7030:
            PLOT (X-1.0,Y+0.35,3);
            PLOT (X-1.0,Y+1.50,2);
            PLOT (X-0.15,Y+1.5,2);
            CIRCL(X-0.15,Y+1.5,180.0,0.0,0.15,0.15,0.0);
            PLOT (X+1.0,Y+1.5,2);
            AROHD(X+1.0,Y+1.5,X+1.0,Y+YY-0.5,0.2,0.0,16);
            goto label7050;
            
        label7040:
            AROHD(X+0.5,Y+0.2,X+0.5,Y+YY-0.5,0.2,0.0,16);
            
        label7050:
            PLOT (X+XX+0.5*IX1-0.5,Y+YY-0.5,2);
            PLOT (XDUE1,Y+YY-0.5,2);
            PLOT (XDUE1,YDUE1,2);
            goto label7100;
            
        label7060:
            PLOT (X+1.0,Y+3.5,3);
            PLOT (X+1.0,YDUE1,2);
            PLOT (XDUE1,YDUE1,2);

        label7100:
            if (!QANZ) goto label7200;
            X2 = XE[K4];
            Y2 = YE[K4];
            if (J > IZ1) goto label9000;
            QSPT = true;
            NEWPEN(3);
            PLOT (X1,Y1,3);
            if (X2VOR == 0.0) X2VOR = X1 + 1.0;
            if (IX != 4 && X1 > X2VOR-1.0) PLOT (X2VOR-1.0,Y1,2);
            if (IX != 4 && X1 > X2VOR-1.0) X1 = X2VOR - 1.0;
            if (X2 > XSPT) XVSPT = X2;
            if (X1 > XSPT+2.5 && X2 > XSPT+2.5) goto label7110;
            if (X1 < XSPT-4.0 && X2 < XSPT-4.0) goto label7110;
            Y1 = YSPT + 1.5 + 4.5;
            PLOT (X1,Y1,2);
            Y1 = Y1 + 4.5;
            QSPT = false;
            
        label7110:
            if (Y1VOR == 0.0) Y1VOR = Y1 - 4.5;
            if (Y1-4.5 < Y1VOR) Y1VOR = Y1-4.5;
            Y1 = Y1VOR + 4.5;
            PLOT (X1,Y1VOR,2);
            NEWPEN(1);
            if (KREUZ == 1) goto label7120;
            PLOT (X1-0.5,Y1-4.3,3);
            PLOT (X1-0.5,Y1-0.5,2);
            AROHD(X1-0.8,Y1-2.3,X1,Y1-2.3,0.2,0.0,16);
            if (KREUZ == 2) goto label7120;
            NDECP = 4;
            if (Convert.ToDouble(FELD[1]) >= 10.0) NDECP = 3;
            if (Convert.ToDouble(FELD[1]) >= 100.0) NDECP = 2;
            if (Convert.ToDouble(FELD[1]) >= 1000.0) NDECP = 1;
            
            NUMBER (X1-0.65,Y1-4.2,XH,Convert.ToDouble(FELD[1]),90.0,NDECP);
            NUMBER (X1-0.65,Y1-2.1,XH,Convert.ToDouble(FELD[2]),90.0,NDECTE);
            XP = X1 - 0.15;
            YP = Y1 - 4.2;
            XW = 90.0;
            if (QENGL) UWA135(Convert.ToDouble(FELD[3]),XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,Convert.ToDouble(FELD[3]),XW,NDECM);
            if(Convert.ToDouble(FELD[4]) > 0.0)
                NUMBER (X1-.15,Y1-2.1,XH,Convert.ToDouble(FELD[4]),90.0,NDECTE) ;

            if(Convert.ToDouble(FELD[4]) <= 0.0)
                NUMBER (X1-.15,Y1-2.1,XH,-Convert.ToDouble(FELD[4]),90.0,NDECN) ;
            
        label7120:
            Y1 = Y1 - 4.5;
            if (X1 < XSPT) X1VOR = X1;
            if (QSPT) goto label7200;
            NEWPEN(3);
            PLOT (X1,Y1,3);
            PLOT (X2,Y1,2);
            X1 = X2;

        label7200:
            if (!QENTW) goto label7300;
            NEWPEN(1);
            if (J > IZ1) goto label9100;
            if (QANZ) NEWPEN(3);
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-4.5,2);
            NEWPEN(1);
            if (KREUZ == 1) goto label7210;
            PLOT (X1-0.5,Y1-4.3,3);
            PLOT (X1-0.5,Y1-0.5,2);
            AROHD(X1-0.8,Y1-2.3,X1,Y1-2.3,0.2,0.0,16);
            if (KREUZ == 2) goto label7210;
            NDECP = 4;
            if (Convert.ToDouble(FELD[5]) >= 10.0) NDECP = 3;
            if (Convert.ToDouble(FELD[5]) >= 100.0) NDECP = 2;
            if (Convert.ToDouble(FELD[5]) >= 1000.0) NDECP = 1;
            NUMBER (X1-0.65,Y1-4.2,XH,Convert.ToDouble(FELD[5]),90.0,NDECP);
            NUMBER (X1-0.65,Y1-2.1,XH,Convert.ToDouble(FELD[6]),90.0,NDECTE);
            XP = X1 - 0.15;
            YP = Y1 - 4.2;
            XW = 90.0;
            if (QENGL) UWA135(Convert.ToDouble(FELD[7]),XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,Convert.ToDouble(FELD[7]),XW,NDECM);
            NUMBER (X1-0.15,Y1-2.1,XH,Convert.ToDouble(FELD[8]),90.0,NDECTE);
            
        label7210:
            Y1 = Y1 - 4.5;
            if (QANZ) goto label7300;
            NEWPEN(1);
            if (X2VOR == 0.0) goto label7215;
            PLOT (X1,Y1,3);
            PLOT (X1,Y1-4.5,2);
            PLOT (X1+1.0,Y1-4.5,2);
            goto label7300;
            
        label7215:
            Y1 = Y1 + 4.5;
            if (NRABC[NENTW] != 0) goto label7230;
            
            for(LL = 4; LL <= 26; LL++) //DO 7220 LL = 4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[NENTW] = LL;
                goto label7230;
            }   //7220 CONTINUE
            
        label7230:
            LL = NRABC[NENTW];
            AROHD(X1,Y1-4.5,X1,Y1-4.7,0.2,0.0,16);
            CIRCL(X1+0.25,Y1-4.95,0.0,360.0,0.25,0.25,0.0);
            SYMBOL (X1-0.05,Y1-5.05,XH,ABCD[LL],0.0,1);
            
        label7300:
            if (!QANZ) goto label7400;
            NEWPEN(3);
            PLOT (X1,Y1,3);
            Y2PL = Y2;
            if (X2VOR == 0.0) X2VOR = X1 + 1.0;
            if (X1+0.5 >= X2VOR) Y2PL = Y2VOR + 0.5;
            if (X1 <= X2-2.9 && X1 < XE[K4+1]+1.0) Y2PL = Y2PL + 0.5;
            if (X1 <= X2-5.8 && X1 < XE[K4+1]+1.0) Y2PL = Y2PL + 0.5;
            L = NL + 1;
            if (NL == 0) L = 0;
            Y2VOR = Y2PL + 0.8*L;
            if (Y2VOR < YSPT && X1 > XSPT) XVSPT = X1;
            if (X2VOR-X1 <= 3.5) Y2VOR = Y2VOR + YNSPT;
            YNSPT = 0.0;
            PLOT (X1,Y2VOR,2);
            PLOT (X2,Y2VOR,2);
            PLOT (X2,Y2,2);
            X2VOR = X2;

        label7400:
            if (NL == 0) goto label8000;
            if (!QANZ) goto label7500;
            
            for(L = 1; L <= NL; L++) //DO 7430 L = 1,NL
            {
                NEWPEN(3);
                if (Math.Abs(X1VOR-X2) < 2.91) goto label7410;
                AROHD(X2,Y2+0.8*L,X2+2.4,Y2+0.8*L,0.2,0.0,16);
                NEWPEN(1);
                CIRCL(X2+2.9,Y2+0.8*L,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X2+2.6,Y2+0.8*L-0.1,XH,FELD[L+16],0.0,1);
                if (KREUZ > 0) continue;    // goto label7430;
                XP = X2 + 0.2;
                YP = Y2+0.8*L+0.1;
                XW = 0.0;
                F = Convert.ToDouble(FELD[L+8]);
                if (QENGL) UWA135(F,XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,F,XW,NDECM);
                if(F < 10.0 && QENGL)SYMBOL (999.0,999.0,XH, " LB/HR",0.0,6);
                if(F < 10.0 && QSI)SYMBOL (999.0,999.0,XH, " KG/S",0.0,5);
                if(F < 10.0&& QTECHN)SYMBOL (999.0,999.0,XH," T/H",0.0,4);
                if (F >= 10.0&& QENGL) SYMBOL (X2+0.2,Y2+0.8*L-0.3,XH, "LB/HR",0.0,5);
                if (F >= 10.0&& QSI) SYMBOL (X2+0.2,Y2+0.8*L-0.3,XH, "KG/S",0.0,4);
                if (F >= 10.0&& QTECHN) SYMBOL (X2+0.2,Y2+0.8*L-0.3,XH, "T/H",0.0,3);
                continue;       // goto label7430;
                
            label7410:
                AROHD(X2,Y2+0.8*L,X2-2.4,Y2+0.8*L,0.2,0.0,16);
                NEWPEN(1);
                CIRCL(X2-2.4,Y2+0.8*L,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X2-2.7,Y2+0.8*L-0.1,XH,FELD[L+16],0.0,1);
                if (KREUZ > 0) goto label7420;
                XP = X2 - 2.2;
                YP = Y2+0.8*L+0.1;
                XW = 0.0;
                F = Convert.ToDouble(FELD[L+8]);
                if (QENGL) UWA135(F,XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,F,XW,NDECM);
                if(F < 10.0 && QENGL)SYMBOL (999.0,999.0,XH, " LB/HR",0.0,6);
                if(F < 10.0 && QSI)SYMBOL (999.0,999.0,XH," KG/S",0.0,5);
                if(F < 10.0&& QTECHN)SYMBOL (999.0,999.0,XH," T/H",0.0,4);
                if (F >= 10.0 && QENGL)
                    SYMBOL (X2-2.2,Y2+0.8*L-0.3,XH,"LB/HR",0.0,5);
                if (F >= 10.0 && QSI)
                    SYMBOL (X2-2.2,Y2+0.8*L-0.3,XH,"KG/S ",0.0,5);
                if (F >= 10.0 && QTECHN)
                    SYMBOL (X2-2.2,Y2+0.8*L-0.3,XH,"T/H  ",0.0,5);
                
            label7420:
                YNSPT = 0.8 + 0.8*L;
            }   //7430 CONTINUE
            goto label8000;
            
        label7500:
            NEWPEN(3);
            if (J > IZ1) goto label9200;
            if (Y2VOR == 0.0 || X1+1.0 < X2VOR) Y2VOR = 7.5/FACT + 5.0;
            if (X1 < XSPT-3.4 || X1 > XSPT+2.5) goto label7510;
            if (Y2VOR < YSPT+5.8) Y2VOR = YSPT + 5.8;
            
        label7510:
            AROHD(X1,Y1,X1,Y1-2.5,0.2,0.0,16);
            NEWPEN(1);
            if (KREUZ > 0) goto label7520;
            XP = X1 - 0.1;
            YP = Y1 - 2.3;
            XW = 90.0;
            if (QENGL) UWA135(Convert.ToDouble(FELD[9]),XP,YP,XH,XW);
            if (!QENGL) NUMBER (XP,YP,XH,Convert.ToDouble(FELD[9]),XW,NDECM);
            if (QENGL) SYMBOL (999.0,999.0,XH, " LB/HR",XW,6);
            if (QSI) SYMBOL (999.0,999.0,XH," KG/S",XW,5);
            if (QTECHN) SYMBOL (999.0,999.0,XH, " T/H",XW,4);
            
        label7520:
            for(L = 1; L <= NL; L++) //DO 7530 L=1,NL
            {
                CIRCL(X1+0.25,Y1-2.25-0.5*L,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X1-0.05,Y1-2.35-0.5*L,XH,FELD[L+16],0.0,1);
            }   //7530 CONTINUE
            goto label8000;

        label7600:
            if (NL == 0) goto label7700;
            YY = YYTURB[J];
            Y1 = Y + YY;
            XP1 = X - 2.5 - XX - 0.5*IX1;
            if (IX == 2) XP1 = X - 4.0;
            YP = Y1 - 2.3;
            XW = 90.0;
            
            for(L = 1; L <= NL; L++) //DO 7610 L = 1,NL
            {
                X1 = XP1 - 0.6*L;
                NEWPEN(3);
                if (L <= NL) AROHD(X1,Y1,X1,Y1-2.5,0.2,0.0,16);
                if (L > NL) AROHD(X1,Y1-2.5,X1,Y1,0.2,0.0,16);
                NEWPEN(1);
                CIRCL(X1+0.25,Y1-2.75,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X1-0.1,Y1-2.85,XH,FELD[L+16],0.0,1);
                if (KREUZ > 0) continue;    // goto label7610;
                XP = X1 - 0.1;
                F = Convert.ToDouble(FELD[L+8]);
                if (QENGL) UWA135(F,XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,F,XW,NDECM);
                if(F < 10.0 && QENGL)SYMBOL (999.0,999.0,XH," LB/HR",XW,6);
                if(F < 10.0 && QSI)SYMBOL (999.0,999.0,XH," KG/S",XW,5);
                if(F < 10.0&& QTECHN)SYMBOL (999.0,999.0,XH," T/H",XW,4);
                if (F >= 10.0&& QENGL)SYMBOL (X1+0.4,Y1-2.3,XH,"LB/HR",XW,5);
                if (F >= 10.0&& QSI) SYMBOL (X1+0.4,Y1-2.3,XH,"KG/S",XW,4);
                if (F >= 10.0&& QTECHN) SYMBOL (X1+0.4,Y1-2.3,XH,"T/H",XW,3);
            }   //7610 CONTINUE

            NEWPEN(3);
            PLOT (XP1,Y1,3);
            PLOT (XP1-0.6*NX-0.6,Y1,2);
            NEWPEN(1);
        
        label7700:
            if (NX <= NL) goto label8000;
            if (KT7 != 6 && KT7 != 9) goto label8000;
            X1 = X + XX + 0.5*IX1;
            L2 = NL+1;
            
            for(L = L2; L <= NX; L++) //DO 7710 L = L2,NX
            {
                Y1 = Y - 3.0 - 0.6*L;
                NEWPEN(3);
                AROHD(X1+2.5,Y1,X1,Y1,0.2,0.0,16);
                NEWPEN(1);
                CIRCL(X1+3.0,Y1,0.0,360.0,0.25,0.25,0.0);
                SYMBOL (X1+2.7,Y1-0.1,XH,FELD[L+16],0.0,1);
                if (KREUZ > 0) continue;
                F = Convert.ToDouble(FELD[L+8]);
                XW = 0.0;
                XP = X1 + 0.3;
                YP = Y1 + 0.2;
                if (QENGL) UWA135(F,XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,F,XW,NDECM);
                if(F < 10.0 && QENGL) SYMBOL (999.0,999.0,XH," LB/HR",0.0,6);
                if(F < 10.0 && QSI) SYMBOL (999.0,999.0,XH," KG/S",0.0,5);
                if(F < 10.0 && QTECHN) SYMBOL (999.0,999.0,XH," T/H",0.0,4);
                if (F >= 10.0 && QENGL) SYMBOL (X2-2.3,Y2+0.8*L-0.3,XH,"LB/HR",0.0,5);
                if (F >= 10.0 && QSI) SYMBOL (X2-2.3,Y2+0.8*L-0.3,XH,"KG/S",0.0,4);
                if (F >= 10.0 && QTECHN) SYMBOL (X2-2.3,Y2+0.8*L-0.3,XH,"T/H",0.0,3);
            }   //7710 CONTINUE
            
        label8000:
            if (NSTB == 0) goto label8010;
            if (J == KOMP1 && KOMP2 > 0) goto label8010;
            if (IX == 1 || IX == 3 || IX == 4) goto label8010;
            NEWPEN(3);
            if (NSTB == -1) AROHD(X,Y-3.0,X10,Y-3.0,0.2,0.0,16);
            if (NSTB == -1) goto label8010;
            PLOT (X,Y-3.0,3);
            PLOT (X10,Y-3.0,2);
            
        label8010:
            if (!QANZ) return;
            X1VOR = X2;
            if (X1 < X1VOR) X1VOR = X1;
            return;
            
        label9000:
            IX3 = (int)(NANZ[K4]);
            if (NRABC[IX3] > 0) goto label9020;
            
            for(LL = 4; LL <= 26; LL++) //DO 9010 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[IX3] = LL;
                goto label9020;
            }   //9010 CONTINUE
            
        label9020:
            LL = NRABC[IX3];
            A1 = Convert.ToDouble(ABCD[LL]);
            NEWPEN(3);
            PLOT (X2,Y2,3);
            X2 = X2 + 0.5;
            PLOT (X2,Y2,2);
            NEWPEN(1);
            UWA134(X2+0.5,Y2,0.25,0.2,A1.ToString());
            NL = NL + 1;
            FELD[9] = FELD[3];
            FELD[NL+16] = A1.ToString();
            X2 = 0.0;
            if (!QENTW) goto label9200;
            
        label9100:
            if (NRABC[NENTW] != 0) goto label9130;
            for(LL = 4; LL <= 26; LL++) //DO 9110 LL=4,26
            {
                if (QABC[LL]) continue;
                QABC[LL] = true;
                NRABC[NENTW] = LL;
                goto label9120;
            }   //9110 CONTINUE
            
        label9120:
            LL = NRABC[NENTW];
            if (NL == 0) goto label9130;
            goto label9200;

        label9130:
            A1 = Convert.ToDouble(ABCD[LL]);
            NEWPEN(1);
            PLOT (X1,Y1,3);
            Y1 = Y1 - 0.5*(IX1-K1);
            PLOT (X1,Y1,2);
            AROHD(X1,Y1,X1,Y1-4.5,0.2,0.0,16);
            if (KREUZ == 1) return;
            UWA130(X1,Y1-2.0,3,1);
            if (KREUZ == 2) return;
            UWA131(X1, Y1 - 2.0, Convert.ToDouble(FELD[5]), Convert.ToDouble(FELD[6]), Convert.ToDouble(FELD[7]), Convert.ToDouble(FELD[8]), 3, 1);
            return;
            
        label9200:
            NEWPEN(3);
            PLOT (X1,Y1,3);
            Y1 = Y1 - 0.5*(IX1-K1);
            PLOT (X1,Y1,2);
            DY = 4.5;
            if (QENTW) DY = 9.0;
            AROHD(X1,Y1,X1,Y1-DY,0.2,0.0,16);
            NEWPEN(1);
            
            for(LL = 1; LL <= NL; LL++) //DO 9210 LL=1,NL
                UWA134(X1+0.25,Y1-DY-0.5*LL+0.25,0.25,0.2,FELD[LL+16]);  ///9210 CONTINUE
            if (KREUZ == 1) return;
            UWA130(X1,Y1-2.0,3,1);
            if (QENTW) UWA130(X1,Y1-DY+2.5,3,1);
            if (KREUZ == 2) return;
            UWA131(X1, Y1 - 2.0, Convert.ToDouble(FELD[1]), Convert.ToDouble(FELD[2]), Convert.ToDouble(FELD[9]), Convert.ToDouble(FELD[4]), 3, 1);
            if (QENTW) UWA131(X1, Y1 - DY + 2.5, Convert.ToDouble(FELD[5]), Convert.ToDouble(FELD[6]), Convert.ToDouble(FELD[7]), Convert.ToDouble(FELD[8]), 3, 1);
            return;
        }   //END

        
        static void UWA146(int J1)
        {
            //ENTRY KONDUS [J1]
            //LOGICAL QABC,QPLOT,QANZDU,QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /BILD/ ABC[8], ABCD(26), QABC(26), NRABC(160), XE[20] ,
            //1 YE[20], XDX, XDXT, XT, XX, XH, X, XK1,
            //2 XKONDK, XUMPMP, Y, YDY, YT, FACT, FACTS ,
            //3 NN(25), NTRB[7], NANZ[20], NANZDU[2], KANZ ,
            //4 IFLUT[7], KF, YWELLE, NANZEN, KSTB, ISTB ,
            //5 NK2[15], JKT2[15], YK1, NN04
            //COMMON /KONDER/ GKONDA[4],GKONDT[4],TKONDA[4],TKONDT[4],
            //1 PKONDA[4],PKONDT[4],DTKONA[4],DTKONT[4],
            //2 TKONAA[4],TKONAT[4],DKONDA[4],DKONDT[4]
            //COMMON /KONDPL/ KKONDR,ITKW,IMKW,TKWEIN,GKWEIN,IDAMPF,XDAMPF,NN4
            //COMMON /LEITPL/ LPLOT[7],LLPLOT[7],QPLOT[7],XTURB[7],XXTURB[7],
            //1 YTURB[7],YYTURB[7],QANZDU
            //COMMON /PRINT / IWR,TX0,TX13,TX14,TX15,TX16,TX17,TX18
            //COMMON /KONDTR/ UEEP[3],ELEP[3],PELEP[3]
            //COMMON /PLOTYP/ LTYP(60)
            //COMMON /LOGIK/ QENGL,QSI,QTECHN,QAMI,QTEXT
            //COMMON /NDEC/ NDECM,NDECTE,NDECN,KREUZ
            double X1 = 0, Y1 = 0, H = 0, P = 0, XP = 0, YP = 0, XW = 0;
            int NDECP = 0, NL = 0, M = 0, NLL = 0, MM = 0;

            int L = 0, LL = 0, L1 = 0, L2 = 0, IP = 0;
            
            if (INENDE <= IHENDE) return;
            LL = NRMVAE[J1] + 100;
            L2 = LL;
            IP = 0;
            L1 = IHENDE + 1;
            
        label100:
            for(L = L1; L <= INENDE; L++) //DO 1500 L=L1,INENDE
            {
                if (NN1[L] != LL) continue;
                if (NN2[L] == 0) continue;
                if (LTYP[L] == 6) continue;
                LL = NN2[L];
                
                A1 = PLTG[LL]*TX2;
                A2 = ELTG[LL]*TX1;
                A3 = GLTG[LL]*TX3;
                A4 = (VISUM(PLTG[LL],ELTG[LL],23)-273.15)*TX0 + TX5;
                
                if (LTYP[L] == 0) goto label200;
                if (LTYP[L] == 3) goto label1000;
                if (NRABC[LL] > 0) goto label1800;
                goto label100;
                
            label200:
                X1 = XT;
                Y1 = YT;
                NEWPEN(1);
                PLOT (X1,Y1,3);
                PLOT (X1-XK1,Y1,2);
                PLOT (X1-XK1,Y1-2.0,2);
                PLOT (X1,Y1-2.0,2);
                PLOT (X1,Y1,2);
                PLOT (X1-XK1/2.0,Y1-2.0,3);
                PLOT (X1-XK1/2.0,Y1-3.0,2);
                
                if (KREUZ == 1) goto label300;
                PLOT (X1-XK1/2.0-1.5,Y1-2.1,3);
                PLOT (X1-XK1/2.0-1.5,Y1-2.9,2);
                AROHD(X1-XK1/2.0-3.5,Y1-2.5,X1-XK1/2.0,Y1-2.5,0.2,0.0,16);
                
            label300:
                if (QTEXT) SYMBOL (X1-XK1/2.0-0.9,Y1-0.6,XH,"CONDENSER",0.0,9);
                if (!QTEXT)
                    SYMBOL (X1-XK1/2.0-1.1,Y1-0.6,XH,"KONDENSATOR",0.0,11);
                
                if (KREUZ > 0) goto label500;
                if (!QENGL) goto label400;
                
                P = A1/0.034532/14.223315;
                NUMBER (X1-XK1/2.0-1.4,Y1-1.0,XH,P,0.0,2);
                SYMBOL (999.0,999.0,XH," IN.HG ABS",0.0,10);
                H = 0.15;
                if (XK1 > 3.8) H = 0.2;
                SYMBOL (X1-XK1/2.0-9*H,Y1-1.4,H,"ELEP ",0.0,5);
                NUMBER (999.0,999.0,H,ELEP[J1],0.0,1);
                SYMBOL (999.0,999.0,H," BTU/LB",0.0,7);
                SYMBOL (X1-XK1/2.0-9*H,Y1-1.8,H,"UEEP ",0.0,5);
                NUMBER (999.0,999.0,H,UEEP[J1],0.0,1);
                SYMBOL (999.0,999.0,H," BTU/LB",0.0,7);
                
            label400:
                NDECP = 4;
                if (A1 >= 10.0) NDECP = 3;
                if (A1 >= 100.0) NDECP = 2;
                if (A1 >= 1000.0) NDECP = 1;
                NUMBER (X1-XK1/2.0-3.5,Y1-2.4,XH,A1,0.0,NDECP);
                NUMBER (X1-XK1/2.0-1.4,Y1-2.4,XH,A2,0.0,NDECTE);
                XP = X1 - XK1/2.0 - 3.5;
                YP = Y1 - 2.9;
                XW = 0.0;
                if (QENGL) UWA135(A3,XP,YP,XH,XW);
                if (!QENGL) NUMBER (XP,YP,XH,A3,XW,NDECM);
                NUMBER (X1-XK1/2.0-1.4,Y1-2.9,XH,A4,0.0,NDECTE);
                
            label500:
                NL = 0;
                A5 = 0.0;
                A6 = 0.0;
                
                for(M = 1; M <= 8; M++) //DO 800 M=1,8
                {
                    if (NBLTG[L,M] == 0) continue;
                    NLL = NBLTG[L,M];
                    NL = NL + 1;
                    A5 = A5 + GLTG[NLL];
                    A6 = A6 + GLTG[NLL]*ELTG[NLL];
                    if (NRABC[NLL] > 0) goto label700;
                    
                    for(MM = 4; MM <= 26; MM++) //DO 600 MM=4,26
                    {
                        if (QABC[MM]) continue;
                        QABC[MM] = true;
                        NRABC[NLL] = MM;
                        goto label700;
                    }   //600 CONTINUE
                    
                label700:
                    MM = NRABC[NLL];
                    ABC[NL] = ABCD[MM];
                }   //800 CONTINUE
                if (NL <= 0) goto label900;
                A7 = 0.0;
                if (A5 > 0.0) A7 = A6/A5*TX1;
                A6 = A5*TX3;
                // UWA132(X1-XK1,Y1-1.6,-0.5,A6,A7,6,0,0,0,1,NL,ABC);
                
            label900:
                X1 = X1 - XK1/2.0;
                Y1 = Y1 - 3.0;
                IP = 0;
                if (NRABC[LL] > 0) goto label1800;
                goto label100;
                
            label1000:
                PLOT (X1,Y1,3);
                PLOT (X1,Y1-0.5,2);
                CIRCL(X1+0.25,Y1-0.75,0.0,360.0,0.25,0.25,0.0);
                AROHD(X1,Y1-0.55,X1,Y1-0.95,0.25,0.25,16);
                PLOT (X1,Y1-1.0,3);
                PLOT (X1,Y1-2.0,2);
                
                if (KREUZ == 1) goto label1100;
                UWA130(X1,Y1-1.5,3,0);
                if (KREUZ == 2) goto label1100;
                UWA131(X1,Y1-1.6,A1,A2,A3,A4,3,0);
                
            label1100:
                Y1 = Y1 - 1.5;
                IP = 1;
                if (NRABC[LL] > 0) goto label1800;
                goto label100;
            }   //1500 CONTINUE
            
            if (L2 == LL) return;
            if (IP == 0) goto label1900;
            if (NRABC[LL] != 0) goto label1800;
            
            for(L = 4; L <= 26; L++) //DO 1700 L=4,26
            {
                if (QABC[L]) continue;
                QABC[L] = true;
                NRABC[LL] = L;
                goto label1800;
            }   //1700 CONTINUE
            
        label1800:
            if (IP == 0) goto label1900;
            L = NRABC[LL];
            A1 = Convert.ToDouble(ABCD[L]);
            // UWA132(X1,Y1,0.3,0.0,0.0,1,0,2,1,1,1,A1);
            return;
            
        label1900:
            LL = J1 - 1;
            L = NTTETB[LL];
            XP = XTURB[L];
            PLOT (X1,Y1,3);
            PLOT (X1,YK1,2);
            PLOT (XP,YK1,2);
            return;
        }   //END


        static void CIRCL (double XPAGE,double YPAGE,double TH0,double THF,double R0,double RF,double DI)
        {
            double XPA, YPA, R1, R2, W1, W2, XM, YM, phi;
            int I5;

            XPA = XPAGE;
            YPA = YPAGE;
            R1 = R0;
            R2 = RF;
            W1 = 2.0*3.14159/360.0*TH0;
            W2 = 2.0*3.14159/360.0*THF;
            POSITN (XPA,YPA);
            XM = XPA - (R1 * Math.Cos(W1));
            YM = YPA - (R2 * Math.Sin(W1));
            phi = THF - TH0;
            I5 = 1;
            if (DI == 0.5) I5 = 2;
            LINMOD(I5);
            BOGEN(ref XM, ref YM, ref phi);
            LINMOD(1);
            return;
        }   //END

        
        static void REGULA(ref double YSOLL,ref double X,ref double Y,ref double Y21,ref double Y22,ref double X21,ref double X22,ref int IREG)
        {
            double FAK = 0;

            if(Y > YSOLL) goto label20;
            if(Y21 != 0.0) goto label10;
            FAK = 1.0;
            goto label11;
            
        label10:
            if(Y > Y21) goto label11;
            FAK = -1.0;
            
        label11:
            Y21 = Y;
            X21 = X;
            X = X + FAK;
            if (X <= 0.0) X = 0.001;
            if(IREG > 0) goto label12;
            if(Y22 == 0.0) goto label110;
            
        label12:
            IREG = 1;
            goto label100;
        
        label20:
            if(Y22 == 0.0) goto label21;
            if(Y < Y22) goto label22;
            FAK = 1.0;
            goto label22;
            
        label21:
            FAK = -1.0;
            
        label22:
            Y22 = Y;
            X22 = X;
            X = X + FAK;
            if (X <= 0.0) X = 0.001;
            if(IREG > 0) goto label100;
            if(Y21 == 0.0) goto label110;
            IREG = 1;
            
        label100:
            X = X21+(YSOLL-Y21)*((X22-X21)/(Y22-Y21));
            
        label110:
            return;
        }   //END

 
        static double DRUCKT (double P1A,double E1A,double P2A,double GA,double E1T,double P2T,double GT,double FAKT)
        {
            double druckt, EPSA, ALFAA = 0, PSIA = 0, ALFAT, P1T, P1TX, EPST, ADP = 0, A111 = 0, EGR, A, B, C;
            int NULBE = 0;
            
            EPSA=P2A/P1A;
            UWA026(ref P1A, ref E1A, EPSA, ref ALFAA, ref PSIA);
            ALFAT=ALFAA*GT/GA *FAKT;
            P1T= Math.Sqrt(((P1A*P1A-P2A*P2A)/Math.Pow((GA/GT),2))+P2T*P2T);
            P1TX = P1T;
            if (E1T == 0.0) E1T=E1A;
            
        label21:
            EPST = P2T/P1T;
            UWA026(ref P1T, ref E1T, 0.2, ref ADP, ref A111);
            ADP = ADP/P1T;
            if (P1T <= 0.0) goto label1;
            Z = Math.Log10(P1T);
            EGR = 26.179*Z+658.063;
            if (EGR > E1T) goto label10;
            
            A = 5.93478;
            B = 0.092;
            C = 0.454;
            goto label11;
            
        label10:
            A = 3.74675;
            B = 0.154;
            C = 0.423;
            
        label11:
            if ((1.0-EPST) > C) goto label12;
            C = Math.Pow((ALFAT*C/ADP),2)+P2T*P2T;
            C = C/B;
            A = P2T*A;
            B = A*A-C;

            if (B <= 0.0)
                goto label1;
            B = Math.Sqrt(B);
            druckt = A-B;
            goto label13;
            
        label1:
            druckt = P1TX;
            return druckt;
            
        label12:
            druckt = ALFAT/ADP;
            
        label13:
            NULBE = NULBE + 1;
            P1T = druckt;
            if (NULBE != 2) goto label21;
            return (druckt);
        }   //END

        
        static void FORERR()
        {
            //ENTRY CHNERR
            //ENTRY CHNXIT
            int tt = 0;
            UWA012();
            UWA005("FEHLER",  tt);
            return;
        }   //END

        
        static double HADCA (double A1,double A2,double A3)
        {
            double hadca, PLOG, ESATT, E1, FI, A, B, C, D;
            I = 1;
            if (A3 > 200.0) I=2;
            PLOG = Math.Log(A1/1000.0);
            ESATT = (0.25273911E-01*PLOG +9.4372086)*PLOG +702.49;
            E1 = A3;
            if (I == 1) E1=A2;
            if (E1 > ESATT) goto label1;
            FI=(E1-ESATT)*0.00274+1.0;
            FI=((ESATT-E1)*1.16+E1-476.4)*FI;
            A = 0.435801;
            B = -0.418658;
            C = -0.017143;
            D = 0.840150;
            goto label2;
            
        label1:
            FI = (-0.00019778*E1+1.0)*E1-434.35;
            A = 0.323687;
            B = -0.167721;
            C = -0.155967;
            D = 0.462500;
            
        label2:
            if (I == 1) goto label3;
            Z = A2/A1;
            hadca = D+Z;
            hadca = ((C*Z+B)*Z+A)/hadca*FI;

            return hadca;

        label3:
            Z = A3/FI;
            hadca = (-Z*D+A)*4.0*C;
            hadca = Math.Sqrt(Math.Pow((Z-B),2)-hadca);
            hadca = (Z-B-hadca)/2.0/C;

            return hadca;
        }   //END


        static int HFIX(double A)
        {
            int hfix = Convert.ToInt32(Math.Floor(A));
            return hfix;
        }   //END

        
        static double PSTR(double ESOLL)
        {
            double T, P, EIST, A, pstr;
            int M = 0;
            T = ESOLL+273.15;
            P = UW0011(T,2);
            EIST = VISUM(P,T,-21);
            A = EIST - ESOLL;
            
        label1:
            T = ESOLL-A+273.15;
            P = UW0011(T,2);
            EIST = VISUM(P,T,-21);
            if (M > 20)     //sw16.WriteLine("",3) ESOLL,EIST;
                sw16.WriteLine("0ITERATION IM PSTR NICHT BEENDET{0}{1}", Math.Round(ESOLL,4).ToString().PadLeft(16), Math.Round(EIST,4).ToString().PadLeft(16));
            if (M > 20) goto label2;
            M = M + 1;
            A1 = EIST-ESOLL;
            A = A + A1;
            if (Math.Abs(ESOLL-EIST) > 0.001) goto label1;
            
        label2:
            pstr = P;
            return pstr;
        }   //END


        static void RH0008(double[,] RTX, double[,] RTY, double RX, int IX, int IY, int IK, int IMIN, int IMAX, ref double RY)
        {
            //DIMENSION RTX(IK,IX),RTY(IK,IY)
            int IA, IE;
            double RA1, RA2;
            if((RTX[IMIN,IX]-RX)*(RX-RTX[IMAX,IX]) >= 0.0) goto label10;
            return;
            
        label10:
            IA=IMIN;
            IE=IMAX;
            
        label20:
            if(RTX[IA,IX] == RX || RTX[IE,IX] == RX || IE-IA == 1)
                goto label40;
            I =(IA+IE)/2;
            if((RTX[I ,IX]-RX)*(RX-RTX[IE,IX]) < 0.0) goto label30;
            IA=I;
            goto label20;
            
        label30:
            IE=I;
            goto label20;
            
        label40:
            if(Math.Abs(RTX[IA,IX]-RX) < Math.Abs(RTX[IE,IX]-RX)) goto label50;
            I =IE;
            goto label60;
            
        label50:
            I =IA;
            
        label60:
            if(I == IMIN) I=I+1;
            if(I == IMAX) I=I-1;
            RA1= (RTY[I+1,IY]-RTY[I,IY])/(RTX[I+1,IX]-RTX[I,IX]);
            RA2=(RA1-(RTY[I-1,IY]-RTY[I,IY])/(RTX[I-1,IX]-RTX[I ,IX]))/(RTX[I+1,IX]-RTX[I-1,IX]);
            RA1=RA1-RA2*(RTX[I+1,IX]+RTX[I,IX]);
            RY =RTY[I,IY]+(RA1+RA2*(RX+RTX[I,IX]))*(RX-RTX[I,IX]);
            return;
        }   //END
            
        
        static int RH0010(int I, int N)
        {
            double IZ = I/Math.Pow(10,(N-1));
            int rh0010 = (int)(IZ - IZ/10*10);
            return rh0010;
        }   //END

                    
        static double SIEDI (double P) 
        {
            double PLN,siedi, PL = 0;
            PLN =0.0;
            if (P < 170.0) goto label2;
            
        label1:
            PLN=225.65-P;
            
            if ((PLN-1.65) < 0) goto label5;
            if ((PLN-1.65) == 0) goto label4;
            if ((PLN-1.65) > 0) goto label3;
            
        label3:
            PLN = Math.Log(PLN);
            siedi = ((((((((-.25677437*PLN+.53078030E+01)*PLN-.46394810E+02)*PLN+.22316611E+03)*PLN-.64257966E+03)*PLN+ 
                .11258822E+04)*PLN-.11566513E+04)*PLN+.63471236E+03) *PLN-.61360543E+03)*(-1.0);
            return siedi; 
            
        label4:
            siedi= 501.5;
            return siedi; 
            
        label5:
            siedi= (-.865E-03*P +.778)*P +370.0;
            return siedi; 
            
        label2:
            siedi = VISUM(P,PL ,-21);
            return siedi;
        }   //END SIEDI

        
        static double UH0077(double[] X, double[] Y, ref double XP, int N)
        {
            //DIMENSION X[N], Y[N]
            double uh0077, XPKUPP, ETA, YP, X1, X2, X3, Y1, Y2, Y3, A, B, C, R, S, T, U, V, W, YP1 = 0, YP2, DX1, DX2;
            int  M = 0;
            XPKUPP = XP;
            ETA = 1.0;
            
        label1:
            XP = XPKUPP*ETA;
            if (XP < X[1]) goto label3;
            YP = Y[1];
            goto label600;
            
        label3:
            if (XP > X[N]) goto label4;
            A1 = (Y[3]-Y[4])/(Math.Pow(X[3],2.0)- Math.Pow(X[4],2.0));
            A2 = Y[4]-A1 * Math.Pow(X[4],2.0);
            YP = A1*XP*XP+A2;
            if (XP <= A2) YP = XP*0.99;
            uh0077 = YP;
            if (XP >= X[N] * 0.5) return uh0077;
            M = M + 1;
            
            if (M > 10)
                sw16.WriteLine("   UH0077{0}{1}{2}{3}{4}{5}{6} ", Math.Round(A1,6).ToString().PadLeft(12), Math.Round(A2,6).ToString().PadLeft(12), 
                    Math.Round(uh0077,6).ToString().PadLeft(12), Math.Round(XPKUPP,6).ToString().PadLeft(12), Math.Round(XP,6).ToString().PadLeft(12),
                    Math.Round(ETA,6).ToString().PadLeft(12));
                //2 FORMAT(1H ,2X,'UH0077',I5,6F12.6)
            if (M > 10) return uh0077;
            if (XP != 0.0) ETA = 1.0 - uh0077/XP;
            if (Math.Abs(XPKUPP-XP/ETA) > 0.001) goto label1;
            return uh0077;
            
        label4:
            for(I = 1; I <= N; I++)     //DO 1100 I=1,N
            {
                if((X[I]-XP) < 0)   goto label1200;
                if((X[I]-XP) == 0)   goto label200;
                if((X[I]-XP) > 0)   continue;
            }   //1100 CONTINUE
            
        label1200:
            if (I == N) goto label55555;
            if(X[2] < XP) goto label56666;
            K = 1;
            
        label55:
            K1 = I;
            K2 = I-1;
            K3 = I-2;
            goto label500;
            
        label3000:
            K = 2;
            
        label66:
            K1 = I+1;
            K2 = I;
            K3 = I-1;
            goto label500;
            
        label55555:
            K = 3;
            goto label55;
            
        label56666:
            K = 3;
            goto label66;
            
        label500:
            X1 = X[K1];
            X2 = X[K2];
            X3 = X[K3];
            Y1 = Y[K1];
            Y2 = Y[K2];
            Y3 = Y[K3];
            
            R=X1*X1-X2*X2;
            S=X2*X2-X3*X35;
            T=X1-X2;
            U=X2-X3;
            V=Y1-Y2;
            W=Y2-Y3;
            if (V == 0.0) goto label10;
            if ((U*V) == (T*W)) goto label11;
            A=(R*W-S*V)/(U*V-T*W);
            B=(-R-A*T)/V;
            C=(-X1*X1-A*X1-B*Y1);
            YP=(-XP*XP-A*XP-C)/B;
            goto label12;
            
        label10:
            YP = Y1;
            goto label12;
            
        label11:
            YP = V/T*(XP-X1) + Y1;
            
        label12:
            //goto label(1400,1500, 600),
            if(K == 1)      goto label1400;
            if(K == 2)      goto label1500;
            if(K == 3)      goto label600;
            
        label1400:
            YP1=YP;
            goto label3000;
            
        label1500:
            YP2=YP;
            DX1=XP-X[I];
            DX2=X[I-1]-XP;
            goto label1999;
            
        label200:
            uh0077=Y[I];
            return uh0077;
            
        label600:
            uh0077=YP;
            return uh0077;
            
        label1999:
            uh0077=YP2+((YP1-YP2)/(1.0+DX2/DX1));
            return uh0077;
        }   //END

               
        static double VISUM6(double A112, double A212, int KENNIN)
        {
            //IMPLICIT INTEGER (I-N)
            //IMPLICIT REAL*8 (A-H,O-Z)

            double visum6 = 0, SATT = 0, A10 = 0, VISUM6 = 0, CWK = 0, CWH = 0, CWN = 0, KENN = 0, KAUFR = 0, KSTEU = 0, K10 = 0, P1 = 0, T1 = 0, K1 = 0, TS = 0, T2 = 0, T3 = 0, T8 = 0, T16 = 0, ERGW = 0,
                T282 = 0, ERGD = 0, VIS = 0, DZUL = 0, CP = 0, ENTALP = 0, ENTROP = 0, FS = 0, TW2 = 0, TW8 = 0, TW11 = 0, UTAU = 0, VTAU = 0, PVOR = 0, WTAUPI = 0;
            double[] CD = new double[27], CDI = new double[19], CW = new double[21], F1 = new double[20];
            int IBYT, N, ISTEST;
            //* DIMENSION CD(27), CDI[18], CW[20], F1[19]
            //DIMENSION CD(27), CDI[18], CW[20]
            //character*76 f1
            double TVOR = 0.0, TVORW = 0.0;

            CD[0] = 0;
            CD[1]=1.38823660614E-03;
            CD[2]=1.24212440663E+02;
            CD[3]=9.16960949398E-02;   
            CD[4]=-1.67830071610E-04;
            CD[5]=7.15450198109;
            CD[6]=1.10855470256E-02;
            CD[7]=1.24651104588E-04;
            CD[8]=0.0;
            CD[9]=-2.91967406252E-03;
            CD[10]=4.79514491292E-04;
            CD[11]=-1.02207171367E+01;
            CD[12]=-1.58364957832E-02;
            CD[13]=-7.33241791046E-04;
            CD[14]=0.0;
            CD[15]=8.58727664687E-03;
            CD[16]=1.30879988961E-04;
            CD[17]=1.53278589201E+01;
            CD[18]=1.43060016588E-02;
            CD[19]=7.71797735262E-11;
            CD[20]=1.98854043072E-05;
            CD[21]=1.92828162979E-08;
            CD[22]=4.87541933254E-04;
            CD[23]=3.42587466420E+01;
            CD[24]=3.14038510885E-02;
            CD[25]=-7.41817547003E-04;
            CD[26]=-5.21262637406E+01;
            CD[27]=-4.86511794912E-02;

            CDI[0]=0;
            CDI[1]=-0.121012735E+01;
            CDI[2]=0.354143578E+01;
            CDI[3]=0.272008406E-02;
            CDI[4]=-0.4550116E+01;
            CDI[5]=-0.41970932E-06;
            CDI[6]=0.196058561E+01;
            CDI[7]=0.608565561E+01;
            CDI[8]=0.41190504;
            CDI[9]=-0.1300975814E-01;
            CDI[10]=-0.391398360;
            CDI[11]=0.697302215E-05;
            CDI[12]=0.17737146;
            CDI[13]=-0.345207393E+01;
            CDI[14]=0.429619483E-01;
            CDI[15]=0.859231929E-02;
            CDI[16]=-0.328925495E-01;
            CDI[17]=-0.503582830E-05;
            CDI[18]=0.92110790E-02;
            
            CD[0]=0;
            CW[1]=-8.94355334897E+03;
            CW[2]=6.01845397866E+02;
            CW[3]=1.72115669086E+05;
            CW[4]=-3.04046153559E+03;
            CW[5]=-1.52023076758E+06;
            CW[6]=1.19286976604E+04;
            CW[7]=7.95246510671E+06;
            CW[8]=-3.58614284868E+04;
            CW[9]=-2.68960713719E+07;
            CW[10]=7.60566035290E+04;
            CW[11]=6.08452828087E+07;
            CW[12]=-1.10307292619E+05;
            CW[13]=-9.19227438252E+07;
            CW[14]=1.04222972990E+05;
            CW[15]=8.93339768453E+07;
            CW[16]=-5.78747243774E+04;
            CW[17]=-5.06403838291E+07;
            CW[18]=1.43466466707E+04;
            CW[19]=1.27525748165E+07;
            CW[20]=0.0;
            
            CWK=0.1537142999397E-06;
            CWH=0.1139706E-03;
            CWN=0.423149997839;
            Z=0.126289909884E-06;

            A1=A112;
            A2=A212;
            KENN=KENNIN;
            N=1;
            ISTEST=0;
            KAUFR=KENN/100;
            KSTEU = -100*KAUFR+KENN;
            IBYT = (int)KSTEU;
            KSTEU= (IBYT);
            if (A1 != 0.0) goto label2;
            
        label1:
            //sw16.WriteLine("",F1) N, A1, A2, KSTEU, KAUFR;
            sw16.WriteLine("  VISUM-ERROR {0} P={1}  X= {2} TYP {3} = {4}", N, A1.ToString("0.00000000E+0").PadLeft(16),
                A2.ToString("0.00000000E+0").PadLeft(16), KSTEU.ToString().PadLeft(2), KAUFR.ToString().PadLeft(6));
            if (N == 2) goto label321;
            A5=0.0;
            DEBUG ("FEHLER IN VISUM ,FUNCTION VISUM6, STMT 32",41);
            Console.ReadKey();  //STOP
            Environment.Exit(0);
            
            N = 3;
            if (A2 < (UW0011(A112,1))) N = 2;
            goto label1;

        label2:
            K10=KSTEU/10;
            if(KENN >= 0 && A2 == 0.0) goto label1;
            
        label60:
            K1 =-10*K10+KSTEU;
            P1=A1/1000.0;
            
        label501:
            I=1;
            K=(int)K1;
            if (K1 > 2) goto label16;
            if (KENN >= 0) goto label6;
            if(A1 >= 225.65) goto label51;
            A2=UW0011(A112,1);
            
        label6:
            T1=A2/1000.0;
            
            if ((K10-1) > 0)    goto label8;
            if ((K10-1) == 0)    goto label9;
            if ((K10-1) < 0)    goto label300;
            
        label51:
            A2=647.3;
            goto label6;
            
        label9:
            if (A2 > 0.0) goto label202;
            
        label10:
            TS=UW0011(A112,1)/1000.0;
            A10 = A1;
            if (KSTEU == 5) TS = UW0011(A10,1)*0.001;
            T1=TS;
            
        label13:
            K10=1;
            ERGW=0.0;
            goto label202;
            
        label52:
            if (A2 < 647.3) goto label14;
            goto label13;
            
        label8:
            if(A2 < 0.0) goto label10;
            if (A1 >= 225.65) goto label52;
            TS=UW0011(A112,1)/1000.0;
            if (T1 >= TS) goto label13;

        label14:
            K10 =2;
            goto label300;

        label16:
            K=K-2;
            N = 4;
            if (A2 < 0.0) goto label1;
            if (K1 == 5) goto label500;
            if (K10 > 0) goto label102;
            K10=1;
            if (K == 2) goto label101;
            if (A2 <= 360.0) K10=2;
            if(A2 <= 520.0&& A1 >= 100.0) K10=2;
            goto label102;
            
        label101:
            if (A2 < 1.15) K10=2;
            
        label102:
            //goto label(121,307),
            if(K10 == 1)    goto label121;
            if(K10 == 2)    goto label307;

        label202:
            if (TVOR == T1) goto label205;
            TVOR=T1;
            T2=T1*T1;
            T3=T2*T1;
            T8= T3*T3*T2;
            T16=T8*T8;
            T282= Math.Pow(T1,2.82);
            
        label205:
            ERGD=CD[K+1]/T282;
            ERGD=CD[K+4]*T282+ERGD;
            ERGD=CD[K+7]*T1+ERGD;
            A3=CD[K+10]*T282;
            A3=CD[K+13]*T1+A3;
            A4= CD[K+16]*T2;
            A4=(CD[K+19]/T16+A4)/T16;
            A5= CD[K+22]/T3/T8;
            ERGD= (((CD[K+25]*T2/T16*P1+A5)*P1+A4)*P1+A3)*P1+ERGD;
            if (A2 < 0.0) goto label300;
            
        label208:
            if(I == 3) goto label261;
            
            if((K-1) < 0)   goto label1000;
            if((K-1) == 0)   goto label1100;
            if((K-1) > 0)   goto label1200;
            
        label1000:
            ERGD=47.0585E-04*T1/P1-ERGD;
            goto label1050;
            
        label1100:
            ERGD=ERGD*P1;
            ERGD=(((-1.77226799957E+01*T1+6.49614999790E+01)*T1-4.59190000012)*T1+4.31666E+02)*T1+4.784866E+02-ERGD;
            goto label1050;
        
        label1200:
            ERGD=ERGD*P1/T1;
            ERGD=((-2.36302399973E-02*T1+9.74422499964E-02)*T1- 9.1838E-03)*T1-ERGD+1.42130757647;
            ERGD= Math.Log(T1)*4.31666E-01+ERGD;
            ERGD= Math.Log(P1)*(-1.102240387E-01)+ERGD;
            
        label1050:
            if (A2 > 0.0) goto label1052;
            ERGD= -A2*ERGD;
            ERGD=(A2+1.0)*ERGW+ERGD;
            
        label1052:
            if (K1 > 2) goto label250;
            if (ISTEST > 0) goto label503;
            VIS =ERGD;
            goto label4000;

        label121:
            TS=0.6473;
            if (A1 < 225.65) TS=UW0011(A112,1)/1000.0;
            A10=A1;
            if (KSTEU == 5 && A1 < 225.65)
                TS=UW0011(A10,1)/1000.0;
            T1=TS;

            goto label202;
            
        label250:
            //goto label(251,257,261),
            if(I == 1)      goto label251;
            if(I == 2)      goto label257;
            if(I == 3)      goto label261;
            
        label251:
            if ((ERGD-A2) < 0)  goto label253;
            if ((ERGD-A2) == 0)  goto label252;
            if ((ERGD-A2) > 0)  goto label260;
            
        label252:
            VIS =-1.0;
            goto label4000;
            
        label253:
            if(K1 > 3) goto label255;
            A6 = Math.Sqrt (P1);
            DZUL= 0.005;
            goto label256;
            
        label255:
            A6 = Math.Log(P1);
            DZUL= 0.000005;
            
        label256:
            A3 = (CDI[K + 4]*A2+CDI[K +2])*A2+CDI[K];
            A4 = (CDI[K +10]*A2+CDI[K +8])*A2+CDI[K +6];
            A5 = (CDI[K +16]*A2+CDI[K +14])*A2+CDI[K +12];
            T1 = (A5*A6+A4)*A6+A3;
            A3 = CDI[K +4]*A2*2.0+CDI[K +2];
            A4 = CDI[K +10]*A2*2.0+CDI[K +8];
            A5 = CDI[K +16]*A2*2.0+CDI[K +14];
            CP = (A5*A6+A4)*A6+A3;
            I=2;
            if (T1 < TS) T1=TS;
            goto label202;

        label257:
            A6=A2-ERGD;

            if (Math.Abs(A6) < DZUL) goto label258;
            T1= A6*CP+T1;
            goto label202;
            
        label258:
            if (ISTEST >= 1) goto label502;
            VIS =T1*1000.0;
            goto label4000;

        label260:
            I=3;
            goto label300;
            
        label261:
            VIS =ERGW-ERGD;
            VIS =(A2-ERGW)/VIS;
            if (ISTEST >= 1) goto label507;
            goto label4000;
            
        label500:
            ENTALP=A2;
            ENTROP=A1;
            if (KSTEU == 15) KSTEU = 5;
            A1= (-.367E-04*ENTALP+.70864E-01)*ENTALP-.115345E+02;
            A1= (.27642E+01*ENTROP-.194753E+02)*ENTROP+A1;
            P1= Math.Exp(A1);
            FS= 5.5284*ENTROP-.194753E+02;
            ISTEST=1;
            
        label506:
            A1= P1*1000.0;
            K1=3;
            K10=1;
            goto label501;
            
        label502:
            A2=T1*1000.0;
            
        label508:
            K1=2;
            goto label501;
            
        label503:
            A6=ENTROP-ERGD;
            if (Math.Abs(A6) >= 0.000005) goto label505;
            
        label504:
            VIS =P1*1000.0;
            A1=ENTROP;
            goto label4000;
            
        label505:
            ISTEST=ISTEST+1;
            if (ISTEST > 50) goto label504;
            A2=ENTALP;
            P1= Math.Exp(FS*A6)*P1;
            goto label506;
            
        label507:
            A2=VIS;
            goto label508;
            
        label4000:
            visum6 = VIS;
            A112=A1;
            A212=A2;
            return visum6;

        label300:
            if(T1 <= 0.624) goto label320;
            N=2;
            goto label1;
            
        label321:
            T1 = 0.624;
            
        label320:
            if (T1 == TVORW) goto label302;
            
        label301:
            TVORW = T1;
            TW2=T1*T1;
            TW8= Math.Pow((TW2*TW2),2);
            TW11=TW8*TW2*T1;
            UTAU= (-1.47106259025E+04/TW8-7.45159688264E+08)*TW2+3.7E+08;
            VTAU= ( 8.82637554152E+04/TW8-1.49031937653E+09)*TW2;
            goto label303;
            
        label302:
            if (P1 == PVOR) goto label304;
            
        label303:
            WTAUPI = UTAU*UTAU*1.72;
            WTAUPI =(-5.23148521736E-01*T1+P1)*6.04E+16+WTAUPI;
            N = 3;
            if (WTAUPI < 0.0) goto label1;
            WTAUPI =Math.Sqrt (WTAUPI)+UTAU;
            PVOR=P1;
            
        label304:
            A5=Z+TW11;
            A9 = CWN-T1;
            if (K != 0) goto label3100;
            ERGW=0.0;
            A3= 0.417;
            A4= 1.0;
            A5= ((0.2956619742E+01+P1)*P1+0.318237015625E+01)*1.72764500319E-12/A5;
            A6= CWK*T1*1000.0-CWH;
            A7 = A9;
            A8 = A9;
            
        label3001:
            ERGW = Math.Pow(WTAUPI,(-0.2941176))*A3+ERGW;
            A7 = 0.172821275288E-03 * A7;
            ERGW = ((Math.Pow(A9,8) * 0.594448218071E+02*A8+A7)*A9+A6)*A4+ERGW-A5;

            if (K10 == 1) goto label208;
            if (K1 > 2) goto label307;
            VIS =ERGW;
            goto label4000;

        label3100:
            A3 = 0.232862653760E-12*UTAU;
            A3 = (0.134758478052E-12*WTAUPI-A3)*VTAU;
            A3 = 0.510974577953E+04*T1+A3;
            A4 = A1*23.42276927;
            A5 = ((0.4434929613E+01+P1)*P1+0.954711046875E+01)*A1/A5/A5;
            if (K == 2) goto label3200;

            ERGW = 0.458178825377E-12*UTAU;
            A3 = (0.189591239001E-12*WTAUPI-ERGW)*WTAUPI+A3;
            A5 = (12.0*TW11+Z)*A5*0.134887434324E-10;
            A6 = -CWH;
            A7 = CWN+T1;
            A8 = 9.0*T1+CWN;
            
        label3102:
            ERGW=((((((((CW[K+18]*T1+CW[K+16])*T1+CW[K+14])*T1 +CW[K+12])*T1+CW[K+10])*T1+CW[K+8])*T1+CW[K+6])*T1+CW[K+4])*T1 +CW[K+2])*T1+CW[K];
            if (K == 1) goto label3001;
            ERGW= Math.Log(T1)*1.721156691E+02+ERGW;
            goto label3001;

        label3200:
            A3 = 0.001*A3/T1;
            A5 = TW11/T1*A5*0.148376177756E-12;
            A6 = -CWK;
            A7 = 0.002;
            A8 = 0.01;
            goto label3102;

        label307:
            if (I > 1) goto label309;
            if (K1 == 4) goto label311;
            CP= Math.Pow(A2,3)*(-1.2E-12);
            T1= (CP+0.001)*A2+0.2678;
            if (T1 > 0.624) T1 = 0.624;
            CP= CP*4.0+0.001;
            DZUL=0.05;
            goto label312;
            
        label311:
            T1=(0.153*A2+0.28)*A2+0.273;
            CP= 0.306*A2+0.28;
            DZUL=0.00005;
            
        label312:
            I=2;
            goto label301;
            
        label309:
            A6=A2-ERGW;
            
            if (Math.Abs(A6) < DZUL) goto label258;
            T1=A6*CP+T1;
            goto label301;
        }   //END
                        
        
        static double VISUM(double A112, double A212,int KENNIN)
        {
            double visum;
            if (LIGHT[9] == 7 || LIGHT[9] == 5)
                goto label7;
            visum = VISUM6(A112, A212, KENNIN);
            return visum;
            
        label7:
            visum = UW0010(A112,A212,KENNIN, "VISUM7");
            return visum;
        }   //END
        
                     
        static double TBLP(double X) {
            return ((((((((0.8706031890E-4*X - 0.4835386667E-2)*X + 0.1166343258E0)*X - 0.1601889083E1)*X
                +0.1379729459E2)*X - 0.7732753575E2)*X + 0.2828758911E3)*X - 0.6581399215E3)*X + 0.9334472333E3)*X + 0.368532642E2;
        }
        static double HBL(double X) {
            return (((((((0.5108625221E6*X - 0.1822994989E7)*X + 0.2594447496E7)*X - 0.2013934985E7)*X + 0.9866128362E6)*X 
                - 0.3383537326E6)*X + 0.8388499122E5)*X - 0.1324276710E5)*X + 0.3548458292E4;
        }
        static double SBL(double X) {
            return ((((((((-0.2289501903E5*X + 0.7060632809E5)*X - 0.9353728180E5)*X + 0.6935309413E5)*X - 0.3143691082E5)*X +
                0.8955822296E4)*X - 0.1607285286E4)*X + 0.1842644745E3)*X - 0.1353913125E2)*X + 0.5567845932E1;
        }
        static double HB1(double P) {
            return ((((((-0.1293025226E-16*P + 0.5756734252E-13)*P - 0.1071136659E-9)*P + 0.1080195568E-6)*P - 0.6401949413E-4)*P +
                0.2263267386E-1)*P - 0.4647566663E1)*P + 0.2041939095E4;
        }
        static double SB1(double P)
        {
            return (((((((0.7866108379E-22 * P - 0.3861768741E-18) * P + 0.8080829113E-15) * P - 0.9405175025E-12) * P + 0.6661885221E-9) * P
                - 0.2950759187E-6) * P + 0.8080228911E-4) * P - 0.1327468705E-1) * P + 0.4702523045E1;
        }


        static double UW0010 (double A1, double A2, double KENN, string s)
        {
            //IMPLICIT REAL *8 (D)
            //IMPLICIT INTEGER (I-N) 
            //COMMON /GEBIET/KGEB
            double D1 = 0, D2 = 0, DX1 = 0, DX2 = 0, K6 = 0, KAUF = 0, KZAHL = 0, FAKT = 0, A = 0, B = 0, K10 = 0, DXS = 0, uw0010 = 0, TS = 0, DS = 0,
                VIS2 = 0, VIS1 = 0, TL = 0, H1 = 0, H2 = 0, H2BL = 0, H2B1 = 0, S1 = 0, S2 = 0, S2B1 = 0, S2BL = 0, D6 = 0, DZUL = 0,D3 = 0, D4 = 0, D5 = 0, DT1 = 0, DCP = 0, E1A = 0, T1A = 0, E1N = 0, T1N = 0, DENTAL = 0,
                DENTRO = 0, DP1 = 0, DFS = 0, PNAEH = 0, DDH = 0, DDS = 0, DWH = 0, EPS = 0, DT23 = 0, DH23 = 0, DH34 = 0, DT34 = 0, DT35 = 0, DH35 = 0, DT45 = 0, DH45 = 0, DT14 = 0, DH14 = 0,
                EPSKR = 0, DT2 = 0, DH2 = 0, DH1 = 0, KST = 0, DL = 0, DT3 = 0, DH3 = 0, KHALB = 0, DTH = 0, SL = 0, SRE = 0, DELTAS = 0, DS1 = 0, T = 0, dts = 0, SR = 0;
            int ISTEST = 0, KZR = 0, IT = 0;
            //INTEGER *4 KENN 
            bool REGION;
            //DIMENSION DC [18] 
            double[] DC = {0, -0.121012735E+01, 0.354143578E+01, 0.272008406E-02, -0.4550116E+01, -0.41970932E-06, 0.196058561E+01,
                              0.608565561E+01, 0.41190504E+00, -0.1300975814E-01, -0.391398360E+00, 0.697302215E-05, 0.17737146E+00,
                              -0.345207393E+01, 0.429619483E-01, 0.859231929E-02, -0.328925495E-01, -0.503582830E-05, 0.9211079E-02}; 
            
            if(s == "VISUM7")     goto VISUM7;

            double AR1 = 0.0, AR2 = 0.0; 
            
            
        VISUM7:
            //ENTRY VISUM7(A1,A2,KENN);
            KGEB = 0;
            AR1 = 0.0;
            AR2 = 0.0;
            D1 = A1;
            D2 = A2;
            DX1 = A1;
            DX2 = A2;
            K6 = 0;
            ISTEST = 0;
            KAUF= (KENN/100);
            KZAHL= -100*KAUF+(KENN);
            if (A1 != 0.0) goto label8;

        label7:
            //sw16.WriteLine("",71)KZAHL,A1,A2;
            sw16.WriteLine("0*** FEHLER IN VISUM ! AUFRUF-NR. {0} ***", KZAHL.ToString().PadLeft(6));
            sw16.WriteLine(" *** ARG1 {0} ARG2 {1}***", A1.ToString("0.0000000E+0").PadLeft(15), A2.ToString("0.0000000E+0").PadLeft(15));  //G15.7
            goto label9;
            
        label801:
            //WRITE (16,901) KZAHL,A1,A2 
            sw16.WriteLine("0*** P,T VON S,H BEI S < 1.264 IN VISUM ***");
            sw16.WriteLine(" *** NICHT BEINHALTET ! AUFRUF-NR. {0} ***", KZAHL.ToString().PadLeft(6));
            sw16.WriteLine(" *** ARG1 {0} ARG2 {1}***", A1.ToString("0.0000000E+0").PadLeft(15), A2.ToString("0.0000000E+0").PadLeft(15));  //G15.7 
            goto label9;
            
        label811:
            //WRITE (16,902) KZAHL,A1,A2 
            sw16.WriteLine("0*** ITERATION VISUM T=T(P,H) NICHT BEENDET ***");
            sw16.WriteLine(" *** AUFRUF-NR. {0} ARG1 {1} ARG2 {2} ***", KZAHL.ToString().PadLeft(6), Math.Round(A1,5).ToString().PadLeft(10), Math.Round(A2,5).ToString().PadLeft(10));  //G15.7 ) 
            goto label9;
            
        label820:
            //WRITE (16,830) KZR,KZAHL,A1,A2 
            sw16.WriteLine("0*** ITERATION VISUM T=T(P,S) IM GEBIET {0} NICHT BEENDET ***", KZR.ToString().PadLeft(2));
            sw16.WriteLine(" *** AUFRUF-NR. {0} ARG1 {1} ARG2 {2} ***", KZAHL.ToString().PadLeft(6), Math.Round(A1,5).ToString().PadLeft(10), Math.Round(A2,5).ToString().PadLeft(10));  //G15.7 ), 
            goto label9;
            
        label840:
            //WRITE (16,850) KZR,FAKT,KZAHL,A1,A2;
            sw16.WriteLine("0*** ITERATION VISUM T=T(P,S) IM GEBIET {0} NICHT BEENDET, DA DER FAKTOR {1} ZU KLEIN GEWORDEN IST ***", KZR.ToString().PadLeft(2), Math.Round(FAKT,6).ToString().PadLeft(9));
            sw16.WriteLine(" *** AUFRUF-NR. {0}  ARG1 {1}  ARG2 {2}  ***", KZAHL.ToString().PadLeft(6), Math.Round(A1,5).ToString().PadLeft(10), Math.Round(A2,5).ToString().PadLeft(10));
            
        label9:
            B=0.0;
            A=0.0;
            DEBUG ("FEHLER IN VISUM, FUNCTION UW0010, STMT 46",41);

        label860: //STOP;
            Console.ReadKey();
            Environment.Exit(0);

        label8:
            K10= KZAHL/10;
            K1= (int)(-10*K10+KZAHL);
            DXS = 0.0;
            if (A1 <= 225.56) DXS = UW0011(A1,1);
            if (KENN < 0) goto label72;
            if (A2 == 0.0) goto label7; 
            if (K1 > 6) goto label12345; 
            if (K1 > 2) goto label700; 
            D1 = D1 *0.44334101791097713E-02;
            D2 = D2 *0.15448787270199291E-02;
            goto label73;
            
        label72:
            A2 = UW0011(A1,1);
            D1 = D1 *0.44334101791097713E-02;
            D2 = A2 *0.15448787270199291E-02;
            
            if ((K10-1) <= 0)   goto label21;
            if ((K10-1) > 0)   goto label10;
            
        label21:
            if (A1 <= 168.6617) goto label20;
            DX2 = A2;
            goto label31;
            
        label10:
            if(A1 <= 168.6617) goto label1;
            DX2 = A2;
            goto label40;

        label12345:
            K1 = K1 -6;
            D1 = D1 -273.15E+00;
            REGION = false; 
            if (D1 > 374.15E+00) REGION =true;
            if (K1 == 3) goto label12346;
            uw0010 = UW0016 (D1,D2,K1,REGION) *0.238845896627E+00;
            return uw0010;  
            
        label12346:
            uw0010 = UW0016 (D1,D2,K1,REGION) *1.019716212978E+00;
            return uw0010;

        label73:
            if (AR1 == A1 && AR2 == A2)
            {
                //goto label(1,20,31,40,5,6),
                if(KZR == 1)    goto label1;
                if(KZR == 2)    goto label20;
                if(KZR == 3)    goto label31;
                if(KZR == 4)    goto label40;
                if(KZR == 5)    goto label5;
                if(KZR == 6)    goto label6;
            }
            AR1=A1;
            AR2=A2;
            K10=K10+1;
            //goto label(70,2,1,3),
            if(K10 == 1)    goto label70;
            if(K10 == 2)    goto label2;
            if(K10 == 3)    goto label1;
            if(K10 == 4)    goto label3;

        label3:
            if (A2 < 0.0) goto label60;
            if (A2 >= 647.3) goto label31 ;
            TS = UW0011 (A1,1) ;
            if (A2 < TS) goto label40 ;
            goto label31 ;
            
        label40:
            uw0010= UW0014 (DX1,DX2,K1,"HSV4PT") ;
            KZR=4 ;
            return uw0010; 
            
        label31:
            uw0010= UW0014 (DX1,DX2,K1, "HSV3PT") ;
            KZR=3 ;
            return uw0010; 

        label2:
            if (A2 < 0.0) goto label60 ;
            TS = DXS;
            if (A2 < TS)    //sw16.WriteLine("",903) KZAHL,A1,A2,TS 
            {
                sw16.WriteLine(" ***VISUM-WARNUNG : AUFRUF-NR.{0}I6 H=F(P,T) FUER T<TS***", KZAHL.ToString().PadLeft(6));
                sw16.WriteLine(" ***ARG1 {0} ARG2 {1} TS {2}***", A1.ToString("0.0000000E+0").PadLeft(15), A2.ToString("0.0000000E+0").PadLeft(15),
                    TS.ToString("0.0000000E+0").PadLeft(15));
            }
            goto label20;

        label20:
            uw0010=UW0013 (D1,D2,K1);
            KZR=2;
            return uw0010; 

        label60:
            TS = UW0011(A1,1);
            DS = TS *0.15448787270199291E-02;
            if (TS <= 623.15) goto label6;
            
        label5:
            DXS = TS;
            VIS2 = UW0014 (DX1,DXS,K1, "HSV3PT");
            VIS1 = UW0014 (DX1,DXS,K1, "HSV4PT");
            uw0010= A2*(VIS1-VIS2)+VIS1;
            KGEB=5;
            KZR=5;
            return uw0010; 
            
        label6:
            VIS2= UW0013(D1,DS,K1);
            VIS1= UW0012(D1,DS,K1);
            uw0010=A2*(VIS1-VIS2)+VIS1;
            KGEB=6;
            KZR=6;
            return uw0010; 

        label70:
            if (A2 < 0.0) goto label60;
            if (A1 <= 168.6617) goto label80;
            if (A2 <= 623.15) goto label1;
            if (A2 >= 647.3) goto label81;
            if (A1 >= 225.56) goto label40; 
            TL = TBLP (A1*0.00980665);
            if (A2 >= TL) goto label20;
            TS = UW0011 (A1,1);
            if (A2 < TS) goto label40;
            goto label31;
            
        label80:
            if (A2 >= 647.3) goto label20;
            TS = UW0011 (A1,1);
            if (A2 < TS) goto label1;
            goto label20;
            
        label81:
            TL = TBLP (A1*0.00980665);
            if (A2 >= TL) goto label20; 
            goto label31;

        label1:
            uw0010=UW0012(D1,D2,K1);
            KZR=1;
            return uw0010;
            
        label700:
            K6 = 1;
            if (K1 == 5) goto label800;
            D1 = D1 *0.44334101791097713E-02;
            if (K1 == 6) goto label607;
            K1 = K1-2;
            
        label711:
            K10 = K10+1;
            //goto label(701,201,107,300),
            if(K10 == 1)        goto label701;
            if(K10 == 2)        goto label201;
            if(K10 == 3)        goto label107;
            if(K10 == 4)        goto label300;
            
        label607:
            K1 = 1;
            K6 = 2;
            goto label711;
            
        label701:
            //goto label(703,704),
            if(K1 == 1)     goto label703;
            if(K1 == 2)     goto label704;

        label703:
            if (A1 >= 225.56) goto label705;
            DXS = UW0011 (A1,1);
            DS = DXS *0.15448787270199291E-02;
            if (A2 >= 503.3) goto label709;
            if (A1 > 168.6617) goto label303;
            H1 = UW0012 (D1,DS,K1);
            if (A2 <= H1) goto label100;
            //goto label(610,502),
            if(K6 == 1)     goto label610;
            if(K6 == 2)     goto label502;
            
        label610:
            H2 = UW0013 (D1,DS,K1);
            
        label604:
            uw0010= (H1-A2)/(H2-H1);
            KGEB=6;
            return uw0010; 
            
        label709:
            if (A1 <= 168.6617) goto label602;
            if (A2 >= 628.0) goto label200;
            H2 = UW0014 (DX1,DXS,K1, "HSV3PT");
            
            if ((A2-H2) < 0)    goto label500;
            if ((A2-H2) == 0)    goto label609;
            if ((A2-H2) > 0)    goto label707;
            
        label500:
            //goto label(501,502),
            if(K6 == 1)     goto label501;
            if(K6 == 2)     goto label502;
            
        label502:
            uw0010 = DXS;
            KGEB=6;
            return uw0010; 
            
        label501:
            H1 = UW0014(DX1,DXS,K1,"HSV4PT");
            uw0010= (H1-A2)/(H2-H1);
            KGEB=5;
            return uw0010;
            
        label707:
            H2BL = HBL (100.0/(A1*0.980665)) *0.23884589;
            if (A2 >= H2BL) goto label200;
            goto label401;
            
        label303:
            if (A2 <= 390.0) goto label100;
            H1 = UW0014(DX1,DXS,K1,"HSV4PT");
            if (A2 > H1) goto label307;
           
            H2B1 = HB1 (A1*0.980665) *0.23884589;
            if (A2 <= H2B1) goto label100;
            goto label400;
            
        label307:
            //goto label(503,502),
            if(K6 == 1)     goto label503;
            if(K6 == 2)     goto label502;
             
        label503:
            H2 = UW0014 (DX1,DXS,K1, "HSV3PT");
            uw0010= (H1-A2)/(H2-H1);
            KGEB=5;
            return uw0010; 
            
        label602:
            H2 = UW0013 (D1,DS,K1);
            
            if ((A2-H2) < 0)    goto label600;
            if ((A2-H2) == 0)    goto label609;
            if ((A2-H2) > 0)    goto label200;
            
        label600:
            //goto label(608,502),
            if(K6  == 1)    goto label608;
            if(K6  == 2)    goto label502;
            
        label608:
            H1 = UW0012 (D1,DS,K1);
            goto label604;
            
        label609:
            //goto label(601,502),K6 
            if(K6  == 1)    goto label601;
            if(K6  == 2)    goto label502;
            
        label601:
            uw0010 = (-1.0);
            KGEB=6;
            return uw0010; 
            
        label705:
            if (A2 > 503.3) goto label706;
            if (A2 <= 370.0) goto label106; 
            H2B1 = HB1 (A1*0.980665) *0.23884589;
            if (A2 > H2B1) goto label301;
            
        label106:
            DS = 1.0E+00;
            goto label100; 
            
        label706:
            if (A2 >= 672.5) goto label205;
            H2BL = HBL (100.0/(A1*0.980665)) *0.23884589;
            if (A2 >= H2BL) goto label205;
            goto label304;

        label205:
            DS = 1.0E+00;
            goto label200; 

        label201:
            if (A1 >= 168.6617) goto label209;
            DS = UW0011 (A1,1) *0.15448787270199291E-02;
            //goto label(602,603),
            if(K1 == 1)     goto label602;
            if(K1 == 2)     goto label602;

        label300:
            if (K1 == 2) goto label305;
            if (A1 >= 225.56) goto label301;
            DXS = UW0011 (A1,1);
            if (A2 >= 503.3) goto label306;
            H1 = UW0014 (DX1,DXS,K1,"HSV4PT");
            if (A2 > H1) goto label307;
            goto label400;
            
        label306:
            H2 = UW0014 (DX1,DXS,K1, "HSV3PT");
            
            if ((A2-H2) < 0)    goto label500;
            if ((A2-H2) == 0)    goto label609;
            if ((A2-H2) > 0)    goto label401;
            
        label704:
            if (A1 > 168.6617) goto label710;
            DS = UW0011 (A1,1) *0.15448787270199291E-02;
            if (A2 >= 1.0612) goto label603;
            S1 = UW0012 (D1,DS,K1);
            if (A2 <= S1) goto label100;
            S2 = UW0013 (D1,DS,K1);
            
        label605:
            uw0010= (S1-A2)/(S2-S1);
            KGEB=6;
            return uw0010; 
             
        label603:
            S2 = UW0013 (D1,DS,K1);
            
            if ((A2-S2) < 0)    goto label606;
            if ((A2-S2) == 0)    goto label601;
            if ((A2-S2) > 0)    goto label200;
            
        label606:
            S1 = UW0012 (D1,DS,K1);
            goto label605;
            
        label710:
            if (A2 >= 1.0612) goto label202;
            if (A2 <= 0.8112) goto label105;
            S2B1 = SB1 (A1*0.980665) *0.23884589;
            if (A2 > S2B1) goto label305;
            
        label105:
            DS = 0.96269117874246875E+00;
            goto label100;
            
        label202:
            if (A2 >= 1.2571) goto label209;
            S2BL = SBL (100.0/(A1*0.980665)) *0.23884589;
            if (A2 < S2BL) goto label305;
            
        label209:
            DS = 0.96269117874246875E+00;
            goto label200;
            
        label200:
            DS = DS*0.6473E+00;
            IT=0;
            if (K1 == 1) goto label203;
            D6 = Math.Log(D1*0.22556E+00);
            DZUL = 0.5E-05;
            goto label204;
            
        label203:
            D6 = Math.Sqrt(D1*0.22556E+00);
            DZUL = 0.5E-02;
            
        label204:
            D3 = (DC[K1+4]*D2+DC[K1+2])*D2+DC[K1];
            D4 = (DC[K1+10]*D2+DC[K1+8])*D2+DC[K1+6];
            D5 = (DC[K1+16]*D2+DC[K1+14])*D2+DC[K1+12];
            DT1 = (D5*D6+D4)*D6+D3;
            
            if (DT1 < DS) DT1 = DS;
            D3 = DC[K1+4]*D2*2.0+DC[K1+2];
            D4 = DC[K1+10]*D2*2.0+DC[K1+8];
            D5 = DC[K1+16]*D2*2.0+DC[K1+14]; 
            DCP = (D5*D6+D4)*D6+D3;
            E1A = 0.0;
            T1A = 0.0;
            E1N = 0.0;
            T1N = 0.0;
            
        label208:
            E1A = E1N;
            E1N = UW0013 (D1,DT1*0.15448787270199291E+01,K1);
            T1A = T1N;
            T1N = DT1;
            D6 = D2 - E1N;
            if (Math.Abs(D6) < DZUL) goto label207;
            IT = IT+1;
            if (IT > 20) goto label811;
            if (T1A != 0.0) DCP = (T1N-T1A)/(E1N-E1A);
            DT1 = D6*DCP+DT1;
            if (DT1 < DS) DT1 = DS;
            goto label208;
            
        label207:
            if (ISTEST > 0) goto label802;
            uw0010 = DT1 * 1000.0;
            return uw0010; 

        label107:
            DS = 0.96269117874246875E+00;
            
        label100:
            DS = DS *0.6473E+00;
            IT=0;
            if (K1 == 1) goto label101;
            DT1 = (0.153*D2+0.28)*D2+0.273;
            DCP = 0.306*D2+0.28;
            DZUL = 0.5E-05;
            goto label102;
            
        label101:
            DCP = D2*D2*D2*(-1.02E-12);
            DT1 = (DCP+0.001)*D2+0.2678; 
            DCP = DCP*4.0+0.001;
            DZUL = 0.5E-02; 

        label102:
            if (DT1 > DS) DT1 = DS;
            
        label104:
            D6 = (D2-UW0012(D1,DT1*0.15448787270199291E+01,K1));
            if (Math.Abs(D6) < DZUL) goto label103;
            IT=IT+1;
            if (IT > 20) goto label103;
            DT1 = D6*DCP+DT1;
            goto label104;
            
        label103:
            uw0010= DT1*1000.0;
        return uw0010; 

        label800:
            if (A1 < 1.264) goto label801;
            DENTAL = D2;
            DENTRO = D1;
            D1 = (-0.367E-04*DENTAL +0.70864E-01) *DENTAL -0.115345E+02;
            D1 = (0.27642E+01 *DENTRO -0.194753E+02) *DENTRO +D1;
            DP1 = Math.Exp(D1);
            DFS = 5.5284 *DENTRO -0.194753E+02;
            ISTEST = 1;
            K1 = 1;
            
        label805:
            D1 = DP1*0.44334101791097713E+01;
            PNAEH = DP1*1000.0;
            if (PNAEH <= 168.6617) goto label807;
            DS = 0.96269117874246875E+00;
            DT1 = DS;
            goto label200;
            
        label807:
            DS = UW0011 (PNAEH,1) *0.15448787270199291E-02;
            DT1 = DS;
            if (D2 >= 680.0) goto label200;
            DDH = UW0013(D1,DT1,K1);
            
            if ((DDH-D2) > 0)   goto label200;
            if ((DDH-D2) == 0)   goto label809;
            if ((DDH-D2) < 0)   goto label810;
            
        label809:
            A2 = -1.0;
            DDS = UW0013(D1,DT1,2);
            goto label806;
            
        label810:
            DWH = UW0012(D1,DT1,K1);
            D2 = (D2-DWH)/(DWH-DDH);
            A2 = D2;
            DWH = UW0012(D1,DT1,2);
            DDH = UW0013(D1,DT1,2);
            DDS = D2*(DWH-DDH)+DWH;
            goto label806;
            
        label802:
            D2 = DT1*0.15448787270199291E+01;
            A2 = DT1 *1000.0;
            DDS = UW0013 (D1,D2,2);
            
        label806:
            D6 = DENTRO-DDS;
            if (Math.Abs(D6) > 0.000005) goto label803;
            
        label804:
            uw0010 = D1 *225.56E+00;
            D1 = DENTRO;
            return uw0010;
            
        label803:
            D2 = DENTAL;
            DP1 = Math.Exp(DFS*D6)*DP1;
            ISTEST = ISTEST+1;
            if (ISTEST <= 20) goto label805;
            A2 = DT1 *1000.0;
            goto label804;

        label305:
            EPS=0.1E-03;
            
        label301:       ;   // CONTINUE
        label304:       ;   // CONTINUE
        label401:       ;   // CONTINUE
        label400:       ;   // CONTINUE
            
            DT23=TBLP(A1*0.00980665);
            DH23=UW0014(A1,DT23,K1,"HSV3PT");
            DT34=647.3;
            DH34=UW0014(A1,DT34,K1,"HSV3PT");
            DT35=DT34;
            DH35=DH34;
            if (A1 >= 225.56) goto label302;
            DT35=DXS;
            DH35=UW0014(A1,DT35,K1,"HSV3PT");
            
        label302:
            DT45=DT34;
            DH45=DH34;
            if (A1 >= 225.56) goto label402;
            DT45=DXS;
            DH45=UW0014(A1,DT45,K1,"HSV4PT");
            
        label402:
            DT14=623.15;
            DH14=UW0014(A1,DT14,K1,"HSV4PT");
            if (K1 == 1) goto label441;
            EPSKR = 1.0612;
            if (A1 > 225.56) goto label439;
            if (DX2 >= DH45 && DX2 <= DH35) goto label1005;
            
        label439:
            if (DX2 < 1.0612) goto label403;
            goto label442;
            
        label441:
            EPSKR = 503.3;
            if (DX2 < 503.3) goto label403;

        label442:
            DT2=DT35;
            DH2=DH35;
            goto label405;

        label403:
            if (DX2 > DH34) goto label404;

            DT1=DT45;
            DH1=DH45;
            DT2=DT14;
            DH2=DH14;
            KST=4;
            goto label412;

        label404:
            DT2=DT34;
            DH2=DH34;
            
        label405:
            DT1=DT23;
            DH1=DH23;
            KST=3;
            DL=DT23;
            
        label412:
            IT=0;
            if (K1 == 2) goto label421;
            EPS=0.1;
            if (DX2 < 480.0 || DX2 > 525.0) goto label421;
            if (DX1 < 224.0 || DX1 > 245.0) goto label421;
            EPS=1.0;
            if (DX2 > 495.0 && DX2 < 510.0) EPS=1.0;
            
        label421:
            if (Math.Abs(DH2-DX2) < EPS) goto label410;
            if (KST == 4) goto label413;

        label407:
            if ((DH1-DH2) != 0.0) goto label414;
            DT3 = DT2;
            goto label406;
            
        label414:
            DT3 = DT1 + (DT1-DT2)*(DX2-DH1)/(DH1-DH2);
            if (DT3 > DL) DT3 = DL;
            if (DX1 < 225.56 && DT3 < DXS) DT3 = DXS;
            if (DX1 >= 225.56 && DT3 < 647.3) DT3 = 647.301;;
            if (DT3 == DT2) DT3 = DT2+0.1 ;
            DH3 = UW0014 (DX1,DT3,K1, "HSV3PT"); 
            KST=3;
            goto label423;
            
        label413:
            DT3 = DT1 + (DT1-DT2)*(DX2-DH1)/(DH1-DH2);
            if (DT3 <= 647.3) goto label409;
            DT3 = 647.3;
            
        label409:
            if (DT3 < 623.15) DT3 = 623.15;
            DH3 = UW0014(DX1,DT3,K1,"HSV4PT");
            KST=4;
            
        label423:
            IT=IT+1;
            KHALB=0;
            
        label433:
            if (Math.Abs(DH3-DX2) < EPS) goto label406;
            if (Math.Abs(DT1-DT2) <= 0.0002 && Math.Abs(DT2-DT3) <= 0.0002) goto label406;
            if (DH3 != EPSKR) goto label443;
            if (DH1 == EPSKR || DH2 == EPSKR) goto label406;
            
        label443:
            if (DH1 < DX2) goto label426;
            if (DH2 > DX2) goto label425;
            if (DH3 < DX2) goto label424;
            if (DH3 < DH1) goto label427;
            goto label432;
            
        label424:
            if (DH2 > DH3) goto label432;
            goto label431;
            
        label425:
            if (DH2 > DH1) goto label431;
            goto label430;

        label426:
            if (DH2 < DX2) goto label429;
            if (DH3 > DX2) goto label428;
            if (DH1 > DH3) goto label432;
            
        label427:
            DH1=DH3;
            DT1=DT3;
            goto label432;
            
        label428:
            if (DH2 < DH3) goto label432;
            goto label431;
            
        label429:
            if (DH2 < DH1) goto label431;
            
        label430:
            DH1=DH2;
            DT1=DT2;
            
        label431:
            DH2=DH3;
            DT2=DT3;
            
        label432:
            if (IT > 30) goto label419;
            KHALB=KHALB+1;
            if (KHALB > 1) goto label436;
            DT3=DT1-(DT1-DT2)/2.0;
            if (KST == 4) goto label434;
            DH3=UW0014(DX1,DT3,K1,"HSV3PT");
            goto label435;
            
        label434:
            DH3=UW0014(DX1,DT3,K1,"HSV4PT");
            
        label435:
            goto label433;
            
        label436:
            if (DT1 < DT2) goto label437;
            DTH=DT1;
            DT1=DT2;
            DT2=DTH;
            DTH=DH1;
            DH1=DH2;
            DH2=DTH;
            
        label437:
            //goto label(860,860,407,413),
            if(KST == 1)    goto label860;
            if(KST == 2)    goto label860;
            if(KST == 3)    goto label407;
            if(KST == 4)    goto label413;
            
        label410:
            uw0010 = DT2;
            return uw0010; 
            
        label406:
            uw0010 = DT3;
            return uw0010; 
            
        label419:
            //sw16.WriteLine("",420) 
            sw16.WriteLine("  T=F(P,H) GENAUIGKEIT NACH 30 SCHRITTEN NICHT ERREICHT");
            sw16.WriteLine("  DIMENSIONEN: H IN KCAL/KG, P IN ATA, T IN GRD K");
            
            //sw16.WriteLine("",440) DX1,DX2,DH3,DH2,DH1,DT3,DT2,DT1,EPS
            sw16.WriteLine("  P-VORG  H-VORG  H3-ER.    H2      H1     T3-ER    T2     T1    EPS");
            sw16.WriteLine(" {0}{1}{2}{3}{4}{5}{6}{7}{8} ", Math.Round(DX1,3).ToString().PadLeft(8), Math.Round(DX2,3).ToString().PadLeft(8), Math.Round(DH3,3).ToString().PadLeft(8),
                 Math.Round(DH2,3).ToString().PadLeft(8), Math.Round(DH1,3).ToString().PadLeft(8), Math.Round(DT3,3).ToString().PadLeft(8), Math.Round(DT2,3).ToString().PadLeft(8),
                 Math.Round(DT1,3).ToString().PadLeft(8), Math.Round(EPS,2).ToString().PadLeft(5));
            goto label406;

        label1005:
            SL=DH45;
            SRE=DH35;
            dts=DXS;
            KZR = 5;
            KGEB=5;
            DELTAS = SRE-SL;
            DS1 = A2-SL;
            X = 0.0;
            
        label1001:
            X = DS1/DELTAS + X;
            T = X*(-1.0);
            if (T == 0.0) T=-0.00001;
            VIS1 = UW0014 (DX1,dts,2,"HSV4PT"); 
            VIS2 = UW0014 (DX1,dts,2,"HSV3PT");
            SR = T*(VIS1-VIS2)+VIS1; 
            if (Math.Abs(SR-A2) < 0.5E-04) goto label1025;
            IT = IT+1;
            DS1 = A2-SR;
            
            if (IT < 20) goto label1001;
            goto label820;
            
        label1025:
            uw0010 = T;
            return uw0010; 
        }   //END 
            
        
        static double UW0011 (double ARG, int KEN)
        {
            //IMPLICIT INTEGER (I-N) 
            //IMPLICIT REAL*8 (A-H, O-Z) 
            //REAL *4 ARG,ARGVOR,UW0011 
            double KENN = 0, KAUFR = 0, KSTEU = 0, B = 0, P = 0, PLN = 0, SAT = 0, uw0011 = 0, C = 0, DT = 0;
            double ARGVOR = 0.0;
            //string F16 = 56H(19H  SATT ERROR   ARG=,E16.8,7H  TYP =,I2,7H  CALL=,I6)
            //ENTRY SATT(ARG,KEN);
            KENN=KEN;
            KAUFR=KENN/10;
            KSTEU=-10*KAUFR+KENN;
            if(ARG > 0.0) goto label17;
            sw16.WriteLine("  SATT ERROR   ARG={0}  TYP ={1}  CALL={2} ", ARG.ToString("0.00000000E+0").PadLeft(16), KSTEU.ToString().PadLeft(2), KAUFR.ToString().PadLeft(6));
            
        label13:
            B=0.0;
            DEBUG ("MELDUNG",7);
            Console.ReadKey();
            Environment.Exit(0);
            
        label17:
            if (ARG == ARGVOR && KSTEU == 1) goto label16;
            ARGVOR = ARG;
            P = ARG;
            if (KSTEU != 1) goto label23;
            if ( P > 225.56 ) goto label110;
            PLN = Math.Log(P);
            if (P > 0.01) goto label24;
            
            SAT = (((+0.881881708685928E+00 * PLN + 0.170314530316776E+02)*PLN +0.124107596957641E+03)* PLN + 0.418548791322308E+03)*PLN +0.568896276422398E+03;
            if (KSTEU == 1) SAT = SAT+273.15;
            goto label16;
            
        label24:
            if (PLN > 3.80662) goto label15;
            
        label12:
            SAT =(((((0.45493739E-04 *PLN + 0.12383573E-02)*PLN+0.17910920E-01)*PLN + 0.21126687E-00)*PLN
                +0.23853874E+01)*PLN + 0.27853372E+02)*PLN+0.37223733E+03;
            goto label16;
            
        label15:
            SAT =(((((-.15613862E-00 *PLN + 0.38350899E+01)*PLN -0.39313424E+02)*PLN + 0.21590156E+03)*PLN -0.66409118E+03)*PLN + 0.11275780E+04)*PLN 
                -0.38453244E+03;
            
        label16:
            if (KSTEU != 1) goto label25;
            uw0011=SAT;
            return uw0011; 
            
        label110:
            //sw16.WriteLine("",120) P;
            sw16.WriteLine(" SATT/1 ERROR, P={0} ATA, (P > PKRIT); ENDE", P.ToString("0.00000000E+0").PadLeft(16));
            goto label13;
            
            
        label23:
            if( P > 647.3 ) goto label210;
            PLN = 4856.0446/P;
            C=PLN/P;
            PLN=12.939-PLN;
            goto label24;
            
        label25:
            DT=P-SAT;
            if (Math.Abs(DT) < 0.5E-3) goto label27;
            PLN=C*DT+PLN;
            goto label24;
            
        label27:
            uw0011= Math.Exp(PLN);
            return uw0011; 
            
        label210:
            //sw16.WriteLine("",220) P;
            sw16.WriteLine(" SATT/1 ERROR, T={0} GRD K, (T>TKRIT); ENDE", P.ToString("0.00000000E+0").PadLeft(16));
            goto label13;
        }   //END 

                    
        static double UW0012 (double BET, double TET, int K1) 
        {
            //IMPLICIT REAL *8 (A-J,L-Z) 
            //IMPLICIT INTEGER [K] 
            //COMMON /GEBIET/KGEB
            double BETVOR = 0.0E+00, TETVOR = 0.0E+00;
            double TET2 = 0, TET6 = 0, TET10 = 0, TET18 = 0, M2 = 0, M3 = 0, M4 = 0, M5 = 0, M6 = 0, M9 = 0, BET2 = 0, BET3 = 0, M7 = 0, M8 = 0, M11 = 0, M12 = 0,
                M10 = 0, M1 = 0, YS = 0, M13 = 0, M14 = 0, EPS = 0, SIG1 = 0, SIG2 = 0, SIG = 0, CHI = 0, uw0012 = 0;
            //ENTRY HSV1PT (BET,TET,K1) 
            KGEB=1;
            if (TETVOR == TET && BETVOR == BET) goto label12;
            if (TETVOR == TET) goto label10;
            TETVOR = TET;
            TET2=TET*TET;
            TET6=TET2*TET2*TET2;
            TET10=TET6*TET2*TET2; 
            TET18=TET6*TET6*TET6;
            Y=1.0-.8438375405*TET2-.5362162162E-03/TET6 ;
            M2=.65371543E-00-TET ;
            M3=M2*M2*M2 ;
            M3=.2421647003E+03*M3*M3*M3 ;
            M4=1.0/(.115E-05+TET18*TET) ;
            M5=.1269716088E-09*M4 ;
            M6=1.0/(0.15108E-04+TET10*TET) ;
            M9=.1293441934E+02*TET18 ;
            
        label10:
            if (BETVOR == BET) goto label11 ;
            BETVOR = BET ;
            BET2=BET*BET ;
            BET3=BET2*BET ;
            M7=1.0/(.7002753165E+01+BET) ;
            M8=M7*M7*M7 ;
            M11=.1308119072E-04*BET2 ;
            
        label11:
            Z = Y + Math.Sqrt(.172E+01*Y*Y-.14684556978E+00 *TET +.995171774E-01 *BET);
            M1=.7982692717E+01*Math.Pow(Z,(-5.0E+00/17.0E+00));
            M10=.6047626338E-13*BET3/(TET18*TET2);
            
        label12:
            if ((K1-1) < 0)     goto label1004;
            if ((K1-1) < 0)     goto label1001;
            if ((K1-1) < 0)     goto label1001;
            
        label1001:
            YS=-2.0*.8438375405*TET+6.0*.5362162162E-03/(TET6*TET);
            M12=(5.0E+00/12.0E+00*Z-.72E+00*Y)*YS+.7342278489E-01;
            M13=M8+.2995284926E-03*BET;
            M14=((.1105710498E-08*BET+.217402035E-07)*BET+.2074838328E-06)*BET;
            //goto label(1002,1003),
            if(K1 == 1)     goto label1002;
            if(K1 == 2)     goto label1003;
            
        label1002:
            EPS=6824.687741*TET+((((((( 8.0*2017.271113*TET-7.0*14181.38926) *TET+6.0*45111.68742)*TET-5.0*85908.41667)*TET+4.0*109391.1774)* 
                TET-3.0*99023.81028)*TET+2.0*67332.77739)*TET-39412.86787)*TET2 -542.2063673+M1*(M12*TET+Z*17.0*(Z/29.0-Y/12.0))+(-2.616571843E-02 
                -2.284279054E-02*TET2+M3*(9.0*TET+.65371543)+M5*M4*(20.0*TET18*TET +1.15E-06))*BET-(12.0*TET10*TET+1.5108E-05)*M6*M6*M14+M9*M13* 
                (17.0*1.4188E-01+19.0*TET2)+M11*BET*.204D+00+21.0*M10*BET;
            uw0012= EPS*0.1674796981D+02;
            goto label1100 ;
            
        label1003:
            SIG1=6824.687741*Math.Log(TET)+(((((((9.0*2017.271113*TET-8.0 *14181.38926)*TET+7.0*45111.68742)*TET-6.0*85908.41667)*TET+ 
                5.0*109391.1774)*TET-4.0*99023.81028)*TET+3.0*67332.77739)*TET -2.0*39412.86787)*TET+20966.66205;
            SIG2=M1*M12+(-.152241179E-02-2.0*.2284279054E-01*TET+10.0*M3+ 19.0*M5*M4*TET18)*BET-11.0*M6*M6*M14*TET10+M9*(18.0*.14188E+00/ 
                TET+20.0*TET)*M13+M11*BET+20.0*M10*BET/TET;
            SIG=SIG1+SIG2;
            uw0012= SIG*0.258735822E-01;
            goto label1100;
            
        label1004:
            CHI=.497585887E-01*M1-.2616571843E-01+.152241179E-02*TET+ .2284279054E-01*TET2+M3*M2+M5-M6*(3.0*.1105710498E-08*BET2+2.0* 
                .217402035E-07*BET+.2074838328E-06)-M9*(.14188E+00+TET2)*(-3.0*M8 *M7+.2995284926E-03)+3.0*M11*(.204E+00-TET) +4.0*M10;

            uw0012= CHI*0.317E-02;
            
        label1100:
            return uw0012; 
        }   //END 

                    
        static double UW0013(double BET, double TET, double K1)
        {
            //IMPLICIT REAL *8 (A-J,L-Z);
            //IMPLICIT INTEGER [K] 

            //COMMON /GEBIET/ KGEB

            double BETVOR = 0.0E+00, TETVOR = 0.0E+00;
            double B = 0, X2 = 0, X3 = 0, X6 = 0, X10 = 0, X13 = 0, X24 = 0, X18 = 0, X27 = 0, X32 = 0, X54 = 0, BETL = 0, M11 = 0, M12 = 0, M21 = 0, M22 = 0, M23 = 0, M31 = 0, 
                M32 = 0, M41 = 0, M42 = 0, M51 = 0, M52 = 0, M53 = 0, M61 = 0, M62 = 0, M71 = 0, M72 = 0, M81 = 0, M82 = 0, N61 = 0, N81 = 0, N71 = 0, N82 = 0, SUMV9 = 0, 
                SUMV1 = 0, SUMV2 = 0, SUMV3 = 0, SUMV4 = 0, SUMV5 = 0, BETR4 = 0, BETR5 = 0, BETR6 = 0, R1 = 0, NEN6 = 0, NEN7 = 0, NEN8 = 0, SUMV6 = 0, SUMV7 = 0,
                SUMV8 = 0, BETLS = 0, SUMS9 = 0, SUMS = 0, EPS = 0, uw0013 = 0, SIG = 0, CHI = 0;
            //ENTRY HSV2PT (BET,TET,K1)
            KGEB=2;
            B = 0.7633333333;
            if (BETVOR == BET && TETVOR == TET) goto label2001 ;
            if (TETVOR == TET) goto label2000 ;
            TETVOR = TET ;
            X=Math.Exp(B*(1.0-TET)) ;
            X2= X*X ;
            X3= X2*X ;
            X6= X3*X3 ;
            X10= X6*X2*X2 ;
            X13= X10*X3 ;
            X18= X10*X6*X2 ;
            X24= X18*X6 ;
            X27= X24*X3 ;
            X32= X24*X6*X2 ;
            X54= X27*X27 ;
            BETL= (19.31380707*TET-34.17061979)*TET +15.74373327 ;
            M11= .6670375918E-01*X13 ;
            M12= 1.388983801*X3 ;
            M21= .8390104328E-01*X18 ;
            M22= .2614670893E-01*X2 ;
            M23= - .3373439453E-01*X ;
            M31= .4520918904*X18 ;
            M32= .1069036614*X10 ;
            M41= -.5975336707*X24*X ;
            M42= -.8847535804E-01*X13*X ;
            M51= .5958051609*X32 ;
            M52= -.5159303373*X27*X ;
            M53= .2075021122*X24 ;
            M61= .1190610271*X10*X2 ;
            M62= -.9867174132E-01*X10*X ;
            M71= .1683998803*X24 ;
            M72= -.5809438001E-01*X18 ;
            M81= .6552390126E-02*X24 ;
            M82= .5710218649E-03*X13*X;
            N61= .4006073948*X13*X;
            N71= .8636081627E-01*X18*X;
            N81= -.8532322921*X54;
            N82= .3460208861*X27;
            SUMV9=(((((523.5718623*X-2693.088365)*X+5745.984054)*X-6508.211677)*X+4126.607219)*X-1388.522425)*X+193.6587558;
            SUMV1 = M11 +M12;
            SUMV2= M21+M22+M23;
            SUMV3= M31+M32;
            SUMV4= M41+M42;
            SUMV5= M51+M52+M53;
            
        label2000:
            if (BETVOR == BET) goto label2004;
            BETVOR = BET;
            BETR4= 1.0/(BET*BET*BET*BET);
            BETR5= BETR4/BET;
            BETR6= BETR5/BET;
            
        label2004:
            R1 = BET/BETL ;
            R1= R1*R1*R1*R1*R1 ;
            R1= R1*R1 ;
            NEN6=BETR4+N61 ;
            NEN7=BETR5+N71 ;
            NEN8=BETR6+N81+N82 ;
            SUMV6=(M61+M62)/NEN6; 
            SUMV7=(M71+M72)/NEN7 ;
            SUMV8=(M81+M82)/NEN8 ;
            
        label2001:
            if ((K1-1) < 0)     goto label2006;
            if ((K1-1) == 0)     goto label2003;
            if ((K1-1) > 0)     goto label2003;

        label2003:
            BETLS=2.0*19.31380707 *TET-34.17061979 ;
            SUMS9=((((((6.0*523.5718623*X-5.0*2693.088365)*X+4.0*5745.984054)*X -3.0*6508.211677)*X+2.0*4126.607219)*X-1388.522425)*X)*B;
            SUMS =-B*((((((32.0*M51+28.0*M52+24.0*M53)*BET+25.0*M41+14.0*M42)*BET+ 18.0*M31+10.0*M32)*BET+18.0*M21+2.0*M22+M23)*BET+13.0*M11+3.0*M12)*BET 
                +(12.0*M61+11.0*M62-14.0*(M61+M62)*N61/NEN6)/NEN6+(24.0*M71+18.0*M72- 19.0*(M71+M72)*N71/NEN7)/NEN7 +(24.0*M81+14.0*M82-(M81+M82)*(54.0*N81 
                +27.0*N82)/NEN8)/NEN8)+BET*R1*(10.0*BETLS/BETL*SUMV9+SUMS9);
            //goto label(2002,2005),
            if(K1 == 1)     goto label2002;
            if(K1 == 2)     goto label2005;
            
        label2002:
            EPS=-(((3.0*.8565182058E-01*TET-2.0*.6547711697)*TET+.4330662834) *TET- 16.83599274)*TET+ 28.56067796 + SUMS*TET-((((SUMV5*BET+SUMV4)*
                BET+SUMV3)*BET +SUMV2)*BET +SUMV1)*BET-(SUMV8+SUMV7+SUMV6)+BET *R1*SUMV9;

            uw0013= EPS*0.1674796981E+02;
            goto label2100;
            
        label2005:
            SIG=-4.260321148*Math.Log(BET) +16.83599274*Math.Log(TET)-(((4.0*.8565182058E-01*TET-3.0*.6547711697)*TET+2.0*.4330662834)*TET-54.38923329)+ SUMS;
            uw0013= SIG*0.258735822E-01;
            goto label2100;
            
        label2006:
            CHI= 4.260321148*TET/BET-((((5.0*SUMV5*BET+4.0*SUMV4)*BET+3.0*SUMV3) *BET+2.0*SUMV2)*BET+SUMV1)-BETR5*((6.0*SUMV8/(NEN8*BET)+5.0*SUMV7/ 
                NEN7)/BET +4.0*SUMV6/NEN6)+11.0*R1*SUMV9;

            uw0013= 0.317E-02*CHI;
            
        label2100:
            return uw0013; 
        }       //END 
        

        static double V2T(double X)
        {
            return (((((((((0.1112020970E6*X-0.2742925181E6)*X+0.2903120606E6)*X-0.1715606251E6)*X+0.6182471587E5)*X-0.1384524815E5)*X+0.1867667009E4)*X-0.1299023268E3)*X+0.4026415669E1)*X+0.1000000272E1)*0.00317;
        }
        static double V1T(double X)
        {
            return ((((((((-0.4034574025E4*X+0.8088134131E4)*X-0.6805842363E4)*X+0.3190638964E4)*X-0.9476312526E3)*X+0.1928271795E3)*X-0.2598811457E2)*X+0.6434322470E0)*X+0.1000000276E1)*0.00317;
        }
        static double VBL(double X)
        {
            return (((((((-0.3961977501E1 * X + 0.7210030967E1) * X - 0.5363751719E1) * X + 0.2717785475E1) * X - 0.1516185332E1) * X + 0.7010388057E0) * X - 0.1656855080E0) * X + 0.2696080280E-1) * X + 0.9679608077E-3;
        }
        
        static double UW0014 (double A1, double A2, int K1, string s)
        {
            //IMPLICIT REAL *8 (A-H,O-Z)
            //COMMON /GEBIET/ KGEB
            //INTEGER K1,ITER
            bool REGION = false;
            int ITER;
            double P = 0, T = 0, uw0014 = 0, VU = 0, VO = 0, EPS = 0, PHU = 0, V0SCH = 0, TANAL = 0, V = 0, FAKT = 0, VS1 = 0, VS2 = 0, THU = 0, VO1 = 0, VU1 = 0, XN = 0, ZN = 0, DX = 0, XA = 0, ZA = 0, XM = 0, ZM = 0, H = 0;

            if(s == "HSV3PT")   goto HSV3PT;
            if(s == "HSV4PT")   goto HSV4PT;

        HSV3PT:
            //ENTRY HSV3PT (A1,A2,K1) 
            KGEB=3;
            REGION = true; 
            goto label105;

        HSV4PT:
            //ENTRY HSV4PT (A1,A2,K1);
            KGEB=4;
            REGION = false; 

        label105:
            P = A1*0.980665;
            T = A2-273.15;
            if ((Math.Abs(A1-225.5612) < 0.005) && (Math.Abs(A2-647.3) < 0.0005));
            goto label107;

        label108:
            if (K1 == 0) uw0014 = 0.00317;
            if (K1 == 1) uw0014 = 503.3;
            if (K1 == 2) uw0014 = 1.0612;
            return uw0014;
            
        label107:
            VU = ((1.286713286E-11 * T - 2.492307692E-9)*T - 1.179440559E-6) *T + 1.478454545E-3 ;
            VO = VBL(100.0/P)+0.3E-5;
            EPS = 0.0001 * P ;
            if (A1 < 224.0 || A1 > 230.0) goto label106;
            if (T < 372.0 || T > 380.0) goto label106;
            EPS = 0.000001 * P;

        label106:
            if((T - 374.15) < 0)    goto label20;
            if((T - 374.15) == 0)    goto label20;
            if((T - 374.15) > 0)    goto label110;
            
        label110:
            PHU = P*0.01;
            V0SCH =(((((((((1.101211789E-8 * PHU-6.981924867E-7)*PHU+1.953065850E-5)*PHU-3.169784636E-4)*PHU+3.300610029E-3)*PHU-2.300657013E-2)* 
                PHU+1.085698282E-1)*PHU-3.421447715E-1)*PHU+6.888092272E-1)*PHU -8.007371532E-1)*PHU+4.113976632E-1;
            TANAL = 10.0*((((((((((6.616012812E-7*PHU-4.481560656E-5)*PHU+1.346915038E-3)*PHU-2.363968558E-2)*PHU+2.682051444E-1)*PHU-2.054927920)*
                PHU+10.76884776)*PHU-38.13773381)*PHU+87.47690104)*PHU-117.6693241)*PHU+70.85844857);
            
            if ((T-415.0) < 0)  goto label115;
            if ((T-415.0) >= 0)  goto label112;
            
        label112:
            V = V0SCH + TANAL*(T-405.0) *0.0001;
            FAKT = 1.0E-6;
            goto label90;
            
        label115:
            if (P <= 221.2) TANAL = - TANAL;
            V = V0SCH + TANAL * 10.0*(T-380.0)*0.025E-04;
            FAKT = 4.0E-7;
            if (P < 300.0) FAKT = 1.0E-5;
            goto label90;
            
        label20:
            if (REGION) goto label25;
            VS1 =V1T(Math.Pow(((374.15-T)*0.15448787270199291E-02),0.25));
            VO = VS1 + 1.0E-6;
            V = VU+Math.Pow((1.0-P*0.001),3) *(VS1-VU);
            FAKT = 4.0E-7;
            if ( P < 300.0) FAKT = 4.0E-6;
            if (A1 < 225.56 && T > 370.0) FAKT = 1.0E-4;
            goto label90;
            
        label25:
            if ((A1-225.56121) <= 0)    goto label26;
            if ((A1-225.56121) > 0)    goto label111;
            
        label111:
            T = 374.1501;
            goto label110;
            
        label26:
            VS2 =V2T(Math.Pow(((374.15-T)*0.15448787270199291E-02),0.25));
            VU = VS2 - 1.0E-6;
            THU = T*0.01;
            V = VS2 + (((((8.05416755 * THU - 108.6608075)*THU+575.5885714) *THU -1405.501224)*THU+1480.883380)*THU-402.9979983 - P)/6000.0;
            FAKT = 2.0E-4;

        label90:
            ITER = 0;
            VO1 = VO*1.1 ;
            VU1 = VU*0.9 ;
            XN = V ;
            ZN = UW0016 (T,XN,3,REGION);
            DX = (ZN-P) * FAKT;
            XA = XN + DX;
            
            if ((XA-VU) < 0)    goto label3;
            if ((XA-VU) >= 0)    goto label2;
            
        label2:
            if ((XA-VO) <= 0)   goto label6;
            if ((XA-VO) > 0)   goto label5;
            
        label3:
            XA = VU;
            goto label6;
            
        label5:
            XA = VO;
            
        label6:
            ZA = UW0016 (T,XA,3,REGION);

        label12:
            XM=XA;
            ZM=ZA;
            
        label13:
            if((Math.Abs(ZA- P)- EPS) < 0)      goto label30;
            if((Math.Abs(ZA- P)- EPS) >= 0)      goto label14; 
            
        label14:
            XA = XN-(ZN- P)*(XN-XM)/(ZN-ZM);
            if (XA > VO1 || XA < VU1) XA = XM+(ZM-P)*FAKT;
            ZA = UW0016 (T,XA,3,REGION);
            
        label15:
            if (ITER > 50)      goto label28;
            
        label16:
            XN=XM;
            ZN=ZM;
            ITER = ITER + 1;
            goto label12;
            
        label28:
            //WRITE (16,29) A1,A2,XA,K1 
            sw16.WriteLine(" ***ITERATIONSGENAUIGKEIT NACH 50 SCHRITTEN NOCH NICHTERREICHT ***");
            sw16.WriteLine(" *** IN UW0014 (HSV3PT ODER HSV4PT) ***");
            sw16.WriteLine(" *** A1={0} A2={1} V={2} K1={3} ***", Math.Round(A1,4).ToString().PadLeft(9),
                Math.Round(A2,4).ToString().PadLeft(9), Math.Round(XA,7).ToString().PadLeft(11), K1.ToString().PadLeft(3));
            
        label30:
            V = XA;
            if (V <= 0.0) goto label31;
            if (K1 == 0) goto label99;
            
            H = UW0016 (T,V,K1,REGION) *0.238845896627D+00;
            uw0014 = H;
            return uw0014; 

        label99:
            uw0014 = V;
            return uw0014; 
            
        label31:
            //WRITE (16,32) V 
            sw16.WriteLine("0 ** ITERATION IN REGION 3,4 FALSCH V = {0} **", Math.Round(V,7).ToString().PadLeft(15));   //',  G15.7,'
            return uw0014; 
        }   //END

        
        static double UW0016(double T,double V,double K1,bool REGION)
        {
            double VVOR = 0.0E+00, TVOR = 0.0E+00;
            double uw0016 = 0, CHI = 0, CHI5 = 0, RHO = 0, RHO2 = 0, RHO5 = 0, TET = 0, TETR = 0, TETR22 = 0, 
                TETM = 0, TETM2 = 0, TETM3 = 0, Y2 = 0, Y3 = 0, Y31 = 0, M1 = 0, SUM11 = 0, SUM21 = 0, SUM31 = 0, k1 = 0,
                M2 = 0, SUM01 = 0, SUM61 = 0, SMD31 = 0, SMD41 = 0, SUM51 = 0, SUM12 = 0, SUM22 = 0, SUM32 = 0, SUM62 = 0, SUM72 = 0,
                LNCHI = 0, SUM41 = 0, SMD32 = 0, SUM42 = 0, SUM52 = 0, SUM02 = 0, SUM71 = 0, EPS = 0, BET = 0, SIG = 0;
            
            
            if (TVOR == T && VVOR == V) goto label30;
            if (VVOR == V) goto label31;
            VVOR = V;
            CHI = V*315.457413249211D+00;
            CHI5 = CHI*CHI*CHI*CHI*CHI;
            RHO = 1.0/CHI;
            RHO2 = RHO*RHO;
            RHO5 = RHO2*RHO2*RHO;
            M2 = -.509073985E-03*RHO5;
            
        label31:
            if (TVOR == T) goto label32;
            TVOR = T;
            TET=(T+273.15D+00)/647.3D+00;
            TETR= 1.0/TET;
            TETR22=TETR*TETR*TETR*TETR;
            TETR22= TETR22*TETR22*TETR22*TETR22*TETR22*TETR*TETR;
            TETM=TET-1.0;
            TETM2=TETM*TETM;
            TETM3=TETM2*TETM;
            Y=(1.0-TET)/.373088213E-01;
            Y2=Y*Y;
            Y3=Y2*Y;
            Y31=Y3*Y3;
            Y31=Y*Y31*Y31*Y31* Y31*Y31;
            
        label32:
            M1 = CHI5 / (TET*TET);
            
        label30:
            if (K1 == 2) goto label3003;
            SUM01=(((((((((-10.0*.169470576E-02*RHO +9.0*.194129239E-01)*RHO - 8.0*.820900544E-01)*RHO +7.0*.116250363)*RHO+6.0*.223138085)*RHO- 
                5.0*1.146495880)*RHO +4.0*2.104197070)*RHO-3.0*2.768070380)*RHO + 2.0*4.204607520)*RHO -7.771750390)*RHO2;
            SUM11=((((5.0*.627523182E-01*RHO-4.0*.993865043)*RHO +3.0*5.40437422)*RHO-2.0*12.0389004)*RHO+12.3679455)*RHO2;
            SUM21=((((( 6.0*.324881158*RHO-5.0*1.66568935)*RHO+4.0*1.55546326) *RHO +3.0*4.04172459)*RHO-2.0*14.1619313)*RHO+43.1430538)*RHO2;
            SUM31=((((((( -8.0*.546529566*RHO +7.0*2.12145492)*RHO +6.0*1.09717462)*RHO -5.0*12.616064)*RHO+4.0*7.51895954)*RHO +3.0*35.8636517)*RHO 
                -2.0*83.615338)*RHO +80.8859747)*RHO2;
            SUM61=((( .6828087013E-01*TETR -.259641547)*TETR +.369707142)* TETR -.2336365955)*TETR +.5528935335E-01;
            
            if (REGION) goto label3004;
            SMD31=((-4.0*.1138791156*RHO +3.0*.9070982602)*RHO -2.0*2.690899373) *RHO +3.526389874;
            SUM41= ((4.0*.8270860589E-01*RHO -3.0*.6661557013)*RHO +2.0*1.996765362)*RHO -2.642777743;
            SUM51=2.0* .1155018309E-02*CHI -.1236521258E-02;
            
        label3004:
            if (K1 == 3) goto label3001;
            
        label3003:
            SUM12=(((( .627523182E-01*RHO -.993865043)*RHO +5.40437422)*RHO -12.0389004)*RHO+12.3679455)*RHO2;
            SUM22=((((( .324881158*RHO -1.66568935)*RHO +1.55546326)*RHO + 4.04172459)*RHO -14.1619313)*RHO +43.1430538)*RHO2;
            SUM32=((((((( -.546529566*RHO +2.12145492)*RHO +1.09717462)*RHO -12.616064)*RHO +7.51895954)*RHO +35.8636517)*RHO -83.615338)*RHO +80.8859747)*RHO2;
            SUM62=(((6.0*.6828087013E-01*TETR -5.0*.259641547)*TETR +4.0* .369707142)*TETR -3.0*.2336365955)*TETR +2.0*.5528935335E-01;
            SUM72=((((((( 9.0*43815.71428 *TETM -8.0*70535.56432)*TETM +7.0* 45429.1663)*TETM -6.0*14623.35698)*TETM +5.0*2357.09622)*TETM - 4.0*180.203957)*TETM +3.0*22.20723208)*TETM -2.0*151.8783715)*TETM - 257.1600553;
            LNCHI = Math.Log(CHI);
            if (REGION) goto label3002;
            SMD32= (((-.1138791156*RHO +.9070982602)*RHO -2.690899373)*RHO +3.526389874)*RHO -1.717616747;
            SUM42=(((.8270860589E-01 *RHO -.6661557013)*RHO+1.996765362)*RHO  -2.642777743)*RHO +1.301023613;
            SUM52=(.1155018309E-02*CHI -.1236521258E-02)*CHI+.3426663535E-03;
            
        label3002:
            if (K1 == 2) goto label3006;
            SUM02=((((((((( -.169470576E-02*RHO +.194129239E-01)*RHO -.820900544E-01)*RHO +.116250363)*RHO +.223138085)*RHO -1.14649588)*RHO +2.10419707)*RHO -2.76807038)*RHO+4.20460752)*RHO -7.77175039)*RHO2;
            SUM71= (((((((43815.71428*TETM -70535.56432)*TETM +45429.1663 )* TETM -14623.35698)*TETM +2357.09622)*TETM -180.203957)*TETM + 22.20723208)*TETM -151.8783715)*TETM -257.1600553;
            EPS=-213.164655 +(-.708636085 +SUM01+SUM02 -SUM12) *CHI +3.435853127*LNCHI +(-202.8889018+ (7.889065755 + SUM11 -2.0*SUM22)* CHI - 58.731065*LNCHI)*TETM +(-29.3655325 +( 8.597677995 +SUM21 -SUM22 
                -3.0*SUM32)*CHI - 54.35179489 *LNCHI) *TETM2 +(-8.32875413 +(- .2384525526E-04 +SUM31-2.0*SUM32)*CHI -16.65750826*LNCHI)*TETM3 +(.6347350848E-04+28.0*M2)*TETR22 -(.6623322624E-04 +29.0*M2) * 
                TETR22*TETR +M1*CHI*(SUM62 -5.0*SUM61)-(SUM71+TET *(SUM72-SUM71));
            if (REGION) goto label3005;
            EPS=(-2.0*Y +3.0/.373088213E-01)*Y2*SMD32 +(-3.0*Y+4.0/.373088213E-01)*Y3*SUM42 +Y3*SMD31*RHO -Y31*(( 31.0*Y -32.0/.373088213E-01)*SUM52 +Y*CHI*SUM51) +Y3*Y*SUM41*RHO + EPS;

        label3005:
            uw0016 = EPS*70.1204D+00;
            return uw0016; 
            
        label3001:
            BET=SUM01+4.311577033*RHO+.17226042E-01 +(SUM11+7.74743016*RHO - .708636085)*TETM +(SUM21 -29.3655325*RHO +4.29885092)*TETM2 + (SUM31 -8.32875413 *RHO -.794841842E-05)*TETM3 +5.0*RHO*M2 *TETR22 *TETR*TETM -6.0*M1*SUM61;
            if (REGION) goto label3007;
            BET=RHO2*Y3* (SMD31+Y*SUM41)-Y31*Y*SUM51 + BET;

        label3007:
            uw0016 = BET*221.2D+00;
            return uw0016; 
            
        label3006:
            SIG=-(( .708636085+SUM12)*CHI -7.74743016*LNCHI +210.636332) -2.0*((-4.29885092 +SUM22)*CHI +29.3655325*LNCHI)*TETM -3.0*((.794841842E-05+SUM32) *CHI +8.32875413*LNCHI) *TETM2 +(.275971776E-05 + M2) *(22.0-23.0*TETR)*TETR22 *TETR -210.636332 *Math.Log(TET) +M1*CHI*TETR*SUM62-SUM72;
            if (REGION) goto label3008;
            SIG=1.0/.373088213E-01*(3.0*Y2*SMD32 +4.0*Y3*SUM42+32.0*Y31*SUM52)+SIG;

        label3008:
            uw0016 = SIG*0.1083275143E+00;
            return uw0016; 
        }   //END 
            

        static double UW0018(double T, double V)
        {
            double TQ, RQ, DT, DT6, SW, QW, RW, WL0, EXP1, EXP2, EXP3, WLQ, DWL, uw0018 = 0;
            //ENTRY WLTF(T,V)

            if(T >= 273.15 && T <= 1073.15) goto label50;
            
            sw16.WriteLine("0***** FALSCHE TEMPERATUR WLTF-BERECHNUNG T= {0} GRD K \n\n", Math.Round(T,2).ToString().PadLeft(8));
            goto label100;

        label50:
            TQ=T/647.3;
            RQ=1/(317.7*V);
            DT=Math.Abs(TQ-1)+3.08976E-3;
            DT6=Math.Pow(DT,(-0.6));
            SW=10.0932*DT6;
            if(TQ >= 1.0) SW=1/DT;
            QW=2.0+8.22994E-2*DT6;
            RW=QW*TQ+1.0;
            WL0=Math.Sqrt(TQ)*(((-4.22464E-3*TQ+1.56146E-2)*TQ+2.99621E-2)*TQ+1.02811E-2);
            EXP1=-0.171587*Math.Pow((RQ+2.39219),2);
            
            if(EXP1 < -675.0) EXP1=-675.0;
            EXP2=.642857*(1-Math.Pow(RQ,2.8));
            if(EXP2 < -675.0) EXP2=-675.0;
            EXP3= -4.11717*Math.Pow(TQ,1.5)-6.17937/Math.Pow(RQ,5);
            if(EXP3 < -675.0) EXP3=-675.0;
            WLQ=-0.397070+0.400302*RQ+1.06*Math.Exp(EXP1);
            DWL=(7.01309E-2/Math.Pow(TQ,10)+1.1852E-2)*Math.Pow(RQ,1.8)*Math.Exp(EXP2) +1.69937E-3*SW*Math.Pow(RQ,QW)*Math.Exp(QW/RW*(1-Math.Pow(RQ,RW)))-1.02*Math.Exp(EXP3);
            uw0018=WL0+WLQ+DWL;
            
        label100:
            return uw0018;
        }   //END


        static double UW0019(double TC, double V)
        {
            //ENTRY ZAEH(TC,V)
            double TET,PHI,ZW1,ZW2,ZW3,uw0019 = 0, T;
            int I, J;

            //DIMENSION B(6,5)
            double[,] B = {{0,0,0,0,0,0}, {0,	0.501938,	0.235622,	-.274637,	0.145831,	-.0270448},
                            {0,	 0.162888,	 0.789393,	-0.743539,	 0.263129,	-.0253093},
                            {0,	 -0.130356,	 0.673665,	-0.959456,	 0.347247,	-.0267758},
                            {0,	 0.907919,	 1.207552,	-0.687343,	 0.213486,	-.0822904},
                            {0,	 -0.551119,	 0.0670665,	-0.497089,	 0.100754,	.0602253},
                            {0,	 0.146543,	 -.084337,	 0.195286,	 -0.032932,	-0.0202595}};

            if(TC >= 273.15 && TC <= 1073.15) goto label50;
            
            sw16.WriteLine("0***** FALSCHE TEMPERATUR ZAEH-BERECHNUNG T= {0} GRD K\n\n", Math.Round(TC, 2).ToString().PadLeft(8));
            goto label100;

        label50:
            if (TC > 647.17 && TC <= 647.27) TC = 647.17;
            if (TC > 647.27 && TC < 647.37) TC = 647.37;
            T = 647.27/TC;
            TET = T-1.0;
            PHI = 1.0/(V*0.317763E3)-1.0;
            
            ZW1 =1.0/(Math.Sqrt(T)*(((-3.6744E-3*T+1.05287E-2)*T+1.77624E-2)*T+1.81583E-2))*1.0E-6;
            ZW2 = 0.0;
            
            for(I = 1; I <= 6; I++) //DO 60 I=1,6
            {
                ZW3 = Math.Pow(TET,(I-1));
                for(J = 1; J <= 5; J++) //DO 60 J=1,5
                    ZW2 = ZW2 + B[I,J]*ZW3* Math.Pow(PHI,(J-1));
            }   //C
            uw0019= ZW1*Math.Exp(1.0/(V*0.317763E3)*ZW2);
            
        label100:
            return uw0019;
        }   //END
        

        static double UW0260(double T, string s)
        {
            int KZ = 0;
            double A = 0, B = 0, SIG1 = 0, P = 0, ROI = 0, ROII = 0, DT = 0, T1 = 0, uw0260 = 0;
            if(s == "SIG")      goto SIG;
            if(s == "ALAP")      goto ALAP;

        SIG:
            //ENTRY SIG(T) 
            KZ=1;
            goto label10;
            
        ALAP:
            //ENTRY ALAP(T) 
            KZ=2;
             
        label10:
            if (T <= 647.3) goto label20;
            sw16.WriteLine(" T GROESSER T-KRITISCH NICHT ZULAESSIG ");
            B=0.0;
            A=A/B;
            B=A*A/B;
            //STOP 
            Console.ReadKey();
            Environment.Exit(0);
            
        label20:
            DT= 647.3-T;
            SIG1=0.0;
            if (DT == 0.0) goto label30;
            POL = ((-1.149719290E-11*DT+1.286274650E-8)*DT-5.752805180E-6)*DT*DT*DT+1.121404688E-3*DT*DT;
            SIG1=1.160936807E-01*DT*DT/(1.0+0.83*DT)+ POL;
            if (KZ == 2) goto label40;
            
        label30:
            uw0260 = SIG1;
            return uw0260; 

        label40:
            P = UW0011(T,2);
            ROI = 1.0/VISUM(P,T1,-20);
            ROII= 1.0/VISUM(P,T1,-10);
            uw0260 = Math.Sqrt(SIG1/(ROI-ROII)*101.972);
            return uw0260; 
        }   //END


        static void KRDUMP( /*iout*/)    //iout = 16//
        {
            string record;
            sw16.WriteLine("1");
            sw16.WriteLine("         1         2         3         4         5         6         7         8");
            sw16.WriteLine(" 12345678901234567890123456789012345678901234567890123456789012345678901234567890");
            sw16.WriteLine(" ");
            
            //for(I = 1; I <= 1000; I++) //DO i=1,1000
            //{
            //    read(15,'(a)',end=999) record
            //    write(iout,'(1x,a)') record
            //}   //enddo
            while (sr15.Peek() >= 0)
            {
                record = sr15.ReadLine();
                sw16.WriteLine("{0}", record);
            }

        label999:
            //rewind 15
            sw16.WriteLine(" ");
            sw16.WriteLine("         1         2         3         4         5         6         7         8");
            sw16.WriteLine(" 12345678901234567890123456789012345678901234567890123456789012345678901234567890");
            return;
        }   //END

        
        static void PLOT(double XEND, double YEND, int IPEN)
        {
            //REAL XEND,YEND
            //INTEGER IPEN
            double[] XPHIGS = new double[3], YPHIGS = new double[3];
            string txb, tyb, txpos, typos;
            double XPOS, YPOS;
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            

            intens(ILINECO);
            
            if ( Math.Abs(IPEN) == 2 ) //THEN
            {
                XPHIGS[1] = XCURRENT;
                XPHIGS[2] = ( XEND + XORG ) * SCALEX;
                YPHIGS[1] = YCURRENT;
                YPHIGS[2] = ( YEND + YORG ) * SCALEY;
                if ( XPHIGS[2] > XMAX ) XMAX = XPHIGS[2];
                if ( YPHIGS[2] > YMAX ) YMAX = YPHIGS[2];
                if ( XPHIGS[2] < XMIN ) XMIN = XPHIGS[2];
                if ( YPHIGS[2] < YMIN ) YMIN = YPHIGS[2];
                XPHIGS[1] = XPHIGS[1]/ 1.0E04;
                XPHIGS[2] = XPHIGS[2]/ 1.0E04;
                YPHIGS[1] = YPHIGS[1]/ 1.0E04;
                YPHIGS[2] = YPHIGS[2]/ 1.0E04;
                if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
                {
                    //c   PPL( 2, XPHIGS, YPHIGS)
                }   //ENDIF

                XPOS = ( XEND + XORG ) * SCALEX;
                YPOS = ( YEND + YORG ) * SCALEY;
                //write(txb,'(f8.2)') XCURRENT
                txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
                if(XCURRENT < 1.0 && XCURRENT >= 0.0)   //txb(5:5) = '0'
                {
                    sb = new StringBuilder(txb);
                    sb.Remove(4,1);
                    sb.Insert(4,"0");
                    txb = sb.ToString();
                }
                if(XCURRENT < 0.0 && XCURRENT > -1.0)   //txb(4:5) = '-0'
                {
                    sb = new StringBuilder(txb);
                    sb.Remove(3,2);
                    sb.Insert(3,"-0");
                    txb = sb.ToString();
                }
                
                //write(tyb,'(f8.2)') YCURRENT
                tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
                if(YCURRENT < 1.0 && YCURRENT >= 0.0)   //tyb(5:5) = '0'
                {
                    sb = new StringBuilder(tyb);
                    sb.Remove(4,1);
                    sb.Insert(4,"0");
                    tyb = sb.ToString();
                }
                if(YCURRENT < 0.0 && YCURRENT > -1.0)   //tyb(4:5) = '-0'
                {
                    sb = new StringBuilder(tyb);
                    sb.Remove(3,2);
                    sb.Insert(3,"-0");
                    tyb = sb.ToString();
                }
                //write(txpos,'(f8.2)') XPOS
                txpos = Math.Round(XPOS,2).ToString().PadLeft(8);
                if(XPOS < 1.0 && XPOS >= 0.0)   //txpos(5:5) = '0'
                {
                    sb = new StringBuilder(txpos);
                    sb.Remove(4,1);
                    sb.Insert(4,"0");
                    txpos = sb.ToString();
                }
                if(XPOS < 0.0 && XPOS > -1.0)   //txpos(4:5) = '-0'
                {
                    sb = new StringBuilder(txpos);
                    sb.Remove(3,2);
                    sb.Insert(3,"-0");
                    txpos = sb.ToString();
                }
                
                //write(typos,'(f8.2)') YPOS
                typos = Math.Round(YPOS,2).ToString().PadLeft(8);
                if(YPOS < 1.0 && YPOS >= 0.0)    //typos(5:5) = '0'
                {
                    sb = new StringBuilder(typos);
                    sb.Remove(4,1);
                    sb.Insert(4, "0");
                    typos = sb.ToString();
                }
                if(YPOS < 0.0 && YPOS > -1.0)   //typos(4:5) = '-0'
                {
                    sb = new StringBuilder(typos);
                    sb.Remove(3,5);
                    sb.Insert(4, "0");
                    txb = sb.ToString();
                }
                if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
                {
                    //write(77,1000) txb,tyb,txpos,typos
                    sw77.WriteLine("( command \"line\" ( list {0} {1} ) ( list {2} {3} ) \"\" )");
                }    //ENDIF
                //1000 format('( command "line" ( list ',a,' ',a,' ) ( list ', a,' ',a,' ) "" )')
                XCURRENT = ( XEND + XORG ) * SCALEX;
                YCURRENT = ( YEND + YORG ) * SCALEY;
                if ( XCURRENT > XMAX ) XMAX = XCURRENT;
                if ( YCURRENT > YMAX ) YMAX = YCURRENT;
                if ( XCURRENT < XMIN ) XMIN = XCURRENT;
                if ( YCURRENT < YMIN ) YMIN = YCURRENT;
                if ( IPEN == -2 ) //THEN
                {
                    XORG = XORG + XEND;
                    YORG = YORG + YEND;
                }   //ENDIF
            }   //ENDIF

            if (Math.Abs(IPEN) == 3 ) //THEN
            {
                XCURRENT = ( XEND + XORG ) * SCALEX;
                YCURRENT = ( YEND + YORG ) * SCALEY;
                if ( XCURRENT > XMAX ) XMAX = XCURRENT;
                if ( YCURRENT > YMAX ) YMAX = YCURRENT;
                if ( XCURRENT < XMIN ) XMIN = XCURRENT;
                if ( YCURRENT < YMIN ) YMIN = YCURRENT;
                if ( IPEN == -3 ) //THEN
                {
                    XORG = XORG + XEND;
                    YORG = YORG + YEND;
                }   //ENDIF
            }   //ENDIF
            return;
        }   //END


        static void ELIPS(double xels, double yels, double x, double y, double z, double a, double b, double i)
        {
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            Console.WriteLine("ELIPS: xels,yels,x,y,z,a,b,i");
            Console.WriteLine("{0}  {1}  {2}  {3}  {4}  {5}  {6}  {7} ", xels, yels, x, y, z, a, b, i);
            return;
        }   //END


        static void LDPLOT(char PKRCHAR)
        {
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            //CHARACTER*1 PKRCHAR
            return;
        }   //END


        static void DINFRM (int IDINZ, int DINX, int IDINB, double FACT )
        {
            //INTEGER PHIGSWSTPKR1
            string flisp;
            //integer errnr
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ ICHOICE
            //common/popup/ldr,recFS
            //integer errind
            //integer prequ,pecho
            //character*80 rec[2]
            string ttyname  = "              ";
            //,ttynam[10] ! [10] added by kiran
            //double[,] matr(3,3),matx(3,3)
            double[] win = {0, 0.0,1.0,0.0,1.0 };
            double[] view = {0, 0.0,1.0,0.0,1.0 };
            double[] clip = {0, 0.0,1.0,0.0,1.0 };
            string pkrlabel;
            bool pkrphigs;
            
            string[] banner = {"  ",  " GGGGG  RRRRRR     A    PPPPPP  H     H   III    CCCCC   SSSSS ",
                                      "G     G R     R   A A   P     P H     H    I    C     C S     S", 
                                      "G       R     R  A   A  P     P H     H    I    C       S     ", 
                                      "G  GGGG RRRRRR  A     A PPPPPP  HHHHHHH    I    C        SSSSS ",
                                      "G     G R   R   AAAAAAA P       H     H    I    C             S", 
                                      "G     G R    R  A     A P       H     H    I    C     C S     S", 
                                      " GGGGG  R     R A     A P       H     H   III    CCCCC   SSSSS "};
            
            pkrlabel = "B H E L - Ramachandrapuram - TC & GT Engineering";
            string[] recpkr = {"", "Zoom Window", "Zoom Previous", "Zoom Original", "  ", "Pan", " ","Exit"};
            int[] reclen = {0, 11,13,13,1,3,1,4};
            int locdevz,petz;
            locdevz = 3;
            petz = 3;
            ldr = 0;
            pkrphigs = false;
            XCURRENT = 0.0;
            YCURRENT = 0.0;
            XORG = 0.0;
            YORG = 0.0;
            XMAX = -10000.0;
            YMAX = -10000.0;
            XMIN = 10000.0;
            YMIN = 10000.0;
            SCALEX = 1.0;
            SCALEY = 1.0;
            //ttyname = ttynam[5];
            
            if( ttyname.Substring(8,1) == "p") 
                pkrphigs = true;    //c 1 system('clear') !commented by kiran
            
        label1:
            Console.WriteLine("*******************************************************************************");
            for(int ipkr = 1; ipkr <= 7; ipkr++) //DO ipkr = 1,7
            {
                Console.WriteLine("*       {0}              *", banner[ipkr]);
            }   //enddo
            Console.WriteLine("*******************************************************************************");
            Console.WriteLine("* Enter :                                                                     *");
            Console.WriteLine("*******************************************************************************");
            Console.WriteLine("*          0. No graphical output                                             *");
            Console.WriteLine("*          1. Script File for AutoCAD only                                    *");
            
            if ( pkrphigs )
            {
                Console.WriteLine("*          2. Phigs Display only on Sun Terminal                              *");
                Console.WriteLine("*          3. Both Script file & Sun Phigs Display on Sun Terminals           *");
            }
            Console.WriteLine("*                                                                             *");
            Console.WriteLine("*******************************************************************************");
            Console.WriteLine("            Enter your Choice :");
            ICHOICE = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine(" ");
            Console.WriteLine(" ");
            if ( pkrphigs ) //THEN
            {
                if ( ICHOICE < 0 || ICHOICE > 3 ) //THEN
                    goto label1;    //ENDIF
            }
            else
            {
                if ( ICHOICE < 0 || ICHOICE > 1 ) //THEN
                    goto label1;    //ENDIF
            }   //ENDIF
            //if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            //c OPEN(UNIT = 3, FILE='PHIGS.ERR', STATUS='UNKNOWN')
            //ENDIF
            
            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
            {
                Console.WriteLine("Give the Script file name (max 8 characters) :");
                flisp = Console.ReadLine();
                flisp = flisp + ".scr";
                //iipkr = index( flisp, '.scr')
                //if ( iipkr == 0 ) //THEN
                //{
                //    iipkr = index(flisp,'.') -1;
                //    if ( iipkr < 0 ) iipkr = 8
                //    if( iipkr == 0 ) //THEN
                //    {
                //        iipkr = index(flisp,' ') - 1
                //        if ( iipkr <= 0 || iipkr > 8 ) iipkr=8;
                //    }   //ENDIF
                //    flisp = flisp(:iipkr) // '.scr'
                //    write(*,'(5x,A)') 'Script File is ' // flisp
                //}   //ENDIF
                Console.WriteLine("Script File is: {0}", flisp);
                sw77 = new StreamWriter(flisp);
            }   //ENDIF

            FACTOR(FACT);
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {
                intens(1);
                txtclr(1);
                if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
                {
                    sw77.WriteLine("( command \"ltscale\" 20 )");
                    sw77.WriteLine("( command \"style\" \"\" \"monotxt\" \"\" \"\" \"\" \"\" \"\" \"\")");
                }
            }    //ENDIF        

            return;
        }   //END
        

        static void INIT(string PKR1, string PKR2, int IPKR, int JPKR)
        {
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            //CHARACTER*4 PKR1,PKR2
            return;
        }      //END

        
        static void MODE (int INDEX, double VALUE )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/termtype/ ICHOICE

            if ( INDEX == 2 ) //THEN
            {
                if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
                {}  //ENDIF
                if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
                    sw77.WriteLine("( command \"style\" \"X\" \"\" \"\" {0} \"\" \"\" \"\" \"\" )", Math.Round(VALUE,3).ToString().PadLeft(5));    //ENDIF
            }//ENDIF
            
            return;
        }   //end

        
        static void FACTOR(double XFAKT )
        {
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            //C
            double YFAKT = XFAKT;
            SCALEX = XFAKT;
            SCALEY = YFAKT;
            
            return;
        }   //END
        

        static void NEWPEN (int ICOLOR)
        {
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            //common/color/ILINECO,itextco

            int ICOLOR1 = ICOLOR;
            ILINECO = ICOLOR;
            if ( ICOLOR == 0 ) ICOLOR1 = 1;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
                ;   //ENDIF
            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
            {
                //write(77,1000) icolor1;     //ENDIF 
                sw77.WriteLine("( command \"color\" {0} )", ICOLOR1);
            }
            return;
        }   //END

        
        static void AROHD(double XPRES,double YPRES,double XTIP,double YTIP,double ALEN,double AWID,int ICODE)
        {
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            double[] XPHIGS = new double[6], YPHIGS = new double[6];
            double PI, X1, Y1, X2, Y2, X3, Y3, X4, Y4, X5, Y5, THETA = 0, XPOS, YPOS;
            string txb, tyb, txpos, typos;

             PI = 4.0 * Math.Atan(1.0);
            X1 = XPRES;
            Y1 = YPRES;
            
            X2 = XTIP;
            Y2 = YTIP;
            
            if ( X2 == X1 ) //THEN
                if ( Y2 > Y1 ) //THEN
                    THETA = PI / 2.0;
                else
                    THETA = 3.0 * PI / 2.0;     //ENDIF
            //ENDIF

            if ( Y2 == Y1 ) //THEN
                if ( X2 > X1 ) //THEN
                    THETA = 0.0;
                else
                    THETA = PI;     //ENDIF
            //ENDIF
            
            if ( X1 != X2 && Y1 != Y2 ) //THEN
                THETA = Math.Atan (( Y2 - Y1 ) / ( X2 - X1 ));   //ENDIF
            
            X5 = X2 - ALEN * Math.Cos ( THETA );
            Y5 = Y2 - ALEN * Math.Sin ( THETA );
            
            if ( AWID == 0.0 ) AWID = 2.0 / 3.0 * ALEN;
            
            X3 = X5 - AWID * Math.Sin ( THETA ) / 2.0;
            Y3 = Y5 + AWID * Math.Cos ( THETA ) / 2.0;
            
            X4 = X5 + AWID * Math.Sin ( THETA ) / 2.0;
            Y4 = Y5 - AWID * Math.Cos ( THETA ) / 2.0;
            
            XCURRENT = ( XPRES + XORG ) * SCALEX;
            YCURRENT = ( YPRES + YORG ) * SCALEY;
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;
            
            X2 = ( X2 + XORG ) * SCALEX;
            Y2 = ( Y2 + YORG ) * SCALEY;
            
            X3 = ( X3 + XORG ) * SCALEX;
            Y3 = ( Y3 + YORG ) * SCALEY;
            
            X4 = ( X4 + XORG ) * SCALEX;
            Y4 = ( Y4 + YORG ) * SCALEY;
            XPHIGS[1] = XCURRENT;
            XPHIGS[2] = X2;
            XPHIGS[3] = X3;
            XPHIGS[4] = X4;
            XPHIGS[5] = X2;
            YPHIGS[1] = YCURRENT;
            YPHIGS[2] = Y2;
            YPHIGS[3] = Y3;
            YPHIGS[4] = Y4;
            YPHIGS[5] = Y2;
            
            for(int iplot = 1; iplot <= 4; iplot++) //DO IPLOT=1,4
            {
                XPOS = XPHIGS[iplot + 1];
                YPOS = YPHIGS[iplot + 1];
                //write(txb,'(f8.2)') XPHIGS( iplot );
                txb = Math.Round(XPHIGS[iplot],2).ToString().PadLeft(8);
                if(XCURRENT < 1.0 && XCURRENT >= 0.0) //txb(5:5) = '0';
                {
                    sb = new StringBuilder(txb);
                    sb.Remove(4,1);
                    sb.Insert(4,"0");
                    txb = sb.ToString();
                }
                if(XCURRENT < 0.0 && XCURRENT > -1.0) //txb(4:5) = '-0';
                {
                    sb = new StringBuilder(txb);
                    sb.Remove(3,2);
                    sb.Insert(3,"-0");
                    txb = sb.ToString();
                }
                //write(tyb,'(f8.2)') YPHIGS[iplot];
                tyb = Math.Round(YPHIGS[iplot],2).ToString().PadLeft(8);
                if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0';
                {
                    sb = new StringBuilder(tyb);
                    sb.Remove(4,1);
                    sb.Insert(4,"0");
                    tyb = sb.ToString();
                }
                if(YCURRENT < 0.0 && YCURRENT > -1.0) //tyb(4:5) = '-0';
                {
                    sb = new StringBuilder(tyb);
                    sb.Remove(3,2);
                    sb.Insert(3,"-0");
                    tyb = sb.ToString();
                }
                
                //write(txpos,'(f8.2)') XPOS;
                txpos = Math.Round(XPOS,2).ToString().PadLeft(8);
                if(XPOS < 1.0 && XPOS >= 0.0) //txpos(5:5) = '0';
                {
                    sb = new StringBuilder(txpos);
                    sb.Remove(4,1);
                    sb.Insert(4,"0");
                    txpos = sb.ToString();
                }
                if(XPOS < 0.0 && XPOS > -1.0) //txpos(4:5) = '-0';
                {
                    sb = new StringBuilder(txpos);
                    sb.Remove(3,2);
                    sb.Insert(3,"-0");
                    txpos = sb.ToString();
                }
                //write(typos,'(f8.2)') YPOS;
                typos = Math.Round(YPOS,2).ToString().PadLeft(8);
                if(YPOS < 1.0 && YPOS >= 0.0) //typos(5:5) = '0';
                {
                    sb = new StringBuilder(typos);
                    sb.Remove(4,1);
                    sb.Insert(4,"0");
                    typos = sb.ToString();
                }
                if(YPOS < 0.0 && YPOS > -1.0) //typos(4:5) = '-0';
                {
                    sb = new StringBuilder(typos);
                    sb.Remove(3,2);
                    sb.Insert(3,"-0");
                    typos = sb.ToString();
                }
                if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
                {
                    //write(77,1000) txb,tyb,txpos,typos  //ENDIF
                    sw77.WriteLine("( command \"line\" ( list {0} {1} ) ( list {2} {3} ) \"\" )", txb,tyb,txpos,typos);
                }
            }   //ENDDO
            
            XPHIGS[1] = XCURRENT / 1.0E04;
            XPHIGS[2] = X2 / 1.0E04;
            XPHIGS[3] = X3 / 1.0E04;
            XPHIGS[4] = X4 / 1.0E04;
            XPHIGS[5] = X2 / 1.0E04;
            YPHIGS[1] = YCURRENT / 1.0E04;
            YPHIGS[2] = Y2 / 1.0E04;
            YPHIGS[3] = Y3 / 1.0E04;
            YPHIGS[4] = Y4 / 1.0E04;
            YPHIGS[5] = Y2 / 1.0E04;

            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}  ////ENDIF
            
            XCURRENT = X4;
            YCURRENT = Y4;
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;
            
            return;
        }   //END


        static void WHERE_(ref double XPRESENT, ref double YPRESENT )
        {
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE

            XPRESENT = XCURRENT/SCALEX - XORG;
            YPRESENT = YCURRENT/SCALEY - YORG;

            return;
        }   //END

        
        static void SYMBOL(double XPOS, double YPOS, double HEIGHT, string STRING, double ANGLE, int NUM)
        {
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            //CHARACTER*80 STRING
            double XCUR = 0, YCUR = 0;
            string txb, tyb, txpos, typos, thight, tangle;
            //real PI
            double SCALEF = 1.0;

            if ( XPOS == 999.0 || YPOS == 999.0 ) //THEN
            {
                WHERE_(ref XCUR, ref YCUR );
                if ( XPOS == 999.0 && YPOS != 999.0 ) //THEN
                {
                    XCURRENT = ( XCUR + XORG ) * SCALEX;
                    YCURRENT = ( YPOS + YORG ) * SCALEY;
                }   //ENDIF
                if ( YPOS == 999.0 && XPOS != 999.0 ) //THEN
                {
                    YCURRENT = ( YCUR + YORG ) * SCALEY;
                    XCURRENT = ( XPOS + XORG ) * SCALEX;
                }//ENDIF
                if ( XPOS == 999.0 && YPOS == 999.0 ) //THEN
                {
                    XCURRENT = (XCUR + XORG) * SCALEX;
                    YCURRENT = (YCUR + YORG) * SCALEY;
                }   //ENDIF
            }
            else
            {
                XCURRENT = (XPOS + XORG) * SCALEX;
                YCURRENT = (YPOS + YORG) * SCALEY;
            }   //ENDIF
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;
            double PI = 4.0 * Math.Atan(1.0);
            double ROTANG = ANGLE * PI / 180.0;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}    //ENDIF

            double XPLOT = XCURRENT;
            double YPLOT = YCURRENT;
            double XFINAL = XCURRENT + (HEIGHT * SCALEX / SCALEF) * (NUM) * Math.Cos(ROTANG);
            double YFINAL = YCURRENT + (HEIGHT * SCALEY / SCALEF) * (NUM) * Math.Sin(ROTANG);
            double ROTANGX = (ANGLE + 90.0) * PI / 180.0;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}  //ENDIF
            double HIGHT1 = HEIGHT * SCALEY;
            //write(txb,'(f8.2)') XCURRENT;
            txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
            if(XCURRENT < 1.0 && XCURRENT >= 0.0)   //txb(5:5) = '0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txb = sb.ToString();
            }
            if(XCURRENT < 0.0 && XCURRENT > -1.0)   //txb(4:5) = '-0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txb = sb.ToString();
            }
            
            //write(tyb,'(f8.2)') YCURRENT;
            tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
            if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                tyb = sb.ToString();
            }
            if(YCURRENT < 0.0 && YCURRENT > -1.0) //tyb(4:5) = '-0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                tyb = sb.ToString();
            }
            
            //write(txpos,'(f8.2)') XFINAL;
            txpos = Math.Round(XFINAL,2).ToString().PadLeft(8);
            if(XFINAL < 1.0 && XFINAL >= 0.0) //txpos(5:5) = '0';
            {
                sb = new StringBuilder(txpos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txpos = sb.ToString();
            }
            if(XFINAL < 0.0 && XFINAL > -1.0) //txpos(4:5) = '-0';
            {
                sb = new StringBuilder(txpos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txpos = sb.ToString();
            }
            
            //write(typos,'(f8.2)') YFINAL;
            typos = Math.Round(YFINAL,2).ToString().PadLeft(8);
            if(YFINAL < 1.0 && YFINAL >= 0.0) //typos(5:5) = '0';
            {
                sb = new StringBuilder(typos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                typos = sb.ToString();
            }
            if(YFINAL < 0.0 && YFINAL > -1.0) //typos(4:5) = '-0';
            {
                sb = new StringBuilder(typos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                typos = sb.ToString();
            }
            
            //write(thight,'(f4.1)') HIGHT1;
            thight = Math.Round(HIGHT1,1).ToString().PadLeft(4);
            if(HIGHT1 < 1.0 && HIGHT1 >= 0.0) //thight(2:2) = '0';
            {
                sb = new StringBuilder(thight);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                thight = sb.ToString();
            }
            
            //write(tangle,'(f7.2)') ANGLE;
            tangle = Math.Round(ANGLE,2).ToString().PadLeft(7);
            if(ANGLE < 1.0 && ANGLE >= 0.0) //tangle(4:4) = '0';
            {
                sb = new StringBuilder(tangle);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                tangle = sb.ToString();
            }
            if(ANGLE < 0.0 && ANGLE > -1.0) //tangle(3:4) = '-0';
            {
                sb = new StringBuilder(tangle);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                tangle = sb.ToString();
            }

            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
            {
                //write(77,1000) txb,tyb,thight,tangle,string(1:num);     //ENDIF
                sw77.WriteLine("( command \"text\" ( list {0} {1} ) {2} {3} \"{4}\" )", txb,tyb,thight,tangle,STRING.Substring(0,NUM));
            }
            ROTANGX = ( 90.0) * PI / 180.0;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}//ENDIF
            XCURRENT= XFINAL;
            YCURRENT= YFINAL;
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;

            return;
        }   //END

        
        static void NUMBER( double XPOS, double YPOS, double HEIGHT, double FPN, double ANGLE, int NDEC)
        {
            //REAL XPOS,YPOS,HEIGHT,FPN,ANGLE
            //INTEGER NDEC
            //REAL XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            string txb, tyb, txpos, typos, thight, tangle;
            //real PI
            int WIDTH;
            string FORM;
            double XCUR = 0, YCUR = 0, SCALEF = 1.0;
            string STRING;
            //DATA 
            
            if ( XPOS == 999.0 || YPOS == 999.0 ) //THEN
            {
                WHERE_(ref XCUR, ref YCUR );
                if ( XPOS == 999.0 && YPOS != 999.0 ) //THEN
                {
                    XCURRENT = ( XCUR + XORG ) * SCALEX;
                    YCURRENT = ( YPOS + YORG ) * SCALEY;
                }   //ENDIF
                if ( YPOS == 999.0 && XPOS != 999.0 ) //THEN
                {
                    YCURRENT = ( YCUR + YORG ) * SCALEY;
                    XCURRENT = ( XPOS + XORG ) * SCALEX;
                }   //ENDIF
                if ( XPOS == 999.0 && YPOS == 999.0 ) //THEN
                {
                    XCURRENT = (XCUR + XORG) * SCALEX;
                    YCURRENT = (YCUR + YORG) * SCALEY;
                }//ENDIF
            }
            else
            {
                XCURRENT = (XPOS + XORG) * SCALEX;
                YCURRENT = (YPOS + YORG) * SCALEY;
            }   //ENDIF
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;
            WIDTH = 10;
            if ( NDEC > 0 ) //THEN
            {
                WIDTH =8;
                if ( Math.Abs(FPN) <= 99999.9 ) WIDTH = 7;
                if ( Math.Abs(FPN) <= 9999.9 ) WIDTH = 6;
                if ( Math.Abs(FPN) <= 999.9 ) WIDTH = 5;
                if ( Math.Abs(FPN) <= 99.9 ) WIDTH = 4;
                if ( Math.Abs(FPN) <= 9.9 ) WIDTH = 3;
                if ( Math.Abs(FPN) <= 0.9 ) WIDTH = 3;
                WIDTH = WIDTH + NDEC - 1;
            }   //ENDIF
            if ( NDEC == 0 ) //THEN
            {
                WIDTH = 8;
                if ( Math.Abs(FPN) <= 99999.9 ) WIDTH = 7;
                if ( Math.Abs(FPN) <= 9999.9 ) WIDTH = 6;
                if ( Math.Abs(FPN) <= 999.9 ) WIDTH = 5;
                if ( Math.Abs(FPN) <= 99.9 ) WIDTH = 4;
                if ( Math.Abs(FPN) <= 9.9 ) WIDTH = 3;
                if ( Math.Abs(FPN) <= 0.9 ) WIDTH = 3;
            }   //ENDIF
            if( NDEC < 0 ) //THEN
            {
                double IFPN = FPN;
                WIDTH = 6;
                if ( Math.Abs(IFPN) <= 99999 ) WIDTH = 5;
                if ( Math.Abs(IFPN) <= 9999 ) WIDTH = 4;
                if ( Math.Abs(IFPN) <= 999 ) WIDTH = 3;
                if ( Math.Abs(IFPN) <= 99 ) WIDTH = 2;
                if ( Math.Abs(IFPN) <= 9 ) WIDTH = 1;
            }   //ENDIF
            if ( FPN < 0.0 ) WIDTH = WIDTH + 1;
            
            FORM = "        ";
            //for(IFORM = 1; IFORM <= 8; IFORM++) //DO IFORM = 1,8
            //{
            //    FORM(IFORM:IFORM) = ' ';
            //}   //ENDDO
            //for(int ISTRING = 1; ISTRING <= 10; ISTRING++) //DO ISTRING = 1,10
            //    STRING.Substring(ISTRING-1,1) = " ";  //ENDDO
            STRING = "           ";

            if ( NDEC >= 0 ) //THEN
            {
                //WRITE(FORM,'(2H(F,I2,1H.,I2,1H))') WIDTH,NDEC;
                FORM = "(F" + WIDTH.ToString().PadLeft(2) + "." + NDEC.ToString().PadLeft(2);
                if ( FORM.Substring(2,1) == " " )
                {
                    //FORM(3:3) = '0';
                    sb = new StringBuilder(FORM);
                    sb.Remove(2,1);
                    sb.Insert(2,"0");
                    FORM = sb.ToString();
                }
                if ( FORM.Substring(5,1) == " ")    //THEN
                {
                    string c = FORM.Substring(6,1);
                    //FORM(6:6) = FORM(7:7);
                    sb = new StringBuilder(FORM);
                    sb.Remove(5,1);
                    sb.Insert(5,c);
                    sb.Insert(6," ");
                    //FORM(7:7) = ' ';
                    FORM = sb.ToString();
                }   //ENDIF
                //WRITE(STRING,FORM) FPN;
            }
            else
            {
                //WRITE(FORM,'(2H(I,I2,1H))') WIDTH;
                FORM = "(I" + WIDTH.ToString().PadLeft(2) + ")";
                
                if ( FORM.Substring(2,1) == " " ) //FORM(3:3) = '0';
                {
                    sb = new StringBuilder(FORM);
                    sb.Remove(2,1);
                    sb.Insert(2, "0");
                    FORM = sb.ToString();
                }
                double IPN = FPN;
                //WRITE(STRING,FORM) IPN;
            }   //ENDIF

            double PI = 4.0 * Math.Atan(1.0);
            double ROTANG = ANGLE * PI / 180.0;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}
            //ENDIF
            double XPLOT = XCURRENT;
            double YPLOT = YCURRENT;
            double XFINAL = XCURRENT + (HEIGHT * SCALEX / SCALEF) * (WIDTH) * Math.Cos(ROTANG);
            double YFINAL = YCURRENT + (HEIGHT * SCALEY / SCALEF) * (WIDTH) * Math.Sin(ROTANG);
            double ROTANGX = (ANGLE + 90.0) * PI / 180.0;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}
            //ENDIF

            double HIGHT1 = HEIGHT * SCALEY;
            //write(txb,'(f8.2)') XCURRENT;
            txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
            if(XCURRENT < 1.0 && XCURRENT >= 0.0) //txb(5:5) = '0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txb = sb.ToString();
            }
            if(XCURRENT < 0.0 && XCURRENT > -1.0) //txb(4:5) = '-0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txb = sb.ToString();
            }
            
            //write(tyb,'(f8.2)') YCURRENT;
            tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
            if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                tyb = sb.ToString();
            }
            if(YCURRENT < 0.0 && YCURRENT > -1.0) //tyb(4:5) = '-0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                tyb = sb.ToString();
            }

            //write(txpos,'(f8.2)') XFINAL;
            txpos = Math.Round(XFINAL,2).ToString().PadLeft(8);
            if(XFINAL < 1.0 && XFINAL >= 0.0) //txpos(5:5) = '0';
            {
                sb = new StringBuilder(txpos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txpos = sb.ToString();
            }
            if(XFINAL < 0.0 && XFINAL > -1.0) //txpos(4:5) = '-0';
            {
                sb = new StringBuilder(txpos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txpos = sb.ToString();
            }
            
            //write(typos,'(f8.2)') YFINAL;
            typos = Math.Round(YFINAL,2).ToString().PadLeft(8);
            if(YFINAL < 1.0 && YFINAL >= 0.0) //typos(5:5) = '0';
            {
                sb = new StringBuilder(typos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                typos = sb.ToString();
            }
            
            if(YFINAL < 0.0 && YFINAL > -1.0) //typos(4:5) = '-0';
            {
                sb = new StringBuilder(typos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                typos = sb.ToString();
            }
            
            //write(thight,'(f4.1)') HIGHT1;
            thight = Math.Round(HIGHT1,1).ToString().PadLeft(4);
            if(HIGHT1 < 1.0 && HIGHT1 >= 0.0) //thight(2:2) = '0';
            {
                sb = new StringBuilder(thight);
                sb.Remove(1,1);
                sb.Insert(1,"0");
                thight = sb.ToString();
            }
            
            //write(tangle,'(f7.2)') ANGLE;
            tangle = Math.Round(ANGLE,2).ToString().PadLeft(8);
            if(ANGLE < 1.0 && ANGLE >= 0.0)     //tangle(4:4) = '0';
            {
                sb = new StringBuilder(tangle);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                tangle = sb.ToString();
            }

            if(ANGLE < 0.0 && ANGLE > -1.0)     //tangle(3:4) = '-0';
            {
                sb = new StringBuilder(tangle);
                sb.Remove(2,2);
                sb.Insert(2,"-0");
                tangle = sb.ToString();
            }

            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
            {
                //write(77,1000) txb,tyb,thight,tangle,string(1:width);   //ENDIF
                sw77.WriteLine("( command \"text\" ( list {0} {1} ) {2} {3} \"{4}\" )", txb,tyb,thight,tangle,STRING.Substring(0,WIDTH));
            }
            ROTANGX = ( 90.0) * PI / 180.0;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}  //ENDIF
            XCURRENT= XFINAL;
            YCURRENT= YFINAL;
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;
            
            return;
        }   //END

        
        static void CLOSE (int IDEV)
        {
            //real winlx(100),winly(100),winhx(100),winhy(100),xlen(100
            //integer errind
            //real matr(3,3),matx(3,3),
            double[] win = new double[5];
            //real view[4]/ 0.0,1.0,0.0,1.0 /
            //real clip[4]/ 0.0,1.0,0.0,1.0 /
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ ICHOICE
            //common/popup/ldr,rec
            //character*80 rec[2]
            //DIMENSION XMATPKR(3,3)
            //REAL SCALE
            int locdev, pet, prequ, pecho, petz, chnr;
            //real px,py
            locdev = 1;
            pet = 1;
            int locdevz = 3;
            petz = 3;
            win[1] = 0.0;
            win[2] = 1.0;
            win[3] = 0.0;
            win[4] = 1.0;
            int ITRIAL = 1;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}  //ENDIF
            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
            {
                sw77.WriteLine("( command \"style\" \"\" \"monotxt\" \"\" \"\" \"\" \"\" \"\" \"\")");
                sw77.WriteLine("( command \"zoom\" \"e\" )");
                sw77.WriteLine("( command \"save\" \"\")");   //write(77,1000);
                //close (77);
                sw77.Close();
            }   //ENDIF
            //1000 format('( command "style" "" "monotxt" "" "" "" "" "" "")'/ '( command "zoom" "e" )'/ '( command "save" "")')
            return;
        }   //END
                
        
        static void PKREXIT()
        {
            return;
        }   //END
        

        static void MVC()
        {
            return;
        }   //END
        

        static void RHTMOD()
        {
            return;
        }   //END
        

        static void LINK7()
        {
            return;
        }   //END
            

        static void LINK8()
        {
            return;
        }   //END
        

        static void LINK9()
        {
            return;
        }   //END


        static void DATTIM(ref int HRS,ref int MINS,ref int SECS,ref int MM,ref int DD,ref int YY,ref int ICPU)
        {
            //INTEGER HRS,MINS,SECS,MM,DD,YY,ICPU
            ICPU = 0;
            //IDATE( DD,MM,YY );
            //YY = MOD(YY,100);       // ! GET THE LAST DIGITS OF YEAR
            //(ref HRS, ref MINS, ref SECS );
            return;
        }   //END


        static void BOGEN(ref double XCENTER, ref double YCENTER, ref double ANGLE )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            double THETA = 0, RADIUS = 0, TANGLE = 0, TANGLEX = 0, SANGLE = 0, FANGLE = 0, ANGINC = 0, AANGLE = 0, XEND = 0, YEND = 0;
            double[] XPHIGS = new double[3], YPHIGS = new double[3];
            //REAL PI
            string txb, tyb, txpos, typos, tradius, txangle;

            double PI = 4.0 * Math.Atan(1.0);
            double XCENTER1 = XCENTER;
            double YCENTER1 = YCENTER;
            double XPKR = XCENTER;
            double YPKR = YCENTER;
            XCENTER = ( XPKR + XORG ) * SCALEX;
            YCENTER = ( YPKR + YORG ) * SCALEY;

            RADIUS = Math.Sqrt((XCURRENT - XCENTER) * (XCURRENT - XCENTER) + (YCURRENT - YCENTER) * (YCURRENT - YCENTER));

            //write(txb,'(f8.2)') XCURRENT;
            txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
            if(XCURRENT < 1.0 && XCURRENT >= 0.0) //txb(5:5) = '0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txb = sb.ToString();
            }
            if(XCURRENT < 0.0 && XCURRENT > -1.0) //txb(4:5) = '-0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txb = sb.ToString();
            }

            //write(tyb,'(f8.2)') YCURRENT;
            tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
            if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                tyb = sb.ToString();
            }
            if(YCURRENT < 0.0 && YCURRENT > -1.0) //tyb(4:5) = '-0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                tyb = sb.ToString();
            }
            
            //write(txpos,'(f8.2)') XCENTER;
            txpos = Math.Round(XCENTER,2).ToString().PadLeft(8);
            if(XCENTER < 1.0 && XCENTER >= 0.0) //txpos(5:5) = '0';
            {
                sb = new StringBuilder(txpos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txpos = sb.ToString();
            }
            if(XCENTER < 0.0 && XCENTER > -1.0) //txpos(4:5) = '-0';
            {
                sb = new StringBuilder(txpos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txpos = sb.ToString();
            }
            
            //write(typos,'(f8.2)') YCENTER;
            typos = Math.Round(YCENTER,2).ToString().PadLeft(8);
            if(YCENTER < 1.0 && YCENTER >= 0.0) //typos(5:5) = '0';
            {
                sb = new StringBuilder(typos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                typos = sb.ToString();
            }
            if(YCENTER < 0.0 && YCENTER > -1.0) //typos(4:5) = '-0';
            {
                sb = new StringBuilder(typos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                typos = sb.ToString();
            }
            
            //write(tradius,'(f7.2)') RADIUS;
            tradius = Math.Round(RADIUS,2).ToString().PadLeft(7);
            if(RADIUS < 1.0 && RADIUS >= 0.0)   //tradius(4:4) = '0';
            {
                sb = new StringBuilder(tradius);
                sb.Remove(3,1);
                sb.Insert(3,"0");
                tradius = sb.ToString();
            }
            
            //write(txangle,'(f7.2)') ANGLE;
            txangle = Math.Round(ANGLE,2).ToString().PadLeft(7);
            if(ANGLE < 1.0 && ANGLE >= 0.0) //txangle(4:4) = '0';
            {
                sb = new StringBuilder(txangle);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txangle = sb.ToString();
            }
            if(ANGLE < 0.0 && ANGLE > -1.0) //txangle(3:4) = '-0';
            {
                sb = new StringBuilder(txangle);
                sb.Remove(2,2);
                sb.Insert(2,"-0");
                txangle = sb.ToString();
            }

            if ( ICHOICE == 1 || ICHOICE == 3 )     //THEN
            {
                if (ANGLE == 360.0 ) //THEN
                {
                    sw77.WriteLine("( command \"circle\" ( list {0} {1} ) {2} )", txpos,typos,tradius);   //write(77,1000) txpos,typos,tradius;
                }
                else
                {
                    sw77.WriteLine("( command \"arc\" ( list {0} {1} ) \"c\" ( list {2} {3} ) \"a\" {4} )", txb,tyb,txpos,typos,txangle);   //write(77,1001) ;     //ENDIF
                }
            }   //ENDIF
            //1000 format('( command "circle" ( list ',a,' ',a,' ) ', a ,' )');
            //1001 format('( command "arc" ( list ',a,' ',a,' ) "c" ( list ', a,' ',a,' ) "a" ', a ,' )');

            if ( XCURRENT == XCENTER ) //THEN
                if ( YCURRENT > YCENTER ) //THEN
                    THETA = 90.0;
                else
                    THETA = 270.0;  //ENDIF     //ENDIF

            if ( YCURRENT == YCENTER ) //THEN
            {
                if ( XCURRENT > XCENTER ) //THEN
                    THETA = 0.0;
                else
                    THETA = 180.0;  //ENDIF
            }   //ENDIF

            if ( XCURRENT > XCENTER && YCURRENT > YCENTER ) //THEN
            {
                THETA = Math.Atan( Math.Abs( YCURRENT - YCENTER ) / ( Math.Abs( XCURRENT - XCENTER )));
                THETA = THETA * 180.0 / PI;
            }   //ENDIF

            if ( XCURRENT < XCENTER && YCURRENT > YCENTER ) //THEN
            {
                THETA = Math.Atan( Math.Abs( YCURRENT - YCENTER ) / ( Math.Abs( XCURRENT - XCENTER )));
                THETA = 180.0 - THETA * 180.0 / PI;
            }   //ENDIF

            if ( XCURRENT < XCENTER && YCURRENT < YCENTER ) //THEN
            {
                THETA = Math.Atan( Math.Abs( YCURRENT - YCENTER ) / ( Math.Abs( XCURRENT - XCENTER )));
                THETA = 180.0 + THETA * 180.0 / PI;
            }   //ENDIF

            if ( XCURRENT > XCENTER && YCURRENT < YCENTER ) //THEN
            {
                THETA = Math.Atan( Math.Abs( YCURRENT - YCENTER ) / ( Math.Abs( XCURRENT - XCENTER )));
                THETA = 360.0 - THETA * 180.0 / PI;
            }   //ENDIF

            TANGLE = THETA;
            TANGLEX= THETA + ANGLE;
            if ( ANGLE < 0.0 ) //THEN
            {
                SANGLE = TANGLEX;
                FANGLE = TANGLE;
                ANGINC = -1.0;
            }
            else
            {
                SANGLE = TANGLE;
                FANGLE = TANGLEX;
                ANGINC = 1.0;
            }   //ENDIF
            AANGLE = SANGLE;
            
        label10:
            if( AANGLE >= SANGLE && AANGLE <= FANGLE ) //THEN
            {
                XEND = XCENTER + RADIUS * Math.Cos ( AANGLE * PI / 180.0 );
                YEND = YCENTER + RADIUS * Math.Sin ( AANGLE * PI / 180.0 );
                XPHIGS[1] = XCURRENT;
                XPHIGS[2] = XEND;
                YPHIGS[1] = YCURRENT;
                YPHIGS[2] = YEND;
                if ( XPHIGS[2] > XMAX ) XMAX = XPHIGS[2];
                if ( YPHIGS[2] > YMAX ) YMAX = YPHIGS[2];
                if ( XPHIGS[2] < XMIN ) XMIN = XPHIGS[2];
                if ( YPHIGS[2] < YMIN ) YMIN = YPHIGS[2];
                XPHIGS[1] = XPHIGS[1]/ 1.0E04;
                XPHIGS[2] = XPHIGS[2]/ 1.0E04;
                YPHIGS[1] = YPHIGS[1]/ 1.0E04;
                YPHIGS[2] = YPHIGS[2]/ 1.0E04;
                if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
                {}      //ENDIF
                XCURRENT = XEND;
                YCURRENT = YEND;
                AANGLE = AANGLE + ANGINC;
            }
            else
                goto label11;   //ENDIF
            
            goto label10;
            
        label11:    //CONTINUE
            XCURRENT= XEND;
            YCURRENT= YEND;
            if ( XEND > XMAX ) XMAX = XEND;
            if ( YEND > YMAX ) YMAX = YEND;
            if ( XEND < XMIN ) XMIN = XEND;
            if ( YEND < YMIN ) YMIN = YEND;
            XCENTER = XCENTER1;
            YCENTER = YCENTER1;
            return;
        }   //END

        
        static void WHERE1 (ref double XPRESENT, ref double YPRESENT )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY;
            //common/window/xmax,ymax,xmin,ymin;
            //common/termtype/ICHOICE;

            XPRESENT = XCURRENT/SCALEX - XORG;
            YPRESENT = YCURRENT/SCALEY - YORG;

            return;
        }   //END

        
        static void URSPRG (double XNEW, double YNEW )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            XORG = XNEW;
            YORG = YNEW;

            return;
        }   //END

        
        static void intens (int ICOLOR )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/color/ILINECO,itextco
            //common/termtype/ICHOICE

            int ICOLOR1 = ICOLOR;
            ILINECO = ICOLOR;
            if ( ICOLOR == 0 ) ICOLOR1 = 1;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}
            //ENDIF
            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
                sw77.WriteLine("( command \"color\" {0} )", ICOLOR1);    //write(77,1000) icolor1;     //ENDIF
                //format('( command "color" ',i1,' )')
            return;
        }   //END
        

        static void txtclr (int ICOLOR )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/color/ILINECO,itextco
            //common/termtype/ICHOICE

            int ICOLOR1 = ICOLOR;
            ITEXTCO = ICOLOR1;
            if ( ICOLOR == 0 ) ICOLOR1 = 1;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}
            //ENDIF
            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
                sw77.WriteLine("( command \"color\" {0} )", ICOLOR);    //write(77,1000) icolor;
            //ENDIF
            //1000 format('( command "color" ',i1,' )')
            return;
        }   //END

        
        static void LINMOD (int ILINTYP )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE
            int IPATERN = 0;
            if(ILINTYP == 1) IPATERN = 1;
            if(ILINTYP == 2) IPATERN = 2;
            if(ILINTYP == 3) IPATERN = 3;
            if(ILINTYP == 4) IPATERN = 4;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}  //ENDIF
            
            if ( ICHOICE == 1 || ICHOICE == 3 )     //THEN
            {
                if( ILINTYP == 2)   //THEN
                    sw77.WriteLine("( command \"linetype\" \"s\" \"DASHED\" )");
                else if ( ILINTYP == 3 )    //THEN
                    sw77.WriteLine("( command \"linetype\" \"s\" \"HIDDEN\" )");    //write(77,1000) 'HIDDEN';
                else if ( ILINTYP == 4 )    //THEN
                    sw77.WriteLine("( command \"linetype\" \"s\" \"CENTER\" )");    //write(77,1000) 'CENTER';
                else if ( ILINTYP == 5 )    //THEN
                    sw77.WriteLine("( command \"linetype\" \"s\" \"DASHDOT\" )");   //write(77,1000) 'DASHDOT';
                else if ( ILINTYP == 6 )    //THEN
                    sw77.WriteLine("( command \"linetype\" \"s\" \"PHANTOM\" )");   //write(77,1000) 'PHANTOM';
                else if ( ILINTYP == 7 )    //THEN
                    sw77.WriteLine("( command \"linetype\" \"s\" \"DOT\" )");   //write(77,1000) 'DOT';
                else if ( ILINTYP == 8 )    //THEN
                    sw77.WriteLine("( command \"linetype\" \"s\" \"BORDER\" )");    //write(77,1000) 'BORDER';
                else if ( ILINTYP == 9 )    //THEN
                    sw77.WriteLine("( command \"linetype\" \"s\" \"DIVIDE\" )");    //write(77,1000) 'DIVIDE';
                else
                    sw77.WriteLine("( command \"linetype\" \"s\" \"BYLAYER\" )");   //write(77,1000) 'BYLAYER';    //ENDIF
            }   //ENDIF
            //1000 format('( command "linetype" "s" "',a,'" "")')
            return;
        }   //END


        static void POSITN(double XPOSIT, double YPOSIT )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE

            XCURRENT = ( XPOSIT + XORG ) * SCALEX;
            YCURRENT = ( YPOSIT + YORG ) * SCALEY;
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;

            return;
        }   //END

        
        static void LINIE (double XEND, double YEND )
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/color/ILINECO,itextco
            //common/termtype/ICHOICE
            double[] XPHIGS = new double[3], YPHIGS = new double[3];
            double XPOS, YPOS;
            string txb, tyb, txpos, typos;

            intens( ILINECO );
            XPHIGS[1] = XCURRENT;
            XPHIGS[2] = ( XEND + XORG ) * SCALEX;
            YPHIGS[1] = YCURRENT;
            YPHIGS[2] = ( YEND + YORG ) * SCALEY;
            if ( XPHIGS[2] > XMAX ) XMAX = XPHIGS[2];
            if ( YPHIGS[2] > YMAX ) YMAX = YPHIGS[2];
            if ( XPHIGS[2] < XMIN ) XMIN = XPHIGS[2];
            if ( YPHIGS[2] < YMIN ) YMIN = YPHIGS[2];
            XPHIGS[1] = XPHIGS[1]/ 1.0E04;
            XPHIGS[2] = XPHIGS[2]/ 1.0E04;
            YPHIGS[1] = YPHIGS[1]/ 1.0E04;
            YPHIGS[2] = YPHIGS[2]/ 1.0E04;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            {}//ENDIF
            XPOS = ( XEND + XORG ) * SCALEX;
            YPOS = ( YEND + YORG ) * SCALEY;
            
            //write(txb,'(f8.2)') XCURRENT;
            txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
            if(XCURRENT < 1.0 && XCURRENT >= 0.0) //txb(5:5) = '0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txb = sb.ToString();
            }
            if(XCURRENT < 0.0 && XCURRENT > -1.0) //txb(4:5) = '-0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txb = sb.ToString();
            }

            //write(tyb,'(f8.2)') YCURRENT;
            tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
            if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                tyb = sb.ToString();
            }
            if(YCURRENT < 0.0 && YCURRENT > -1.0) //tyb(4:5) = '-0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txb = sb.ToString();
            }

            //write(txpos,'(f8.2)') XPOS;
            txpos = Math.Round(XPOS,2).ToString().PadLeft(8);
            if(XPOS < 1.0 && XPOS >= 0.0) //txpos(5:5) = '0';
            {
                sb = new StringBuilder(txpos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txpos = sb.ToString();
            }
            if(XPOS < 0.0 && XPOS > -1.0) //txpos(4:5) = '-0';
            {
                sb = new StringBuilder(txpos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txpos = sb.ToString();
            }
            //write(typos,'(f8.2)') YPOS;
            typos = Math.Round(YPOS,2).ToString().PadLeft(8);
            if(YPOS < 1.0 && YPOS >= 0.0)   //typos(5:5) = '0';
            {
                sb = new StringBuilder(typos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                typos = sb.ToString();
            }
            if(YPOS < 0.0 && YPOS > -1.0)   //typos(4:5) = '-0';
            {
                sb = new StringBuilder(typos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                typos = sb.ToString();
            }
            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
            {
                //write(77,1000) txb,tyb,txpos,typos;     //ENDIF
                sw77.WriteLine("( command \"line\" ( list {0} {1} ) ( list {2} {3} ) \"\" )", txb,tyb,txpos,typos);
            }
            XCURRENT = ( XEND + XORG ) * SCALEX;
            YCURRENT = ( YEND + YORG ) * SCALEY;
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;

            return;
        }   //END

        
        //static void TEXT1( STRING, NUM, HEIGHT, ANGLE )
        //{
        //    //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
        //    //common/window/xmax,ymax,xmin,ymin
        //    //common/color/ILINECO,itextco
        //    //common/termtype/ICHOICE
        //    //character*8 txb,tyb,txpos,typos
        //    //character*4 thight
        //    //character*7 tangle
        //    //real PI
        //    //DATA SCALEF/1.0/
        //    txtclr(itextco);
        //    PI = 4.0 * Math.Atan(1.0);
        //    ROTANG = ANGLE * PI / 180.0;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}  //ENDIF
        //    XPLOT = XCURRENT;
        //    YPLOT = YCURRENT;
        //    XFINAL= XCURRENT+(HEIGHT*SCALEX/SCALEF)*(NUM+1)*Math.Cos(ROTANG);
        //    YFINAL= YCURRENT+(HEIGHT*SCALEY/SCALEF)*(NUM+1)*Math.Sin(ROTANG);
        //    ROTANGX = (ANGLE + 90.0) * PI / 180.0;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}  //ENDIF
        //    HIGHT1 = height * scaley;
        //    //write(txb,'(f8.2)') XCURRENT;
        //    txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
        //    if(XCURRENT < 1.0 && XCURRENT >= 0.0)   //txb(5:5) = '0';
        //    {
        //        sb = new StringBuilder(txb);
        //        sb.Remove(4,2);
        //        sb.Insert(4,"0");
        //        txb = sb.ToString();
        //    }
        //    if(XCURRENT < 0.0 && XCURRENT > -1.0)   //txb(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(txb);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        txb = sb.ToString();
        //    }
            
        //    //write(tyb,'(f8.2)') YCURRENT;
        //    tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
        //    if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0';
        //    {
        //        sb = new StringBuilder(tyb);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        tyb = sb.ToString();
        //    }
        //    if(YCURRENT < 0.0 && YCURRENT > -1.0)   //tyb(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(tyb);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        tyb = sb.ToString();
        //    }
            
        //    //write(txpos,'(f8.2)') xfinal;
        //    txpos = Math.Round(xfinal,2).ToString().PadLeft(8);
        //    if(xfinal < 1.0 && xfinal >= 0.0)   //txpos(5:5) = '0';
        //    {
        //        sb = new StringBuilder(txpos);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        txpos = sb.ToString();
        //    }
        //    if(xfinal < 0.0 && xfinal > -1.0)   //txpos(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(txpos);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        txpos = sb.ToString();
        //    }
        //    //write(typos,'(f8.2)') yfinal;
        //    typos =  Math.Round(yfinal,2).ToString().PadLeft(8);
        //    if(yfinal < 1.0 && yfinal >= 0.0)   //typos(5:5) = '0';
        //    {
        //        sb = new StringBuilder(typos);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        typos = sb.ToString();
        //    }
        //    if(yfinal < 0.0 && yfinal > -1.0)   //typos(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(typos);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        typos = sb.ToString();
        //    }
            
        //    //write(thight,'(f4.1)') HIGHT1;
        //    thight = Math.Round(HIGHT1,1).ToString().PadLeft(4);
        //    if(HIGHT1 < 1.0 && HIGHT1 >= 0.0)   //thight(2:2) = '0';
        //    {
        //        sb = new StringBuilder(thight);
        //        sb.Remove(1,1);
        //        sb.Insert(1,"0");
        //        thight = sb.ToString();
        //    }
        //    //write(tangle,'(f7.2)') ANGLE;
        //    tangle = Math.Round(ANGLE,2).ToString().PadLeft(7);
        //    if(ANGLE < 1.0 && ANGLE >= 0.0)     //tangle(4:4) = '0';
        //    {
        //        sb = new StringBuilder(tangle);
        //        sb.Remove(3,1);
        //        sb.Insert(3,"0");
        //        tangle = sb.ToString();
        //    }
        //    if(ANGLE < 0.0 && ANGLE > -1.0)     //tangle(3:4) = '-0';
        //    {
        //        sb = new StringBuilder(tangle);
        //        sb.Remove(2,2);
        //        sb.Insert(2,"-0");
        //        tangle = sb.ToString();
        //    }

        //    if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
        //    {
        //        //write(77,1000) txb,tyb,thight,tangle,string(1:num);     //ENDIF
        //        sw77.WriteLine("( command \"text\" ( list {0} {1} ) {2} {3} \"{4}\" )", txb,tyb,thight,tangle,STRING.Substring(0,num));
        //    }

        //    ROTANGX = ( 90.0) * PI / 180.0;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}  //ENDIF
        //    XCURRENT= XFINAL;
        //    YCURRENT= YFINAL;
        //    if ( XCURRENT > XMAX ) XMAX = XCURRENT;
        //    if ( YCURRENT > YMAX ) YMAX = YCURRENT;
        //    if ( XCURRENT < XMIN ) XMIN = XCURRENT;
        //    if ( YCURRENT < YMIN ) YMIN = YCURRENT;

        //    return;
        //}   //END



        //static void TEXT2 ( STRING, NUMW, NUMT, HEIGHT, ANGLE )
        //{
        //    //CHARACTER*1 STRING[6]
        //    //CHARACTER*6 TEXTP
        //    //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
        //    //common/window/xmax,ymax,xmin,ymin
        //    //common/color/ILINECO,itextco
        //    //common/termtype/ICHOICE
        //    //character*8 txb,tyb,txpos,typos
        //    //character*4 thight
        //    //character*7 tangle
        //    //real PI
        //    txtclr(itextco);
            
        //    sb = new StringBuilder(TEXTP);
        //    for(I = 1; I <= 6; I++) //DO 11 I = 1,6
        //    {
        //        //TEXTP(I:I) = ' ';
        //        sb.Remove(I-1);
        //        sb.Insert(I-1, " ");
        //    }
        //    TEXTP = sb.ToString();
            
        //    sb  = new StringBuilder(TEXTP);
        //    for(ISTRING = 1; ISTRING <= 6; ISTRING++) //DO 10 ISTRING=1,6
        //    {
        //        //WRITE(TEXTP(ISTRING:ISTRING),'(A1)') STRING(ISTRING);   //10 CONTINUE
        //        sb.Insert(ISTRING-1, STRING.Substring(ISTRING-1));
        //    }
        //    TEXTP = sb.ToString();

        //    PI = 4.0 * Math.Atan(1.0);
        //    ROTANG = ANGLE * PI / 180.0;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}
        //    //ENDIF
        //    XPLOT = XCURRENT;
        //    YPLOT = YCURRENT;
        //    XFINAL= XCURRENT+(HEIGHT*SCALEX/SCALEF)*(NUMT+1)*Math.Cos(ROTANG);
        //    YFINAL= YCURRENT+(HEIGHT*SCALEY/SCALEF)*(NUMT+1)*Math.Sin(ROTANG);
        //    ROTANGX = (ANGLE + 90.0) * PI / 180.0;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}  //ENDIF
        //    HIGHT1 = height * scaley;
        //    //write(txb,'(f8.2)') XCURRENT;
        //    txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
        //    if(XCURRENT < 1.0 && XCURRENT >= 0.0) //txb(5:5) = '0';
        //    {
        //        sb = new StringBuilder(txb);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        txb = sb.ToString();
        //    }
        //    if(XCURRENT < 0.0 && XCURRENT > -1.0)   //txb(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(txb);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        txb = sb.ToString();
        //    }
            
        //    //write(tyb,'(f8.2)') YCURRENT;
        //    tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
        //    if(YCURRENT < 1.0 && YCURRENT >= 0.0)   //tyb(5:5) = '0';
        //    {
        //        sb = new StringBuilder(tyb);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        tyb = sb.ToString();
        //    }
        //    if(YCURRENT < 0.0 && YCURRENT > -1.0) //tyb(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(tyb);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        tyb = sb.ToString();
        //    }

        //    //write(txpos,'(f8.2)') xfinal;
        //    txpos = Math.Round(xfinal,2).ToString().PadLeft(8);
        //    if(xfinal < 1.0 && xfinal >= 0.0) //txpos(5:5) = '0';
        //    {
        //        sb = new StringBuilder(txpos);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        txpos = sb.ToString();
        //    }
        //    if(xfinal < 0.0 && xfinal > -1.0)   //txpos(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(txpos);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        txpos = sb.ToString();
        //    }
            
        //    //write(typos,'(f8.2)') yfinal;
        //    typos = Math.Round(yfinal,2).ToString().PadLeft(8);
        //    if(yfinal < 1.0 && yfinal >= 0.0)   //typos(5:5) = '0';
        //    {
        //        sb = new StringBuilder(typos);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        typos = sb.ToString();
        //    }
        //    if(yfinal < 0.0 && yfinal > -1.0)   //typos(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(typos);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        typos = sb.ToString();
        //    }
            
        //    //write(thight,'(f4.1)') HIGHT1;
        //    thight = Math.Round(HIGHT1,1).ToString().PadLeft(4);
        //    if(HIGHT1 < 1.0 && HIGHT1 >= 0.0) //thight(2:2) = '0';
        //    {
        //        sb = new StringBuilder(thight);
        //        sb.Remove(1,1);
        //        sb.Insert(1,"0");
        //        thight = sb.ToString();
        //    }
            
        //    //write(tangle,'(f7.2)') ANGLE;
        //    tangle = Math.Round(ANGLE,2).ToString().PadLeft(7);
        //    if(ANGLE < 1.0 && ANGLE >= 0.0)     //tangle(4:4) = '0';
        //    {
        //        sb = new StringBuilder(tangle);
        //        sb.Remove(3,1);
        //        sb.Insert(3,"0");
        //        tangle = sb.ToString();
        //    }
        //    if(ANGLE < 0.0 && ANGLE > -1.0)     //tangle(3:4) = '-0';
        //    {
        //        sb = new StringBuilder(tangle);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        tangle = sb.ToString();
        //    }

        //    if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
        //    {
        //        //write(77,1000) txb,tyb,thight,tangle,textp(numw:numw+numt-1);   //ENDIF
        //        sw77.WriteLine("( command \"text\" ( list {0} {1} ) {2} {3} \"{4}\" )", txb,tyb,thight,tangle,textp.Substring(numw-1,numw+numt-1));
        //    }
        //    ROTANGX = ( 90.0) * PI / 180.0;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}  //ENDIF
        //    XCURRENT= XFINAL;
        //    YCURRENT= YFINAL;
        //    if ( XCURRENT > XMAX ) XMAX = XCURRENT;
        //    if ( YCURRENT > YMAX ) YMAX = YCURRENT;
        //    if ( XCURRENT < XMIN ) XMIN = XCURRENT;
        //    if ( YCURRENT < YMIN ) YMIN = YCURRENT;

        //    return;
        //}   //END



        //static void RZAHL ( VALUE, FMT, HEIGHT, ANGLE )
        //{
        //    //CHARACTER*80 FMT
        //    //CHARACTER*10 TEXTVAL
        //    //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
        //    //common/window/xmax,ymax,xmin,ymin
        //    //common/color/ILINECO,itextco
        //    //common/termtype/ICHOICE
        //    //character*8 txb,tyb,txpos,typos
        //    //character*4 thight
        //    //character*7 tangle
        //    //REAL PI
        //    //DATA SCALEF/ 1.0 /

        //    PI = 4.0 * Math.Atan (1.0);
        //    ROTANG = ANGLE * PI / 180.0;
        //    txtclr(itextco);
        //    NUM = 0;
            
        //    for(IDIGIT = 3; IDIGIT <= 8; IDIGIT++) //DO 10 IDIGIT = 3, 8
        //    {
        //        if ( FMT.Substring(IDIGIT-1,1) == "." ) 
        //            goto label11;
        //        NUM = NUM * 10 + (FMT.Substring(IDIGIT-1,1).ToInt()) - 48;
        //    }   //10 CONTINUE
            
        //label11:
        //    WRITE(TEXTVAL,FMT) VALUE;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}      //ENDIF
        //    XPLOT = XCURRENT;
        //    YPLOT = YCURRENT;
        //    XFINAL= XCURRENT+(HEIGHT*SCALEX/SCALEF)*(NUM+1)*Math.Cos(ROTANG);
        //    YFINAL= YCURRENT+(HEIGHT*SCALEY/SCALEF)*(NUM+1)*Math.Sin(ROTANG);
        //    ROTANGX = (ANGLE + 90.0) * PI / 180.0;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}  //ENDIF

        //    HIGHT1 = height * scaley;
        //    //write(txb,'(f8.2)') XCURRENT;
        //    txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
        //    if(XCURRENT < 1.0 && XCURRENT >= 0.0) //txb(5:5) = '0';
        //    {
        //        sb = new StringBuilder(txb);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        txb = sb.ToString();
        //    }
        //    if(XCURRENT < 0.0 && XCURRENT > -1.0) //txb(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(txb);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        txb = sb.ToString();
        //    }
            
        //    //write(tyb,'(f8.2)') YCURRENT;
        //    tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
        //    if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0';
        //    {
        //        sb = new StringBuilder(tyb);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        tyb = sb.ToString();
        //    }
        //    if(YCURRENT < 0.0 && YCURRENT > -1.0)   //tyb(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(tyb);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        tyb = sb.ToString();
        //    }
            
        //    //write(txpos,'(f8.2)') xfinal;
        //    txpos = Math.Round(xfinal,2).ToString().PadLeft(8);
        //    if(xfinal < 1.0 && xfinal >= 0.0) //txpos(5:5) = '0';
        //    {
        //        sb = new StringBuilder(txpos);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        txpos = sb.ToString();
        //    }
        //    if(xfinal < 0.0 && xfinal > -1.0)   //txpos(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(txpos);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        txpos = sb.ToString();
        //    }
            
        //    //write(typos,'(f8.2)') yfinal;
        //    typos = Math.Round(yfinal,2).ToString().PadLeft(8);
        //    if(yfinal < 1.0 && yfinal >= 0.0) //typos(5:5) = '0';
        //    {
        //        sb = new StringBuilder(typos);
        //        sb.Remove(4,1);
        //        sb.Insert(4,"0");
        //        typos = sb.ToString();
        //    }
        //    if(yfinal < 0.0 && yfinal > -1.0)   //typos(4:5) = '-0';
        //    {
        //        sb = new StringBuilder(typos);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        typos = sb.ToString();
        //    }
        //    if (HIGHT1 == 0.0)
        //        HIGHT1 = 2.2;
            
        //    //write(thight,'(f4.1)') HIGHT1;
        //    thight = Math.Round(HIGHT1,1).ToString().PadLeft(4);
        //    if(HIGHT1 < 1.0 && HIGHT1 >= 0.0) //thight(2:2) = '0';
        //    {
        //        sb = new StringBuilder(thight);
        //        sb.Remove(1,1);
        //        sb.Insert(1,"0");
        //        thight = sb.ToString();
        //    }
        //    //write(tangle,'(f7.2)') ANGLE;
        //    tangle = Math.Round(ANGLE,2).ToString().PadLeft(7);
        //    if(ANGLE < 1.0 && ANGLE >= 0.0) //tangle(4:4) = '0';
        //    {
        //        sb = new StringBuilder(tangle);
        //        sb.Remove(3,1);
        //        sb.Insert(3,"0");
        //        tangle = sb.ToString();
        //    }
        //    if(ANGLE < 0.0 && ANGLE > -1.0)     //tangle(3:4) = '-0';
        //    {
        //        sb = new StringBuilder(tangle);
        //        sb.Remove(3,2);
        //        sb.Insert(3,"-0");
        //        tangle = sb.ToString();
        //    }

        //    if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
        //    {
        //        //write(77,1000) txb,tyb,thight,tangle, textval(1:num);
        //        sw77.WriteLine("( command \"text\" ( list {0} {1} ) {2} {3} \"({4}\" )", txb,tyb,thight,tangle, textval.Substring(0,num));
        //    }
        //    ROTANGX = ( 90.0) * PI / 180.0;
        //    if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
        //    {}
        //    //ENDIF
        //    XCURRENT = XFINAL;
        //    YCURRENT = YFINAL;
        //    if ( XCURRENT > XMAX ) XMAX = XCURRENT;
        //    if ( YCURRENT > YMAX ) YMAX = YCURRENT;
        //    if ( XCURRENT < XMIN ) XMIN = XCURRENT;
        //    if ( YCURRENT < YMIN ) YMIN = YCURRENT;

        //    return;
        //}   //END

        
        static void IZAHL(double IVALUE, string FMT, double HEIGHT, double ANGLE)
        {
            //CHARACTER*80 FMT
            //CHARACTER*10 TEXTVAL
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ ICHOICE
            //common/color/ILINECO,itextco
            string txb, tyb, txpos, typos, thight, tangle;
            //REAL PI
            double SCALEF = 1.0, XPLOT, YPLOT, XFINAL, YFINAL, ROTANGX, XXPLOT, YYPLOT, HIGHT1;

            double PI = 4.0 * Math.Atan(1.0);
            double ROTANG = ANGLE * PI / 180.0;
            txtclr(ITEXTCO);
            int NUM = 0;
            
            for(int IDIGIT = 3; IDIGIT <= 8; IDIGIT++) //DO 10 IDIGIT = 3, 8
            {
                if ( FMT.Substring(IDIGIT,1) == ")" ) goto label11;
                NUM = NUM * 10 + Convert.ToInt32(FMT.Substring(IDIGIT-1,1)) - 48;
            }   //10 CONTINUE
            
        label11:
            //WRITE(TEXTVAL,FMT) IVALUE;
            double TEXTVAL = IVALUE;

            if ( ICHOICE == 2 || ICHOICE == 3 )     //THEN
            {   }   //ENDIF
            XPLOT = XCURRENT;
            YPLOT = YCURRENT;
            XFINAL= XCURRENT+(HEIGHT*SCALEX/SCALEF)*(NUM+1)*Math.Cos(ROTANG);
            YFINAL= YCURRENT+(HEIGHT*SCALEY/SCALEF)*(NUM+1)*Math.Sin(ROTANG);
            ROTANGX = (ANGLE + 90.0) * PI / 180.0;

            if ( ICHOICE == 2 || ICHOICE == 3 )     //THEN
            {   }   //ENDIF
            XXPLOT=XPLOT / 1.0E+04;
            YYPLOT=YPLOT / 1.0E+04;
            if ( ICHOICE == 2 || ICHOICE == 3 )     //THEN
            {   }   //ENDIF

            HIGHT1 = HEIGHT * SCALEY;
            //write(txb,'(f8.2)') XCURRENT
            txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
            if(XCURRENT < 1.0 && XCURRENT >= 0.0) //txb(5:5) = '0'
            {
                sb = new StringBuilder(txb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txb = sb.ToString();
            }
            if(XCURRENT < 0.0 && XCURRENT > -1.0)   //txb(4:5) = '-0'
            {
                sb = new StringBuilder(txb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txb = sb.ToString();
            }
            
            //write(tyb,'(f8.2)') YCURRENT
            tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
            if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0'
            {
                sb = new StringBuilder(tyb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                tyb = sb.ToString();
            }
            if(YCURRENT < 0.0 && YCURRENT > -1.0) //tyb(4:5) = '-0'
            {
                sb = new StringBuilder(tyb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                tyb = sb.ToString();
            }
            
            //write(txpos,'(f8.2)') xfinal
            txpos = Math.Round(XFINAL,2).ToString().PadLeft(8);
            if(XFINAL < 1.0 && XFINAL >= 0.0)   //txpos(5:5) = '0'
            {
                sb = new StringBuilder(txpos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txpos = sb.ToString();
            }
            if(XFINAL < 0.0 && XFINAL > -1.0)   //txpos(4:5) = '-0'
            {
                sb = new StringBuilder(txpos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txpos = sb.ToString();
            }
            //write(typos,'(f8.2)') yfinal
            typos = Math.Round(YFINAL,2).ToString().PadLeft(8);
            if(YFINAL < 1.0 && YFINAL >= 0.0)   //typos(5:5) = '0'
            {
                sb = new StringBuilder(typos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                typos = sb.ToString();
            }
            if(YFINAL < 0.0 && YFINAL > -1.0)   //typos(4:5) = '-0'
            {
                sb = new StringBuilder(typos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                typos = sb.ToString();
            }
            if (HIGHT1 == 0.0) HIGHT1 = 2.2;
            //write(thight,'(f4.1)') HIGHT1
            thight = Math.Round(HIGHT1,1).ToString().PadLeft(4);
            if(HIGHT1 < 1.0 && HIGHT1 >= 0.0)   //thight(2:2) = '0'
            {
                sb = new StringBuilder(thight);
                sb.Remove(1,1);
                sb.Insert(1,"0");
                thight = sb.ToString();
            }            
            //write(tangle,'(f7.2)') ANGLE
            tangle = Math.Round(ANGLE,2).ToString().PadLeft(7);
            if(ANGLE < 1.0 && ANGLE >= 0.0)     //tangle(4:4) = '0'
            {
                sb = new StringBuilder(tangle);
                sb.Remove(3,1);
                sb.Insert(3,"0");
                tangle = sb.ToString();
            }
            if(ANGLE < 0.0 && ANGLE > -1.0)     //tangle(3:4) = '-0'
            {
                sb = new StringBuilder(tangle);
                sb.Remove(2,2);
                sb.Insert(2,"-0");
                tangle = sb.ToString();
            }

            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
            {
                //write(77,1000) txb,tyb,thight,tangle,textval(1:num)
                sw77.WriteLine("( command \"text\" ( list {0} {1} ) {2} {3}  \"({5})\" )");
            }
            ROTANGX = ( 90.0) * PI / 180.0;
            if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
            //ENDIF
            XCURRENT= XFINAL;
            YCURRENT= YFINAL;
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;

            return;
        }   //END

        
        static void FAKTOR(double XFAKT, double YFAKT)
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ICHOICE

            SCALEX = XFAKT / SCALEX;
            SCALEY = YFAKT / SCALEY;

            return;
        }   //END
        

        static void ARC (double RADIUS, double SANGLE, double FANGLE)
        {
            //COMMON/CURRENT/XCURRENT,YCURRENT,XORG,YORG,SCALEX,SCALEY
            //common/window/xmax,ymax,xmin,ymin
            //common/termtype/ ICHOICE
            //common/color/ILINECO,itextco
            double THETA, ANGLE, AANGLE, ANGINC, XEND = 0, YEND = 0;
            //REAL RADIUS
            double[] XPHIGS = new double[3], YPHIGS = new double[3];
            //REAL PI
            //character*8 
            string tradius, txangle, txb, tyb, txpos, typos;

            double PI = 4.0 * Math.Atan(1.0);

            double XCENTER = XCURRENT;
            double YCENTER = YCURRENT;

            if(SANGLE == 0.0 || SANGLE == 180.0 || SANGLE == 360.0) //THEN
            {
                YCURRENT = YCENTER;
                if ( SANGLE == 0.0 || SANGLE == 360.0) //THEN
                    XCURRENT = XCENTER + RADIUS * SCALEX;
                else
                    XCURRENT = XCENTER - RADIUS * SCALEX;   //ENDIF
            }   //ENDIF
            
            if(SANGLE == 90.0 || SANGLE == 270.0) //THEN
            {
                XCURRENT = XCENTER;
                if ( SANGLE == 90.0) //THEN
                    YCURRENT = YCENTER + RADIUS * SCALEY;
                else
                    YCURRENT = YCENTER - RADIUS * SCALEY;   //ENDIF
            }   //ENDIF
            if ( SANGLE > 0.0 && SANGLE < 90.0) //THEN
            {
                THETA = SANGLE;
                XCURRENT = XCENTER +RADIUS*SCALEX*Math.Cos(THETA*PI/180.0);
                YCURRENT = YCENTER +RADIUS*SCALEY*Math.Sin(THETA*PI/180.0);
            }   //ENDIF
            if(SANGLE > 90.0 && SANGLE < 180.0) //THEN
            {
                THETA = 180.0 - SANGLE;
                XCURRENT = XCENTER -RADIUS*SCALEX*Math.Cos(THETA*PI/180.0);
                YCURRENT = YCENTER +RADIUS*SCALEY*Math.Sin(THETA*PI/180.0);
            }   //ENDIF
            if(SANGLE > 180.0 && SANGLE < 270.0) //THEN
            {
                THETA = SANGLE - 180.0;
                XCURRENT = XCENTER -RADIUS*SCALEX*Math.Cos(THETA*PI/180.0);
                YCURRENT = YCENTER -RADIUS*SCALEY*Math.Sin(THETA*PI/180.0);
            }   //ENDIF
            if(SANGLE > 270.0 && SANGLE < 360.0) //THEN
            {
                THETA = 360.0 - SANGLE;
                XCURRENT = XCENTER +RADIUS*SCALEX*Math.Cos(THETA*PI/180.0);
                YCURRENT = YCENTER -RADIUS*SCALEY*Math.Sin(THETA*PI/180.0);
            }   //ENDIF
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;
            ANGLE = FANGLE - SANGLE;
            //write(txb,'(f8.2)') XCURRENT;
            txb = Math.Round(XCURRENT,2).ToString().PadLeft(8);
            
            if(XCURRENT < 1.0 && XCURRENT >= 0.0) //txb(5:5) = '0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txb = sb.ToString();
            }

            if(XCURRENT < 0.0 && XCURRENT > -1.0) //txb(4:5) = '-0';
            {
                sb = new StringBuilder(txb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txb = sb.ToString();
            }
            //write(tyb,'(f8.2)') YCURRENT;
            tyb = Math.Round(YCURRENT,2).ToString().PadLeft(8);
            if(YCURRENT < 1.0 && YCURRENT >= 0.0) //tyb(5:5) = '0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                tyb = sb.ToString();
            }
            if(YCURRENT < 0.0 && YCURRENT > -1.0) //tyb(4:5) = '-0';
            {
                sb = new StringBuilder(tyb);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                tyb = sb.ToString();
            }
            
            //write(txpos,'(f8.2)') XCENTER;
            txpos = Math.Round(XCENTER,2).ToString().PadLeft(8);
            if(XCENTER < 1.0 && XCENTER >= 0.0) //txpos(5:5) = '0'
            {
                sb = new StringBuilder(txpos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                txpos = sb.ToString();
            }
            if(XCENTER < 0.0 && XCENTER > -1.0) //txpos(4:5) = '-0'
            {
                sb = new StringBuilder(txpos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                txpos = sb.ToString();
            }
            
            //write(typos,'(f8.2)') YCENTER
            typos = Math.Round(YCENTER,2).ToString().PadLeft(8);
            if(YCENTER < 1.0 && YCENTER >= 0.0) //typos(5:5) = '0'
            {
                sb = new StringBuilder(typos);
                sb.Remove(4,1);
                sb.Insert(4,"0");
                typos = sb.ToString();
            }
            if(YCENTER < 0.0 && YCENTER > -1.0) //typos(4:5) = '-0'
            {
                sb = new StringBuilder(typos);
                sb.Remove(3,2);
                sb.Insert(3,"-0");
                typos = sb.ToString();
            }
            
            //write(tradius,'(f4.1)') RADIUS
            tradius = Math.Round(RADIUS,1).ToString().PadLeft(4);
            if(RADIUS < 1.0 && RADIUS >= 0.0) //tradius(2:2) = '0'
            {
                sb = new StringBuilder(tradius);
                sb.Remove(1,1);
                sb.Insert(1,"0");
                tradius = sb.ToString();
            }
            
            //write(txangle,'(f7.2)') ANGLE
            txangle = Math.Round(ANGLE,2).ToString().PadLeft(7);
            if(ANGLE < 1.0 && ANGLE >= 0.0) //txangle(4:4) = '0'
            {
                sb = new StringBuilder(txangle);
                sb.Remove(3,1);
                sb.Insert(3,"0");
                txangle = sb.ToString();
            }
            if(ANGLE < 0.0 && ANGLE > -1.0) //txangle(3:4) = '-0'
            {
                sb = new StringBuilder(txangle);
                sb.Remove(2,2);
                sb.Insert(2,"-0");
                txangle = sb.ToString();
            }

            if ( ICHOICE == 1 || ICHOICE == 3 ) //THEN
                //write(77,1001) ;     //ENDIF
                sw77.WriteLine("( command \"arc\" ( list {0} {1} ) \"c\" ( list {2} {3} ) \"a\" {4} )", txb,tyb,txpos,typos,txangle);
            
            AANGLE = SANGLE;
            if (SANGLE > FANGLE) //THEN
                ANGINC = -1.0;
            else
                ANGINC = +1.0;  //ENDIF
            
        label10:
            if( AANGLE >= SANGLE && AANGLE <= FANGLE ) //THEN
            {
                XEND = XCENTER + RADIUS * Math.Cos ( AANGLE * PI / 180.0 );
                YEND = YCENTER + RADIUS * Math.Sin ( AANGLE * PI / 180.0 );
                XPHIGS[1] = XCURRENT / 1.0E04;
                XPHIGS[2] = XEND / 1.0E04;
                YPHIGS[1] = YCURRENT/ 1.0E04;
                YPHIGS[2] = YEND / 1.0E04;
                if ( ICHOICE == 2 || ICHOICE == 3 ) //THEN
                {}
                //ENDIF
                XCURRENT = XEND;
                YCURRENT = YEND;
                if ( XCURRENT > XMAX ) XMAX = XCURRENT;
                if ( YCURRENT > YMAX ) YMAX = YCURRENT;
                if ( XCURRENT < XMIN ) XMIN = XCURRENT;
                if ( YCURRENT < YMIN ) YMIN = YCURRENT;
                AANGLE = AANGLE + ANGINC;
            }
            else
                goto label11;      //ENDIF

            goto label10;
            
        label11:     //CONTINUE
            XCURRENT= XEND;
            YCURRENT= YEND;
            if ( XCURRENT > XMAX ) XMAX = XCURRENT;
            if ( YCURRENT > YMAX ) YMAX = YCURRENT;
            if ( XCURRENT < XMIN ) XMIN = XCURRENT;
            if ( YCURRENT < YMIN ) YMIN = YCURRENT;

            return;
        }   //END

        
        static int ISLEN(string STRING)
        {
            int islen = STRING.Length;
            return islen;
        }   //end


        static void DASHP(double x, double y, double z)
        {
            return;
        }   //end


        static void DEBUG (string STRING, int npkr)
        {
            //character*80 string
            sw16.WriteLine(" The error : {0}", STRING.Substring(0,npkr));
            Console.WriteLine(" The error : {0}", STRING.Substring(0,npkr));
            //write(*,'(1x,a)') 'The error :' // string(1:npkr)
            return;
        }   //end


        static void bhel(double xorgin, double yorgin, double scale, double rotation)
        {
            //common/bhel1/ xorgbhel,yorgbhel,scalebhel,rotbhel
            xorgbhel = xorgin;
            yorgbhel = yorgin;
            scalebhel= scale;
            rotbhel = rotation * 4.0 * Math.Atan ( 1.0 ) / 180.0;
            bhelpos( 1.8, 0.0 );
            bhelline ( 23.216, 0.0 );
            bhelbogn ( 23.216, 1.8, +90.0 );
            bhelline ( 25.016, 14.216);
            bhelbogn ( 23.216, 14.216, +90.0 );
            bhelline ( 1.800, 16.016);
            bhelbogn ( 1.8, 14.216, +90.0 );
            bhelline ( 0.0, 1.8 );
            bhelbogn ( 1.8, 1.8, +90.0 );
            bhelpos( 2.089, 4.821);
            bhelline ( 6.954, 4.821);
            bhelbogn ( 6.954, 5.421, + 72.0 );
            bhelline ( 8.146, 7.161);
            bhelbogn ( 7.670, 7.321, +108.0 );
            bhelpos( 7.446, 7.821);
            bhelline ( 7.919, 7.821);
            bhelbogn ( 7.919, 8.421, + 72.0 );
            bhelline ( 9.111, 10.168);
            bhelbogn ( 8.635, 10.321, +108.0 );
            bhelline ( 3.911, 10.821);
            bhelline ( 2.089, 4.821);
            bhelpos( 4.393, 5.464);
            bhelline ( 4.960, 5.464);
            bhelbogn ( 4.960, 5.714, + 72.0 );
            bhelline ( 5.686, 7.173);
            bhelbogn ( 5.448, 7.249, +108.0 );
            bhelline ( 5.035, 7.499);
            bhelline ( 4.393, 5.464);
            bhelpos( 5.25, 8.142);
            bhelline ( 5.811, 8.142);
            bhelbogn ( 5.811, 8.392, + 72.0 );
            bhelline ( 6.538, 9.852);
            bhelbogn ( 6.3, 9.928, +108.0 );
            bhelline ( 5.892, 10.178);
            bhelline ( 5.25, 8.142);
            bhelpos( 8.196, 4.821);
            bhelline ( 9.481, 4.821);
            bhelline ( 8.089, 0.482);
            bhelline ( 11.142, 4.821);
            bhelline ( 10.767, 4.821);
            bhelline ( 11.627, 7.498);
            bhelline ( 12.213, 7.498);
            bhelline ( 11.356, 4.821);
            bhelline ( 12.535, 4.821);
            bhelline ( 11.196, 0.482);
            bhelline ( 14.142, 4.821);
            bhelline ( 13.767, 4.821);
            bhelline ( 15.695, 10.821);
            bhelline ( 14.302, 10.821);
            bhelline ( 15.802, 15.481);
            bhelline ( 12.963, 10.821);
            bhelline ( 13.285, 10.821);
            bhelline ( 12.408, 8.095);
            bhelline ( 11.819, 8.095);
            bhelline ( 12.695, 10.821);
            bhelline ( 11.249, 10.821);
            bhelline ( 12.749, 15.481);
            bhelline ( 9.856, 10.821);
            bhelline ( 10.124, 10.821);
            bhelline ( 8.196, 4.821);
            bhelpos( 14.463, 4.821);
            bhelline ( 18.159, 4.821);
            bhelline ( 18.373, 5.518);
            bhelline ( 17.516, 5.518);
            bhelline ( 18.052, 7.285);
            bhelline ( 18.855, 7.285);
            bhelline ( 19.177, 8.303);
            bhelline ( 18.320, 8.303);
            bhelline ( 18.855, 10.071);
            bhelline ( 19.605, 10.071);
            bhelline ( 19.820, 10.821);
            bhelline ( 16.391, 10.821);
            bhelline ( 14.463, 4.821);
            bhelpos( 18.802, 4.821);
            bhelline ( 22.245, 4.821);
            bhelline ( 22.444, 5.518);
            bhelline ( 21.641, 5.518);
            bhelline ( 23.301, 10.821);
            bhelline ( 20.730, 10.821);
            bhelline ( 18.802, 4.821);
        }   //end


        static void bhelpos (double xbhel, double ybhel)
        {
            //common/bhel1/ xorgbhel,yorgbhel,scalebhel,rotbhel
            double xxxbhel = xbhel * Math.Cos (rotbhel) - ybhel * Math.Sin ( rotbhel );
            double yyybhel = xbhel * Math.Sin(rotbhel) + ybhel * Math.Cos(rotbhel);
            double xxbhel = xxxbhel * scalebhel + xorgbhel;
            double yybhel = yyybhel * scalebhel + yorgbhel;
            POSITN(xxbhel,yybhel);
            return;
        }   //end


        static void bhelline (double xbhel, double ybhel)
        {
            //common/bhel1/ xorgbhel,yorgbhel,scalebhel,rotbhel
            double xxxbhel = xbhel * Math.Cos (rotbhel) - ybhel * Math.Sin ( rotbhel );
            double yyybhel = xbhel * Math.Sin(rotbhel) + ybhel * Math.Cos(rotbhel);
            double xxbhel = xxxbhel * scalebhel + xorgbhel;
            double yybhel = yyybhel * scalebhel + yorgbhel;
            LINIE( xxbhel,  yybhel);
            return;
        }   //end


        static void bhelbogn (double xbhel, double ybhel, double ANGLE)
        {
            //common/bhel1/ xorgbhel,yorgbhel,scalebhel,rotbhel
            double xxxbhel = xbhel * Math.Cos (rotbhel) - ybhel * Math.Sin ( rotbhel );
            double yyybhel = xbhel * Math.Sin (rotbhel) + ybhel * Math.Cos ( rotbhel );
            double xxbhel = xxxbhel*scalebhel+xorgbhel;
            double yybhel = yyybhel*scalebhel+yorgbhel;
            BOGEN(ref xxbhel, ref yybhel, ref ANGLE);
            return;
        }   //end

        
        static void openfile(ref string prefix)
        {
            string file15, file16, file33;
            string[] krawalban = {"","K    K  RRRRRR     A    W     W    A    L        88888  5555555",
                                     "K   K   R     R   A A   W  W  W   A A   L       8     8 5      ",
                                     "K  K    R     R  A   A  W  W  W  A   A  L       8     8 5      ",
                                     "KKK     RRRRRR  A     A W  W  W A     A L        88888  555555 ",
                                     "K  K    R   R   AAAAAAA W  W  W AAAAAAA L       8     8       5",
                                     "K   K   R    R  A     A W  W  W A     A L       8     8 5     5",
                                     "K    K  R     R A     A  WW WW  A     A LLLLLLL  88888   55555 "};  
            
            VERSION(ref USERID,ref PDATUM,ref PATHNAME,ref TDATUM,ref TZEIT);
            
            Console.WriteLine("*******************************************************************************");
            Console.WriteLine("*                                                                             *");
            Console.WriteLine("*                      BHARAT HEAVY ELECTRICALS LIMITED                       *");
            Console.WriteLine("*                    RAMACHANDRAPURAM : HYDERABAD-500 032                     *");
            Console.WriteLine("*                                                                             *");
            Console.WriteLine("*                                                                             *");
            
            for(int i = 1; i <= 7; i++)     //do i = 1, 7
                Console.WriteLine("*               {0}              *", krawalban[i]);    //enddo
            
            //write(*,"(1h*,a,t79,1h*)")" "
            Console.WriteLine("*                                                                             *");
            Console.WriteLine("*                                                                             *");
            Console.WriteLine("*              STEAM AND GAS TURBINES AND COMPRESSOR ENGINEERING              *");
            Console.WriteLine("*                                                                             *");
            Console.WriteLine("*******************************************************************************");
            Console.WriteLine("*                    System Used : SUN 4/280s                                 *");
            Console.WriteLine("*                    User id     : {0}                                        *", USERID);
            Console.WriteLine("*                    Path name   : {0}                                        *", PATHNAME);
            Console.WriteLine("*                    Program Name: krawal85                                   *");
            Console.WriteLine("*                    Program No. : HYTCE001209                                *");
            Console.WriteLine("*                    Version of  : {0}                                        *", PDATUM);
            Console.WriteLine("*                    Date of run : {0}                                        *", TDATUM);
            Console.WriteLine("*                    Time of run : {0}                                        *", TZEIT);
            Console.WriteLine("*******************************************************************************");
            
        label2:
            Console.WriteLine("Give the input file name (13 chars) :");
            file15 = Console.ReadLine();
            //open(unit=15,file=file15,status='old',err=999)
            try
            {
                sr15 = new StreamReader(file15);
            }
            catch
            {
                Console.WriteLine("File not fond! Enter valid file name.");
                goto label2;
            }

        label1:
            Console.WriteLine(" Give the prefix for the run ( 4 chars) :");
            prefix = Console.ReadLine();
            
            file16 = prefix + "krawal85.out";
            file30 = prefix + "krawal85.f30";
            file33 = prefix + "krawal85.f33";
            
            //open(unit=16,file=file16,status='unknown');
            sw16 = new StreamWriter(file16);
            //open(unit=10,file='LPDATA85',form='unformatted',access='direct',recl=84,status='old');
            sr10 = new StreamReader("LPDATA85");
            //open(unit=11,file='LPDATA85NDX', FORM='UNFORMATTED',STATUS='OLD')
            sr11 = new StreamReader("LPDATA85NDX");
            //open(unit=30,file=file30,status='unknown')
            sw30 = new StreamWriter(file30);

            //open(unit=33,file=file33,status='unknown')
            sw33 = new StreamWriter(file33);
            
            sw16.WriteLine("*******************************************************************************");
            sw16.WriteLine("*                                                                             *");
            sw16.WriteLine("*                      BHARAT HEAVY ELECTRICALS LIMITED                       *");
            sw16.WriteLine("*                    RAMACHANDRAPURAM : HYDERABAD-500 032                     *");
            sw16.WriteLine("*                                                                             *");
            sw16.WriteLine("*                                                                             *");
            
            for(int i = 1; i <= 7; i++)     //do i = 1, 7
                sw16.WriteLine("*               {0}              *", krawalban[i]);    //enddo
            
            //write(*,"(1h*,a,t79,1h*)")" "
            sw16.WriteLine("*                                                                             *");
            sw16.WriteLine("*                                                                             *");
            sw16.WriteLine("*              STEAM AND GAS TURBINES AND COMPRESSOR ENGINEERING              *");
            sw16.WriteLine("*                                                                             *");
            sw16.WriteLine("*******************************************************************************");
            sw16.WriteLine("*                    System Used : SUN 4/280s                                 *");
            sw16.WriteLine("*                    User id     : {0}                                        *", USERID);
            sw16.WriteLine("*                    Path name   : {0}                                        ", PATHNAME);
            sw16.WriteLine("*                    Program Name: krawal85                                   *");
            sw16.WriteLine("*                    Program No. : HYTCE001209                                *");
            sw16.WriteLine("*                    Version of  : {0}                                   *", PDATUM);
            sw16.WriteLine("*                    Date of run : {0}                                 *", TDATUM);
            sw16.WriteLine("*                    Time of run : {0}                                   *", TZEIT);
            sw16.WriteLine("*******************************************************************************");
            return;
            
        }   //end


        static void VERSION(ref string USERID,ref string PDATUM,ref string PATHNAME,ref string TDATUM,ref string TZEIT)
        {
            USERID = System.Security.Principal.WindowsIdentity.GetCurrent().Name;
            PDATUM  = "KRAWAL85";
            PATHNAME = System.IO.Directory.GetCurrentDirectory();
            TDATUM = DateTime.Now.ToString("MM/dd/yyyy");
            TZEIT = DateTime.Now.ToString("hh:mm tt");

            return;
        }


    }
}